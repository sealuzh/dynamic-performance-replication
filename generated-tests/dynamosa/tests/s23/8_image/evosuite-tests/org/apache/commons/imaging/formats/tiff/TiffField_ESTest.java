/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 10:54:23 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65535, "[float[]: ");
      TiffField tiffField0 = new TiffField((-2043), (byte)0, fieldTypeFloat0, 1, (byte)0, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2043), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40091, 65535, fieldTypeShort0, 4L, 255L, byteArray0, byteOrder0, (-2147343077));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147343077), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(40091, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 6, fieldTypeDouble0, 1, (byte)28, byteArray0, byteOrder0, 5);
      tiffField0.dump();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, 21);
      String string0 = tiffField0.getValueDescription();
      assertEquals(21, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(105, tiffField0.getOffset());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      tiffField0.getValue();
      assertEquals(105, tiffField0.getOffset());
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)27, (-590), fieldTypeShort0, (-590), (-53L), byteArray0, byteOrder0, (-590));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-53), tiffField0.getOffset());
      assertEquals((-590), tiffField0.getSortHint());
      assertEquals((-590), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeShort0, 1L, (-2590L), byteArray0, byteOrder0, 2007);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-2590), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2007, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(308, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4524), 308, fieldTypeRational0, (-1271L), (-2147483648L), byteArray0, byteOrder0, (byte)49);
      int int0 = tiffField0.getTag();
      assertEquals(308, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-4524), int0);
      assertEquals(49, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1302), "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)35;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1302), (-1302), fieldTypeAscii0, 1160L, (-1302), byteArray0, byteOrder0, 23);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1302), tiffField0.getOffset());
      assertEquals((-1302), tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals((-1302), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte) (-29), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-29), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2147287511), (-2147287511), fieldTypeShort0.DOUBLE, (byte)0, (byte)0, byteArray0, byteOrder0, (byte) (-29));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2147287511), tiffField0.getTag());
      assertEquals((-2147287511), tiffField0.getDirectoryType());
      assertEquals((-29), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "GPSStatus");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (byte)0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, (-2147483648L), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getOffset();
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-21), (byte)105, fieldTypeShort0, 1743L, (-1L), byteArray0, byteOrder0, (byte)63);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(23, int0);
      assertEquals(63, tiffField0.getSortHint());
      assertEquals((-21), tiffField0.getTag());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "GPSStatus");
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-62);
      byteArray0[4] = (byte)3;
      TiffField tiffField0 = new TiffField(2561, 2561, fieldTypeRational0, 277888L, 1L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-346729130), int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2561, tiffField0.getTag());
      assertEquals(2561, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 6, fieldTypeDouble0, 1, (byte)28, byteArray0, byteOrder0, 5);
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      TiffField tiffField0 = new TiffField(50975, 142, fieldTypeRational0.SBYTE, 1, (byte)118, byteArray0, byteOrder0, 6047);
      tiffField0.getIntValue();
      assertEquals(6047, tiffField0.getSortHint());
      assertEquals(142, tiffField0.getDirectoryType());
      assertEquals(118, tiffField0.getOffset());
      assertEquals(50975, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-3057), fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (-1275));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1275), tiffField0.getSortHint());
      assertEquals((-3057), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)105, (String) null);
      TiffField tiffField0 = new TiffField(50982, 1531, fieldTypeFloat0, 4L, 32L, byteArray0, byteOrder0, 50982);
      tiffField0.getFieldTypeName();
      assertEquals(1531, tiffField0.getDirectoryType());
      assertEquals(50982, tiffField0.getTag());
      assertEquals(50982, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getFieldTypeName();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(325, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-709), 34736, fieldTypeRational0, 1370L, 325, byteArray0, byteOrder0, 2393);
      tiffField0.getFieldTypeName();
      assertEquals(325, tiffField0.getOffset());
      assertEquals((-709), tiffField0.getTag());
      assertEquals(34736, tiffField0.getDirectoryType());
      assertEquals(2393, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)21, (-1244), (FieldType) null, 451, 451, byteArray0, (ByteOrder) null, (-19));
      tiffField0.getFieldType();
      assertEquals(21, tiffField0.getTag());
      assertEquals((-1244), tiffField0.getDirectoryType());
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(451, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "GPSStatus");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1680, 1932, fieldTypeRational0, 0, (-930), byteArray0, byteOrder0, 596);
      tiffField0.getFieldType();
      assertEquals(1680, tiffField0.getTag());
      assertEquals(596, tiffField0.getSortHint());
      assertEquals((-930), tiffField0.getOffset());
      assertEquals(1932, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, (byte)38);
      tiffField0.getFieldType();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(1, 1182, fieldTypeDouble0, 1, 4L, byteArray0, (ByteOrder) null, 1182);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1182, tiffField0.getDirectoryType());
      assertEquals(1182, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-3);
      TiffField tiffField0 = new TiffField(2147389480, (-2336), fieldTypeFloat0, 1L, 1074L, byteArray0, byteOrder0, (byte)43);
      tiffField0.getDoubleValue();
      assertEquals(2147389480, tiffField0.getTag());
      assertEquals(1074, tiffField0.getOffset());
      assertEquals((-2336), tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, (-251), fieldTypeFloat0.LONG, 1L, 1, byteArray0, (ByteOrder) null, (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-251), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      tiffField0.getDoubleArrayValue();
      assertEquals(105, tiffField0.getTag());
      assertEquals(105, tiffField0.getOffset());
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(105L, tiffField0.getCount());
      assertEquals(105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((-196), (byte)0, fieldTypeFloat0, (-594), 0L, byteArray0, byteOrder0, 598);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(598, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-196), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2389, (-2147079148), fieldTypeDouble0, 2389, (-1091L), byteArray0, byteOrder0, (-2147287511));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2147079148), int0);
      assertEquals((-2147287511), tiffField0.getSortHint());
      assertEquals((-1091), tiffField0.getOffset());
      assertEquals(2389, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, (-578), fieldTypeFloat0, Integer.MAX_VALUE, 8592L, byteArray0, byteOrder0, (-529));
      long long0 = tiffField0.getCount();
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
      assertEquals((-578), tiffField0.getDirectoryType());
      assertEquals((-529), tiffField0.getSortHint());
      assertEquals(2147483647L, long0);
      assertEquals(8592, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)28, "org.apache.commons.imaging.ImageWriteException");
      TiffField tiffField0 = new TiffField((-2147340146), (-3204), fieldTypeFloat0, (-1960L), (-2302L), byteArray0, byteOrder0, (-1061));
      long long0 = tiffField0.getCount();
      assertEquals((-1960L), long0);
      assertEquals((-2147340146), tiffField0.getTag());
      assertEquals((-1061), tiffField0.getSortHint());
      assertEquals((-3204), tiffField0.getDirectoryType());
      assertEquals((-2302), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2147287511), "2Q");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 6, fieldTypeDouble0, 0, (-925L), byteArray0, byteOrder0, 484);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-925), tiffField0.getOffset());
      assertEquals(484, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1643, "Q( X(TI'=-~@a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1189, 1189, fieldTypeDouble0, 1449L, (-2048L), byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(1189, tiffField0.getTag());
      assertEquals(1189, tiffField0.getDirectoryType());
      assertEquals((-2048), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40091, 65535, fieldTypeShort0, 4L, 255L, byteArray0, byteOrder0, (-2147343077));
      tiffField0.getByteOrder();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(40091, tiffField0.getTag());
      assertEquals((-2147343077), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(1, 1182, fieldTypeDouble0, 637, 4L, byteArray0, (ByteOrder) null, 2122219134);
      tiffField0.getByteArrayValue();
      assertEquals(2122219134, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1182, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (-196), fieldTypeFloat0, (byte)0, 277888L, byteArray0, byteOrder0, 315);
      tiffField0.getByteArrayValue();
      assertEquals(315, tiffField0.getSortHint());
      assertEquals((-196), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(277888, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-743), 2147481716, fieldTypeShort0, 2147481716, (-743), byteArray0, byteOrder0, (byte) (-92));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("@7DE!I<HVup+[m");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeFloat0, 333, 333, (byte[]) null, byteOrder0, 333);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-761), (-761), fieldTypeShort0, (-761), (-761), byteArray0, byteOrder0, (-761));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.RATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1560), 21, (FieldType) null, 1056L, 1056L, byteArray0, byteOrder0, 2146816313);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2144917956, 2144917956, fieldTypeByte0, 2144917956, 2144917956, (byte[]) null, byteOrder0, 2144917956);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-127), (byte) (-127), fieldTypeRational0, (byte) (-127), (byte) (-127), byteArray0, byteOrder0, (byte) (-127));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 466);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1280), (-1280), fieldTypeLong0, (-1280), (-1280), (byte[]) null, byteOrder0, (-1280));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1102), (-1102), fieldTypeRational0, (-1081L), (-1081L), byteArray0, byteOrder0, (-1102));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)88, (byte)88, fieldTypeRational0, 1L, 1332L, byteArray0, byteOrder0, (byte)88);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeFloat0, 333, 333, (byte[]) null, byteOrder0, 333);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-118), (byte) (-118), fieldTypeRational0, (byte) (-118), (byte) (-118), byteArray0, byteOrder0, (byte) (-118));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1277), (-1277), fieldTypeRational0, 1L, (-1277), byteArray0, byteOrder0, (-1277));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeRational0, 1L, (byte)107, (byte[]) null, byteOrder0, (-2423));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, (-1L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-380), (-380), fieldTypeShort0, (-380), (-380), byteArray0, byteOrder0, (-380));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(27, (-527), fieldTypeRational0, (-5338L), 27, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-390), (-390), fieldTypeLong0, (-390), (-390), (byte[]) null, byteOrder0, (-390));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)72, (-416), fieldTypeRational0, 1L, (-416), byteArray0, byteOrder0, (byte)72);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, (FieldType) null, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-117), (byte) (-117), fieldTypeShort0, (byte) (-117), (byte) (-117), byteArray0, byteOrder0, (byte) (-117));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[282];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2504), fieldTypeShort0, (-2504), (byte)98, byteArray0, byteOrder0, (byte)98);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, (FieldType) null, 6, 6, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeRational0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, (byte)115, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeShort0, 30, 30, (byte[]) null, byteOrder0, 1917);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-9), (-9), fieldTypeShort0, (-9), (-9), byteArray0, byteOrder0, (-9));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)113, (byte)113, fieldTypeRational0, 1L, (byte)113, byteArray0, byteOrder0, (byte)113);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2892), (-2892), fieldTypeLong0, (-2892), (-2892), byteArray0, byteOrder0, (-2892));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(40, (-848), fieldTypeDouble0, (-848), 1701L, byteArray0, byteOrder0, (-848));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Wfm1WIf[rj_g=C(G.q");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Wfm1WIf[rj_g=C(G.q");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)19, 264, fieldTypeRational0, 1L, 264, byteArray0, byteOrder0, (byte)19);
      MockFileWriter mockFileWriter0 = new MockFileWriter("~t/EQ{@H");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "~t/EQ{@H");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(518, 10, fieldTypeShort0, (-1L), 10, byteArray0, byteOrder0, 518);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(329, (String) null);
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(329, 1, fieldTypeRational0, 1, 329, byteArray0, (ByteOrder) null, 329);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 6, fieldTypeDouble0, 1, (byte)28, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2145346847), 0, fieldTypeLong0, 1520L, 0, byteArray0, (ByteOrder) null, (byte)50);
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1520L, tiffField0.getCount());
      assertEquals((-2145346847), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)84, (byte)84, fieldTypeByte0, (byte)84, 2223104L, byteArray0, (ByteOrder) null, (-1049));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(84, tiffField0.getTag());
      assertEquals(2223104, tiffField0.getOffset());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals((-1049), tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)84, (byte)84, fieldTypeByte0, (byte)84, 2223104L, byteArray0, (ByteOrder) null, (-1049));
      tiffField0.getByteOrder();
      assertEquals(2223104, tiffField0.getOffset());
      assertEquals(84, tiffField0.getTag());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals((-1049), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, (byte[]) null, byteOrder0, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3460), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41486, 2360, fieldTypeByte0, 1112L, 1112L, byteArray0, byteOrder0, (-3460));
      tiffField0.getFieldType();
      assertEquals(41486, tiffField0.getTag());
      assertEquals(2360, tiffField0.getDirectoryType());
      assertEquals((-3460), tiffField0.getSortHint());
      assertEquals(1112, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(114, 114, fieldTypeByte0, 1500L, 2201L, byteArray0, byteOrder0, 2751);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(114, int0);
      assertEquals(2751, tiffField0.getSortHint());
      assertEquals(2201, tiffField0.getOffset());
      assertEquals(114, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)109, (byte)109, fieldTypeRational0, (byte)109, (byte)109, byteArray0, byteOrder0, (byte)109);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)105, fieldTypeShort0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(105, int0);
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[145];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeLong0, 1031L, 255L, byteArray0, byteOrder0, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1082, "cRS;)[B^W");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34857, (-904), fieldTypeDouble0, 1082, 34857, byteArray0, byteOrder0, (-1090));
      int int0 = tiffField0.getTag();
      assertEquals(34857, tiffField0.getOffset());
      assertEquals((-1090), tiffField0.getSortHint());
      assertEquals((-904), tiffField0.getDirectoryType());
      assertEquals(34857, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 6021L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(6021, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(161, "JPEGInterchangeFormatLength");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(161, 37389, fieldTypeByte0, (-6122L), 0L, byteArray0, byteOrder0, 37389);
      tiffField0.getBytesLength();
      assertEquals(161, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(37389, tiffField0.getDirectoryType());
      assertEquals(37389, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)37, (byte)37, fieldTypeShort0, (byte)37, (byte)37, byteArray0, byteOrder0, (byte)37);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("37 (0x25: Unknown Tag): ", string0);
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, (ByteOrder) null, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, (-2145700026), (-2145700026), byteArray0, byteOrder0, 50);
      assertEquals(7134488, tiffField0.getBytesLength());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2145700026), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2145700026L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2496, 2496, fieldTypeDouble0, 2496, 2496, byteArray0, byteOrder0, 2496);
      tiffField0.getDoubleArrayValue();
      assertEquals(2496, tiffField0.getSortHint());
      assertEquals(2496, tiffField0.getTag());
      assertEquals(2496, tiffField0.getOffset());
      assertEquals(19968, tiffField0.getBytesLength());
      assertEquals(2496, tiffField0.getDirectoryType());
      assertEquals(2496L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[179];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2512, 2512, fieldTypeDouble0.FLOAT, 2512, 2512, byteArray0, byteOrder0, 2512);
      tiffField0.getDoubleArrayValue();
      assertEquals(2512, tiffField0.getDirectoryType());
      assertEquals(2512, tiffField0.getSortHint());
      assertEquals(2512, tiffField0.getTag());
      assertEquals(2512, tiffField0.getOffset());
      assertEquals(10048, tiffField0.getBytesLength());
      assertEquals(2512L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(11, doubleArray0.length);
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, byteOrder0, (byte)82);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(82, tiffField0.getSortHint());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(82, tiffField0.getTag());
      assertEquals(656, tiffField0.getBytesLength());
      assertEquals(82L, tiffField0.getCount());
      assertEquals(82, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(3221, 3221, fieldTypeByte0, 3221, 3221, byteArray0, (ByteOrder) null, 3221);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@55fd8f23 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(17, intArray0.length);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(11, intArray0.length);
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeShort0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      tiffField0.getIntArrayValue();
      assertEquals(105L, tiffField0.getCount());
      assertEquals(105, tiffField0.getOffset());
      assertEquals(210, tiffField0.getBytesLength());
      assertEquals(105, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getTag());
      assertEquals(105, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      tiffField0.getIntArrayValue();
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105L, tiffField0.getCount());
      assertEquals(105, tiffField0.getTag());
      assertEquals(840, tiffField0.getBytesLength());
      assertEquals(105, tiffField0.getOffset());
      assertEquals(105, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, byteOrder0, (byte)82);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(3253, 3253, fieldTypeByte0, 3253, 3253, byteArray0, (ByteOrder) null, 3253);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2c912a6e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@9a4d0f7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)115, (byte)115, fieldTypeAscii0, 879L, (-571L), byteArray0, byteOrder0, (byte)115);
      String string0 = tiffField0.getStringValue();
      assertEquals(879, tiffField0.getBytesLength());
      assertEquals(115, tiffField0.getTag());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-571), tiffField0.getOffset());
      assertEquals(115, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)112, (byte)112, fieldTypeRational0, (byte)112, (byte)112, byteArray0, byteOrder0, (byte)112);
      String string0 = tiffField0.getTagName();
      assertEquals(112, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x70)", string0);
      assertEquals(112, tiffField0.getSortHint());
      assertEquals(112, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(333, 333, fieldTypeFloat0, 333, 333, byteArray0, byteOrder0, 333);
      String string0 = tiffField0.getTagName();
      assertEquals(333, tiffField0.getDirectoryType());
      assertEquals("InkNames", string0);
      assertEquals(333, tiffField0.getOffset());
      assertEquals(333, tiffField0.getTag());
      assertEquals(333, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " *>,<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(4412, 4412, fieldTypeFloat0, 4412, 4412, byteArray0, byteOrder0, 4412);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4412, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4412, tiffField0.getTag());
      assertEquals(4412L, tiffField0.getCount());
      assertEquals(4412, tiffField0.getDirectoryType());
      assertEquals(4412, tiffField0.getSortHint());
      assertEquals(17648, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[205];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-2042), (-2042), fieldTypeByte0, 255L, 255L, byteArray0, byteOrder0, (-2042));
      String string0 = tiffField0.getValueDescription();
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
      assertEquals((-2042), tiffField0.getTag());
      assertEquals((-2042), tiffField0.getSortHint());
      assertEquals((-2042), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[164];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2503, 2503, fieldTypeDouble0.FLOAT, 2503, 2503, byteArray0, byteOrder0, 2503);
      String string0 = tiffField0.getValueDescription();
      assertEquals(10012, tiffField0.getBytesLength());
      assertEquals(2503, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2503, tiffField0.getSortHint());
      assertEquals(2503, tiffField0.getTag());
      assertEquals(2503, tiffField0.getDirectoryType());
      assertEquals(2503L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1820, 1820, fieldTypeDouble0, 1820, 1820, byteArray0, byteOrder0, 1820);
      String string0 = tiffField0.toString();
      assertEquals("1820 (0x71c: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1820 Double)", string0);
      assertEquals(14560, tiffField0.getBytesLength());
      assertEquals(1820, tiffField0.getSortHint());
      assertEquals(1820, tiffField0.getOffset());
      assertEquals(1820, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[428];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(40, 1979, fieldTypeDouble0, 1979, (-17L), byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-17), tiffField0.getOffset());
      assertEquals(1979, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(1979L, tiffField0.getCount());
      assertEquals(15832, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(50L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[412];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeLong0, 71, 71, byteArray0, byteOrder0, 71);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(71, tiffField0.getTag());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(71L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (71)", string0);
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeShort0, 19, 19, byteArray0, byteOrder0, 19);
      String string0 = tiffField0.toString();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals("19 (0x13: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (19 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(4412, 2496, fieldTypeShort0, 2496, 4412, byteArray0, byteOrder0, (-1093));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1093), tiffField0.getSortHint());
      assertEquals(4412, tiffField0.getTag());
      assertEquals(2496L, tiffField0.getCount());
      assertEquals(4412, tiffField0.getOffset());
      assertEquals(2496, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4992, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[280];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)111, (byte)111, fieldTypeRational0.ASCII, 948L, (byte)111, byteArray0, byteOrder0, (byte)111);
      tiffField0.toString();
      assertEquals(111, tiffField0.getTag());
      assertEquals(111, tiffField0.getDirectoryType());
      assertEquals(948L, tiffField0.getCount());
      assertEquals(948, tiffField0.getBytesLength());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(111, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)91, 2147230078, fieldTypeAscii0, 2147230078, (byte)91, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.getValueDescription();
      assertEquals(91, tiffField0.getTag());
      assertEquals(91, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(91, tiffField0.getOffset());
      assertEquals(2147230078, tiffField0.getDirectoryType());
      assertEquals(2147230078, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(3221, 3221, fieldTypeByte0, 3221, 3221, byteArray0, (ByteOrder) null, 3221);
      String string0 = tiffField0.toString();
      assertEquals(3221, tiffField0.getBytesLength());
      assertEquals("3221 (0xc95: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (3221 SByte)", string0);
      assertEquals(3221, tiffField0.getSortHint());
      assertEquals(3221, tiffField0.getOffset());
      assertEquals(3221, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeLong0, (-2145700025), (-2145700025), byteArray0, byteOrder0, 36);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals((-2145700025), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "r%YTe8vIa_uJx5AFM");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(901, 901, fieldTypeByte0, (-925L), 0L, byteArray0, byteOrder0, 1059);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1), (-250));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1059, tiffField0.getSortHint());
      assertEquals(901, tiffField0.getTag());
      assertEquals(901, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals((-925L), tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1161), (-1161), fieldTypeShort0, (-1161), (-1161), byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65535, (byte)105);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1161L), tiffField0.getCount());
      assertEquals((-1161), tiffField0.getDirectoryType());
      assertEquals((-1161), tiffField0.getOffset());
      assertEquals((-1161), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-260), (byte)12, (FieldType) null, (-260), (byte)12, byteArray0, byteOrder0, (-260));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)105, (byte)105, fieldTypeRational0, (byte)105, (byte)105, byteArray0, byteOrder0, (byte)105);
      int int0 = tiffField0.getSortHint();
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105, tiffField0.getTag());
      assertEquals(105, tiffField0.getOffset());
      assertEquals(105, int0);
      assertEquals(105L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1687), fieldTypeShort0, 12048L, 616L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 2147098034, fieldTypeDouble0, (-3515L), 2147098034, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField(2860, 2860, fieldTypeDouble0, 2860, 2860, byteArray0, (ByteOrder) null, 2860);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@9ebbdf9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeRational0, (byte)107, (byte)107, byteArray0, byteOrder0, (byte)107);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107L, tiffElement0.offset);
      assertEquals(107, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
  }
}
