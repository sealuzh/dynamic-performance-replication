/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:38:59 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import java.nio.charset.IllegalCharsetNameException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOUtils.decodeBase64("'.H#");
      byte[] byteArray0 = IOUtils.decodeBase64("'.H#");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("H");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('w');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)30, (int) (byte)30, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 29
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("GBc62&gd|wLrw~");
      assertArrayEquals(new byte[] {(byte)24, (byte)23, (byte)58, (byte) (-1), (byte) (-8), (byte)29, (byte) (-1), (byte)2, (byte) (-21)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("a");
      byte[] byteArray0 = new byte[0];
      IOUtils.stringSize(2797L);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(")\"VR?e|hia", 4, 1145);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = ';';
      charArray0[2] = ')';
      IOUtils.decodeBase64(charArray0, 5, 0);
      IOUtils.getStringProperty("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-45), 5, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils.firstIdentifier('w');
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-32), (int) (byte) (-32), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("5&:I}gF", (-123008), 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(";p_LJ=Be~JlU[", (-413), (-413));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '^';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-12L), 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 37, 37, iOUtils0.ASCII_CHARS);
      IOUtils.getChars((long) 37, 37, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('^');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[4];
      IOUtils.isValidJsonpQueryParam("&");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4988, 4988, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4988
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8((char[]) null, 58, (-899), iOUtils0.specicalFlags_singleQuotes);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((char[]) null, (-3539), (-3539));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = IOUtils.stringSize(98);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D");
      String string0 = IOUtils.readAll(stringReader0);
      assertEquals("D", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)26, (int) (byte)26);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils.close((Closeable) null);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-15), (-15));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -31
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        IOUtils.getChars(680, 76, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 75
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((-520), (-520), iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -521
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("fastjson.properties");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("UTF-8");
      Charset charset1 = uTF8Decoder0.charset();
      CharBuffer charBuffer0 = charset1.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertTrue(byteBuffer0.hasArray());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = IOUtils.stringSize((-1338L));
      assertEquals(1, int0);
      
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[1];
      charArray0[0] = '&';
      IOUtils.getChars(3, 1, charArray0);
      assertArrayEquals(new char[] {'3'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      IOUtils.close(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOUtils.firstIdentifier('%');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("X_EU@yQd@`H98GMxoI");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName", (int) (byte)13, 17);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, 128, (byte)13, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "readstRin froQ reader ehror";
      byte[] byteArray0 = IOUtils.decodeBase64("readstRin froQ reader ehror");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[16];
      IOUtils.decodeUTF8(byteArray0, 1, 9, charArray0);
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("readstRin froQ reader ehror", 1, 9);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)40, (int) (byte)40, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 39
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.stringSize(2147483647L);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, 2, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 2, 2, iOUtils0.ASCII_CHARS);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getChars(2, 2, iOUtils0.CA);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-48), 2, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.baseWireHandle;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.getChars(8257536, 2, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 30, 30, iOUtils0.ASCII_CHARS);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getChars(30, 30, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("f'Og=Q&m=&:VQY;N{0A");
      PipedReader pipedReader0 = new PipedReader();
      char[] charArray0 = new char[7];
      charArray0[2] = '\u00A4';
      charArray0[2] = '\u00A4';
      charArray0[3] = '\u00A4';
      charArray0[5] = '\u00A4';
      charArray0[6] = '\u00A4';
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      int int1 = IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = 30;
      int int1 = 3968;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 30, 3968, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'X';
      charArray0[1] = 'H';
      charArray0[2] = '';
      IOUtils.getChars((byte)2, (int) (byte)2, charArray0);
      assertArrayEquals(new char[] {'X', '2', ''}, charArray0);
      
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("T#<?S:jXic/Tcn?{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)33, (int) (byte)33);
      PipedReader pipedReader0 = new PipedReader();
      iOUtils0.UTF8.encode("fastjson.properties");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte byte0 = (byte)25;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      int int0 = (-3250);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.compatibleWithFieldName", (int) (byte)25, (-3250));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOUtils.stringSize((-1338L));
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[10];
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.getChars((-1L), 5, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8((byte[]) null, 5, 1, charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils iOUtils0 = new IOUtils();
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 7, 7);
      // Undeclared exception!
      try { 
        IOUtils.readAll(pipedReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 244;
      // Undeclared exception!
      try { 
        IOUtils.getChars(1000000000000L, 244, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      ByteOrder.nativeOrder();
      iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)25, iOUtils0.ASCII_CHARS);
      IOUtils.getChars((-3516), 16, iOUtils0.replaceChars);
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize((-5839));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)29;
      byteArray0[4] = (byte) (-90);
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      assertArrayEquals(new char[] {'G'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      PipedReader pipedReader0 = new PipedReader();
      IOUtils.decodeUTF8(byteArray0, 0, (byte)25, iOUtils0.ASCII_CHARS);
      iOUtils0.UTF8.newDecoder();
      // Undeclared exception!
      try { 
        Charset.forName("");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.stringSize(2567L);
      char[] charArray0 = new char[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[4] = '\u008E';
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4, 4, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      PipedReader pipedReader0 = new PipedReader();
      IOUtils.decodeUTF8(byteArray0, 0, (byte)25, iOUtils0.ASCII_CHARS);
      IOUtils.stringSize((-1017L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "read string from reader error";
      byte[] byteArray0 = IOUtils.decodeBase64("read string from reader error");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[5];
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(36, (-1), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("FhJZigojnGb=%");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 447, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("read string from reader error");
      PipedReader pipedReader0 = new PipedReader();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[6];
      charArray0[4] = '\u0000';
      IOUtils.decodeUTF8(byteArray0, 1, 9, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(61, 224, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 223
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.replaceChars, (-5852), (-5852), iOUtils0.specicalFlags_doubleQuotes);
      byte byte0 = (byte)25;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 12, (byte)25, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)37, (int) (byte)37);
      IOUtils.stringSize((long) 2);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      iOUtils0.UTF8.encode("fastjson.compatibleWithJavaBean");
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 1, (byte)37, iOUtils0.specicalFlags_doubleQuotes);
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      int int2 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(957);
      int int3 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeUTF8(byteArray0, 0, 1, iOUtils0.DIGITS);
      IOUtils.stringSize((-2303L));
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      iOUtils0.UTF8.newDecoder();
      IOUtils.stringSize((-688L));
      IOUtils.stringSize((-1819L));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IOUtils.decodeBase64("readstRin froQ reader ehror");
      IOUtils.loadPropertiesFromFile();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeBase64("wFl==");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils.stringSize((long) 2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int2 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "readstRin froQ reader ehror");
      int int3 = ObjectStreamConstants.baseWireHandle;
      IOUtils.stringSize((long) 2);
      IOUtils.loadPropertiesFromFile();
      IOUtils.firstIdentifier('B');
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      int int1 = 80;
      IOUtils.decodeBase64(iOUtils0.replaceChars, 1, 80);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      iOUtils0.UTF8.encode("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("}", 1, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.encodeUTF8(iOUtils0.replaceChars, (-5839), (-5839), iOUtils0.specicalFlags_doubleQuotes);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      PipedReader pipedReader0 = new PipedReader();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      byteBuffer0.getChar();
      ByteOrder.nativeOrder();
      iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.stringSize((-1031L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jx%Bl,l|]/ E 8");
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-2045), 0, iOUtils0.specicalFlags_singleQuotes);
      IOUtils.firstIdentifier('\u6661');
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2045), (-802), iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -803
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.replaceChars, (-5852), (-5852), iOUtils0.specicalFlags_doubleQuotes);
      byte byte0 = (byte)25;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 12, (byte)25, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.replaceChars, (-5839), (-5839), iOUtils0.specicalFlags_doubleQuotes);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)25, (int) (byte)25);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      byteBuffer0.getChar(0);
      iOUtils0.UTF8.decode(byteBuffer0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.stringSize((long) '\u6661');
      byteBuffer0.rewind();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils.stringSize((long) 12);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter((byte)25);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isIdent('\u6661');
  }
}
