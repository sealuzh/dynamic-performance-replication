/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 18:13:32 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 602;
      intArray0[1] = (-190);
      intArray0[2] = 0;
      int int0 = 372;
      intArray0[3] = 372;
      intArray0[4] = (-2131);
      int int1 = (-2950);
      intArray0[5] = (-2950);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[9][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = (-2131);
      intArray2[1] = 0;
      intArray2[2] = (-190);
      intArray2[3] = 0;
      intArray2[4] = (-190);
      intArray2[5] = (-190);
      intArray2[6] = (-2131);
      intArray1[7] = intArray2;
      intArray1[8] = intArray0;
      charClass2.appendTable(intArray1);
      int int2 = 725;
      CharClass charClass3 = charClass2.appendFoldedRange(int2, intArray0[2]);
      int[][] intArrayArray0 = null;
      CharClass charClass4 = charClass3.appendTableWithSign(intArrayArray0, int0);
      charClass4.appendLiteral(intArray0[1], intArray0[0]);
      int int3 = 127232;
      CharClass charClass5 = charClass4.appendRange(int3, int1);
      charClass5.negateClass();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[13];
      intArray0[2] = 65671;
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[0];
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = new CharClass();
      int[][] intArray1 = new int[0][5];
      charClass0.appendNegatedTable(intArray1);
      assertArrayEquals(new int[] {0, 0, 0, 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = (-1007);
      intArray0[1] = (-1007);
      intArray0[2] = 150;
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[1] = 5;
      intArray0[1] = 5;
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      charClass0.appendFoldedRange(5, 5);
      CharClass charClass1 = new CharClass(intArray0);
      assertFalse(charClass1.equals((Object)charClass0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.negateClass();
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, (-1439));
      CharClass charClass2 = charClass1.negateClass();
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange((-378), (-378));
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-15));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArrayArray0 = null;
      int int0 = 64;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, 64);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray0 = new int[3][4];
      CharClass charClass1 = charClass0.appendLiteral(2101, 2101);
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray0 = new int[2][4];
      CharClass charClass2 = charClass1.negateClass();
      assertSame(charClass1, charClass2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[7];
      int int0 = (-2);
      intArray0[0] = (-2);
      intArray0[1] = 66639;
      intArray0[2] = 3382;
      intArray0[3] = 0;
      charClass0.appendLiteral((-1038), (-191));
      intArray0[4] = 1;
      intArray0[5] = 64;
      intArray0[6] = 133;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 66639);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[1];
      intArray1[0] = 65;
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, 3617);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 3617);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-1007);
      intArray0[1] = 188;
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(3583, 3583);
      charClass0.toString();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-84);
      intArray0[1] = 0;
      intArray0[2] = 93;
      intArray0[3] = (-1297);
      int int0 = 0;
      intArray0[4] = 0;
      intArray0[5] = 581;
      intArray0[6] = 120016;
      intArray0[7] = 0;
      intArray0[8] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(799, 799);
      int[] intArray0 = charClass0.toArray();
      int int0 = 0;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.negateClass();
      CharClass charClass4 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass2.negateClass();
      charClass5.appendLiteral(0, 0);
      int[][] intArray1 = new int[6][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass4.appendRange(44013, 0);
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass3.toString();
      // Undeclared exception!
      try { 
        charClass4.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][8];
      CharClass charClass1 = charClass0.appendTable(intArray0);
      int[][] intArray1 = new int[3][4];
      charClass1.toArray();
      CharClass charClass2 = charClass0.appendNegatedTable(intArray0);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral(0, 0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 7676;
      intArray0[2] = 0;
      intArray0[3] = 0;
      CharClass charClass3 = charClass2.appendClass(intArray0);
      int[][] intArray1 = new int[9][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      CharClass charClass4 = charClass3.appendTable(intArray1);
      CharClass charClass5 = charClass4.cleanClass();
      int int0 = 561;
      charClass5.appendFoldedRange(int0, intArray0[2]);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[4];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.cleanClass();
      assertArrayEquals(new int[] {0, 1114111, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass0.appendTable(intArray0);
      CharClass charClass3 = charClass2.appendRange(0, 109);
      charClass0.appendRange(1151, (-475));
      charClass3.negateClass();
      charClass2.toString();
      int[] intArray1 = charClass1.toArray();
      CharClass charClass4 = charClass0.cleanClass();
      charClass4.appendLiteral(0, 0);
      CharClass charClass5 = charClass2.appendTable(intArray0);
      CharClass charClass6 = charClass5.appendNegatedClass(intArray1);
      charClass4.appendTableWithSign(intArray0, 109);
      charClass6.toString();
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign((int[][]) null, (-1293));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[3];
      intArray1[0] = 0;
      intArray1[1] = 4;
      intArray1[2] = 1527;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[3];
      intArray2[0] = 4;
      intArray2[1] = 0;
      intArray2[2] = 4;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[0];
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 1527;
      intArray4[1] = 1527;
      intArray4[2] = 0;
      intArray4[3] = 1527;
      intArray4[4] = 0;
      intArray4[5] = 0;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[6];
      intArray5[0] = 1527;
      intArray5[1] = 1527;
      intArray5[2] = 1527;
      intArray5[3] = 4;
      intArray5[4] = 0;
      intArray5[5] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[3];
      intArray6[0] = 0;
      intArray6[1] = 1527;
      intArray6[2] = 4;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[6];
      intArray7[0] = 4;
      intArray7[1] = 4;
      intArray7[2] = 4;
      intArray7[3] = 1527;
      intArray7[4] = 0;
      intArray7[5] = 5248;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[4];
      intArray8[0] = 1527;
      intArray8[1] = 4;
      intArray8[2] = 0;
      intArray8[3] = 4;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[0];
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass0.appendTable(intArray0);
      charClass2.appendRange(0, 109);
      charClass0.appendRange(1151, (-475));
      charClass2.toString();
      int[] intArray1 = charClass1.toArray();
      CharClass charClass3 = charClass0.cleanClass();
      charClass3.appendLiteral(0, 0);
      CharClass charClass4 = charClass2.appendTable(intArray0);
      CharClass charClass5 = charClass4.appendNegatedClass(intArray1);
      CharClass charClass6 = charClass3.appendTableWithSign(intArray0, 109);
      charClass5.toString();
      int[][] intArray2 = new int[4][2];
      int[] intArray3 = new int[2];
      intArray3[0] = 1151;
      intArray3[1] = 109;
      intArray2[0] = intArray3;
      intArray2[1] = intArray1;
      intArray2[2] = intArray1;
      intArray2[3] = intArray1;
      // Undeclared exception!
      try { 
        charClass6.appendNegatedTable(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int int0 = (-1250);
      int[][] intArray0 = new int[3][4];
      int[] intArray1 = new int[5];
      int[][] intArray2 = new int[0][5];
      charClass0.appendNegatedTable(intArray2);
      intArray1[0] = (-1250);
      intArray1[1] = (-1250);
      intArray1[2] = (-1250);
      intArray1[3] = (-1250);
      intArray1[4] = (-1250);
      intArray0[0] = intArray1;
      int[] intArray3 = new int[2];
      intArray3[0] = (-1250);
      intArray3[1] = (-1250);
      intArray0[1] = intArray3;
      charClass1.toString();
      int[] intArray4 = new int[5];
      intArray4[0] = 0;
      intArray4[1] = (-1250);
      intArray4[2] = (-1250);
      intArray4[3] = (-1250);
      intArray4[4] = (-1250);
      intArray0[2] = intArray4;
      charClass0.appendNegatedTable(intArray0);
      int int1 = 850;
      charClass1.appendFoldedRange(int0, int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 794;
      intArray0[1] = 12;
      intArray0[2] = 185;
      intArray0[3] = 8219;
      intArray0[4] = 66640;
      intArray0[5] = (-1);
      intArray0[6] = 4;
      intArray0[7] = (-183);
      intArray0[8] = (-961);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[6][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass1.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 767;
      intArray0[1] = 1;
      intArray0[2] = 139;
      intArray0[3] = (-1036);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      int int0 = 2;
      charClass2.cleanClass();
      int int1 = 0;
      CharClass charClass3 = charClass2.appendRange(2, 0);
      CharClass charClass4 = charClass3.negateClass();
      CharClass charClass5 = charClass4.appendClass(intArray0);
      charClass4.appendLiteral(767, 767);
      CharClass charClass6 = charClass5.appendClassWithSign(intArray0, 139);
      CharClass charClass7 = charClass6.appendClass(intArray0);
      charClass3.appendLiteral(1, 139);
      int[][] intArray1 = new int[3][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass4.appendTableWithSign(intArray1, 7576);
      // Undeclared exception!
      try { 
        charClass7.appendTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][1];
      int[] intArray1 = new int[5];
      intArray1[0] = 6;
      intArray1[1] = 6;
      intArray1[2] = 1;
      intArray1[3] = 1228;
      intArray1[4] = 2803;
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1399);
      intArray0[1] = (-1399);
      intArray0[2] = (-1399);
      intArray0[3] = (-1399);
      CharClass.charClassToString(intArray0, 2);
      int[][] intArray1 = new int[4][0];
      int[] intArray2 = new int[4];
      intArray2[0] = (-1399);
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = (-1399);
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      int[][] intArray3 = new int[2][4];
      intArray3[0] = intArray2;
      intArray3[1] = intArray2;
      charClass2.appendNegatedTable(intArray3);
      charClass0.appendNegatedTable(intArray3);
      charClass0.appendFoldedClass(intArray1[3]);
  }
}
