/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 05:48:04 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2255, 2255, fieldTypeShort0, 2255, 2255, byteArray0, byteOrder0, (-1742));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1742), tiffField0.getSortHint());
      assertEquals(2255, tiffField0.getDirectoryType());
      assertEquals(1024, int0);
      assertEquals(2255, tiffField0.getTag());
      assertEquals(4510, tiffField0.getBytesLength());
      assertEquals(2255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2286, "px'^+T`*qXzP(!H-");
      byte[] byteArray0 = new byte[22];
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 656L, byteArray0, byteOrder0, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2287, 2287, fieldTypeFloat0, 2287, 1826L, byteArray0, byteOrder0, 2287);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(2287, tiffField0.getSortHint());
      assertEquals(2287, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2287, tiffField0.getDirectoryType());
      assertEquals(9148, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2316), "FocalPlaneYResolution");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2316), (-2316), fieldTypeLong0, 1L, (-2316), byteArray0, byteOrder0, (byte) (-112));
      int int0 = tiffField0.getTag();
      assertEquals((-2316), tiffField0.getDirectoryType());
      assertEquals((-2316), tiffField0.getOffset());
      assertEquals((-2316), int0);
      assertEquals((-112), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34736, 34736, fieldTypeRational0, 32L, (-2129L), byteArray0, byteOrder0, 808);
      int int0 = tiffField0.getSortHint();
      assertEquals(34736, tiffField0.getTag());
      assertEquals(34736, tiffField0.getDirectoryType());
      assertEquals((-2129), tiffField0.getOffset());
      assertEquals(808, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)81;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37380, 412, fieldTypeLong0, 412, 37380, byteArray0, byteOrder0, 41992);
      tiffField0.getIntValueOrArraySum();
      assertEquals(37380, tiffField0.getTag());
      assertEquals(37380, tiffField0.getOffset());
      assertEquals(1648, tiffField0.getBytesLength());
      assertEquals(412, tiffField0.getDirectoryType());
      assertEquals(41992, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-37);
      TiffField tiffField0 = new TiffField(9, 50939, fieldTypeLong0, 1L, (-585L), byteArray0, (ByteOrder) null, (byte) (-42));
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-585), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-82);
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36867, 36867, fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (-1597));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(36867, tiffField0.getDirectoryType());
      assertEquals((-1597), tiffField0.getSortHint());
      assertEquals(36867, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36867, 36867, fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (-1597));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1597), tiffField0.getSortHint());
      assertEquals(36867, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(36867, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-191), 869, (FieldType) null, (-191), 1L, byteArray0, (ByteOrder) null, (byte) (-11));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(50706);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-459), (-459), (FieldType) null, 1L, 1L, byteArray0, byteOrder0, 463);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-17179383056L), (-2306L), byteArray0, byteOrder0, 574);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1631, "`0e5>E5h3,L{LZ+g");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 255L, 1535L, (byte[]) null, byteOrder0, (-1832));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(" ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "`0e5>E5h3,L{LZ+g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 289, fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getByteOrder();
      assertEquals(289, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2287, 2287, fieldTypeFloat0, 2287, 1826L, byteArray0, byteOrder0, 2287);
      tiffField0.getByteArrayValue();
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(2287, tiffField0.getSortHint());
      assertEquals(2287, tiffField0.getDirectoryType());
      assertEquals(2287, tiffField0.getTag());
      assertEquals(9148, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 3591, fieldTypeFloat0, 92, 670L, byteArray0, byteOrder0, 1563);
      tiffField0.getFieldType();
      assertEquals(1563, tiffField0.getSortHint());
      assertEquals(3591, tiffField0.getDirectoryType());
      assertEquals(670, tiffField0.getOffset());
      assertEquals(92, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 3591, fieldTypeFloat0, 92, 670L, byteArray0, byteOrder0, 1563);
      int int0 = tiffField0.getOffset();
      assertEquals(670, int0);
      assertEquals(3591, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getTag());
      assertEquals(1563, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2286, "px'^+T`*qXzP(!H-");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 656L, byteArray0, byteOrder0, 3);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getTag());
      assertEquals(656, tiffField0.getOffset());
      assertEquals(255, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(9, 50939, fieldTypeLong0, 1L, (-585L), byteArray0, (ByteOrder) null, (byte) (-42));
      int int0 = tiffField0.getTag();
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(9, int0);
      assertEquals((-585), tiffField0.getOffset());
      assertEquals(50939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2287, 2287, fieldTypeFloat0, 2287, 1826L, byteArray0, byteOrder0, 2287);
      long long0 = tiffField0.getCount();
      assertEquals(2287, tiffField0.getSortHint());
      assertEquals(2287, tiffField0.getTag());
      assertEquals(2287L, long0);
      assertEquals(2287, tiffField0.getDirectoryType());
      assertEquals(1826, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4017), fieldTypeAscii0, 0, (-4017), byteArray0, byteOrder0, (-2895));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2895), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-4017), tiffField0.getOffset());
      assertEquals((-4017), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146724550), (-2146724550), fieldTypeFloat0, 351L, (-2146724550), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 3591, fieldTypeFloat0, 92, 670L, byteArray0, byteOrder0, 1563);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37380, 412, fieldTypeLong0, 412, 37380, byteArray0, byteOrder0, 41992);
      tiffField0.getIntValueOrArraySum();
      assertEquals(412, tiffField0.getDirectoryType());
      assertEquals(41992, tiffField0.getSortHint());
      assertEquals(37380, tiffField0.getOffset());
      assertEquals(412L, tiffField0.getCount());
      assertEquals(37380, tiffField0.getTag());
      assertEquals(1648, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-523), 65535, fieldTypeRational0, 65535, (-2404L), byteArray0, byteOrder0, (byte) (-57));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals((-2404), tiffField0.getOffset());
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-523), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 289, fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@8534edc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(114, "): ");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "): ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3368, 3368, fieldTypeAscii0, 114, 676L, byteArray0, byteOrder0, 3368);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146724550), (-2146724550), fieldTypeFloat0, 351L, (-2146724550), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(351L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2146724550), tiffField0.getDirectoryType());
      assertEquals((-2146724550), tiffField0.getTag());
      assertEquals((-2146724550), tiffField0.getOffset());
      assertEquals(1404, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-1398), fieldTypeDouble0, 0L, (-248L), byteArray0, byteOrder0, 34675);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1398), tiffField0.getDirectoryType());
      assertEquals((-248), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50706, (-297), fieldTypeLong0, 2118L, 2118L, byteArray0, byteOrder0, (-459));
      tiffField0.getDoubleArrayValue();
      assertEquals(2118, tiffField0.getOffset());
      assertEquals((-459), tiffField0.getSortHint());
      assertEquals(8472, tiffField0.getBytesLength());
      assertEquals((-297), tiffField0.getDirectoryType());
      assertEquals(50706, tiffField0.getTag());
      assertEquals(2118L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 2147150446, fieldTypeShort0, 7834L, 0, byteArray0, (ByteOrder) null, (byte) (-24));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2147150446, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(15668, tiffField0.getBytesLength());
      assertEquals(7834L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2286, "px'^+T`*qXzP(!H-");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 656L, byteArray0, byteOrder0, 3);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getTag());
      assertEquals(656, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2316), "FocalPlaneYResolution");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2316), (-2316), fieldTypeLong0, 1L, (-2316), byteArray0, byteOrder0, (byte) (-112));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2316), tiffField0.getOffset());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-2316), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2316), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-706), "t&]I}Lp");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-706), 41490, fieldTypeLong0, 75L, 41490, byteArray0, byteOrder0, (byte) (-64));
      tiffField0.getIntArrayValue();
      assertEquals(41490, tiffField0.getDirectoryType());
      assertEquals(75L, tiffField0.getCount());
      assertEquals((-706), tiffField0.getTag());
      assertEquals(41490, tiffField0.getOffset());
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals((-64), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3010, 41990, fieldTypeShort0, 3010, 41990, byteArray0, byteOrder0, (byte)1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(6020, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3010, tiffField0.getTag());
      assertEquals(41990, tiffField0.getOffset());
      assertEquals(3010L, tiffField0.getCount());
      assertEquals(41990, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3126, (-950), fieldTypeRational0, 320L, (byte)54, byteArray0, byteOrder0, 881);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34736, 34736, fieldTypeRational0, 32L, (-2129L), byteArray0, byteOrder0, 808);
      tiffField0.getIntArrayValue();
      assertEquals((-2129), tiffField0.getOffset());
      assertEquals(34736, tiffField0.getDirectoryType());
      assertEquals(34736, tiffField0.getTag());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(808, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2316), "FocalPlaneYResolution");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2316), (-2316), fieldTypeLong0, 1L, (-2316), byteArray0, byteOrder0, (byte) (-112));
      tiffField0.getIntArrayValue();
      assertEquals((-2316), tiffField0.getOffset());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-2316), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2316), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2287, 2287, fieldTypeFloat0, 2287, 1826L, byteArray0, byteOrder0, 2287);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@67dd4c1c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2821), (-1), fieldType0, 2219L, 1, byteArray0, (ByteOrder) null, 1);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@2e1141f7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4017), fieldTypeAscii0, 0, (-4017), byteArray0, byteOrder0, (-2895));
      String string0 = tiffField0.getStringValue();
      assertEquals((-4017), tiffField0.getOffset());
      assertEquals((-2895), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-4017), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(9, 50939, fieldTypeLong0, 1L, (-585L), byteArray0, (ByteOrder) null, (byte) (-42));
      String string0 = tiffField0.getTagName();
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x9)", string0);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals((-585), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2286, "px'^+T`*qXzP(!H-");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 656L, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getTagName();
      assertEquals("SubfileType", string0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getTag());
      assertEquals(656, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, 50, byteArray0, byteOrder0, (byte)25);
      tiffField0.dump();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147483646), 32946, fieldTypeByte0, 320L, 3764L, byteArray0, byteOrder0, (-2147483646));
      String string0 = tiffField0.getValueDescription();
      assertEquals(320, tiffField0.getBytesLength());
      assertEquals(3764, tiffField0.getOffset());
      assertEquals(320L, tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(32946, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 289, fieldTypeByte0, 0L, 4L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.toString();
      assertEquals("-1 (0xffffffff: Unknown Tag):  (0 SByte)", string0);
      assertEquals(289, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 33405, fieldTypeDouble0, 33405, 19312L, byteArray0, byteOrder0, (byte) (-19));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(33405L, tiffField0.getCount());
      assertEquals(267240, tiffField0.getBytesLength());
      assertEquals(19312, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(33405, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 3591, fieldTypeFloat0, 92, 670L, byteArray0, byteOrder0, 1563);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(92, tiffField0.getTag());
      assertEquals(3591, tiffField0.getDirectoryType());
      assertEquals(39L, mockFile0.length());
      assertEquals(1563, tiffField0.getSortHint());
      assertEquals(670, tiffField0.getOffset());
      assertEquals(368, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-706), "t&]I}Lp");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-706), 41490, fieldTypeLong0, 75L, 41490, byteArray0, byteOrder0, (byte) (-64));
      String string0 = tiffField0.toString();
      assertEquals((-64), tiffField0.getSortHint());
      assertEquals(41490, tiffField0.getOffset());
      assertEquals("-706 (0xfffffd3e: Unknown Tag): 0, 0 (75 t&]I}Lp)", string0);
      assertEquals(300, tiffField0.getBytesLength());
      assertEquals(41490, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2255, 2255, fieldTypeShort0, 2255, 2255, byteArray0, byteOrder0, (-1742));
      tiffField0.dump();
      assertEquals(2255, tiffField0.getTag());
      assertEquals(4510, tiffField0.getBytesLength());
      assertEquals(2255, tiffField0.getDirectoryType());
      assertEquals((-1742), tiffField0.getSortHint());
      assertEquals(2255L, tiffField0.getCount());
      assertEquals(2255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2286, "px'^+T`*qXzP(!H-");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 656L, byteArray0, byteOrder0, 3);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("px'^+T`*qXzP(!H-", false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 2317);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "sj[");
      assertEquals(656, tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4017), fieldTypeAscii0, 0, (-4017), byteArray0, byteOrder0, (-2895));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4017), tiffField0.getOffset());
      assertEquals((-4017), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2895), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(9, 50939, fieldTypeLong0, 1L, (-585L), byteArray0, (ByteOrder) null, (byte) (-42));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("WhiteLevel");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50939, tiffField0.getDirectoryType());
      assertEquals((-585), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "HeightResolution");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48256, 48256, fieldTypeRational0, (-4417L), 3371L, byteArray0, byteOrder0, (byte) (-100));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(48256, tiffField0.getDirectoryType());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(3371, tiffField0.getOffset());
      assertEquals(48256, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2316), "FocalPlaneYResolution");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2316), (-2316), fieldTypeLong0, 1L, (-2316), byteArray0, byteOrder0, (byte) (-112));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1161, (-123));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals((-2316), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: FocalPlaneYResolution", string0);
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-2316), tiffField0.getTag());
      assertEquals((-2316), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-4869), 1, fieldTypeLong0, 0L, (-1L), byteArray0, (ByteOrder) null, (byte)68);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals((-4869), tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2316), "FocalPlaneYResolution");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2316), (-2316), fieldTypeLong0, 1L, (-2316), byteArray0, byteOrder0, (byte) (-112));
      tiffField0.getFieldTypeName();
      assertEquals((-2316), tiffField0.getTag());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-2316), tiffField0.getOffset());
      assertEquals((-2316), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2255, 2255, fieldTypeShort0, 2255, 2255, byteArray0, byteOrder0, (-1742));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2255, tiffField0.getDirectoryType());
      assertEquals(2255, tiffField0.getTag());
      assertEquals(2255L, tiffElement0.offset);
      assertEquals((-1742), tiffField0.getSortHint());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3, (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeAscii0, (-176L), (-176L), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1717986917), int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-176), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50706, (-297), fieldTypeLong0, 2118L, 2118L, byteArray0, byteOrder0, (-459));
      int int0 = tiffField0.getSortHint();
      assertEquals((-297), tiffField0.getDirectoryType());
      assertEquals(50706, tiffField0.getTag());
      assertEquals((-459), int0);
      assertEquals(2118, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(9, 50939, fieldTypeLong0, 1L, (-585L), byteArray0, (ByteOrder) null, (byte) (-42));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-585), tiffField0.getOffset());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals("9 (0x9: Unknown Tag): ", string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34027, (-354), fieldTypeDouble0, 34027, 34027, byteArray0, byteOrder0, (byte)21);
      tiffField0.getValue();
      assertEquals(34027L, tiffField0.getCount());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(272216, tiffField0.getBytesLength());
      assertEquals((-354), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34027, (-354), fieldTypeDouble0, 34027, 34027, byteArray0, byteOrder0, (byte)21);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)21, 18249);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(34027L, tiffField0.getCount());
      assertEquals(34027, tiffField0.getTag());
      assertNull(string0);
      assertEquals((-354), tiffField0.getDirectoryType());
      assertEquals(34027, tiffField0.getOffset());
  }
}
