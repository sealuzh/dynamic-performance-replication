/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:44:22 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantMethodHandle;
import org.apache.bcel.classfile.ConstantMethodType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantUtf8;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IALOAD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.ReferenceType;
import org.apache.bcel.generic.ReturnInstruction;
import org.apache.bcel.generic.ReturnaddressType;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.StackConsumer;
import org.apache.bcel.generic.StackInstruction;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitICONST((ICONST) null);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FADD fADD0 = new FADD();
      LNEG lNEG0 = new LNEG();
      LAND lAND0 = new LAND();
      D2F d2F0 = new D2F();
      I2D i2D0 = new I2D();
      LNEG lNEG1 = new LNEG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FSTORE fSTORE0 = new FSTORE(72);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      assertEquals((short)56, fSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(1);
      dSTORE0.toString();
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      assertEquals(1, nOP0.getLength());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(3081);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEDYNAMIC0);
      assertEquals(3, iNVOKEDYNAMIC0.getLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SASTORE sASTORE0 = new SASTORE();
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      GETSTATIC gETSTATIC0 = new GETSTATIC(0);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      INSTANCEOF iNSTANCEOF0 = null;
      try {
        iNSTANCEOF0 = new INSTANCEOF((-468));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -468
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SASTORE sASTORE0 = new SASTORE();
      sASTORE0.toString(true);
      DREM dREM0 = new DREM();
      FCONST fCONST0 = new FCONST(1.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      ISUB iSUB0 = new ISUB();
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLLOAD((LLOAD) null);
      DREM dREM0 = new DREM();
      assertEquals(1, dREM0.getLength());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DREM dREM0 = new DREM();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC((byte)124);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(2);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      assertEquals(2, lSTORE0.getIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ILOAD iLOAD0 = new ILOAD(1);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(iLOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SIPUSH sIPUSH0 = new SIPUSH((short)166);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      assertEquals("sipush", sIPUSH0.getName());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(197);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      assertEquals((short)54, iSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      RETURN rETURN0 = new RETURN();
      InstructionList instructionList0 = new InstructionList(rETURN0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) rETURN0, (Instruction) rETURN0);
      JSR jSR0 = new JSR(instructionHandle0);
      instConstraintVisitor0.visitJSR(jSR0);
      assertEquals("jsr", jSR0.getName());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(dUP_X1_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(143);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      assertEquals((short)25, aLOAD0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DLOAD dLOAD0 = new DLOAD(1908);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      assertEquals((short)24, dLOAD0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE((short)209, (short)209);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      F2D f2D0 = new F2D();
      Constant[] constantArray0 = new Constant[3];
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-2719));
      ConstantMethodType constantMethodType1 = new ConstantMethodType(constantMethodType0);
      constantArray0[1] = (Constant) constantMethodType1;
      ConstantMethodHandle constantMethodHandle0 = new ConstantMethodHandle(1090, (-1005));
      constantArray0[2] = (Constant) constantMethodHandle0;
      instConstraintVisitor0.visitGOTO_W((GOTO_W) null);
      LADD lADD0 = new LADD();
      assertEquals(1, lADD0.getLength());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DCONST dCONST0 = new DCONST(0.0);
      instConstraintVisitor0.visitDCONST(dCONST0);
      DNEG dNEG0 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DDIV dDIV0 = new DDIV();
      instConstraintVisitor0.visitJSR_W((JSR_W) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLCONST((LCONST) null);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setMethodGen((MethodGen) null);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("[/5Ml]rtH");
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      GOTO gOTO0 = new GOTO(instructionHandle0);
      instConstraintVisitor0.visitGOTO(gOTO0);
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitBIPUSH((BIPUSH) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Frame frame0 = new Frame(1841, 1841);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      DLOAD dLOAD0 = new DLOAD(1708);
      dLOAD0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(dLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DLOAD constraint violated: Read-Access on local variable 1708 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      int int0 = 0;
      operandStack0.pop(0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(432);
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IALOAD iALOAD0 = new IALOAD();
      ISHR iSHR0 = new ISHR();
      instConstraintVisitor0.setConstantPoolGen((ConstantPoolGen) null);
      // Undeclared exception!
      try { 
        iSHR0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(247);
      ObjectType objectType0 = new ObjectType("The 'arrayref' does not refer to an array but is of type ");
      OperandStack operandStack0 = new OperandStack(247, objectType0);
      Boolean.valueOf("O=c!'o=vYyVn.to@Q\"");
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame2);
      operandStack0.pop();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables1 = new LocalVariables(247);
      localVariables0.clone();
      DASTORE dASTORE0 = new DASTORE();
      IADD iADD0 = new IADD();
      IAND iAND0 = new IAND();
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type 'The 'arrayref' does not refer to an array but is of type '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(432);
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2L constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("986^W1>lJ");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("Slots used: 1 MaxStack: 3.\n986^W1>lJ (Size: 1)\n");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FMUL fMUL0 = new FMUL();
      fMUL0.toString();
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type '986^W1>lJ'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      I2C i2C0 = new I2C();
      LALOAD lALOAD0 = new LALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD(lALOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LALOAD constraint violated: The 'index' is not of type int but of type Ig[ldX',TH:]Sn=m.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack(97);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(97);
      L2F l2F0 = new L2F();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      instConstraintVisitor0.visitDUP((DUP) null);
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(97, 97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L$Z0Lv}<GRsUjY G/l;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      GETFIELD gETFIELD0 = new GETFIELD(97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      InstructionList instructionList0 = new InstructionList(bASTORE0);
      instructionList0.iterator();
      instructionList0.toString();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      IFLE iFLE0 = new IFLE(instructionHandle0);
      instructionHandle0.addTargeter(iFLE0);
      instructionList0.toString();
      iFLE0.negate();
      LSTORE lSTORE0 = new LSTORE(158);
      ISTORE iSTORE0 = new ISTORE(97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(iSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: 'Ig[ld,',TH:[Sn=m'; Instruction type: 'int'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ((IF_ICMPEQ) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      CASTORE cASTORE0 = new CASTORE();
      assertEquals(1, cASTORE0.getLength());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(187);
      ObjectType objectType0 = ObjectType.getInstance("Q%X$6Qyk=P3D,u,1");
      OperandStack operandStack0 = new OperandStack(187);
      OperandStack operandStack1 = new OperandStack(2821, objectType0);
      OperandStack operandStack2 = new OperandStack(1563, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack3 = new OperandStack(1075, uninitializedObjectType0.THROWABLE);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG((FNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(187);
      ObjectType objectType0 = ObjectType.getInstance("Q%X$6Qyk=P3D,u,1");
      ObjectType objectType1 = new ObjectType("_i.QQ*U$2k");
      OperandStack operandStack0 = new OperandStack(187, objectType0);
      OperandStack operandStack1 = new OperandStack(187, objectType1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      F2D f2D0 = new F2D();
      F2D f2D1 = new F2D();
      F2D f2D2 = new F2D();
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'Q%X$6Qyk=P3D,u,1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      localVariables0.toString();
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Type.getReturnType("Stack next-to-top must be of type double[] but is '");
      frame0.getClone();
      DDIV dDIV0 = new DDIV();
      DDIV dDIV1 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      String string0 = "6";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("6");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      String string1 = Constants.CONSTRUCTOR_NAME;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      objectType0.isAssignmentCompatibleWith(objectType0.INT);
      EvoSuiteFile evoSuiteFile0 = null;
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type '6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("Ig[_ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        dUP2_0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DUP2 constraint violated: Cannot consume 2 stack slots: only 1 slot(s) left on stack!
         // Stack:
         // Slots used: 1 MaxStack: 97.
         // Ig[_ldX',TH:]Sn=m (Size: 1)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      LocalVariables localVariables1 = new LocalVariables(97);
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.getClone();
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      DREM dREM0 = new DREM();
      D2I d2I0 = new D2I();
      D2I d2I1 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2I constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(1);
      ObjectType objectType0 = ObjectType.getInstance("R5%`~kA4>zGo5unzx");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      D2F d2F0 = new D2F();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      d2F0.dump(dataOutputStream0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type 'R5%`~kA4>zGo5unzx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      LUSHR lUSHR0 = new LUSHR();
      LRETURN lRETURN0 = new LRETURN();
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = Constants.CONSTRUCTOR_NAME;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      LDC lDC0 = new LDC(145);
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(80);
      ObjectType objectType0 = ObjectType.getInstance("Kui4T&AE0P--%/N~N.");
      OperandStack operandStack0 = new OperandStack(80, objectType0);
      OperandStack operandStack1 = new OperandStack(80);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack2 = new OperandStack(193, objectType0);
      ConstantUtf8 constantUtf8_0 = new ConstantUtf8("Kui4T&AE0P--%/N~N.");
      D2L d2L0 = new D2L();
      constantUtf8_0.copy();
      D2L d2L1 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type 'Kui4T&AE0P--%.N~N.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("g[lX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Class<FSUB> class0 = FSUB.class;
      Type.getType(class0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type 'g[lX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType1 = ObjectType.getInstance("[:f*L9$YYW*2i9C");
      OperandStack operandStack2 = new OperandStack(193, objectType1);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      FALOAD fALOAD0 = new FALOAD();
      InstructionList instructionList0 = new InstructionList();
      InstructionList instructionList1 = instructionList0.copy();
      instructionList1.insert(instructionList0);
      IFEQ iFEQ0 = new IFEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte) (-117));
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      LocalVariables localVariables1 = new LocalVariables(97);
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,'=TH:[S<=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.equals(objectType0);
      ISHR iSHR0 = new ISHR();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB((ISUB) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: LIg[ld,'=TH:[S<=m;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      I2C i2C0 = new I2C();
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      I2C i2C0 = new I2C();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(97);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      operandStack0.getClone();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = Boolean.TRUE;
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      InstructionList instructionList0 = new InstructionList(bASTORE0);
      InstructionList instructionList1 = new InstructionList();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstructionList instructionList2 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitReturnInstruction(dRETURN0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      localVariables0.set(41, objectType0);
      operandStack0.pop(0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(97);
      L2F l2F0 = new L2F();
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.toString();
      ObjectType.getInstance("i79t>chMC :*f");
      FCMPG fCMPG0 = new FCMPG();
      FCMPG fCMPG1 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack(97);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType.getInstance("");
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD((FADD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      LUSHR lUSHR0 = new LUSHR();
      LRETURN lRETURN0 = new LRETURN();
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      FALOAD fALOAD0 = new FALOAD();
      SWAP sWAP0 = new SWAP();
      SWAP sWAP1 = new SWAP();
      DREM dREM0 = new DREM();
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      operandStack0.getClone();
      Frame.getThis();
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(247);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("O=c!'o=vYyVn.to@Q\"");
      OperandStack operandStack0 = new OperandStack(247, objectType0);
      Boolean.valueOf("O=c!'o=vYyVn.to@Q\"");
      LocalVariables localVariables1 = new LocalVariables(247);
      localVariables0.merge(localVariables1);
      String string0 = localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.clone();
      Frame frame1 = frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame1);
      ObjectType.getInstance(string0);
      OperandStack operandStack1 = new OperandStack(91, uninitializedObjectType0.THROWABLE);
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type 'O=c!'o=vYyVn.to@Q\"'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(80);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(80, objectType0);
      OperandStack operandStack1 = new OperandStack(80);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType1 = ObjectType.getInstance("[:f*L9$YYW*2i9C");
      OperandStack operandStack2 = new OperandStack(193, objectType1);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      FALOAD fALOAD0 = new FALOAD();
      InstructionList instructionList0 = new InstructionList();
      SWAP sWAP0 = (SWAP)InstructionConstants.SWAP;
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) sWAP0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      ObjectType objectType1 = new ObjectType("Ig[ldX',TH:]Sn=m");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM((IREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(263);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(263, objectType0);
      OperandStack operandStack1 = new OperandStack(263, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      DADD dADD0 = new DADD();
      localVariables0.toString();
      ObjectType.getInstance("");
      OperandStack operandStack2 = new OperandStack(193, objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      int int0 = 3065;
      LocalVariables localVariables1 = new LocalVariables(3065);
      ISUB iSUB0 = new ISUB();
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("Vi/8O7B[,&[x");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LNEG lNEG0 = new LNEG();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      FALOAD fALOAD0 = new FALOAD();
      FNEG fNEG0 = new FNEG();
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'Vi.8O7B[,&[x' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(263);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(263);
      int int0 = 197;
      OperandStack operandStack1 = new OperandStack(197, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      F2L f2L0 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      frame0.toString();
      GETFIELD gETFIELD0 = new GETFIELD(166);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      frame0.equals(mONITOREXIT0);
      operandStack0.toString();
      Frame frame1 = new Frame(2194, 5362);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack((-3280));
      Frame frame2 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame2);
      D2L d2L0 = new D2L();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      LocalVariables localVariables1 = new LocalVariables(97);
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL((LMUL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(245);
      String string0 = localVariables0.toString();
      ObjectType objectType0 = new ObjectType(string0);
      OperandStack operandStack0 = new OperandStack(245, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType objectType1 = new ObjectType("Ig[ldX',TH:]Sn=m");
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      FNEG fNEG0 = new FNEG();
      L2D l2D0 = new L2D();
      ARETURN aRETURN0 = new ARETURN();
      ARETURN aRETURN1 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      ILOAD iLOAD0 = new ILOAD(245);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ILOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType.getInstance("");
      OperandStack operandStack2 = new OperandStack(56, objectType0);
      operandStack2.getClone();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      OperandStack operandStack1 = new OperandStack(94);
      Frame frame1 = frame0.getClone();
      operandStack0.getClone();
      OperandStack operandStack2 = new OperandStack(94, objectType0);
      Frame frame2 = new Frame(localVariables0, operandStack2);
      instConstraintVisitor0.setFrame(frame1);
      D2L d2L0 = new D2L();
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145);
      localVariables0.toString();
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals("Ig[ld,',TH:[Sn=m");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2D l2D0 = new L2D();
      l2D0.copy();
      l2D0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(63);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(63, objectType0);
      OperandStack operandStack1 = new OperandStack(63);
      OperandStack operandStack2 = new OperandStack(63);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      IADD iADD0 = new IADD();
      IADD iADD1 = new IADD();
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(241, 241);
      ObjectType objectType0 = ObjectType.getInstance("NewObject");
      LocalVariables localVariables0 = new LocalVariables(241);
      LocalVariables localVariables1 = new LocalVariables(241);
      OperandStack operandStack0 = new OperandStack(241, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IINC iINC0 = new IINC(241, 241);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      I2D i2D0 = new I2D();
      i2D0.produceStack(constantPoolGen0);
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("Kui4T&AE0P--%/N~NL.");
      OperandStack operandStack0 = new OperandStack(79, objectType0);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.getClone();
      Type.getMethodSignature(uninitializedObjectType0, objectType0.NO_ARGS);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      MockFile mockFile0 = new MockFile("Kui4T&AE0P--%/N~NL.", "Kui4T&AE0P--%/N~NL.");
      FRETURN fRETURN0 = new FRETURN();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 145;
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("986^W1>lJ");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Pattern.quote("0: <unknown object>\n1: <unknown object>\n2: <unknown object>\n");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Class<IF_ICMPLE> class0 = IF_ICMPLE.class;
      Type.getType(class0);
      Frame.setThis(uninitializedObjectType0);
      LNEG lNEG0 = new LNEG();
      FRETURN fRETURN0 = new FRETURN();
      IXOR iXOR0 = new IXOR();
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type '986^W1>lJ'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      operandStack0.clone();
      Frame frame1 = new Frame(145, 145);
      localVariables0.getClone();
      localVariables0.toString();
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Frame frame0 = new Frame(1841, 1841);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LALOAD lALOAD0 = new LALOAD();
      DLOAD dLOAD0 = new DLOAD(1737);
      int int0 = 1007;
      IINC iINC0 = new IINC(1737, 1007);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',H:]bSn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType objectType1 = ObjectType.getInstance("Ig[ldX',H:]bSn=m");
      OperandStack operandStack2 = new OperandStack(193, objectType0);
      OperandStack operandStack3 = new OperandStack(193, objectType1);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      L2D l2D0 = new L2D();
      CHECKCAST cHECKCAST0 = new CHECKCAST(193);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(237, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      operandStack1.getClone();
      LocalVariables localVariables1 = new LocalVariables(237);
      Frame frame0 = new Frame(localVariables1, operandStack1);
      Frame frame1 = frame0.getClone();
      frame1.toString();
      instConstraintVisitor0.setFrame(frame1);
      IDIV iDIV0 = new IDIV();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      iDIV0.produceStack(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("986^W1>lJ");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FRETURN fRETURN0 = new FRETURN();
      fRETURN0.consumeStack(constantPoolGen0);
      fRETURN0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type '986^W1>lJ'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      I2D i2D0 = new I2D();
      i2D0.produceStack(constantPoolGen0);
      IRETURN iRETURN0 = new IRETURN();
      IRETURN iRETURN1 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      F2D f2D0 = new F2D();
      F2D f2D1 = new F2D();
      F2D f2D2 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LNEG lNEG0 = new LNEG();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1326);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(263);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(4274, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      LUSHR lUSHR0 = new LUSHR();
      operandStack0.equals(lCMP0);
      localVariables0.clone();
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables1 = new LocalVariables(263);
      LMUL lMUL0 = new LMUL();
      IFNONNULL iFNONNULL0 = new IFNONNULL((InstructionHandle) null);
      instConstraintVisitor0.visitIFNONNULL(iFNONNULL0);
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("_.");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      ISHR iSHR0 = new ISHR();
      frame1.equals(iSHR0);
      instConstraintVisitor0.setFrame(frame1);
      LCMP lCMP0 = new LCMP();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(145, 145);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type '_.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      String string0 = "C:AtW?sSvS.@";
      ObjectType objectType0 = ObjectType.getInstance("C:AtW?sSvS.@");
      localVariables0.clone();
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FRETURN fRETURN0 = new FRETURN();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fRETURN0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(263);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("olg.apache.:ommons.io.filefilter.PrefixFileFilter");
      OperandStack operandStack0 = new OperandStack(5337);
      OperandStack operandStack1 = new OperandStack(4274, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      LCMP lCMP0 = new LCMP();
      DASTORE dASTORE0 = new DASTORE();
      LUSHR lUSHR0 = new LUSHR();
      LocalVariables localVariables1 = new LocalVariables(0);
      localVariables1.getClone();
      InstructionList instructionList0 = new InstructionList();
      LSUB lSUB0 = new LSUB();
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'olg.apache.:ommons.io.filefilter.PrefixFileFilter'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(94);
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      instConstraintVisitor0.setFrame(frame0);
      Type.getReturnType("Stack next-to-top must be of type double[] but is '");
      frame0.getClone();
      DDIV dDIV0 = new DDIV();
      DDIV dDIV1 = new DDIV();
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<mrS5%{qA%&,+{o");
      int int0 = 247;
      LocalVariables localVariables0 = new LocalVariables(247);
      ObjectType objectType0 = ObjectType.getInstance("O=c!'o=vYyVn.to@Q\"");
      OperandStack operandStack0 = new OperandStack(247, objectType0);
      Boolean.valueOf("O=c!'o=vYyVn.to@Q\"");
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      operandStack0.pop();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables1 = new LocalVariables(247);
      localVariables0.clone();
      DASTORE dASTORE0 = new DASTORE();
      IADD iADD0 = new IADD();
      IADD iADD1 = new IADD();
      IAND iAND0 = new IAND();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      ARRAYLENGTH aRRAYLENGTH1 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type O=c!'o=vYyVn.to@Q\".
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      localVariables0.toString();
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Type.getReturnType("Stack next-to-top must be of type double[] but is '");
      frame0.getClone();
      DDIV dDIV0 = new DDIV();
      DDIV dDIV1 = new DDIV();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(80);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(80, objectType0);
      OperandStack operandStack1 = new OperandStack(80);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance("[:4nf$L9$YYW*2iI");
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Ig[ldX',H:]bSn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      ObjectType objectType1 = ObjectType.getInstance("Ig[ldX',H:]bSn=m");
      OperandStack operandStack2 = new OperandStack(193, objectType0);
      OperandStack operandStack3 = new OperandStack(193, objectType1);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      L2D l2D0 = new L2D();
      CHECKCAST cHECKCAST0 = new CHECKCAST(193);
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',H:]bSn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(94);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(94, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Type.getReturnType("Stack next-to-top must be of type double[] but is '");
      OperandStack operandStack1 = operandStack0.getClone();
      frame0.getClone();
      operandStack1.toString();
      DRETURN dRETURN0 = new DRETURN();
      dRETURN0.consumeStack((ConstantPoolGen) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = new LocalVariables(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("org.apache.commons.io.filefilter.FileFileFilter");
      OperandStack operandStack0 = new OperandStack(1737, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.clone();
      Frame frame1 = new Frame(97, 2589);
      localVariables0.toString();
      Frame frame2 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame2);
      BASTORE bASTORE0 = new BASTORE();
      I2B i2B0 = new I2B();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2B0.consumeStack(constantPoolGen0);
      I2B i2B1 = new I2B();
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type 'org.apache.commons.io.filefilter.FileFileFilter'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(46);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(3949, objectType0);
      OperandStack operandStack1 = new OperandStack(1321);
      LocalVariables localVariables1 = new LocalVariables(8);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance(" contains target ");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2I l2I0 = new L2I();
      l2I0.produceStack(constantPoolGen0);
      int int0 = Constants.MAX_SHORT;
      SIPUSH sIPUSH0 = new SIPUSH((short) (-1043));
      L2I l2I1 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("986^W1>lJ");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Pattern.quote("0: <unknown object>\n1: <unknown object>\n2: <unknown object>\n");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LNEG lNEG0 = new LNEG();
      FRETURN fRETURN0 = new FRETURN();
      fRETURN0.getType();
      frame1.clone();
      fRETURN0.consumeStack(constantPoolGen0);
      localVariables0.toString();
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type '986^W1>lJ'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("6");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      L2F l2F0 = new L2F();
      InstructionList instructionList1 = new InstructionList(l2F0);
      InstructionHandle instructionHandle0 = instructionList1.insert(instructionList0);
      IFLE iFLE0 = new IFLE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE(iFLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLE constraint violated: The value at the stack top is not of type 'int', but of type '6'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      operandStack0.getClone();
      Frame.getThis();
      Frame frame1 = frame0.getClone();
      frame1.toString();
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      localVariables1.getClone();
      LocalVariables localVariables2 = new LocalVariables(145);
      localVariables1.getClone();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 97;
      LocalVariables localVariables0 = new LocalVariables(97);
      ObjectType objectType0 = new ObjectType("Ig[ldX',TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type 'Ig[ldX',TH:]Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = new ObjectType("\b");
      localVariables0.getClone();
      localVariables0.toString();
      ObjectType objectType1 = new ObjectType("CE)Bndi~");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType objectType2 = new ObjectType("The 'objref' item '");
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      FNEG fNEG0 = new FNEG();
      L2D l2D0 = new L2D();
      ARETURN aRETURN0 = new ARETURN();
      ARETURN aRETURN1 = new ARETURN();
      ILOAD iLOAD0 = new ILOAD(3);
      instConstraintVisitor0.visitLocalVariableInstruction(iLOAD0);
      assertEquals(1, iLOAD0.getLength());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("INVOKEDYNAMIC instruction is not supported at this time");
      Boolean boolean0 = new Boolean("INVOKEDYNAMIC instruction is not supported at this time");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      LocalVariables localVariables1 = new LocalVariables(97);
      localVariables0.merge(localVariables0);
      Frame.setThis((UninitializedObjectType) null);
      operandStack0.initializeObject((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.merge(localVariables1);
      Frame frame1 = new Frame(97, 97);
      frame0.getClone();
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type 'INVOKEDYNAMIC instruction is not supported at this time'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 245;
      LocalVariables localVariables0 = new LocalVariables(245);
      String string0 = localVariables0.toString();
      ObjectType objectType0 = new ObjectType(string0);
      OperandStack operandStack0 = new OperandStack(245, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      Frame.setThis((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame0);
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType objectType1 = new ObjectType("Ig[ldX',TH:]Sn=m");
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      FNEG fNEG0 = new FNEG();
      L2D l2D0 = new L2D();
      BASTORE bASTORE0 = new BASTORE();
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(70, (short)118);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '118' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(247);
      ObjectType objectType0 = ObjectType.getInstance("The 'arrayref' does not refer to an array but is of type ");
      OperandStack operandStack0 = new OperandStack(186, objectType0);
      Boolean.valueOf("O=c!'o=vYyVn.to@Q\"");
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      Frame frame2 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame2);
      operandStack0.pop();
      localVariables0.toString();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      localVariables0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O=c!'o=vYyVn.to@Q\"");
      DASTORE dASTORE0 = new DASTORE();
      IADD iADD0 = new IADD();
      IADD iADD1 = new IADD();
      IAND iAND0 = new IAND();
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT((IFGT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX',TH:]Sn=m");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2118, 11);
      instConstraintVisitor1.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      localVariables0.toString();
      operandStack0.getClone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DREM dREM0 = new DREM();
      dREM0.toString(false);
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(204);
      LSTORE lSTORE0 = new LSTORE(204);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      InstructionList instructionList0 = new InstructionList(bASTORE0);
      instructionList0.iterator();
      DADD dADD0 = new DADD();
      ObjectType.getInstance("c~D4 5AzEMJ;Qj");
      DNEG dNEG0 = new DNEG();
      DNEG dNEG1 = new DNEG();
      dNEG0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZrW");
      ObjectType objectType0 = ObjectType.getInstance("_.");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(instConstraintVisitor0);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      FADD fADD0 = new FADD();
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) fADD0);
      IFLT iFLT0 = new IFLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT(iFLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLT constraint violated: The value at the stack top is not of type 'int', but of type '_.'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(187);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(187, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables2.getClone();
      localVariables1.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Character.getName(187);
      operandStack0.getClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<mrS5%{qA%&,+{o");
      LocalVariables localVariables0 = new LocalVariables(247);
      ObjectType objectType0 = ObjectType.getInstance("O=c!'o=vYyVn.to@Q\"");
      OperandStack operandStack0 = new OperandStack(247, objectType0);
      Boolean.valueOf("O=c!'o=vYyVn.to@Q\"");
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      localVariables0.clone();
      localVariables0.merge(localVariables0);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ(iF_ACMPEQ0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.toString();
      ObjectType.getInstance("i79t>chMC :*f");
      LREM lREM0 = new LREM();
      D2I d2I0 = new D2I();
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 74;
      LocalVariables localVariables0 = new LocalVariables(74);
      LocalVariables localVariables1 = new LocalVariables(74);
      ObjectType objectType0 = ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(74, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      LLOAD lLOAD0 = new LLOAD(74);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame1 = frame0.getClone();
      frame1.clone();
      frame1.equals(operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      POP pOP0 = new POP();
      InstructionList instructionList0 = new InstructionList(lLOAD0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList0);
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      pUSH0.getInstructionList();
      instructionList0.insert((CompoundInstruction) pUSH0);
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE(iF_ICMPLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L$Z0Lv}<GRsUjY G/l;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(566);
      ObjectType objectType0 = new ObjectType("wD:B");
      OperandStack operandStack0 = new OperandStack(247, objectType0);
      Boolean.valueOf("wD:B");
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      operandStack0.clone();
      Frame.setThis((UninitializedObjectType) null);
      localVariables0.getClone();
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      RET rET0 = new RET(5);
      // Undeclared exception!
      try { 
        rET0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 5.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      OperandStack operandStack2 = new OperandStack(97, objectType0);
      Frame frame1 = new Frame(97, 97);
      FALOAD fALOAD0 = new FALOAD();
      SWAP sWAP0 = new SWAP();
      SWAP sWAP1 = new SWAP();
      DREM dREM0 = new DREM();
      dREM0.toString(true);
      DREM dREM1 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE((IFGE) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L$Z0Lv}<GRsUjY G/l;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(80);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ldX$,TH:]Sn=m");
      OperandStack operandStack0 = new OperandStack(80, objectType0);
      OperandStack operandStack1 = new OperandStack(80);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IASTORE iASTORE0 = new IASTORE();
      DADD dADD0 = new DADD();
      ObjectType objectType1 = ObjectType.getInstance("Cv");
      OperandStack operandStack2 = new OperandStack(80, objectType1);
      OperandStack operandStack3 = operandStack1.getClone();
      operandStack3.getClone();
      ATHROW aTHROW0 = new ATHROW();
      aTHROW0.consumeStack(constantPoolGen0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      aTHROW0.toString();
      ASTORE aSTORE0 = new ASTORE(1620);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class Ig[ldX$,TH:]Sn=m: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: Ig[ldX$,TH:]Sn=m.class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      LLOAD lLOAD0 = new LLOAD(97);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame1 = frame0.getClone();
      frame1.equals(operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      POP pOP0 = new POP();
      InstructionList instructionList0 = new InstructionList(lLOAD0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      FNEG fNEG0 = new FNEG();
      byte[] byteArray0 = new byte[12];
      // Undeclared exception!
      try { 
        instructionHandle0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LLOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(117);
      String string0 = "Ig[ld,\\',TH:[Sn=m";
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(117, objectType0);
      ReturnaddressType returnaddressType0 = ReturnaddressType.NO_TARGET;
      objectType0.isCastableTo(returnaddressType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      frame0.toString();
      ObjectType objectType1 = ObjectType.getInstance("i79t>chJM/C :*f");
      OperandStack operandStack1 = new OperandStack(1737, objectType1);
      LAND lAND0 = (LAND)InstructionConstants.LAND;
      InstructionList instructionList0 = new InstructionList(lAND0);
      instructionList0.iterator();
      instructionList0.toString();
      short short0 = Constants.IINC;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPNE constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = new LocalVariables(97);
      LocalVariables localVariables2 = new LocalVariables(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("org.apache.commons.io.filefilter.FileFileFilter");
      OperandStack operandStack0 = new OperandStack(1737, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ReferenceType referenceType0 = Type.NULL;
      objectType0.isAssignmentCompatibleWith(referenceType0);
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(161);
      ObjectType objectType0 = ObjectType.getInstance("ldiv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ldiv");
      OperandStack operandStack0 = new OperandStack(161, objectType0);
      String string0 = Constants.ILLEGAL_TYPE;
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      operandStack0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables1.toString();
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables2.getClone();
      localVariables2.getClone();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(161);
      L2F l2F0 = new L2F();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      dUP_X1_0.toString();
      instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type 'ldiv'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = new LocalVariables(97);
      ObjectType objectType0 = ObjectType.getInstance("$Z0Lv}<GRsUjY G/l");
      localVariables0.merge(localVariables1);
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      OperandStack operandStack1 = new OperandStack(97);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitIF_ICMPGT(iF_ICMPGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L$Z0Lv}<GRsUjY G/l;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = new LocalVariables(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("org.apache.commons.io.filefilter.FileFileFilter");
      OperandStack operandStack0 = new OperandStack(1737, objectType0);
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.clone();
      Frame frame1 = new Frame(97, 2589);
      localVariables0.toString();
      Frame frame2 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame2);
      BASTORE bASTORE0 = new BASTORE();
      I2B i2B0 = new I2B();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2B0.consumeStack(constantPoolGen0);
      I2B i2B1 = new I2B();
      I2S i2S0 = new I2S();
      DUP2 dUP2_0 = new DUP2();
      instConstraintVisitor0.visitDUP2(dUP2_0);
      assertEquals((short)92, dUP2_0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.toString();
      ObjectType objectType1 = ObjectType.getInstance("i79t>chJM/C :*f");
      OperandStack operandStack1 = new OperandStack(1737, objectType1);
      operandStack0.push(objectType1);
      Frame frame1 = new Frame(localVariables0, (OperandStack) null);
      operandStack0.clone();
      DADD dADD0 = new DADD();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType.getInstance("' because it must occupy exactly one slot, not '");
      ASTORE aSTORE0 = new ASTORE(1737);
      aSTORE0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addInterfaceMethodref("class", "i79t>chJM/C :*f", "i79t>chJM/C :*f");
      aSTORE0.produceStack(constantPoolGen0);
      IRETURN iRETURN0 = new IRETURN();
      SWAP sWAP0 = new SWAP();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      SWAP sWAP1 = new SWAP();
      SWAP sWAP2 = new SWAP();
      instConstraintVisitor0.visitSWAP(sWAP2);
      assertTrue(sWAP2.equals((Object)sWAP1));
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(145);
      ObjectType objectType0 = ObjectType.getInstance("Ig[ld,',TH:[Sn=m");
      OperandStack operandStack0 = new OperandStack(145, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      frame0.toString();
      ObjectType objectType1 = ObjectType.getInstance("i79t>chJM/C :*f");
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.push(objectType1);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      operandStack0.clone();
      Frame frame2 = new Frame(55, 216);
      localVariables0.toString();
      frame0.getClone();
      Frame frame3 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame3);
      BASTORE bASTORE0 = new BASTORE();
      I2B i2B0 = new I2B();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2B0.consumeStack(constantPoolGen0);
      I2B i2B1 = new I2B();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      FLOAD fLOAD0 = new FLOAD(129);
      instConstraintVisitor1.visitFLOAD(fLOAD0);
      IFNE iFNE0 = new IFNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE(iFNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFNE constraint violated: The value at the stack top is not of type 'int', but of type 'Ig[ld,',TH:[Sn=m'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(97);
      LocalVariables localVariables1 = localVariables0.getClone();
      LocalVariables localVariables2 = new LocalVariables(1);
      ObjectType objectType0 = ObjectType.getInstance("agPCd9jr2DKtt{5=F");
      OperandStack operandStack0 = new OperandStack(1737, objectType0);
      operandStack0.clone();
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.clone();
      Frame frame1 = new Frame(97, 2589);
      frame0.getClone();
      localVariables0.toString();
      instConstraintVisitor0.setFrame(frame0);
      BASTORE bASTORE0 = new BASTORE();
      I2B i2B0 = new I2B();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2B0.consumeStack(constantPoolGen0);
      I2B i2B1 = new I2B();
      I2S i2S0 = new I2S();
      DUP2 dUP2_0 = new DUP2();
      dUP2_0.toString();
      IF_ACMPNE iF_ACMPNE0 = new IF_ACMPNE((InstructionHandle) null);
      instConstraintVisitor0.visitIF_ACMPNE(iF_ACMPNE0);
      assertEquals("if_acmpne", iF_ACMPNE0.getName());
  }
}
