/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:19:11 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassPath classPath0 = new ClassPath(",&n4bsp;");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      javaClass1.copy();
      ClassPathRepository classPathRepository1 = new ClassPathRepository(classPath0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "</A>");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-zip";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = Class2HTML.toHTML(",&nbsp;");
      assertEquals(",&nbsp;", string0);
      
      String string1 = Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      assertEquals("&lt;/TITLE&gt;&lt;/HEAD&gt;\\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"", string1);
      
      String string2 = Class2HTML.toHTML(",&nbsp;");
      assertEquals(",&nbsp;", string2);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = ">kE^Cz=]6.$";
      stringArray0[1] = "-zip";
      stringArray0[2] = "</FONT>";
      stringArray0[3] = "s5#2!~85G1g*8Wc~4C";
      stringArray0[4] = ",&nsp;";
      stringArray0[5] = "Rz==%UU|e=nK";
      stringArray0[6] = "array";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // </FONT> (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class2HTML.toHTML(",&n4bsp;");
      ClassPath classPath0 = new ClassPath(",&n4bsp;");
      ClassPath classPath1 = new ClassPath("\tdefault = ");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader1);
      classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository1 = new ClassPathRepository(classPath0);
      java.lang.ClassLoader classLoader2 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader2.setDefaultAssertionStatus(true);
      Class2HTML.toHTML("%+Gm?JNh?k@)/57+6");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-z=p";
      stringArray0[1] = ",&n4bsp;";
      stringArray0[2] = ",&n4bsp;";
      stringArray0[3] = "]rVZ6zSb2y:+Rk;0P";
      stringArray0[4] = "%+Gm?JNh?k@)/57+6";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "2#/";
      FileSystemHandling.shouldAllThrowIOExceptions();
      java.lang.ClassLoader.getSystemClassLoader();
      String string1 = "K:W8`MBM(?1 wT0";
      Class2HTML.toHTML("2#/");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "K:W8`MBM(?1 wT0";
      stringArray0[2] = "].p";
      stringArray0[3] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2#/");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      ClassLoaderRepository classLoaderRepository1 = new ClassLoaderRepository(classLoader0);
      java.lang.ClassLoader.getSystemClassLoader();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "2#/";
      stringArray0[2] = "long";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/2#/java.io.BufferedInputStream_attributes.html");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassPath classPath0 = new ClassPath(",&nbsp;");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassPathRepository classPathRepository1 = new ClassPathRepository(classPath0);
      Class<BufferedInputStream> class0 = BufferedInputStream.class;
      classPathRepository1.loadClass(class0);
      classPathRepository1.loadClass(class0);
      JavaClass javaClass0 = classPathRepository1.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "2#/");
      Class2HTML.referenceType("//2T'PZAySz |j?!\"");
      Class2HTML.toHTML("arraylength");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "//2T'PZAySz |j?!\"";
      stringArray0[1] = "-d";
      stringArray0[2] = "2#/";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
