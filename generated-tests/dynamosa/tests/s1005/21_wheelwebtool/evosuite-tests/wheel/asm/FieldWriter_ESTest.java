/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 05:17:19 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-151), (-981), "", "RuntimeVisibleAnnotations", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-889275714), "4r|>%X^SgU}$]wo#s", "", "4r|>%X^SgU}$]wo#s", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-563));
      classWriter0.index = (-338);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-820), "DxN\"]!6@jHB", "DxN\"]!6@jHB", "osK'~tzI#`U(N?p7", "4r|>%X^SgU}$]wo#s");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-151), (-981), "", "RuntimeVisibleAnnotations", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-889275714), "4r|>%X^SgU}$]wo#s", "", "4r|>%X^SgU}$]wo#s", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-563));
      classWriter0.index = (-338);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-820), "DxN\"]!6@jHB", "DxN\"]!6@jHB", "osK'~tzI#`U(N?p7", "4r|>%X^SgU}$]wo#s");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Exceptions", "09\"7w//Wil,H'+", "", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-540));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-540));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4r|><r%X^SgU}$]wo#s", "4r|><r%X^SgU}$]wo#s", "4r|><r%X^SgU}$]wo#s", "4r|><r%X^SgU}$]wo#s");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-559));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "4r|>%X^SgU}$]wo#s", "Xx[j`", (String) null, "4r|>%X^SgU}$]wo#s");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-798));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-798);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "4r|><r%X^SgU}$]wo#s", "4r|><r%X^SgU}$]wo#s", "4r|><r%X^SgU}$]wo#s", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-545));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s", "4r|>r%X^SgU}$]wo#s");
      fieldWriter0.visitAnnotation("4r|>r%X^SgU}$]wo#s", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(52);
      classWriter0.visit(49, 52, "<'yE.,", "`", "8YOtR", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64994, "]", "<'yE.,", "8YOtR", "<'yE.,");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-587));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#");
      Attribute attribute0 = new Attribute("rk|><r%XgS]U}$]b#");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-587));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#", "rk|><r%XgS]U}$]b#");
      fieldWriter0.visitAnnotation("rk|><r%XgS]U}$]b#", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-6), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, "RuntimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(52);
      classWriter0.visit(49, 52, "<'yE.,", "`", "8YOtR", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64994, "]", "<'yE.,", "8YOtR", "<'yE.,");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "`-=P^II", "`-=P^II", "`-=P^II", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-600));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i", "R1Eh7B'_-n'f!/2 P~i");
      fieldWriter0.visitAnnotation("R1Eh7B'_-n'f!/2 P~i", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 997, "wheel.asm.FieldWriter", "RuntimeVisibleAnnotations", "org.apache.commons.io.filefilter.CanReadFileFilter", "org.apache.commons.io.filefilter.SizeFileFilter");
      fieldWriter0.visitAnnotation("t^Y\"UUsRp>G)&V9z", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-563));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "4r|>%X^SgU}$]wo#s", "4r|>%X^SgU}$]wo#s", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-608));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i", "R72h7BB_-n'f)/2 P~i");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-587));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "r|><r%{WXgS]U}$#", "r|><r%{WXgS]U}$#", "r|><r%{WXgS]U}$#", "r|><r%{WXgS]U}$#");
      Attribute attribute0 = new Attribute("r|><r%{WXgS]U}$#");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
