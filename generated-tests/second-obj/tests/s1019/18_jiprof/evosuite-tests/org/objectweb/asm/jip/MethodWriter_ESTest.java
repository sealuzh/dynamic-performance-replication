/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:02:00 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(186);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ON]";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 186, "4q1O", "4q1O", "ON]", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1566;
      intArray0[1] = 55;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 3, 534);
      assertEquals(586, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter((-29));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)91;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 16711680);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16711680
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 21;
      intArray0[1] = 74;
      intArray0[2] = (-2271);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 74, (-436));
      assertEquals((-605), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      methodWriter0.visitVarInsn(168, 8);
      boolean boolean0 = classWriter0.invalidFrames;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 168, "UPXzb&]al]jB0fgjw ", "UPXzb&]al]jB0fgjw ", "UPXzb&]al]jB0fgjw ", (String[]) null, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "8n\bEF", ":kTf", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn(":kTf", 1);
      methodWriter0.visitIincInsn(223, 3);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1025);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">j)qfuP/7|B#", ">j)qfuP/7|B#", ">j)qfuP/7|B#", stringArray0, false, false);
      methodWriter0.visitMaxs(65535, 65535);
      methodWriter0.visitMultiANewArrayInsn(">j)qfuP/7|B#", 65535);
      methodWriter0.visitTypeInsn((-131), "'r+");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2062);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777227, "2Y ?jTbo", "2Y ?jTbo", "hxW 9#x.hZVr6", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn((-468), 2062);
      Label label1 = label0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-468), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      ClassWriter classWriter0 = new ClassWriter(1025);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1025, "D\"!*<dM76(j~EBS4y", ">j)qfuP/7|B#", ">j)qfuP/7|B#", stringArray0, false, false);
      methodWriter0.visitFieldInsn(1154, "D\"!*<dM76(j~EBS4y", ">j)qfuP/7|B#", "D\"!*<dM76(j~EBS4y");
      methodWriter0.visitIntInsn(1025, 0);
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ">j)qfuP/7|B#");
      methodWriter0.visitMaxs(1025, 1025);
      Label label1 = frame0.owner;
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(0, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 187;
      intArray0[3] = 1011;
      intArray0[4] = 187;
      ClassWriter classWriter0 = new ClassWriter((-3009));
      MethodWriter.getNewOffset(intArray0, intArray0, (-1498), 191);
      ClassWriter classWriter1 = new ClassWriter(5);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "2Cx&T',L~t@{R ";
      stringArray0[1] = "<init>";
      stringArray0[2] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[3] = "2Cx&T',L~t@{R ";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter1, 0, "<init>", "2Cx&T',L~t@{R ", "RuntimeInvisibleParameterAnnotations", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(672);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Exceptions";
      stringArray0[2] = "Exceptions";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 41, "N}(gcS5Ta", "Exceptions", "Exceptions", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "O5!@XoM&U\u0003xeuHKY^");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1719, "{C=02)dhC )m", "N>+1P8af)S `M7", "N>+1P8af)S `M7", (String[]) null, true, true);
      methodWriter0.visitMultiANewArrayInsn(".jar", 5);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(793, "qY");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "yS[ ", "N>+1P8af)S `M7", "yS[ ", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      methodWriter0.visitMultiANewArrayInsn("", 1);
      methodWriter0.visitTypeInsn(15, "");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(15, "Q#AP63PI7s4DX9o3qi0", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter((-29));
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 185, "yS[ ", "N>+1P8af)S `M7", "yS[ ", (String[]) null, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, (-3431), (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      ClassWriter classWriter0 = new ClassWriter((-29));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Type", "N>+1P8af)S `M7", "org.objectweb.asm.jip.Type", (String[]) null, true, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, (-3431), (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-513));
      boolean boolean0 = ClassReader.SIGNATURES;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1157, "N>+P{a^)S `M7", "N>+P{a^)S `M7", "]l@My?,Nj+Ps6FH&P", (String[]) null, true, true);
      classWriter0.newClassItem("]l@My?,Nj+Ps6FH&P");
      Attribute attribute0 = new Attribute("QTqs5");
      methodWriter0.visitIincInsn(2, (-513));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(15);
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1719, "{C=02)dhC)m", "{C=02)dhC)m", "{C=02)dhC)m", (String[]) null, true, true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitAnnotation("{C=02)dhC)m", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn((-1230015709), (-1230015709));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "0S[3C ", "N>+1P8af)S `M7", "0S[3C ", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      methodWriter0.visitIntInsn(251, 132);
      methodWriter0.visitMultiANewArrayInsn("WDH@^K2?,w3", 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(15, "Q#AP63PI7s4DX9o3qi0", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1040);
      Item item0 = classWriter0.key2;
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1040, "193f9Ar%0.[JO", "193f9Ar%0.[JO", "193f9Ar%0.[JO", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2, 1040);
      methodWriter0.visitVarInsn(192, 192);
      methodWriter0.visitFrame(2, 2, stringArray0, 2, stringArray0);
      int int0 = methodWriter0.getSize();
      assertEquals(49, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(981);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 981, "D\"!*<dM76(]Cj~EBI4y", "].db`IMXvDz6I", "].db`IMXvDz6I", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("&zQcea|nXxyPvUw(", 981);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitTypeInsn(37, "D\"!*<dM76(]Cj~EBI4y");
      methodWriter0.visitLdcInsn("].db`IMXvDz6I");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(981, "].db`IMXvDz6I", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 74, "8n\bEF", ":kTf", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(223, 3);
      methodWriter0.visitMethodInsn(2, "EnclosingMethod", "EnclosingMethod", ":kTf");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 54, "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", "#-/A$lp$D}+`Sy", (String[]) null, true, true);
      methodWriter0.visitVarInsn(1, 22);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "C=02)dC )m", "C=02)dC )m", "C=02)dC )m", (String[]) null, true, false);
      methodWriter0.visitVarInsn(168, 8);
      classWriter0.invalidFrames = true;
      boolean boolean0 = classWriter0.invalidFrames;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      String string0 = "597EB8}%r[%";
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(168, "k-)sU7v-aIH", "597EB8}%r[%", "597EB8}%r[%");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(15);
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter1.visitAnnotation("vTn]_A*e]P|bI4!|-2", true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ">j)qfuP/7|B#";
      stringArray0[1] = "2:`veyR\"HhG*>`P#h";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 15, ">j)qfuP/7|B#", ">j)qfuP/7|B#", "vTn]_A*e]P|bI4!|-2", stringArray0, true, false);
      methodWriter0.visitMaxs((-1444199262), 3049);
      methodWriter0.visitMultiANewArrayInsn("2:`veyR\"HhG*>`P#h", 2);
      methodWriter0.visitVarInsn(1, (-1444199262));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1002);
      Item item0 = classWriter0.key;
      String[] stringArray0 = new String[19];
      classWriter0.threshold = 1002;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      int int0 = Member.PUBLIC;
      classWriter0.threshold = 1002;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1002, "193f9Ai%0.[JO", ">70-j!m.jU*>Uu0H", ">70-j!m.jU*>Uu0H", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1002, 1002);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1950));
      classWriter0.visit(23, (-1950), "k8J\"\"^11PQ", "{C=02)dhC )m", "'t2^;I/l]uJ", (String[]) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 23, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitFieldInsn(23, "{C=02)dhC )m", "N>+1P8af)S `M7", "N>+1P8af)S `M7");
      int int0 = Type.LONG;
      methodWriter1.exceptionCount = 23;
      methodWriter0.visitTypeInsn(1, "k8J\"\"^11PQ");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      methodWriter0.getSize();
      Label label0 = new Label();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-354));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "!pER{-4?X";
      stringArray0[1] = "!pER{-4?X";
      stringArray0[2] = "!pER{-4?X";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2968, "!pER{-4?X", "!pER{-4?X", "!pER{-4?X", stringArray0, false, false);
      methodWriter0.visitFrame((-354), 341, stringArray0, 470, stringArray0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-7));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-/A$lp$D}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      methodWriter0.visitVarInsn(2, 1);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      boolean boolean0 = classWriter0.invalidFrames;
      boolean boolean1 = ClassReader.SIGNATURES;
      methodWriter0.getSize();
      methodWriter0.visitFrame(111, 1, (Object[]) null, 769, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1025);
      Item item0 = classWriter0.key;
      classWriter0.threshold = 1025;
      int int0 = Member.PUBLIC;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1025, "193f9Ai%0.[JO", "193f9Ai%0.[JO", "193f9Ai%0.[JO", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1025, 1025);
      methodWriter0.visitFieldInsn(1141048100, "193f9Ai%0.[JO", "DQ+F2#`", "193f9Ai%0.[JO");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#-A$lp$D}+`Sy");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 953, "9", "N4+1P8af)S `M7", "7pg?|0's<?U[", (String[]) null, true, true);
      methodWriter0.visitIincInsn(15, 6);
      int int0 = methodWriter0.getSize();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.index = (-1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "UbPdBb&]al]kB00gjw ", (String[]) null, true, false);
      boolean boolean0 = ClassReader.SIGNATURES;
      methodWriter0.visitFieldInsn(179, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "F=w`V");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.index = 2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "UbPdBb&]al]kB00gjw ", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(179, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "F=w`V");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitTypeInsn(15, "{C=02)dhC )m");
      methodWriter1.visitFieldInsn(15, "org.objectweb.asm.jip.Edge", "{C=02)dhC )m", ">j)qfuP/7|B#");
      methodWriter0.visitIntInsn(6, 6);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      ClassWriter classWriter1 = new ClassWriter((-1114));
      Item item0 = classWriter1.key;
      int int0 = Member.PUBLIC;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.visitVarInsn(1, 1);
      methodWriter0.visitFrame((-4408), 179, (Object[]) null, 4, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-911));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-911), " j\"C)pV3LS}TFj^~", " j\"C)pV3LS}TFj^~", " j\"C)pV3LS}TFj^~", stringArray0, true, true);
      methodWriter0.visitFieldInsn(1, "LocalVariableTable", "2;(2", "qpW{zE");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7", "UPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      int int0 = Edge.EXCEPTION;
      methodWriter0.visitFieldInsn(171, "LocalVariableTable", "N>+1Pyaf)S `M7", "UPXzb&]al]jB0fgjw ");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("UPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"N>+1Pyaf)S `M7\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(39);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-151), "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter1.visitFrame(2, 41, (Object[]) null, 1, (Object[]) null);
      methodWriter1.visitTypeInsn(6, "{C=02)dhC )m");
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yC=02)dhC )m", "N>+1P8f) `7", "yC=02)dhC )m", (String[]) null, true, true);
      methodWriter0.exceptionCount = 15;
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitFieldInsn(15, "Label offset position has not been resolved yet", "_z/'y|v`op]9g^", "yC=02)dhC )m");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte(2191);
      ByteVector byteVector1 = byteVector0.putLong(0L);
      byteVector0.put12(2, 15);
      byteVector1.putInt(535);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(57);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-27), "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter1.visitFrame(2, 41, (Object[]) null, 1, (Object[]) null);
      methodWriter1.visitTypeInsn(6, "Ljava/lang/Synthetic;");
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter1.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7", "UbPXzb&]al]jB0fgjw ", (String[]) null, false, false);
      int int0 = Frame.LONG;
      boolean boolean0 = classWriter0.invalidFrames;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitAnnotation("LocalVariableTable", false);
      Label label0 = new Label();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(3077, "LocalVariableTable", (String) null, "N>+1Pyaf)S `M7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      ClassWriter classWriter0 = new ClassWriter(5);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "N>+1P8af)S `M7";
      stringArray0[1] = "D\"!*<dM76(]Cj~EBS4y";
      stringArray0[2] = "'r+";
      stringArray0[3] = "N>+1P8af)S `M7";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "D\"!*<dM76(]Cj~EBS4y", "D\"!*<dM76(]Cj~EBS4y", "'r+", stringArray0, false, false);
      methodWriter0.visitMaxs(0, 2);
      methodWriter0.exceptions = intArray0;
      methodWriter0.visitMultiANewArrayInsn("'r+", 3475);
      methodWriter0.visitMaxs(0, (-4632));
      methodWriter0.visitAnnotation("'r+", false);
      methodWriter0.visitIntInsn(3475, (-363));
      methodWriter0.visitTypeInsn(187, "N>+1P8af)S `M7");
      methodWriter0.visitIntInsn(3475, 1025);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "yS[ ", "N+1P8afS `M7", "yS[ ", (String[]) null, false, false);
      methodWriter0.visitMaxs(1, 15);
      int[] intArray0 = new int[4];
      intArray0[1] = 1;
      int int0 = Frame.TOP;
      methodWriter0.visitCode();
      methodWriter0.visitInsn(15);
      methodWriter0.visitMultiANewArrayInsn("N+1P8afS `M7", 1);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "{S.FM/|ON");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, ",]>mJz<#s\"}mX/:g[");
      methodWriter0.visitFrame((-952), 16777216, (Object[]) null, 32767, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "{C=f2)dhB1C )m", "{C=f2)dhB1C )m", "{C=f2)dhB1C )m", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      methodWriter0.visitVarInsn(5, 1);
      methodWriter1.visitMultiANewArrayInsn("JIte", 2);
      methodWriter0.classReaderOffset = (-3741);
      methodWriter1.visitMultiANewArrayInsn("iD", (-2354));
      methodWriter1.getSize();
      methodWriter1.visitMethodInsn((-2464), "iD", "JIte", "{C=f2)dhB1C )m");
      methodWriter0.visitCode();
      methodWriter0.visitInsn(15);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "yS[ ", "N>+1P8af)S `M7", "yS[ ", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitMultiANewArrayInsn("yS[ ", 1);
      int[] intArray0 = new int[4];
      intArray0[2] = 1719;
      methodWriter0.classReaderOffset = 634;
      methodWriter0.visitTypeInsn(8, "yS[ ");
      methodWriter1.visitIntInsn(1303, 3605);
      methodWriter1.visitFrame(5, 15, (Object[]) null, 15, (Object[]) null);
      methodWriter0.visitTypeInsn(15, "yS[ ");
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1942));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "c(#4&0=SHngq9U";
      stringArray0[1] = "c(#4&0=SHngq9U";
      stringArray0[2] = "c(#4&0=SHngq9U";
      stringArray0[3] = "c(#4&0=SHngq9U";
      stringArray0[4] = "c(#4&0=SHngq9U";
      stringArray0[5] = "(c\"=%sX1x/+'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "c(#4&0=SHngq9U", "c(#4&0=SHngq9U", "c(#4&0=SHngq9U", stringArray0, false, false);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ClassWriter classWriter0 = new ClassWriter(22);
      boolean boolean1 = ClassReader.SIGNATURES;
      byte[] byteArray0 = new byte[10];
      byteArray0[4] = (byte)3;
      byteArray0[8] = (byte)0;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "void", "N>+1P{^)S`M7", "void", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitIincInsn((byte)3, 22);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      label0.info = (Object) 22;
      methodWriter0.signature = "void";
      methodWriter0.visitLineNumber((byte)3, label0);
      classWriter0.toByteArray();
      label0.position = (int) (byte)3;
      Type type0 = Type.CHAR_TYPE;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "void");
      methodWriter1.visitIntInsn((byte)3, 1);
      methodWriter1.visitMultiANewArrayInsn("N>+1P{^)S`M7", 158);
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs((byte)0, 22);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(12);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1719, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, true);
      methodWriter0.visitIincInsn(2, 12);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitMultiANewArrayInsn("I:y$'o]&6@XC", (-184));
      methodWriter0.visitEnd();
      methodWriter0.visitInsn(198);
      int int0 = methodWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-316));
      boolean boolean0 = ClassReader.SIGNATURES;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "N+1P{a^)S `M", "N+1P{a^)S `M", "N+1P{a^)S `M", (String[]) null, true, true);
      Label label0 = new Label();
      Label label1 = new Label();
      label1.toString();
      methodWriter0.signature = "L12";
      label1.visitSubroutine(label0, 1, 1);
      Edge edge0 = label0.successors;
      boolean boolean1 = ClassReader.SIGNATURES;
      ByteVector byteVector0 = new ByteVector(812);
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-316), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1032);
      String[] stringArray0 = new String[1];
      int int0 = Member.PUBLIC;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1032, "M['<0W{8a=1a]/`Op`k", "M['<0W{8a=1a]/`Op`k", "M['<0W{8a=1a]/`Op`k", (String[]) null, false, false);
      methodWriter0.visitIntInsn(2, 1032);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7", "UbPXzb&]al]jB0fgjw ", (String[]) null, false, false);
      int int0 = Frame.LONG;
      boolean boolean0 = classWriter0.invalidFrames;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitAnnotation("LocalVariableTable", false);
      Label label0 = new Label();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Label label1 = new Label();
      methodWriter1.visitTypeInsn(3077, "g!UD.|6t5P& ]Pe ");
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      int int1 = methodWriter0.getSize();
      assertEquals(49, int1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ",", "?+1a[)S b!M67", ",", (String[]) null, true, false);
      methodWriter0.visitMaxs(186, 186);
      methodWriter0.visitMethodInsn(186, "?+1a[)S b!M67", ",", "N>+uPp)S `M7");
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0 == boolean1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "#-A$lp<$VR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$VR}`Sy", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitMaxs(196, 168);
      methodWriter0.visitIntInsn(196, 168);
      methodWriter0.visitMultiANewArrayInsn("N>+1P8af)S `M7", 1);
      methodWriter1.visitMultiANewArrayInsn("c\"U", (-2179));
      methodWriter1.getSize();
      methodWriter0.visitMethodInsn(168, "#-A$lp<$VR}`Sy", "#-A$lp<$VR}`Sy", "N>+1P8af)S `M7");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4001));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "X8?";
      stringArray0[1] = "I-A>8(ww)%H9hg";
      stringArray0[2] = "$agiMe0!fo=/ 2$";
      stringArray0[3] = "n'b";
      stringArray0[4] = "&_{*`Tm9J0KqkR!F";
      stringArray0[5] = "I-A>8(ww)%H9hg";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 57, "$agiMe0!fo=/ 2$", "n'b", "I-A>8(ww)%H9hg", stringArray0, false, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable(".~M", "}T/ZiU!;@nF]Tz", (String) null, (Label) null, (Label) null, 57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 12, "#-A$lp<$VR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$VR}`Sy", (String[]) null, true, false);
      methodWriter0.visitAnnotation("Nh$e,aT-?+MSWQ", true);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Attribute attribute0 = new Attribute("#-A$lp<$VR}`Sy");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitMaxs(2, 12);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      classWriter0.newNameTypeItem("char", "{C=02)dhC )m");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      int int0 = Frame.OBJECT;
      methodWriter0.visitJumpInsn(8, label0);
      methodWriter0.visitMaxs(8, 1);
      methodWriter0.visitInsn(167);
      Label label1 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "char");
      assertFalse(label0.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1025);
      Item item0 = classWriter0.key;
      boolean boolean0 = false;
      String[] stringArray0 = new String[3];
      classWriter0.threshold = 1025;
      int int0 = Member.PUBLIC;
      classWriter0.threshold = 0;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1025, ".class", ".class", ".class", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2, stringArray0, 0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      String string0 = "z6p3'!";
      methodWriter0.visitTypeInsn(1, "z6p3'!");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMaxs(1719, 5);
      methodWriter0.visitIntInsn(17, 1);
      methodWriter1.visitIincInsn(2, 2);
      int int0 = (-322);
      methodWriter1.visitMultiANewArrayInsn("z6p3'!", (-322));
      String string1 = "Deprecated";
      // Undeclared exception!
      try { 
        methodWriter1.visitMultiANewArrayInsn((String) null, 1719);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "N|+18f)S `M7";
      stringArray0[1] = "I&8z\"j-<[e";
      stringArray0[2] = "I&8z\"j-<[e";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2), "I&8z\"j-<[e", "I&8z\"j-<[e", "N|+18f)S `M7", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.next = methodWriter1;
      methodWriter0.visitInsn(255);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newFloat(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      methodWriter0.visitVarInsn(1, 8);
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      Label label1 = new Label();
      Object object0 = new Object();
      methodWriter0.visitLocalVariable("F{G<t{", "N>+1P8af)S `M7", "N>+1P8af)S `M7", label0, label0, 2);
      assertFalse(label0.equals((Object)label1));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "yS[ ", "N>+1P8af)S `M7", "yS[ ", (String[]) null, true, false);
      methodWriter0.visitMaxs(5, 15);
      int[] intArray0 = new int[4];
      intArray0[1] = 1;
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(1, "{S.FM/|ON", "{S.FM/|ON", "N>+1P8af)S `M7");
      methodWriter0.visitCode();
      methodWriter0.visitInsn(15);
      methodWriter0.visitMultiANewArrayInsn("N>+1P8af)S `M7", 1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3998), ",", "?+1a[)S b!M67", "?+1a[)S b!M67", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("?+1a[)S b!M67");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = (-1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "UbPdBb&]al]kB00gjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(178, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "F=w`V");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(5, 15);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      methodWriter0.visitVarInsn(5, 1719);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMultiANewArrayInsn("{C=02)dhC )m", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2, 0, 0, 0}, intArray0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-316));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 224, "N>+1Pyaf) `M7", "N>+1Pyaf) `M7", "N>+1Pyaf) `M7", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((byte)1, "N>+1Pyaf) `M7", "F9>4%`V", "{C=02)dhC )m");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label1.successor;
      assertNull(label2);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      assertEquals("L16", string0);
      
      Label label3 = new Label();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      
      methodWriter0.visitFrame(224, (-316), (Object[]) null, (-316), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label3));
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label3);
      assertNotSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(57);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-27), "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFrame(2, 41, (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.visitMethodInsn(188, "boolean", "boolean", "long");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(39);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-151);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-27), "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFieldInsn(39, "uj%]l$,%15Q[]cAKp!i", "uj%]l$,%15Q[]cAKp!i", "$I(,D}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn((-27), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitLocalVariable("uj%]l$,%15Q[]cAKp!i", "uj%]l$,%15Q[]cAKp!i", "RuntimeVisibleParameterAnnotations", label0, label0, (-151));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-/A$lp$D}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(56, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = ClassReader.SIGNATURES;
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(35, int0);
      
      methodWriter0.visitFrame(111, 1, (Object[]) null, 769, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-513));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1157, "N>+P{a^)S `M7", "N>+P{a^)S `M7", "]l@My?,Nj+Ps6FH&P", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Attribute attribute0 = new Attribute("QTqs5");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitVarInsn(156, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("#-Alp$D}+`y", 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("a", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 15, "LineNumberTable", "N>+1P8af)S `M7", "LineNumberTable", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, (-112));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(15, 1, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitIincInsn((-490), (-671));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1400), "{=02)dhC )m", "{=02)dhC )m", "Pj!.!<oq", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("{=02)dhC )m", 187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " c%_:s/*uJ=Mt_[#O5");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(196, 6, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-8);
      ClassWriter classWriter0 = new ClassWriter(1025);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1025, "D\"!*<dM76(]Cj~EBS4y", ">j)qfuP/7|B#", ">j)qfuP/7|B#", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(1025, "D\"!*<dM76(]Cj~EBS4y", ">j)qfuP/7|B#", "D\"!*<dM76(]Cj~EBS4y");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean0);
      
      methodWriter1.visitIntInsn((-2636), (-2636));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      classWriter0.version = 2016;
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "D\"!*<dM76(]Cj~EBS4y";
      objectArray0[1] = (Object) intArray0;
      objectArray0[2] = (Object) "org.objectweb.asm.jip.MethodWriter";
      objectArray0[3] = (Object) "org.objectweb.asm.jip.MethodWriter";
      objectArray0[4] = (Object) methodWriter1;
      methodWriter1.visitFrame((-8), 1678, stringArray0, (-8), objectArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) "float";
      label0.info = (Object) ">j)qfuP/7|B#";
      methodWriter0.visitJumpInsn((-1037), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(3);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UPXzb&]al]jB0fgjw ", "N>+1P8af)S `M7", "UPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.cr = null;
      int int0 = (-2329);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(186, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitFieldInsn(8, "N>+1P8af)S `M7", "boolean", "N>+1P8af)S `M7");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(4, 1, (Object[]) null, 168, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "/nx`fK$(", "N>+1P8af)S `M67", "/nx`fK$(", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.cr = null;
      methodWriter0.visitIincInsn(1, 43);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("N>+1P8af)S `M67", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(186, 186);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitJumpInsn(10, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter1.visitTryCatchBlock(label0, (Label) null, label0, "N>+1P8af)S `M67");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(10, 10);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter(1012);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1012, "D\"!*<dM76(]Cj~EBI4y", "].db`IMXvDz6I", "].db`IMXvDz6I", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitFrame(0, 0, stringArray0, 0, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 2832);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "#-A$lp<$DR}`Sy";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "#-A$lp<$DR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$DR}`Sy", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.cr = null;
      methodWriter0.visitIincInsn(4, 18);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 10;
      Label label1 = label0.next;
      assertNull(label1);
      
      Label label2 = label0.next;
      assertNull(label2);
      
      int[] intArray0 = new int[0];
      Label[] labelArray0 = new Label[11];
      labelArray0[0] = null;
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3, "N>+1P8af)S `M7", "org.objectweb.asm.jip.ClassReader", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitIntInsn(1, 192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("N>+1P8af)S `M7", 179);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.ClassReader", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(36, int0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMethodInsn(1101, (String) null, "StackMap", "{C=02)dhC )m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(47);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)1;
      byteArray0[8] = (byte)0;
      byteArray0[4] = (byte)1;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "#-A$lp$DR}FSI", "N>+1P{a^)S `M7", "#-A$lp$DR}FSI", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(47, 33);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.info = (Object) 47;
      methodWriter0.signature = "#-A$lp$DR}FSI";
      methodWriter0.visitLineNumber((-878), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertNotSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertNotSame(label2, label1);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(64, 267386880, label0, labelArray0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertSame(label0, label2);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-316));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "N+1P{a^)S `M", "N+1P{a^)S `M", "N+1P{a^)S `M", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitTableSwitchInsn(1096, (byte)5, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-/A$lp$D}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2158, "*I", "RuntimeInvisibleParameterAnnotations", "#-/A$lp$D}+`Sy");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitInsn(172);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitParameterAnnotation(2158, "#-/A$lp$D}+`Sy", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 6, "#-A$lp$D}+`Sy", "N>+1P4a7)S `M7", "#-A$lp$D}+`Sy", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = Frame.OBJECT;
      assertFalse(int1 == int0);
      assertEquals(24117248, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("N>+1P4a7)S `M7", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("T^sAx:Ti[Rr)Tr", false);
      assertNotNull(annotationVisitor1);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(168, 177);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 15, "{=02)dhC )m", "{=02)dhC )m", "{=02)dhC )m", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "{=02)dhC )m";
      stringArray0[1] = "{=02)dhC )m";
      stringArray0[3] = "<init>";
      methodWriter0.visitMultiANewArrayInsn("{=02)dhC )m", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<init>");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte)57;
      byteArray0[3] = (byte)57;
      byteArray0[4] = (byte)24;
      byteArray0[7] = (byte)24;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn((byte)24, 200, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      classWriter0.thisName = "7}N@hhQcXTF";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "?+1a[)S b!M67", "", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(202, 202);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitMethodInsn(202, "?+1a[)S b!M67", "yUv<I,0RI+0>l;-F_i", "?+1a[)S b!M67");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-3506));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      classWriter0.threshold = 0;
      methodWriter0.visitTypeInsn(2, "{C=02)dhC )m");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      classWriter0.version = 1;
      Attribute attribute0 = new Attribute("Exceptions");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(37, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(1, (-3506), label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitMaxs(0, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      methodWriter0.visitJumpInsn((-1), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitInsn(384);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitMultiANewArrayInsn((String) null, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UPXzb&]al]jB0fgjw ", "N>+1P8af)S `M7", "UPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(2, 2, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMaxs(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter1.visitVarInsn(2, (-2092));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(59, int0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, (-1913887194));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = (-1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "UbPdBb&]al]kB00gjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitInsn(177);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 1020, (Object[]) null, (-1360), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UPXzb&]al]jB0fgjw ", "N>+1P8af)S `M7", "UPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMaxs(443, (-285));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-114), "#-A$lp<$VR}`Sy");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("#-A$lp<$VR}`Sy", "N>+1P8af)S `M7", "N>+1P8af)S `M7");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.key3;
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertNotSame(item1, item0);
      
      methodWriter0.visitFieldInsn(1, "@)C;|.%0", "UPXzb&]al]jB0fgjw ", "u%u");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(168, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      methodWriter0.visitLocalVariable("hAsbLD3R~7", "#-A$lp<$VR}`Sy", "Z^/9ykITaU\"zm", label0, label0, (-329));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.put12(56, 27);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-3497));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderLength = (-3497);
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(16, int0);
      
      classWriter0.threshold = (-3497);
      methodWriter0.visitTypeInsn(187, "{C=02)dhC )m");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitInsn(187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIincInsn(262, (-3497));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitIntInsn((-1892050525), 187);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1141048066, (-3497));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1141048066
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 15;
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "#-A$lp<$VR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$VR}`Sy", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(15, 15);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("", 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFieldInsn(15, "X0$FP/OQLRqF,", "", "Do:Sh&_");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, ":lj4", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int[] intArray0 = new int[2];
      ClassWriter classWriter0 = new ClassWriter((-668));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-668), "Synthetic", "Synthetic", "Synthetic", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.addType("Synthetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      methodWriter0.exceptionCount = 2;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("RuntimeVisibleParameterAnnotations", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(93, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((byte) (-49), 54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitParameterAnnotation(5, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor1);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(intArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value [I@37f84898
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int[] intArray0 = new int[11];
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 54;
      label0.status = 310;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(22);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "0S[3C ", "N>+1P8af)S `M7", "0S[3C ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "N>+1P8af)S `M7");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(5, 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(5, 132);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("WDH@^K2?,w3", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(22, "N>+1P8af)S `M7", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(57);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-27), "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitMultiANewArrayInsn("?+BW", 57);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(188, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Type type0 = Type.CHAR_TYPE;
      assertNotNull(type0);
      assertEquals(9, Type.ARRAY);
      assertEquals(3, Type.BYTE);
      assertEquals(2, Type.CHAR);
      assertEquals(4, Type.SHORT);
      assertEquals(7, Type.LONG);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(10, Type.OBJECT);
      assertEquals(8, Type.DOUBLE);
      assertEquals(5, Type.INT);
      assertEquals(0, Type.VOID);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, type0.getSize());
      assertEquals(2, type0.getSort());
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn(10, 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(1012);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1012, "D\"!*<dM76(]Cj~EBI4y", "].db`IMXvDz6I", "].db`IMXvDz6I", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newLong(1012);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitFrame(0, 0, stringArray0, 0, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 2, stringArray0, 192, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int[] intArray0 = new int[3];
      ClassWriter classWriter0 = new ClassWriter(989);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 989, "D\"!*<dM76(]Cj~EBI4y", "D\"!*<dM76(]Cj~EBI4y", "D\"!*<dM76(]Cj~EBI4y", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      classWriter0.firstMethod = methodWriter0;
      classWriter0.visitSource("D\"!*<dM76(]Cj~EBI4y", "D\"!*<dM76(]Cj~EBI4y");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(0, 0, stringArray0, 0, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("#-A$l=p$DR}FSI", 179);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2, stringArray0, 192, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "#-A$lp<$DR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$DR}`Sy", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.cr = null;
      methodWriter0.classReaderOffset = 168;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 10;
      methodWriter1.visitJumpInsn(5, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      int[] intArray0 = new int[0];
      Label[] labelArray0 = new Label[1];
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      
      label2.info = (Object) methodWriter0;
      labelArray0[0] = label2;
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7", "UbPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertEquals(8388608, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.inputStackTop = 1;
      Item item0 = classWriter0.newClassItem("UbPXzb&]al]jB0fgjw ");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("ocalVariableTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[3];
      labelArray0[1] = label0;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("ocalVariableTable", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("ocalVariableTable");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      assertFalse(boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = (-1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "UbPdBb&]al]kB00gjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(179, "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", "N>+1Pyaf) `M7");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("UbPdBb&]al]kB00gjw ", "UbPdBb&]al]kB00gjw ", "N>+1Pyaf) `M7", label0, label0, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("N>+1Pyaf) `M7", "X{W|Ad/3D'w9Y~l0", "UbPdBb&]al]kB00gjw ", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)21;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-445));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -445
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "#-A$lp<$DR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$DR}`Sy", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-2328), 76);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(5, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "#-A$lp<$DR}`Sy");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(7, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(59, int0);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[6] = (byte) (-72);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-1), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(48);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      byte[] byteArray0 = new byte[20];
      byteArray0[1] = (byte)0;
      byteArray0[17] = (byte)1;
      byteArray0[4] = (byte)0;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "#-A$lp$DR}2`SI", "N>+1P{a^)S `M7", "#-A$lp$DR}2`SI", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) 2;
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      label0.info = (Object) "N>+1P{a^)S `M7";
      classWriter0.firstMethod.visitTypeInsn((byte)0, "N>+1P{a^)S `M7");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter0);
      
      classWriter0.firstMethod.visitVarInsn(1, 2945);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter0);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 48;
      intArray0[3] = 48;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertArrayEquals(new int[] {1, 2, 48, 48}, intArray0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-316));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      String string0 = label1.toString();
      assertNotNull(string0);
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label1, label0);
      assertEquals("L7", string0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      label1.visitSubroutine(label0, 1, 1);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      byte[] byteArray0 = new byte[1];
      label0.addToSubroutine(2, 1);
      assertFalse(label0.equals((Object)label1));
      assertNotSame(label0, label1);
      
      ByteVector byteVector0 = new ByteVector(171);
      assertNotNull(byteVector0);
      
      String string1 = label0.toString();
      assertNotNull(string1);
      assertFalse(label0.equals((Object)label1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(label0, label1);
      assertEquals("L6", string1);
      
      label0.successor = label1;
      ByteVector byteVector1 = byteVector0.putShort(171);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label2, label1);
      assertSame(label2, label0);
      
      Label label3 = label2.getFirst();
      assertNotNull(label3);
      assertFalse(label3.equals((Object)label1));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label2.equals((Object)label1));
      assertNotSame(label3, label1);
      assertSame(label3, label2);
      assertSame(label3, label0);
      assertSame(label0, label3);
      assertSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label2, label1);
      assertSame(label2, label0);
      assertSame(label2, label3);
      
      Attribute attribute0 = new Attribute((String) null);
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ";,e", "N+1P{a^)S `M", "(W}h#i", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1032);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      Item item1 = classWriter0.newMethodItem("LineNumberTable", "M['<0W{8a=1a]/`Opp`k", "M['<0W{8a=1a]/`Opp`k", true);
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(item1, item0);
      
      Item item2 = classWriter0.key3;
      assertNotNull(item2);
      assertFalse(item2.equals((Object)item1));
      assertFalse(item2.equals((Object)item0));
      assertNotSame(item2, item1);
      assertNotSame(item2, item0);
      
      classWriter0.visitInnerClass("LineNumberTable", "LineNumberTable", "Ljava/lang/Synthetic;", 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item[] itemArray0 = new Item[1];
      Item item3 = classWriter0.newFloat(1032);
      assertNotNull(item3);
      assertFalse(item3.equals((Object)item0));
      assertFalse(item3.equals((Object)item1));
      assertFalse(item3.equals((Object)item2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(item3, item0);
      assertNotSame(item3, item1);
      assertNotSame(item3, item2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1032, "M['<0W{8a=1a]/`Opp`k", "M['<0W{8a=1a]/`Opp`k", "M['<0W{8a=1a]/`Opp`k", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(64, "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      item1.next = item1;
      methodWriter0.visitIntInsn(2, 1032);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(1, (-23), itemArray0, 1032, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(8, "C=02)dC )m", "C=02)dC )m", "M<.YkS36C", (Object) null);
      assertNotNull(fieldVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "C=02)dC )m", "C=02)dC )m", "C=02)dC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C=02)dC )m");
      assertFalse(boolean0);
      
      methodWriter0.visitVarInsn(168, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.invalidFrames = true;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("M<.YkS36C", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-7), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(168, "StackMap");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(5, 201);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(55, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(39);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = (-151);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-27), "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter1.visitFrame(2, 41, (Object[]) null, 1, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn(6, "{C=02)dhC )m");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String string0 = ",";
      int int0 = (-1328);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1328), "double", "?+1a[)S b!M67", ",", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(28, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(15, (-88));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1141048066, "yS[ ", "N>+1P8af)S `M7", "yS[ ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1141048066, 15);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("5oP|,XS:|", 1141048066);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(44, int0);
      
      methodWriter0.visitMethodInsn(1, "N>+1P8af)S `M7", "N>+1P8af)S `M7", "N>+1P8af)S `M7");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-2190));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2190
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-/A$lp$D}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitVarInsn(56, 184);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstMethod.visitFrame((-7), 56, (Object[]) null, (-1239), (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(15);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 17, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "{C=02)dhC )m";
      stringArray0[1] = "{C=02)dhC )m";
      stringArray0[3] = "tini9>";
      methodWriter0.visitMultiANewArrayInsn("{C=02)dhC )m", 17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 2486;
      intArray0[2] = 512;
      intArray0[3] = 15;
      intArray0[4] = 17;
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.frame = frame0;
      methodWriter0.visitLocalVariable("java/lang/Object", "QhsA`f+%hG%X}jL'QR", "1N.XH>", label0, label0, 2486);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("j/;SW[1[.7EM\"", "j/;SW[1[.7EM\"", "tini9>", label0, label0, 2486);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn(1, "EnclosingMethod", "1N.XH>", ")/p]]z%Kz9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-/A$lp$D}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte) (-119);
      byteArray0[5] = (byte)0;
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertArrayEquals(new byte[] {(byte)83, (byte)83, (byte)83, (byte) (-8), (byte) (-119), (byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("InnerClasses", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(24, 56);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitFieldInsn(251658240, "InnerClasses", "#-/A$lp$D}+`Sy", "vG~Kj.l&^:");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((byte)83, 2118);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 172, "#-qA$lT$DR}2`SI", "N>+1P8af)SM7", "#-qA$lT$DR}2`SI", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newNameType("#-qA$lT$DR}2`SI", "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(4, int0);
      
      methodWriter0.visitIincInsn(4, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      label0.status = 10;
      methodWriter0.visitJumpInsn(172, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5");
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Synthe(ic", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitLineNumber(4, label1);
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label0, "org.objectweb.asm.jip.ClassWriter");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(4, 58);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "/nx`fK$(", "N>+1P8af)S `M67", "/nx`fK$(", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.cr = null;
      methodWriter0.visitIincInsn(1, 43);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("N>+1P8af)S `M67", "N>+1P8af)S `M67", "/nx`fK$(");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("N>+1P8af)S `M67", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(186, 186);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(49, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitJumpInsn(10, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      label0.status = 186;
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter1.visitTryCatchBlock(label0, (Label) null, label0, "N>+1P8af)S `M67");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(10, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2292, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      assertNotNull(fieldWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.lastField = fieldWriter0;
      byte[] byteArray0 = new byte[23];
      Item item0 = classWriter0.newDouble(0.0);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.addUninitializedType("org.objectweb.asm.jip.Label", 2292);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-87);
      byteArray0[7] = (byte) (-87);
      byteArray0[3] = (byte) (-87);
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "W~|)W!n`<pD/'&F,F(", "W~|)W!n`<pD/'&F,F(", "W~|)W!n`<pD/'&F,F(", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((byte) (-87), 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item1 = classWriter0.newMethodItem("org.objectweb.asm.jip.Label", "LocalVariableTypeTable", "W~|)W!n`<pD/'&F,F(", false);
      assertNotNull(item1);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(item1, item0);
      
      label0.status = (int) (byte) (-87);
      label0.outputStackMax = (int) (byte) (-87);
      methodWriter0.visitJumpInsn(21, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("LocalVariableTypeTable");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-668));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = classWriter0.addType("Synthetic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-668), "Synthetic", "Synthetic", "Synthetic", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.exceptionCount = 1;
      classWriter0.firstMethod.visitVarInsn(168, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("7R", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("Synthetic");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter0.visitMaxs(1659, 92);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(167);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(167);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putLong(0L);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      ByteVector byteVector3 = byteVector1.putLong(1659);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      
      ByteVector byteVector4 = byteVector0.putByte(2);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "N>+1P8af)S `M7", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = Frame.OBJECT;
      assertEquals(24117248, int0);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMaxs(8, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3501));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "{C=02)dhC )m", "N>+1P8af)S `i7", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-3501), (-3501));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "{C=02)dhC )m", ";lw<Wei'%BK", "JO");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(37, int0);
      
      Attribute attribute0 = new Attribute("N>+1P8af)S `i7");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      classWriter0.threshold = 56;
      methodWriter0.visitTypeInsn(187, "Signature");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitIincInsn(56, (-3501));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      boolean boolean1 = ClassReader.WRITER;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      methodWriter2.visitIntInsn(0, (-3070));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitFrame((-3501), (-1118), (Object[]) null, 127, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitMultiANewArrayInsn("Signature", (-1867));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-494));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -494
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1950));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("{C=02)dhC )m");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      classWriter0.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      classWriter0.visit((-1950), (-1950), "k8J\"\"^11PQ", "{C=02)dhC )m", "'t2^;I/l]uJ", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2297), "'t2^;I/l]uJ", "N>+1P8af)S `M7", "N>+1P8af)S `M7", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(22, int1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("N>+1P8af)S `M7", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("SmD#Pr1XG;l", "D\"!*<dM76(]Cj~EBI4y", "n1", label0, label0, 512);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(20);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)5;
      byteArray0[6] = (byte)5;
      byteArray0[4] = (byte)5;
      boolean boolean1 = classWriter0.invalidFrames;
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UPXzb&]al]jB0fgjw ", "N4+1P8af)S `B7", "UPXzb&]al]jB0fgjw ", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.cr = null;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Integer integer0 = new Integer((byte)5);
      assertNotNull(integer0);
      assertEquals(5, (int)integer0);
      
      methodWriter0.visitFrame(2, (byte)5, (Object[]) null, 8, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitVarInsn(54, (byte)5);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = classWriter0.newNameType("", "UPXzb&]al]jB0fgjw ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(4, int0);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      Attribute attribute0 = new Attribute("N4+1P8af)S `B7");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      char[] charArray0 = new char[3];
      charArray0[2] = '\u0000';
      boolean boolean3 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitJumpInsn((byte)5, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter1.visitLocalVariable("|8=Rh&jxQ}X5B'pk", "JSR/RET are not supported with computeFrames option", "N4+1P8af)S `B7", label0, label0, (-3539));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#-A$lp<$DR}`Sy", "N>+1P8af)S `M7", "#-A$lp<$DR}`Sy", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(1, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(16, int0);
      
      methodWriter1.visitTypeInsn(1, "#-A$lp<$DR}`Sy");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      int int1 = Frame.BASE;
      assertFalse(int1 == int0);
      assertEquals(16777216, int1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(41);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter2.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter2.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotation("IV", false);
      assertNotNull(annotationVisitor1);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      Attribute attribute0 = new Attribute("N>+1P8af)S `M7");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter2.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      AnnotationVisitor annotationVisitor2 = methodWriter2.visitAnnotation("N>+1P8af)S `M7", false);
      assertNotNull(annotationVisitor2);
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor1));
      assertFalse(annotationVisitor2.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(annotationVisitor2, annotationVisitor1);
      assertNotSame(annotationVisitor2, annotationVisitor0);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter0.visitIincInsn(180, 16777216);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      methodWriter0.visitInsn(180);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter1.visitLocalVariable("chnr", "K*Q4DXB2N_", "N>+1P8af)S `M7", label0, label0, 76);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter1.visitVarInsn(22, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "{C=02)dhC )m", "{C=02)dhC )m", "{C=02)dhC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = Frame.OBJECT;
      assertEquals(24117248, int0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("{C=02)dhC )m", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(168, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("j", true);
      assertNotNull(annotationVisitor1);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitMaxs(8, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.signature = "j";
      methodWriter1.visitIntInsn(188, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label1 = edge0.successor;
      assertNull(label1);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertSame(label0, label2);
      assertSame(label2, label0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "C=02)dC )m";
      FieldVisitor fieldVisitor0 = classWriter0.visitField(8, "C=02)dC )m", "C=02)dC )m", "M<.YkS36C", (Object) null);
      assertNotNull(fieldVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "C=02)dC )m", "C=02)dC )m", "C=02)dC )m", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 169;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitVarInsn(169, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.invalidFrames = true;
      Item item0 = classWriter0.newNameTypeItem("C=02)dC )m", "C=02)dC )m");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "#-A$lp$D}+`Sy";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 6, "#-A$lp$D}+`Sy", "N>+1P4a7)S `M7", "#-A$lp$D}+`Sy", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn((-7), "StackMapTable", "N>+1P4a7)S `M7", "SynAheFuc");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "N>+1P4a7)S `M7";
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "de`SAx`&5<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N>+1P4a7)S `M7");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      int int1 = 167;
      methodWriter0.visitVarInsn(167, (-7));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod = methodWriter0;
      int int2 = (-864);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-864));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(2292);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-1612), "D\"!*<dM76(]Cj~EBI4y", "8(.JHPO/&(>", (String) null, (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter1.key2;
      assertNotNull(item0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      classWriter1.visitSource("8(.JHPO/&(>", "+`I4etd,ID@qbnP");
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitFrame(2, (-1612), (Object[]) null, 3, (Object[]) null);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter1, classWriter0);
      
      methodWriter0.visitFrame(3, (-2), (Object[]) null, (-1612), (Object[]) null);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter1, classWriter0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2866));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = (-2866);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = (-2865);
      intArray0[3] = 167;
      intArray0[4] = 0;
      intArray0[5] = 1;
      methodWriter0.exceptions = intArray0;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 22, "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", (String[]) null, false, false);
      assertNotNull(methodWriter1);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-2865), 2050);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
      
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "org.objectweb.asm.jip.jlassWriter";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      methodWriter1.visitFrame(4, (-2866), (Object[]) null, 99, objectArray0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter1, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(1, "rkzm`'", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 33
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "#;I-/Z$lp$]}+`Sy", "u&HK5s)'scW8B\"E+", "u&HK5s)'scW8B\"E+", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)83;
      Attribute attribute0 = new Attribute("\"^74]=DnGp'#'}f)");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitFrame((-1956), (-1956), (Object[]) null, (byte)0, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn((byte)83, ":6%a)R;2uBPBF3{f");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "UbPXzb&]al]jB0fgjw ", "N>+1Pyaf)S `M7", "UbPXzb&]al]jB0fgjw ", (String[]) null, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Item item0 = classWriter0.newClassItem("UbPXzb&]al]jB0fgjw ");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Frame.ARRAY_OF;
      assertFalse(int1 == int0);
      assertEquals(268435456, int1);
      
      methodWriter0.visitLdcInsn("ocalVariableTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray0 = new Label[8];
      labelArray0[1] = label0;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("ocalVariableTable", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Attribute attribute0 = new Attribute("ocalVariableTable");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      methodWriter1.visitMaxs(3, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(3);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(2);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putLong(10);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector1.putByte(268435456);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter1.put(byteVector3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2866));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = (-2866);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(1, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = (-2865);
      intArray0[3] = 167;
      intArray0[4] = 0;
      intArray0[5] = 1;
      methodWriter0.exceptions = intArray0;
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 22, "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", "org.objectweb.asm.jip.jlassWriter", (String[]) null, false, false);
      assertNotNull(methodWriter1);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((-2865), 2050);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(methodWriter0, methodWriter1);
      
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "org.objectweb.asm.jip.jlassWriter";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(0, (-2866), (Object[]) null, 99, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ClassWriter classWriter0 = new ClassWriter((-3543));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.addType("H%QyfhV:\"IzhXa!cD");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "H%QyfhV:\"IzhXa!cD", ".class", "H%QyfhV:\"IzhXa!cD", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(1, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      methodWriter0.signature = "H%QyfhV:\"IzhXa!cD";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), (Object[]) null, 1, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, ",", "?+1a[)S b!M67", "?+1a[)S b!M67", (String[]) null, false, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter1.visitTryCatchBlock(label1, label0, label0, "?+1a[)S b!M67");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter1.visitLdcInsn("?+1a[)S b!M67");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((-1L));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, ",", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(1032);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "H%QyfhV:\"IzhXa!cD";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1024, ".class", "H%QyfhV:\"IzhXa!cD", "H%QyfhV:\"IzhXa!cD", (String[]) null, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.signature = "H%QyfhV:\"IzhXa!cD";
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = ClassReader.ANNOTATIONS;
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 684, (Object[]) null, 684, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }
}
