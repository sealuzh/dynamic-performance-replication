/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 00:56:52 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(1098, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(40, "");
      assertEquals(40, fBProcedureParam0.getPosition());
      
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(0, list0.size());
      
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      int int1 = fBProcedureCall0.hashCode();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "1Jd:Jv.>gwXzN3|'A^#";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "1Jd:Jv.>gwXzN3|'A^#");
      fBProcedureParam0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.setName("1Jd:Jv.>gwXzN3|'A^#");
      fBProcedureParam1.setIndex(2194);
      fBProcedureParam0.clone();
      fBProcedureParam1.setIndex(2149);
      fBProcedureParam1.setType(3);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 2149);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "uhP7qy*lP%");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(uhP7qy*lP%)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "uhP7qy*lP%");
      fBProcedureCall0.registerOutParam((-1), (-1));
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 0;
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.clone();
      fBProcedureCall0.setName("");
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("EXECUTE PROCEDURE");
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      fBProcedureCall0.equals(object0);
      int int0 = 368;
      FBProcedureParam fBProcedureParam0 = null;
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName(",|/|/mWT9yq");
      int int0 = 2671;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(2671);
      try { 
        fBProcedureParam0.setValue(",|/|/mWT9yq");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getName();
      fBProcedureCall0.mapOutParamIndexToPosition(618, true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1789), "You cannot set value of an non-existing parameter.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1789
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      int int0 = (-637);
      fBProcedureParam0.setIndex((-637));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int1 = 1;
      fBProcedureCall0.getOutputParam(1);
      fBProcedureCall0.getInputParam(1);
      String string0 = " lryiTay3l@:jx2";
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1000), " lryiTay3l@:jx2");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1000
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = false;
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("Cannot set parameter, since it is constant.");
      fBProcedureCall0.getOutputParams();
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(268);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(268);
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(268);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getName();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      int int0 = (-1);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(1320);
      fBProcedureCall0.getOutputParam(1320);
      fBProcedureCall0.mapOutParamIndexToPosition(1320);
      fBProcedureCall0.setName("r_&gl0Q");
      fBProcedureCall0.getOutputParam((-2259));
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addParam(0, "c-[!W/^GqLcP>E|;(S");
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1320, true);
      assertEquals(1320, int0);
      
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "hNQzrkvEk1");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
      assertEquals(0, int0);
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(887);
      assertEquals(887, int0);
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null)", string0);
      
      fBProcedureCall0.setName("kM<YrEE`-F-E");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(917, "26000");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(917, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(917);
      assertEquals(917, int0);
      
      fBProcedureCall0.getOutputParams();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(917, "");
      fBProcedureParam1.clone();
      fBProcedureCall0.setName("");
      fBProcedureCall0.addParam(638, "}UKLRwMAu,b2s;qF==");
      fBProcedureCall0.addParam(31, "");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getOutputParams();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE (, }UKLRwMAu,b2s;qF==, )", string0);
      
      fBProcedureCall0.getOutputParams();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(0, "");
      assertEquals(0, fBProcedureParam2.getPosition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      fBProcedureCall0.setName("o`u87O");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(920);
      fBProcedureParam0.setIndex(920);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(920, "");
      fBProcedureParam1.clone();
      fBProcedureParam1.setType(3516);
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.clone();
      try { 
        fBProcedureParam1.setValue(fBProcedureParam0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-251));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("\n");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "'*x");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(13, "{] ");
      fBProcedureCall0.registerOutParam((-1), (-1));
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1));
      assertEquals((-1), int0);
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.addParam(18, "{] ");
      assertEquals(18, fBProcedureParam1.getPosition());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "<!3V? gC^_%R}V6KM");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2154);
      assertEquals(2154, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "?.xs");
      assertEquals(1, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(?.xs)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(887, "?y.xs");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(887, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(?y.xs)", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2, "?L9pPGN8H}\"5Gt_");
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.setType((-599));
      fBProcedureParam0.setValue((Object) null);
      fBProcedureParam0.setValue("?L9pPGN8H}\"5Gt_");
      fBProcedureParam0.setValue((Object) null);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getSQL(false);
      boolean boolean0 = fBProcedureCall0.equals("?L9pPGN8H}\"5Gt_");
      assertFalse(boolean0);
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2158);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.setName("EXECUTE PROCEDURE null(?L9pPGN8H}\"5Gt_)");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(1174);
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-186100132), "in7");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -186100132
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("-y");
      String string0 = "In7?\"1|-4*)U!P";
      fBProcedureCall0.addParam(47, "In7?\"1|-4*)U!P");
      fBProcedureCall0.setName("In7?\"1|-4*)U!P");
      try { 
        fBProcedureCall0.registerOutParam(4, (-281));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }
}
