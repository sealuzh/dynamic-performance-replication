/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:36:37 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[4];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute0;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      long long0 = classReader0.readLong(261);
      assertEquals(8011734865091585641L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(134);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\"';
      charArray0[1] = 'f';
      charArray0[2] = '3';
      charArray0[3] = '?';
      charArray0[4] = '|';
      charArray0[5] = ':';
      charArray0[6] = '3';
      // Undeclared exception!
      try { 
        classReader0.readClass(134, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 2, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12084
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.AndFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      int int0 = 284;
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = ';';
      charArray0[2] = '!';
      charArray0[3] = '&';
      charArray0[4] = 'C';
      charArray0[5] = 'L';
      charArray0[6] = ']';
      charArray0[7] = 'P';
      charArray0[8] = '=';
      // Undeclared exception!
      try { 
        classReader0.readConst((-1), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      assertEquals(1538, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter((-1));
      classReader0.accept((ClassVisitor) classWriter0, (-1));
      classReader0.readShort(201);
      long long0 = classReader0.readLong(149);
      assertEquals(888582931808260L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      attributeArray0[1] = attribute0;
      attributeArray0[2] = attribute0;
      attributeArray0[3] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 4);
      // Undeclared exception!
      try { 
        classReader0.readLong((-2674));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-10);
      byteArray0[5] = (byte)29;
      byteArray0[4] = (byte)19;
      byteArray0[1] = (byte) (-36);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = 's';
      charArray0[2] = '\u0085';
      Attribute attribute1 = attribute0.read(classReader0, (byte)19, 1, charArray0, 821, (Label[]) null);
      Attribute attribute2 = attribute1.next;
      classReader0.readConst(2, charArray0);
      ClassWriter classWriter1 = new ClassWriter(8);
      // Undeclared exception!
      try { 
        classReader1.readLabel(0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      char[] charArray0 = null;
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      int int0 = 2323;
      int int1 = 33;
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        classReader1.readLabel(172, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 172
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      assertNotNull(string0);
      
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-582));
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-1378));
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader0.readClass(76, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 4);
      long long0 = classReader1.readLong(2);
      assertEquals((-4990551337076850634L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.accept((ClassVisitor) classWriter0, 92);
      Object object0 = classReader1.readConst(74, (char[]) null);
      assertEquals("next", object0);
      
      ClassWriter classWriter1 = new ClassWriter(91);
      classReader0.copyPool(classWriter1);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.copyPool(classWriter0);
      classReader1.accept((ClassVisitor) classWriter0, 92);
      classReader1.readByte(0);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader1.readLabel(4036, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4036
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[7] = (byte)0;
      byteArray0[12] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 1000;
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("AnnotationDefault");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader1.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, 1538);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader1.b, 2, 1538);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2579
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      int int0 = classReader0.readInt(87);
      assertEquals(1635148079, int0);
      assertEquals(821, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 821);
      Attribute attribute0 = new Attribute("eQAvD");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[0];
      Attribute attribute1 = attribute0.read(classReader0, 1, 7, charArray0, 1166, (Label[]) null);
      Attribute attribute2 = attribute1.next;
      char[] charArray1 = new char[7];
      charArray1[0] = '\u0085';
      charArray1[1] = 's';
      charArray1[2] = '\u0085';
      charArray1[3] = 's';
      charArray1[4] = 'p';
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader1.b);
      charArray1[5] = '\u0085';
      charArray1[6] = 's';
      Object object0 = classReader0.readConst(19, charArray1);
      assertEquals("accept", object0);
      
      ClassReader classReader2 = new ClassReader("wheel.asm.ClassReader");
      assertEquals(8070, classReader2.header);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readByte((-2355));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2355
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 262144);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = 's';
      charArray0[2] = '\u0085';
      Attribute attribute1 = attribute0.read(classReader0, (byte)19, 1, charArray0, 821, (Label[]) null);
      Attribute attribute2 = attribute1.next;
      classReader0.readConst(2, charArray0);
      ClassWriter classWriter1 = new ClassWriter(8);
      classReader0.copyPool(classWriter0);
      int int0 = classReader1.readUnsignedShort(821);
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      char[] charArray0 = new char[4];
      charArray0[0] = '%';
      charArray0[1] = '3';
      charArray0[2] = 'b';
      charArray0[3] = 'l';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char char0 = 's';
      char char1 = '\u0085';
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0085';
      charArray0[1] = '\u0085';
      charArray0[2] = '\u0085';
      charArray0[3] = 's';
      // Undeclared exception!
      try { 
        classReader1.readConst(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[12] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      assertEquals(10, classReader0.header);
      
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(1000);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.copyPool(classWriter0);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("~H3guU'*c.XPL6");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 42);
      ClassWriter classWriter1 = new ClassWriter((-117));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, (-117));
      assertEquals(1, attributeArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      int int0 = classReader1.getAccess();
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(1538);
      int int0 = 92;
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      char[] charArray0 = null;
      classReader0.readUTF8(37, (char[]) null);
      // Undeclared exception!
      try { 
        classReader0.readConst(101, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      byte byte0 = (byte)116;
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = 'Y';
      charArray0[2] = '?';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((byte)116, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader1.b);
      classReader1.getClassName();
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.accept((ClassVisitor) classWriter0, 92);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader("BuOW6=9$+7");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter((-102));
      ClassReader classReader2 = new ClassReader(classReader0.b, 2223, 3492);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1538);
      // Undeclared exception!
      try { 
        classReader2.copyPool(classWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(3040, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 610);
      long long0 = classReader1.readLong(610);
      assertEquals(47261418822L, long0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      int int0 = classReader0.readByte(94);
      assertEquals(17, int0);
      assertEquals(1538, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[3];
      attributeArray0[0] = attribute0;
      int int0 = (-1048576);
      char[] charArray0 = new char[2];
      charArray0[0] = '*';
      charArray0[1] = '}';
      Label[] labelArray0 = new Label[5];
      Label label0 = classReader0.readLabel(1, labelArray0);
      Label label1 = label0.successor;
      labelArray0[0] = null;
      // Undeclared exception!
      try { 
        classReader1.readLabel(460, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 460
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      assertEquals(1538, classReader1.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1538);
      ClassReader classReader2 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      assertFalse(classReader2.equals((Object)classReader0));
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      short short0 = classReader1.readShort(1822);
      assertEquals((short) (-20224), short0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-115), (byte)0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-127);
      byteArray1[1] = (byte) (-127);
      sequenceInputStream0.read(byteArray1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(byteArrayInputStream0, sequenceInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-2176));
      classReader0.accept((ClassVisitor) classWriter0, 92);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader("LocalVariableTypeTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte)116;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((byte) (-9));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      ClassReader classReader1 = new ClassReader("wheel.asm.Opcodes");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstField = null;
      classReader0.accept((ClassVisitor) classWriter0, 2464);
      classReader0.getInterfaces();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 8);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-558));
      classReader0.getSuperName();
      Attribute attribute0 = new Attribute((String) null);
      classReader0.accept((ClassVisitor) classWriter0, (-1433));
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = 'z';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      ClassReader classReader1 = new ClassReader("org/apache/commons/io/filefilter/AbstractFileFilter");
      int int0 = classReader0.readInt(2);
      assertEquals((-1161953280), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.DelegateFileFilter";
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 59);
      classWriter0.visitSource("org.apache.commons.io.filefilter.DelegateFileFilter", "RuntimeVisibleAnnotations");
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(251, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      File file0 = MockFile.createTempFile("Mvp0x=[i14Qg", ".s.IFJDCS");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/Mvp0x=[i14Qg0.s.IFJDCS");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(mockFileInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[12] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 1000;
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      // Undeclared exception!
      try { 
        classReader0.readConst(77, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute((String) null);
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      attributeArray0[1] = attribute1;
      Attribute attribute2 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = attribute1.next;
      attributeArray0[3] = null;
      int int0 = (-731);
      char[] charArray0 = new char[2];
      charArray0[0] = 'p';
      Label[] labelArray0 = new Label[3];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-1699), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1699
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      ClassReader classReader1 = new ClassReader("wheel.asm.Opcodes");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2464);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader("V1G1?H)");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[1];
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 692);
      // Undeclared exception!
      try { 
        classReader1.readLong((-3039));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte) (-12);
      byteArray0[6] = (byte) (-16);
      byteArray0[7] = (byte) (-79);
      byteArray0[8] = (byte) (-21);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      assertEquals(1538, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter((-2614));
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 28);
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter1, 23);
      int int0 = classReader0.readUnsignedShort(28);
      assertEquals(2560, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)116;
      byteArray0[5] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[12] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1000);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte)19;
      byteArray0[5] = (byte) (-36);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "org.apache.commons.io.filefilter.AndFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-372), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[6];
      charArray0[0] = '0';
      charArray0[1] = 'p';
      charArray0[2] = '9';
      charArray0[3] = 'D';
      charArray0[4] = 'j';
      charArray0[5] = '\"';
      classReader0.readClass(1538, charArray0);
      classReader1.getSuperName();
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1);
      classReader1.copyPool(classWriter0);
      classReader1.accept((ClassVisitor) classWriter0, 92);
      classReader0.accept((ClassVisitor) classWriter0, (-196));
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader("LocalVariableTypeTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      attribute0.value = classReader0.b;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classWriter0.thisName = "org.apache.commons.io.filefilter.DelegateFileFilter";
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 2481);
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = '^';
      charArray0[2] = '?';
      // Undeclared exception!
      try { 
        classReader0.readClass((-6568), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      ClassReader classReader1 = new ClassReader("wheel.asm.Opcodes");
      Locale.getISOLanguages();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(22, 63);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)106;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-21);
      byteArray0[8] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)118;
      byteArray1[1] = (byte)70;
      byteArray1[2] = (byte) (-124);
      byteArray1[3] = (byte)101;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray1, 101, 101);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.DelegateFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter((byte)116);
      classReader0.copyPool(classWriter0);
      char[] charArray0 = new char[6];
      charArray0[0] = '\'';
      charArray0[1] = '6';
      charArray0[2] = 'U';
      charArray0[3] = 'U';
      charArray0[4] = 'A';
      charArray0[5] = 'j';
      // Undeclared exception!
      try { 
        classReader1.readConst(8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)87;
      byteArray0[1] = (byte)87;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 1430, 110);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 59);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+|!3yo5/oTp!}dN2DPf");
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 1149);
      assertEquals(0, attributeArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader1.accept((ClassVisitor) classWriter0, 92);
      classReader1.readConst(74, (char[]) null);
      classReader0.readByte(8);
      classReader0.copyPool(classWriter0);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      assertEquals(821, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 2481);
      long long0 = classReader0.readLong(821);
      assertEquals(9288725771911168L, long0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 101);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 2481);
      assertEquals(1, attributeArray0.length);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = 'm';
      charArray0[2] = 'X';
      charArray0[3] = 'P';
      charArray0[4] = ' ';
      charArray0[5] = 'y';
      charArray0[6] = 'S';
      charArray0[7] = 't';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-1889), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte) (-34);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.DelegateFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-41);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-32768), 1003);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pipedInputStream0, sequenceInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(3040, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(1);
      Object object0 = classReader0.readConst(274, (char[]) null);
      assertEquals(142, object0);
      
      int int0 = classReader1.readByte(1);
      assertEquals(254, int0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.readByte(50);
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = '!';
      // Undeclared exception!
      try { 
        classReader0.readClass(7, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.readConst(74, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      byte byte0 = (byte)116;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) null, 1221);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.readInt(729);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      Attribute attribute0 = new Attribute("SourceDebugExtension");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = 's';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = '\u0085';
      Attribute attribute1 = attribute0.read(classReader0, (byte)19, 1, charArray0, 821, (Label[]) null);
      Attribute attribute2 = attribute1.next;
      classReader0.readConst(2, charArray0);
      classReader1.getItem((byte)19);
      ClassWriter classWriter1 = new ClassWriter(8);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader("SourceDebugExtension");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AndFileFilter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readByte(60);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(60, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
