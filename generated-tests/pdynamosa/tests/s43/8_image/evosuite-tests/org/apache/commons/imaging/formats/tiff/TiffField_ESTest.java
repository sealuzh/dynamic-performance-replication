/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 08:03:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-38);
      byteArray0[4] = (byte) (-38);
      TiffField tiffField0 = new TiffField(3007, (-4), fieldTypeRational0, 236L, 788L, byteArray0, byteOrder0, (-2218));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(256, int0);
      assertEquals((-2218), tiffField0.getSortHint());
      assertEquals(788, tiffField0.getOffset());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(3007, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-38);
      TiffField tiffField0 = new TiffField(3007, (-4), fieldTypeRational0, 236L, 788L, byteArray0, byteOrder0, (-2218));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(788, tiffField0.getOffset());
      assertEquals(3007, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-2218), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)30, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, (byte)14);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40093, 4419, fieldTypeFloat0, 4L, 4L, byteArray0, (ByteOrder) null, 33451);
      tiffField0.dump();
      assertEquals(4419, tiffField0.getDirectoryType());
      assertEquals(33451, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(40093, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeFloat0, 186L, 20, byteArray0, (ByteOrder) null, 3335);
      String string0 = tiffField0.getValueDescription();
      assertEquals(20, tiffField0.getTag());
      assertEquals(3335, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(324, 48244, fieldTypeShort0, 324, (-4476L), byteArray0, byteOrder0, 18);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(324, tiffField0.getTag());
      assertEquals(48244, tiffField0.getDirectoryType());
      assertEquals((-4476), tiffField0.getOffset());
      assertEquals(324, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, (ByteOrder) null, (byte)91);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1589, 1589, fieldTypeLong0.RATIONAL, 951L, (byte) (-44), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1589, int0);
      assertEquals((-44), tiffField0.getOffset());
      assertEquals(1589, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      TiffField tiffField0 = new TiffField(1, (byte) (-112), fieldTypeAscii0, 1L, 226L, byteArray0, (ByteOrder) null, (byte) (-112));
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-112), tiffField0.getDirectoryType());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(226, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3382), (byte)0, fieldTypeLong0, (-4824L), (-1299L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1299), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-3382), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1589, 1589, fieldTypeLong0.SRATIONAL, 951L, (byte) (-44), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(1589, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(1589, tiffField0.getTag());
      assertEquals((-44), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeDouble0, 50, 357L, byteArray0, byteOrder0, (-2134));
      int int0 = tiffField0.getOffset();
      assertEquals((-2134), tiffField0.getSortHint());
      assertEquals(357, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (-1), byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-93);
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 557L, 2382L, byteArray0, (ByteOrder) null, 2494);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2494, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-23808), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(2382, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField((-863), 27, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, 59);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals((-863), tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (-1), byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-101);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, (byte)7);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3406, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeByte0, 34, 3406, byteArray0, byteOrder0, 34);
      tiffField0.getFieldTypeName();
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(3406, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte) (-114), "");
      TiffField tiffField0 = new TiffField((byte) (-114), (-1073), fieldTypeRational0, 270L, 2074L, byteArray0, (ByteOrder) null, 3882);
      tiffField0.getFieldTypeName();
      assertEquals((-114), tiffField0.getTag());
      assertEquals((-1073), tiffField0.getDirectoryType());
      assertEquals(2074, tiffField0.getOffset());
      assertEquals(3882, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 4878, fieldTypeByte0, 4L, 1698, byteArray0, (ByteOrder) null, 2317);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4878, tiffField0.getDirectoryType());
      assertEquals(1698, tiffField0.getOffset());
      assertEquals(2317, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte) (-114), "");
      TiffField tiffField0 = new TiffField((byte) (-114), (-1073), fieldTypeRational0, 270L, 2074L, byteArray0, (ByteOrder) null, 3882);
      tiffField0.getFieldType();
      assertEquals((-1073), tiffField0.getDirectoryType());
      assertEquals(2074, tiffField0.getOffset());
      assertEquals((-114), tiffField0.getTag());
      assertEquals(3882, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1003), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)20);
      tiffField0.getFieldType();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals((-1003), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 11);
      tiffField0.getDoubleValue();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)24;
      TiffField tiffField0 = new TiffField((byte)24, (byte)24, fieldTypeShort0, 1L, 5, byteArray0, (ByteOrder) null, (byte)24);
      tiffField0.getDoubleValue();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-104);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 26, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)52);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 3974, (-1717986917), byteArray0, byteOrder0, 93);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2204), (FieldType) null, (-1L), (-1L), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2204), int0);
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 965L, byteArray0, byteOrder0, 64);
      tiffField0.getCount();
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(965, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(242, (-3641), fieldTypeShort0, 3138L, 3138L, byteArray0, (ByteOrder) null, (-37));
      long long0 = tiffField0.getCount();
      assertEquals(242, tiffField0.getTag());
      assertEquals(3138, tiffField0.getOffset());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(3138L, long0);
      assertEquals((-3641), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2066), 9, fieldTypeByte0, 9, (-817L), byteArray0, byteOrder0, (-1432));
      tiffField0.getBytesLength();
      assertEquals((-817), tiffField0.getOffset());
      assertEquals((-1432), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-2066), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-37), 1, fieldTypeShort0, (-37), (-37), byteArray0, (ByteOrder) null, 2446);
      tiffField0.getBytesLength();
      assertEquals(2446, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getTag());
      assertEquals((-37), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50738, 2146671744, fieldTypeLong0.RATIONAL, (byte)0, (-642L), byteArray0, byteOrder0, (-2291));
      tiffField0.getByteOrder();
      assertEquals(2146671744, tiffField0.getDirectoryType());
      assertEquals((-642), tiffField0.getOffset());
      assertEquals((-2291), tiffField0.getSortHint());
      assertEquals(50738, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-38), (byte) (-38), fieldTypeRational0, (-2472L), (-1640L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1908874352), fieldTypeRational0, 4L, 1L, (byte[]) null, byteOrder0, (-1852));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2353, "bG|T)R9&EVvC_{_oC}5");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4789), 0, fieldTypeByte0, (-4789), (-1149L), byteArray0, byteOrder0, 1322);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-37), 1, fieldTypeShort0, (-37), (-37), byteArray0, (ByteOrder) null, 2446);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, (byte[]) null, byteOrder0, (-1605));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, (-3585), fieldTypeByte0, (-2147483648L), 2648L, byteArray0, (ByteOrder) null, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(48257, 48257, fieldTypeShort0, 0L, 48257, (byte[]) null, byteOrder0, 48257);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2510), (-1671), fieldTypeByte0, (byte) (-112), (-1023), byteArray0, byteOrder0, (-2510));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1590), (-1717986917), fieldTypeShort0, (-1590), (-1590), (byte[]) null, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, 2146671722, (FieldType) null, 255L, 2146671744, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146446717, (byte)0, fieldTypeLong0, (-1L), 2035L, byteArray0, byteOrder0, (byte) (-30));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, 1009L, 0, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "SecurityClassification");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)99, (-2305), (FieldType) null, 3725L, 208L, byteArray0, (ByteOrder) null, 315);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 0L, byteArray0, (ByteOrder) null, 1698);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Expected String value(", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(37397, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37397, 37397, fieldTypeRational0, 331L, 37397, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(37397, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(37397, tiffField0.getTag());
      assertEquals(37397, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 4878, fieldTypeByte0, 4L, 1698, byteArray0, (ByteOrder) null, 2317);
      tiffField0.getByteOrder();
      assertEquals(4878, tiffField0.getDirectoryType());
      assertEquals(2317, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1698, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3514, 1698, fieldTypeFloat0, 2074L, 1698, byteArray0, (ByteOrder) null, (-956));
      tiffField0.getByteArrayValue();
      assertEquals(3514, tiffField0.getTag());
      assertEquals(1698, tiffField0.getOffset());
      assertEquals(1698, tiffField0.getDirectoryType());
      assertEquals((-956), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(35, 35, (FieldType) null, (-864L), 2147483647L, byteArray0, byteOrder0, 34911);
      tiffField0.getFieldType();
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(35, tiffField0.getTag());
      assertEquals(34911, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3520, ")V'O8Q4E<DW");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3520, 3520, fieldTypeShort0, 3520, 1841L, byteArray0, byteOrder0, 265);
      tiffField0.getValue();
      assertEquals(3520, tiffField0.getDirectoryType());
      assertEquals(3520L, tiffField0.getCount());
      assertEquals(265, tiffField0.getSortHint());
      assertEquals(3520, tiffField0.getTag());
      assertEquals(1841, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3662), (byte)0, fieldTypeShort0.RATIONAL, 20, (-2291), byteArray0, byteOrder0, (byte) (-44));
      int int0 = tiffField0.getOffset();
      assertEquals((-2291), int0);
      assertEquals((-3662), tiffField0.getTag());
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[179];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-1693), fieldTypeFloat0, 1398L, 57L, byteArray0, byteOrder0, 7);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals((-1693), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(57, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1590), (-1717986917), fieldTypeShort0, (-1590), (-1590), (byte[]) null, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-1590), int0);
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1590), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4343, 2, (FieldType) null, (-4L), 4343, byteArray0, (ByteOrder) null, 1);
      long long0 = tiffField0.getCount();
      assertEquals((-4L), long0);
      assertEquals(4343, tiffField0.getTag());
      assertEquals(4343, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "BdYO ;?3uKOxo:g=j%");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 332);
      tiffField0.getBytesLength();
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeShort0, 59, 59, byteArray0, (ByteOrder) null, 59);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 1394, fieldTypeByte0, 2648L, 0, byteArray0, byteOrder0, 33931);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@110ebc97 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0.SLONG, 21L, (byte)24, byteArray0, (ByteOrder) null, 2282);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(2282, tiffField0.getSortHint());
      assertEquals(21L, tiffField0.getCount());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(20, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-114), (-1073), fieldTypeFloat0.RATIONAL, 270L, 2074L, byteArray0, (ByteOrder) null, 3882);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-360), 65001, fieldTypeByte0, 65001, (-360), byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@33292038 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(6, "t7ae=:Zn|6dH");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeFloat0, (byte)99, (byte)41, byteArray0, (ByteOrder) null, (byte) (-41));
      tiffField0.getDoubleArrayValue();
      assertEquals(99L, tiffField0.getCount());
      assertEquals((-41), tiffField0.getSortHint());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1780), 0, fieldTypeByte0.FLOAT, 0L, 651L, byteArray0, byteOrder0, 2146446710);
      tiffField0.getDoubleArrayValue();
      assertEquals(651, tiffField0.getOffset());
      assertEquals((-1780), tiffField0.getTag());
      assertEquals(2146446710, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, (byte)41, fieldTypeLong0, (byte)99, (byte)99, byteArray0, (ByteOrder) null, 2146446717);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(99L, tiffField0.getCount());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getOffset());
      assertEquals(2146446717, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1474, 220, fieldTypeShort0, 24L, 1474, byteArray0, (ByteOrder) null, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1474, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1474, tiffField0.getOffset());
      assertEquals(220, tiffField0.getDirectoryType());
      assertEquals(24L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(20, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-114), (-1073), fieldTypeFloat0.SRATIONAL, 50215, 20, byteArray0, (ByteOrder) null, 5);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(20, tiffField0.getOffset());
      assertEquals(50215L, tiffField0.getCount());
      assertEquals((-114), tiffField0.getTag());
      assertEquals((-1073), tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (-552), fieldTypeShort0, 1L, (-552), byteArray0, (ByteOrder) null, (-552));
      tiffField0.getDoubleArrayValue();
      assertEquals((-552), tiffField0.getSortHint());
      assertEquals((-552), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-552), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(65538, 2, fieldTypeFloat0.DOUBLE, 328L, 328L, byteArray0, (ByteOrder) null, (-1381));
      tiffField0.getDoubleArrayValue();
      assertEquals(328L, tiffField0.getCount());
      assertEquals((-1381), tiffField0.getSortHint());
      assertEquals(65538, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(328, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1), (byte)20, fieldTypeLong0, 2079L, (-964L), byteArray0, byteOrder0, (-1));
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2079L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-964), tiffField0.getOffset());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1137), (byte) (-44), fieldTypeFloat0, 894L, 1562L, byteArray0, byteOrder0, 1236);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@466dc328 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), 470, fieldTypeRational0, 1562L, 3974, byteArray0, byteOrder0, 1113);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50738, 2146671744, fieldTypeLong0.RATIONAL, (byte)0, (-642L), byteArray0, byteOrder0, (-2291));
      tiffField0.getIntArrayValue();
      assertEquals(2146671744, tiffField0.getDirectoryType());
      assertEquals(50738, tiffField0.getTag());
      assertEquals((-2291), tiffField0.getSortHint());
      assertEquals((-642), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (-1), byteArray0, (ByteOrder) null, (byte)1);
      assertEquals(2, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1120), (-469), fieldTypeShort0, 1569L, 2211L, byteArray0, byteOrder0, 1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2211, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-469), tiffField0.getDirectoryType());
      assertEquals(1569L, tiffField0.getCount());
      assertEquals((-1120), tiffField0.getTag());
      assertEquals(3138, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)24, (byte)24, fieldTypeShort0, 1L, 5, byteArray0, (ByteOrder) null, (byte)24);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField(5341, (-145), fieldTypeAscii0, 1L, 5341, byteArray0, byteOrder0, 3601);
      String string0 = tiffField0.getStringValue();
      assertEquals(5341, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(5341, tiffField0.getTag());
      assertEquals(3601, tiffField0.getSortHint());
      assertEquals((-145), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146671744, (-2330), fieldTypeByte0, (byte)110, 0L, byteArray0, byteOrder0, (byte) (-61));
      String string0 = tiffField0.getTagName();
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x7ff39c80)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2330), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(50781, 50781, fieldTypeShort0, (-2079L), 1446L, byteArray0, (ByteOrder) null, (-4093));
      String string0 = tiffField0.getTagName();
      assertEquals("RawDataUniqueID", string0);
      assertEquals(50781, tiffField0.getDirectoryType());
      assertEquals(50781, tiffField0.getTag());
      assertEquals((-4093), tiffField0.getSortHint());
      assertEquals(1446, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3362, (-1998), fieldTypeShort0, (-1998), 2987L, byteArray0, (ByteOrder) null, 292);
      MockFile mockFile0 = new MockFile("`C/avb36&_", "Ob~43O3?p:Y)v+(");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(":", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-112), (-1023), fieldTypeByte0, 1953L, (-1023), byteArray0, byteOrder0, (byte) (-112));
      tiffField0.dump();
      assertEquals((-112), tiffField0.getTag());
      assertEquals((-1023), tiffField0.getOffset());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(1953, tiffField0.getBytesLength());
      assertEquals(1953L, tiffField0.getCount());
      assertEquals((-1023), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(254, 254, fieldTypeFloat0, 254, (-48L), byteArray0, byteOrder0, 254);
      String string0 = tiffField0.toString();
      assertEquals(254, tiffField0.getSortHint());
      assertEquals((-48), tiffField0.getOffset());
      assertEquals(1016, tiffField0.getBytesLength());
      assertEquals("254 (0xfe: NewSubfileType): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55) (254 Float)", string0);
      assertEquals(254, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-44), (byte)99, fieldTypeLong0, 2648L, 0L, byteArray0, byteOrder0, (byte)6);
      String string0 = tiffField0.toString();
      assertEquals("-44 (0xffffffd4: Unknown Tag): 0 (2648 IFD)", string0);
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(10592, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1), (byte)20, fieldTypeLong0, 2079L, (-964L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (2079 SLong)", string0);
      assertEquals(8316, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-964), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1289), 47, fieldTypeShort0, 18216L, 64, byteArray0, (ByteOrder) null, 47);
      String string0 = tiffField0.toString();
      assertEquals("-1289 (0xfffffaf7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (18216 Short)", string0);
      assertEquals(64, tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(36432, tiffField0.getBytesLength());
      assertEquals(47, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)41, fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, 2608);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField((-1009), (-1009), fieldTypeAscii0, 1952L, (-1009), byteArray0, byteOrder0, (-1009));
      tiffField0.dump();
      assertEquals((-1009), tiffField0.getSortHint());
      assertEquals(1952, tiffField0.getBytesLength());
      assertEquals((-1009), tiffField0.getDirectoryType());
      assertEquals(1952L, tiffField0.getCount());
      assertEquals((-1009), tiffField0.getTag());
      assertEquals((-1009), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[46];
      TiffField tiffField0 = new TiffField((-1009), (-1009), fieldTypeAscii0, 1952L, (-1009), byteArray0, byteOrder0, (-1009));
      tiffField0.dump();
      assertEquals((-1009), tiffField0.getDirectoryType());
      assertEquals(1952L, tiffField0.getCount());
      assertEquals((-1009), tiffField0.getOffset());
      assertEquals(1952, tiffField0.getBytesLength());
      assertEquals((-1009), tiffField0.getTag());
      assertEquals((-1009), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, (byte) (-112), fieldTypeAscii0, 1L, 226L, byteArray0, (ByteOrder) null, (byte) (-112));
      tiffField0.toString();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-112), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(226, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3964, 37, fieldTypeShort0, 1L, 731L, byteArray0, (ByteOrder) null, 33450);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeFloat0.IFD, 0L, 0L, byteArray0, byteOrder0, 1854);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1854, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 3974, (-1717986917), byteArray0, byteOrder0, 93);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(342, 3);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(93, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(856, 856, (FieldType) null, 1L, (-1060L), byteArray0, byteOrder0, 856);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2075, (byte)92);
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(20, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-114), (-1073), fieldTypeFloat0.RATIONAL, 270L, 2074L, byteArray0, (ByteOrder) null, 3882);
      tiffField0.getFieldTypeName();
      assertEquals(3882, tiffField0.getSortHint());
      assertEquals(2074, tiffField0.getOffset());
      assertEquals((-1073), tiffField0.getDirectoryType());
      assertEquals((-114), tiffField0.getTag());
      assertEquals(2160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1170), 1967, fieldTypeByte0, (-179L), 4L, byteArray0, byteOrder0, (-3177));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3177), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1967, int0);
      assertEquals((-1170), tiffField0.getTag());
      assertEquals((-179L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1908874352), fieldTypeRational0, 4L, 1L, (byte[]) null, byteOrder0, (-1852));
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1852), int0);
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (-552), fieldTypeShort0, 1L, (-552), byteArray0, (ByteOrder) null, (-552));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-552), tiffField0.getSortHint());
      assertEquals((-552), tiffField0.getOffset());
      assertEquals("0 (0x0: GPSVersionID): ", string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-552), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0.DOUBLE, 20, 510L, byteArray0, (ByteOrder) null, 33918);
      tiffField0.dump();
      assertEquals(20, tiffField0.getTag());
      assertEquals(510, tiffField0.getOffset());
      assertEquals(160, tiffField0.getBytesLength());
      assertEquals(33918, tiffField0.getSortHint());
      assertEquals(20L, tiffField0.getCount());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-919), 3974, fieldTypeShort0, 3974, (-32864L), byteArray0, byteOrder0, (-1717986917));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-32864L), tiffElement0.offset);
      assertEquals((-919), tiffField0.getTag());
      assertEquals(3974, tiffField0.getDirectoryType());
  }
}
