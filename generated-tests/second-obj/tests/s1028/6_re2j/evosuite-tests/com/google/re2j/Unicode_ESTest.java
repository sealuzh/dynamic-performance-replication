/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:44:33 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(43983);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Unicode.simpleFold(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(199);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(32);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = Unicode.toUpper(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = Unicode.isTitle(932);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Unicode.isUpper(1225);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = Unicode.MAX_FOLD;
      boolean boolean0 = Unicode.isTitle(66639);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = Unicode.toLower(1142);
      assertEquals(1143, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Unicode.simpleFold(924);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Unicode.isTitle(149);
      Unicode.toLower(149);
      Unicode.isLower(149);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unicode.toUpper(1128);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unicode.simpleFold(8544);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Unicode.isLower(392);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Unicode.isPrint(11745);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.isPrint(8540);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = Unicode.MAX_ASCII;
      Unicode.isPrint(173);
      Unicode.isTitle(173);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Unicode.toUpper(122);
      Unicode.isTitle(122);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Unicode.simpleFold(65);
      Unicode.isTitle(65);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Unicode.isPrint(11782);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Unicode.isPrint(43948);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Unicode.isPrint(8516);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Unicode.toLower(127);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Unicode.isTitle(127);
      Unicode.toUpper(127);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Unicode.isTitle(401);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Unicode.isUpper(75);
      Unicode.toLower(75);
  }
}
