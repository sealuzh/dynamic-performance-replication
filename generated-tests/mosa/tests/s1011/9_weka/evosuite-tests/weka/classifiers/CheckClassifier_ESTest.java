/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:02:32 GMT 2018
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.functions.MultilayerPerceptron;
import weka.classifiers.functions.SGD;
import weka.classifiers.meta.RandomSubSpace;
import weka.classifiers.misc.InputMappedClassifier;
import weka.classifiers.trees.J48;
import weka.core.CheckScheme;
import weka.core.Utils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, true, false, false, true, (-1451));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1451' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, true, true, false, true, 4, 2891);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Index: 2891, Size: 2
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, false, false, true, false, false, 2906);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2906' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, true, false, false, false, (-329));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-329' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier.main((String[]) null);
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumNumeric((-329));
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, true, false, true, true, false, (-329));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -324
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, true, true, true, true, 1743, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1743' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      checkClassifier0.setClassifier(j48_0);
      Utils.SMALL = 0.0;
      checkClassifier0.correctBuildInitialisation(false, true, false, false, false, true, 1);
      checkClassifier0.testToString();
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: null
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = false;
      int int0 = (-329);
      boolean boolean2 = true;
      boolean boolean3 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleNClasses(true, false, true, false, true, false, (-329));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: / by zero
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, true, true, true, true, true, (-1), (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, false, false, true, false, false, 793);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '793' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      String[] stringArray0 = new String[0];
      checkClassifier0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, false, true, true, false, 1743, true, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1743' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.testToString();
      checkClassifier0.getWords();
      checkClassifier0.setClassifier((Classifier) null);
      checkClassifier0.weightedInstancesHandler();
      // Undeclared exception!
      try { 
        checkClassifier0.declaresSerialVersionUID();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      checkClassifier0.testToString();
      checkClassifier0.setSilent(false);
      checkClassifier0.getRevision();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier1.doesntUseTestClassVal(true, false, false, false, false, false, 2197);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2197' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.m_Classifier = null;
      checkClassifier0.getOptions();
      checkClassifier0.getRevision();
      boolean boolean0 = true;
      boolean boolean1 = true;
      int int0 = (-1123);
      // Undeclared exception!
      try { 
        checkClassifier0.canPredict(true, true, true, false, true, false, (-1123));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1123' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(false, true, true, false, false, 100);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '100' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      checkClassifier0.canHandleOnlyClass(true, false, true, true, false, 4);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(false, false, false, true, true, false, 4, 2891);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Index: 2891, Size: 2
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      int int0 = (-329);
      checkClassifier0.getRevision();
      checkClassifier0.setPostProcessor((CheckScheme.PostProcessor) null);
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier1.canHandleMissing(false, false, true, true, true, false, (-329), false, true, (-329));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-329' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      checkClassifier0.canHandleMissing(true, false, false, false, true, false, 4, true, false, (-1471));
      CheckClassifier checkClassifier1 = new CheckClassifier();
      CheckClassifier checkClassifier2 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier2.instanceWeights(false, true, true, true, true, true, 500);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '500' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, true, false, true, 0, 0);
      checkClassifier0.updatingEquality(true, false, false, true, true, false, 0);
      checkClassifier0.instanceWeights(false, false, false, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The minimum bucket size used for discretizing numeric attributes.");
      checkClassifier0.setClassifier(j48_0);
      Utils.SMALL = 0.0;
      checkClassifier0.correctBuildInitialisation(false, true, false, false, false, true, 1);
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, true, true, false, true, false, 1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.trees.j48.C45PruneableClassifierTree: Cannot handle string attributes!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      checkClassifier0.doesntUseTestClassVal(true, false, true, true, true, false, 0);
      RandomSubSpace randomSubSpace0 = new RandomSubSpace();
      InputMappedClassifier inputMappedClassifier0 = new InputMappedClassifier();
      checkClassifier0.setClassifier(inputMappedClassifier0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      MultilayerPerceptron multilayerPerceptron0 = new MultilayerPerceptron();
      checkClassifier1.setClassifier(multilayerPerceptron0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      SGD sGD0 = new SGD();
      String string0 = "K1@pMW@>)@%znb+evJ4";
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0%R+(?^:1";
      sGD0.setDebug(false);
      stringArray0[1] = "&ts($1pDJNtjd-41S";
      stringArray0[2] = "K1@pMW@>)@%znb+evJ4";
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, true, false, true, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.rules.ZeroR: Cannot handle string class!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "skUY@?*? ~?U7";
      SGD sGD0 = new SGD();
      checkClassifier0.m_Classifier = (Classifier) sGD0;
      stringArray0[1] = "0%R+(?^:1";
      CheckClassifier checkClassifier1 = new CheckClassifier();
      String[] stringArray1 = new String[0];
      checkClassifier1.setOptions(stringArray1);
      checkClassifier0.updateableClassifier();
      try { 
        checkClassifier1.makeTestDataset(0, 41, 959, 67, 15, (-4197), (-1158), 15, (-2092), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.TestInstances", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumDate((-2993));
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier0.getOptions();
      checkClassifier1.setNumString((-2993));
      // Undeclared exception!
      try { 
        checkClassifier1.instanceWeights(true, true, true, true, false, true, (-2993));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -2986
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      checkClassifier0.canHandleClassAsNthAttribute(false, false, true, true, false, true, 0, 0);
      checkClassifier0.updatingEquality(true, false, false, true, true, false, 0);
      checkClassifier0.instanceWeights(false, false, false, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      SGD sGD0 = new SGD();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0%R+(?^:1";
      stringArray0[1] = "&ts($1pDJNtjd-41S";
      stringArray0[2] = "K1@pMW@>)@%znb+evJ4";
      stringArray0[3] = "K1@pMW@>)@%znb+evJ4";
      checkClassifier0.setOptions(stringArray0);
      checkClassifier0.getRevision();
      checkClassifier0.setPostProcessor((CheckScheme.PostProcessor) null);
      checkClassifier0.getOptions();
      checkClassifier0.canHandleMissing(false, false, false, false, false, false, 1, false, false, 1);
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(3010, false, false, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '3010' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      checkClassifier0.canTakeOptions();
      checkClassifier0.weightedInstancesHandler();
      int int0 = 21;
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier1.canHandleMissing(true, true, false, false, true, false, (-2804), true, true, 25);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2804' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, true, false, true, true, true, 3146);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '3146' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      checkClassifier0.setClassifier(j48_0);
      Utils.SMALL = 0.0;
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, false, true, false, false, true, 12, true, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '12' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      checkClassifier0.datasetIntegrity(false, false, false, true, true, false, 0, true, false);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, true, true, false, false, false, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '34' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      checkClassifier0.setClassifier(j48_0);
      Utils.SMALL = 0.0;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      checkClassifier0.datasetIntegrity(false, true, false, false, true, false, 0, false, true);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, true, true, false, true, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '34' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, false, false, true, 0, 0);
      boolean boolean0 = false;
      boolean boolean1 = true;
      CheckClassifier checkClassifier1 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier1.updatingEquality(false, true, true, false, true, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      J48 j48_0 = new J48();
      checkClassifier0.setClassifier(j48_0);
      Utils.SMALL = 0.0;
      boolean boolean0 = false;
      boolean boolean1 = true;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      boolean boolean2 = false;
      boolean boolean3 = true;
      boolean boolean4 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, false, true, true, false, false, 809);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '809' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, false, false, true, 0, 0);
      checkClassifier0.datasetIntegrity(true, false, false, true, false, true, 0, true, false);
      checkClassifier0.instanceWeights(false, true, true, true, false, false, 0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      int int0 = 0;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      checkClassifier0.setPostProcessor((CheckScheme.PostProcessor) null);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.updatingEquality(true, true, true, false, true, false, 0);
      // Undeclared exception!
      try { 
        checkClassifier1.instanceWeights(true, false, true, false, true, true, 21);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '21' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, false, false, true, 0, 0);
      checkClassifier0.datasetIntegrity(true, false, false, true, false, true, 0, true, false);
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType((-1408), true, false, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1408' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      checkClassifier0.updatingEquality(false, false, false, true, false, true, 0);
      checkClassifier0.instanceWeights(false, true, false, true, true, false, 0);
      checkClassifier0.testToString();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, false, false, true, 0, 0);
      checkClassifier0.datasetIntegrity(false, false, true, true, false, true, 0, true, false);
      checkClassifier0.instanceWeights(false, true, true, true, false, false, 0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      Utils.SMALL = 0.0;
      checkClassifier0.canHandleClassAsNthAttribute(false, true, true, true, false, true, 0, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      Locale.getISOCountries();
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, true, true, true, true, true, 3, false, true, 93);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(false, true, false, true, false, true, 0, 0);
      checkClassifier0.updatingEquality(true, false, false, true, true, false, 0);
      checkClassifier0.correctBuildInitialisation(false, true, true, false, false, false, 0);
  }
}
