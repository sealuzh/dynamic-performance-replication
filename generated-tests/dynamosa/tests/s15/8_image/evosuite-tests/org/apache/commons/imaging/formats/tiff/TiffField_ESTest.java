/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:44:34 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)114;
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField((byte) (-56), (byte) (-56), fieldTypeRational0, 1015L, (byte)50, byteArray0, byteOrder0, 1015);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-56), tiffField0.getTag());
      assertEquals((-56), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(2, int0);
      assertEquals(1015, tiffField0.getSortHint());
      assertEquals(8120, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-56);
      TiffField tiffField0 = new TiffField((byte) (-56), (-1783), fieldTypeRational0, (byte)114, (byte) (-56), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-56), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(912, tiffField0.getBytesLength());
      assertEquals((-56), tiffField0.getTag());
      assertEquals((-1783), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(52, (byte)1, fieldTypeAscii0, 4, (-199), byteArray0, byteOrder0, (byte)22);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-199), tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-4440), 1143, fieldTypeLong0, 1143, 256L, byteArray0, byteOrder0, (-4440));
      tiffField0.getValue();
      assertEquals((-4440), tiffField0.getTag());
      assertEquals(4572, tiffField0.getBytesLength());
      assertEquals((-4440), tiffField0.getSortHint());
      assertEquals(1143, tiffField0.getDirectoryType());
      assertEquals(256, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-886), fieldTypeShort0, (-886), 0L, byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
      assertEquals((-886), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeShort0, 84L, (-2821L), byteArray0, byteOrder0, 16);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(40965, tagInfo0.tag);
      assertEquals((-2821), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(336, ": ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 10, fieldTypeRational0, 10, 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1646, 1646, (FieldType) null, 1646, 1646, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1646, tiffField0.getDirectoryType());
      assertEquals(1646, int0);
      assertEquals(1646, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)41;
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeRational0.ASCII, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      String string0 = tiffField0.getStringValue();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(41, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Expected String value(");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 0, (-1683L), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1683), tiffField0.getOffset());
      assertEquals(2161, tiffField0.getTag());
      assertEquals(2161, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-438), 0, fieldTypeShort0, 307L, 1148L, byteArray0, byteOrder0, (byte) (-11));
      int int0 = tiffField0.getSortHint();
      assertEquals((-438), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-11), int0);
      assertEquals(1148, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 445);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(445, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-438), 0, fieldTypeShort0, 307L, 1148L, byteArray0, byteOrder0, (byte) (-11));
      int int0 = tiffField0.getOffset();
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1148, int0);
      assertEquals((-438), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-15);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 18246, fieldTypeShort0, 530L, (-3928L), byteArray0, byteOrder0, 2034);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-3928), tiffField0.getOffset());
      assertEquals(2034, tiffField0.getSortHint());
      assertEquals(1060, tiffField0.getBytesLength());
      assertEquals(241, int0);
      assertEquals(18246, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-359), fieldTypeLong0, 50, 4L, byteArray0, byteOrder0, (-3019));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-359), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-3019), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)5, (byte)5, fieldTypeShort0.BYTE, 1L, (byte)5, byteArray0, byteOrder0, (-2147372338));
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-2147372338), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-98);
      TiffField tiffField0 = new TiffField((-2989), 50, fieldTypeRational0.SSHORT, 1L, 1725L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValue();
      assertEquals(1725, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2989), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-69);
      TiffField tiffField0 = new TiffField(18, 1836, fieldTypeRational0.SSHORT, 1L, (-13272L), byteArray0, byteOrder0, (byte)11);
      tiffField0.getIntValue();
      assertEquals((-13272), tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(1836, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3056, (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 34855, fieldTypeAscii0, 3056, (-10472L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(34855, tiffField0.getDirectoryType());
      assertEquals((-10472), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-23), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeShort0, 0L, 2378L, byteArray0, byteOrder0, 403);
      tiffField0.getFieldTypeName();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(403, tiffField0.getSortHint());
      assertEquals(2378, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3056, (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 34855, fieldTypeAscii0, 3056, (-10472L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-10472), tiffField0.getOffset());
      assertEquals(34855, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-23), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeShort0, 0L, 2378L, byteArray0, byteOrder0, 403);
      tiffField0.getFieldType();
      assertEquals(2378, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-15), 2034, fieldTypeShort0, 2034, 0, byteArray0, (ByteOrder) null, (byte) (-15));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2034, tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-15), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2145571373), "V");
      TiffField tiffField0 = new TiffField((-2145571373), (-2145571373), fieldTypeFloat0, 1L, (-119L), byteArray0, byteOrder0, 1310);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1310, tiffField0.getSortHint());
      assertEquals((-2145571373), tiffField0.getDirectoryType());
      assertEquals((-2145571373), tiffField0.getTag());
      assertEquals((-119), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)102;
      TiffField tiffField0 = new TiffField(2133805408, 0, fieldTypeShort0, 1L, 4L, byteArray0, byteOrder0, (byte)102);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2133805408, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(102, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-69);
      TiffField tiffField0 = new TiffField(18, 1836, fieldTypeRational0.SHORT, 1L, (-13272L), byteArray0, byteOrder0, (byte)11);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1836, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-13272), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1683L), 0, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-4), fieldTypeFloat0, 12, (-4), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-4), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)0, fieldTypeLong0, (byte)0, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(583, 22, fieldTypeFloat0, (-808L), 0L, byteArray0, byteOrder0, 206);
      long long0 = tiffField0.getCount();
      assertEquals(583, tiffField0.getTag());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-808L), long0);
      assertEquals(206, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(937, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(937, 937, fieldTypeRational0, 937, 937, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getBytesLength();
      assertEquals(937, tiffField0.getTag());
      assertEquals(937, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(7496, int0);
      assertEquals(937, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1992), "k-:bkU#K`");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3927, 41485, fieldTypeAscii0, (-2622L), (-2622L), byteArray0, byteOrder0, 167);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2622), tiffField0.getOffset());
      assertEquals((-2622), int0);
      assertEquals(41485, tiffField0.getDirectoryType());
      assertEquals(167, tiffField0.getSortHint());
      assertEquals(3927, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, 1241, fieldTypeShort0, 0, 1646L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(1646, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1241, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-147), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)52);
      tiffField0.getByteOrder();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-147), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-438), 0, fieldTypeShort0, 307L, 1148L, byteArray0, byteOrder0, (byte) (-11));
      tiffField0.getByteArrayValue();
      assertEquals(1148, tiffField0.getOffset());
      assertEquals(614, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-438), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-147), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)52);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-147), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(52, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-359), fieldTypeLong0, 50, 4L, byteArray0, byteOrder0, (-3019));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("z$wi%dj&$wIC?)`~");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-359), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-3019), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1836, 1836, fieldTypeAscii0, 1836, 1836, (byte[]) null, byteOrder0, 3912);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-124), (byte) (-124), fieldTypeRational0, (byte) (-124), (byte) (-124), byteArray0, byteOrder0, (byte) (-124));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1L, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeRational0, (byte)17, (byte)17, (byte[]) null, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-451), (-451), fieldTypeLong0, (-451), (-451), byteArray0, byteOrder0, (-451));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-872), fieldTypeRational0, (-872), (-872), byteArray0, byteOrder0, 780);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-948), (-948), fieldTypeShort0, (-948), (-948), byteArray0, byteOrder0, (-948));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 1, fieldTypeRational0, 1, 8, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-22), (-22), fieldTypeFloat0, (-22), (-22), byteArray0, byteOrder0, (-22));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1131, 1131, (FieldType) null, 1131, 1131, byteArray0, byteOrder0, 1131);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1982292598, 1982292598, (FieldType) null, 1982292598, 1982292598, byteArray0, byteOrder0, 1982292598);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-23), (-23), fieldTypeShort0, (-23), (-23), byteArray0, byteOrder0, (-23));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeShort0, 40093, 40093, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(615, 615, fieldTypeLong0, 615, 615, (byte[]) null, byteOrder0, 615);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-917), (-917), fieldTypeShort0, (-917), (-917), byteArray0, byteOrder0, (-917));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-315), (-315), fieldTypeRational0, (-315), (-315), (byte[]) null, byteOrder0, (-315));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-948), (-948), fieldTypeShort0, (-948), (-948), byteArray0, byteOrder0, (-948));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147483645), (-2147483645), (FieldType) null, 1590L, 1590L, byteArray0, byteOrder0, (-2147483645));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 1873, fieldTypeShort0, 9824L, 1873, byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5196, 5196, fieldTypeShort0, 5196, 5196, (byte[]) null, byteOrder0, 5196);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeRational0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1862, 1862, fieldTypeRational0, 1L, 1862, byteArray0, byteOrder0, 1862);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(83, 83, fieldTypeRational0, 83, 83, (byte[]) null, byteOrder0, 83);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-87), (byte) (-87), fieldTypeRational0, (byte) (-87), (byte) (-87), byteArray0, byteOrder0, (byte) (-87));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-917), (-917), fieldTypeShort0, (-917), (-917), byteArray0, byteOrder0, (-917));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, (-563), fieldTypeLong0, (-563), 9, byteArray0, byteOrder0, (-54));
      File file0 = MockFile.createTempFile("RawFile", "RawFile");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "RawFile");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 16, fieldTypeRational0, 1L, 0, byteArray0, byteOrder0, 48322);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.TiffField");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "n2I|{4F/x&=6E}LV{z6");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 9, 9, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50215, 50215, fieldTypeShort0, 1L, 50215, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)68, (byte)68, (FieldType) null, (byte)68, 280L, byteArray0, byteOrder0, (byte)68);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-27), (-27), fieldTypeShort0, (-27), (-27), byteArray0, byteOrder0, (-27));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147372338), 0, fieldTypeShort0, 255L, (byte) (-15), byteArray0, byteOrder0, 508);
      MockPrintStream mockPrintStream0 = new MockPrintStream("[GOJpZoF#p6tc<6I");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(255L, tiffField0.getCount());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals((-15), tiffField0.getOffset());
      assertEquals(508, tiffField0.getSortHint());
      assertEquals((-2147372338), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-26), fieldTypeAscii0, (byte) (-26), 2893L, byteArray0, byteOrder0, (byte) (-22));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(2893, tiffField0.getOffset());
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-22), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1534), fieldTypeShort0, 2632L, (-1L), byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1534), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeFloat0, 77, 77, (byte[]) null, (ByteOrder) null, 77);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, (FieldType) null, 0L, 1598L, byteArray0, byteOrder0, 28);
      tiffField0.getFieldType();
      assertEquals(1598, tiffField0.getOffset());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 0, (-1683L), (byte[]) null, byteOrder0, 2161);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2161, int0);
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161, tiffField0.getTag());
      assertEquals((-1683), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeShort0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(176, 1438, (FieldType) null, 1438, 176, byteArray0, byteOrder0, 1438);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-23), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 530L, (-3928L), byteArray0, byteOrder0, 2021);
      int int0 = tiffField0.getOffset();
      assertEquals((-3928), int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2021, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3934), (-3934), fieldTypeLong0, (-3934), 1522L, byteArray0, byteOrder0, (-1636));
      int int0 = tiffField0.getTag();
      assertEquals((-3934), tiffField0.getDirectoryType());
      assertEquals(1522, tiffField0.getOffset());
      assertEquals((-1636), tiffField0.getSortHint());
      assertEquals((-3934), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3056, (String) null);
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, 34855, fieldTypeAscii0, 3056, (-10472L), byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals((-10472), tiffField0.getOffset());
      assertEquals(34855, tiffField0.getDirectoryType());
      assertEquals(3056L, long0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 1599, fieldTypeShort0, 0, (byte) (-30), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-30), tiffField0.getOffset());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(1599, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeRational0, (byte)19, (byte)19, byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeRational0, (byte)60, (byte)60, byteArray0, byteOrder0, (byte)60);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(254, 254, fieldTypeFloat0, 254, 254, byteArray0, byteOrder0, 254);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2753bc24 for: 254 (0xfe: NewSubfileType): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeByte0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@519ce081 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(254, 254, fieldTypeFloat0, 254, 254, byteArray0, byteOrder0, 254);
      tiffField0.getDoubleArrayValue();
      assertEquals(254, tiffField0.getTag());
      assertEquals(254, tiffField0.getSortHint());
      assertEquals(254L, tiffField0.getCount());
      assertEquals(1016, tiffField0.getBytesLength());
      assertEquals(254, tiffField0.getOffset());
      assertEquals(254, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2835, 2835, fieldTypeShort0.DOUBLE, 2835, 2835, byteArray0, byteOrder0, 2835);
      tiffField0.getDoubleArrayValue();
      assertEquals(2835L, tiffField0.getCount());
      assertEquals(22680, tiffField0.getBytesLength());
      assertEquals(2835, tiffField0.getTag());
      assertEquals(2835, tiffField0.getDirectoryType());
      assertEquals(2835, tiffField0.getSortHint());
      assertEquals(2835, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2343, 2343, fieldTypeLong0, 2343, 2343, byteArray0, byteOrder0, 2343);
      tiffField0.getDoubleArrayValue();
      assertEquals(2343, tiffField0.getSortHint());
      assertEquals(2343, tiffField0.getTag());
      assertEquals(2343, tiffField0.getOffset());
      assertEquals(2343L, tiffField0.getCount());
      assertEquals(2343, tiffField0.getDirectoryType());
      assertEquals(9372, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(393, 393, fieldTypeShort0, 393, 393, byteArray0, byteOrder0, 393);
      tiffField0.getDoubleArrayValue();
      assertEquals(786, tiffField0.getBytesLength());
      assertEquals(393, tiffField0.getOffset());
      assertEquals(393, tiffField0.getSortHint());
      assertEquals(393, tiffField0.getTag());
      assertEquals(393, tiffField0.getDirectoryType());
      assertEquals(393L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeRational0, (byte)19, (byte)19, byteArray0, byteOrder0, (byte)19);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)68, (byte)68, fieldTypeFloat0, (byte)68, (byte)68, byteArray0, byteOrder0, (byte)68);
      tiffField0.getDoubleArrayValue();
      assertEquals(272, tiffField0.getBytesLength());
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[100];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2364, 2364, fieldTypeLong0, 2364, 2364, byteArray0, byteOrder0, 2364);
      tiffField0.getIntArrayValue();
      assertEquals(2364, tiffField0.getOffset());
      assertEquals(9456, tiffField0.getBytesLength());
      assertEquals(2364, tiffField0.getTag());
      assertEquals(2364, tiffField0.getSortHint());
      assertEquals(2364, tiffField0.getDirectoryType());
      assertEquals(2364L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, byteArray0, byteOrder0, 8);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2331, 2331, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).ASCII, 2331, 2331, byteArray0, byteOrder0, 2331);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5d22ef4c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)68, (byte)68, fieldTypeRational0, (byte)68, (byte)68, byteArray0, byteOrder0, (byte)68);
      tiffField0.getIntArrayValue();
      assertEquals(544, tiffField0.getBytesLength());
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeRational0, (byte)19, (byte)19, byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)41, (byte)41, fieldTypeRational0.ASCII, (byte)41, (byte)41, byteArray0, byteOrder0, (byte)41);
      String string0 = tiffField0.getStringValue();
      assertEquals(41, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(41, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@30f9a3
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[288];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34023, 34023, fieldTypeDouble0, 34023, 34023, byteArray0, byteOrder0, 34023);
      String string0 = tiffField0.getTagName();
      assertEquals(34023, tiffField0.getSortHint());
      assertEquals(34023, tiffField0.getTag());
      assertEquals(34023, tiffField0.getDirectoryType());
      assertEquals("ImageColorIndicator", string0);
      assertEquals(34023, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeRational0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1174, 1174, fieldTypeFloat0, 1379L, 1174, byteArray0, byteOrder0, 1174);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1379L, tiffField0.getCount());
      assertEquals(5516, tiffField0.getBytesLength());
      assertEquals(1174, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1174, tiffField0.getDirectoryType());
      assertEquals(1174, tiffField0.getSortHint());
      assertEquals(1174, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeFloat0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.toString();
      assertEquals("11 (0xb: ProcessingSoftware): 0.0, 0.0 (11 Float)", string0);
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[85];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2307, 2307, fieldTypeByte0, 2307, 2307, byteArray0, byteOrder0, 91);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2307, tiffField0.getDirectoryType());
      assertEquals(2307, tiffField0.getTag());
      assertEquals(2307, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2307, tiffField0.getOffset());
      assertEquals(2307L, tiffField0.getCount());
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[431];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65501, 65501, fieldTypeDouble0, 65501, 65501, byteArray0, byteOrder0, 65501);
      String string0 = tiffField0.toString();
      assertEquals(65501, tiffField0.getSortHint());
      assertEquals(65501, tiffField0.getDirectoryType());
      assertEquals(524008, tiffField0.getBytesLength());
      assertEquals("65501 (0xffdd: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (65501 Double)", string0);
      assertEquals(65501, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[80];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2307, 2307, fieldTypeShort0.DOUBLE, 2307, 2307, byteArray0, byteOrder0, 2307);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2307, tiffField0.getDirectoryType());
      assertEquals(2307L, tiffField0.getCount());
      assertEquals(2307, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2307, tiffField0.getSortHint());
      assertEquals(2307, tiffField0.getTag());
      assertEquals(18456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34023, 34023, fieldTypeDouble0.LONG, 34023, 10420L, byteArray0, byteOrder0, 34023);
      String string0 = tiffField0.toString();
      assertEquals(34023, tiffField0.getDirectoryType());
      assertEquals(136092, tiffField0.getBytesLength());
      assertEquals("34023 (0x84e7: ImageColorIndicator): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (74) (34023 Long)", string0);
      assertEquals(10420, tiffField0.getOffset());
      assertEquals(34023, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2331, 2331, fieldTypeShort0, 2331, 2331, byteArray0, byteOrder0, 2331);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2331, tiffField0.getDirectoryType());
      assertEquals(2331L, tiffField0.getCount());
      assertEquals(2331, tiffField0.getOffset());
      assertEquals(4662, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2331, tiffField0.getSortHint());
      assertEquals(2331, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[282];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1131, 54, fieldTypeAscii0, 54, 34023, byteArray0, byteOrder0, 54);
      tiffField0.toString();
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getSortHint());
      assertEquals(1131, tiffField0.getTag());
      assertEquals(54, tiffField0.getBytesLength());
      assertEquals(34023, tiffField0.getOffset());
      assertEquals(54L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField(1836, 1836, fieldTypeAscii0.SBYTE, 1836, (-2412L), byteArray0, byteOrder0, 1836);
      String string0 = tiffField0.toString();
      assertEquals((-2412), tiffField0.getOffset());
      assertEquals(1836, tiffField0.getDirectoryType());
      assertEquals("1836 (0x72c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1836 SByte)", string0);
      assertEquals(1836, tiffField0.getBytesLength());
      assertEquals(1836, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.BYTE, (byte)0, 1924L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(1924, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.UNDEFINED, (byte)0, 1913L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1913, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, (byte)44, fieldTypeRational0, (byte)44, (byte)44, byteArray0, byteOrder0, (byte)44);
      tiffField0.getFieldTypeName();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getOffset());
      assertEquals(44, tiffField0.getTag());
      assertEquals(44, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-3522), fieldTypeShort0, (-3522), 27, byteArray0, byteOrder0, (-3522));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3522), tiffField0.getDirectoryType());
      assertEquals((-3522), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-3522L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 0, (-1683L), (byte[]) null, byteOrder0, 2161);
      int int0 = tiffField0.getSortHint();
      assertEquals(2161, tiffField0.getTag());
      assertEquals((-1683), tiffField0.getOffset());
      assertEquals(2161, int0);
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)109, (byte)109, fieldTypeRational0, (byte)109, (byte)109, byteArray0, byteOrder0, (byte)109);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(109, tiffField0.getOffset());
      assertEquals("109 (0x6d: Unknown Tag): ", string0);
      assertEquals(109, tiffField0.getDirectoryType());
      assertEquals(109, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)44, (byte)44, fieldTypeRational0, (byte)44, (byte)44, byteArray0, byteOrder0, (byte)44);
      tiffField0.dump();
      assertEquals(352, tiffField0.getBytesLength());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(44L, tiffField0.getCount());
      assertEquals(44, tiffField0.getOffset());
      assertEquals(44, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 22);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[131];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(826, 826, fieldTypeFloat0, 826, 826, byteArray0, byteOrder0, 826);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(826L, tiffElement0.offset);
      assertEquals(826, tiffField0.getSortHint());
      assertEquals(826, tiffField0.getDirectoryType());
      assertEquals(826, tiffField0.getTag());
  }
}
