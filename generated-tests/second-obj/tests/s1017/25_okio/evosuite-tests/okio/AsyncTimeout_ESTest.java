/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:25:57 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.util.concurrent.TimeUnit;
import okio.AsyncTimeout;
import okio.ByteString;
import okio.HashingSource;
import okio.RealBufferedSource;
import okio.Sink;
import okio.Source;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncTimeout_ESTest extends AsyncTimeout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      asyncTimeout0.enter();
      asyncTimeout0.clearDeadline();
      MockIOException mockIOException0 = new MockIOException();
      mockIOException0.getLocalizedMessage();
      MockIOException mockIOException1 = new MockIOException(mockIOException0);
      asyncTimeout0.exit((IOException) mockIOException1);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      asyncTimeout0.throwIfReached();
      asyncTimeout0.throwIfReached();
      asyncTimeout0.exit(true);
      asyncTimeout0.deadline(1298L, timeUnit0);
      asyncTimeout0.exit();
      MockIOException mockIOException0 = new MockIOException("`D(EC\"/?");
      asyncTimeout0.newTimeoutException(mockIOException0);
      asyncTimeout0.newTimeoutException(mockIOException0);
      asyncTimeout0.enter();
      asyncTimeout0.exit(true);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      asyncTimeout0.enter();
      AsyncTimeout.head = asyncTimeout0;
      AsyncTimeout.head.clearTimeout();
      AsyncTimeout.head.deadlineNanoTime(0L);
      AsyncTimeout.head.enter();
      AsyncTimeout.awaitTimeout();
      asyncTimeout0.exit();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      asyncTimeout0.newTimeoutException((IOException) null);
      MockIOException mockIOException0 = new MockIOException("", (Throwable) null);
      asyncTimeout0.exit((IOException) mockIOException0);
      asyncTimeout0.enter();
      asyncTimeout0.sink((Sink) null);
      asyncTimeout0.source((Source) null);
      asyncTimeout0.timedOut();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      asyncTimeout0.enter();
      AsyncTimeout.head = asyncTimeout0;
      AsyncTimeout asyncTimeout1 = (AsyncTimeout)AsyncTimeout.head.clearTimeout();
      AsyncTimeout asyncTimeout2 = (AsyncTimeout)AsyncTimeout.head.deadlineNanoTime(0L);
      asyncTimeout1.enter();
      boolean boolean0 = true;
      asyncTimeout2.exit(true);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      asyncTimeout0.timeout(879L, timeUnit0);
      asyncTimeout0.exit();
      asyncTimeout0.enter();
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      asyncTimeout0.timeout(879L, timeUnit1);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      asyncTimeout0.timedOut();
      asyncTimeout0.enter();
      AsyncTimeout.head = asyncTimeout0;
      AsyncTimeout asyncTimeout1 = (AsyncTimeout)AsyncTimeout.head.clearTimeout();
      AsyncTimeout asyncTimeout2 = (AsyncTimeout)AsyncTimeout.head.deadlineNanoTime(0L);
      AsyncTimeout.head.enter();
      asyncTimeout2.exit(true);
      asyncTimeout1.enter();
      AsyncTimeout asyncTimeout3 = new AsyncTimeout();
      asyncTimeout1.exit();
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      AsyncTimeout asyncTimeout1 = (AsyncTimeout)asyncTimeout0.clearDeadline();
      asyncTimeout1.deadlineNanoTime(0L);
      asyncTimeout1.enter();
      asyncTimeout0.exit(false);
      AsyncTimeout asyncTimeout2 = new AsyncTimeout();
      asyncTimeout2.enter();
      AsyncTimeout asyncTimeout3 = new AsyncTimeout();
      asyncTimeout0.exit();
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      AsyncTimeout.head = asyncTimeout0;
      AsyncTimeout asyncTimeout1 = (AsyncTimeout)AsyncTimeout.head.clearTimeout();
      AsyncTimeout.head.deadlineNanoTime(65536L);
      asyncTimeout1.enter();
      AsyncTimeout.head.exit(false);
      MockIOException mockIOException0 = new MockIOException("iw]R=j<$SuTW");
      AsyncTimeout.head.exit((IOException) mockIOException0);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      asyncTimeout0.newTimeoutException((IOException) null);
      MockIOException mockIOException0 = new MockIOException("", (Throwable) null);
      asyncTimeout0.exit((IOException) mockIOException0);
      asyncTimeout0.enter();
      asyncTimeout0.sink((Sink) null);
      Source source0 = null;
      Source source1 = asyncTimeout0.source((Source) null);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(source1);
      // Undeclared exception!
      try { 
        realBufferedSource0.readByteString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.AsyncTimeout$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      asyncTimeout0.enter();
      AsyncTimeout.head = asyncTimeout0;
      AsyncTimeout asyncTimeout1 = (AsyncTimeout)AsyncTimeout.head.clearTimeout();
      AsyncTimeout.head.deadlineNanoTime(0L);
      AsyncTimeout.head.enter();
      MockIOException mockIOException0 = new MockIOException();
      mockIOException0.getLocalizedMessage();
      MockIOException mockIOException1 = new MockIOException(mockIOException0);
      AsyncTimeout asyncTimeout2 = new AsyncTimeout();
      InterruptedIOException interruptedIOException0 = (InterruptedIOException)asyncTimeout2.newTimeoutException(mockIOException0);
      asyncTimeout1.exit((IOException) interruptedIOException0);
      // Undeclared exception!
      try { 
        AsyncTimeout.awaitTimeout();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AsyncTimeout asyncTimeout0 = new AsyncTimeout();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      asyncTimeout0.throwIfReached();
      asyncTimeout0.throwIfReached();
      asyncTimeout0.exit(true);
      asyncTimeout0.deadline(1298L, timeUnit0);
      asyncTimeout0.exit();
      MockIOException mockIOException0 = new MockIOException("`D(EC\"/?");
      IOException iOException0 = asyncTimeout0.newTimeoutException(mockIOException0);
      asyncTimeout0.newTimeoutException(mockIOException0);
      asyncTimeout0.enter();
      asyncTimeout0.newTimeoutException(iOException0);
      // Undeclared exception!
      try { 
        asyncTimeout0.enter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unbalanced enter/exit
         //
         verifyException("okio.AsyncTimeout", e);
      }
  }
}
