/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:55:32 GMT 2018
 */

package us.codecraft.webmagic.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.utils.DoubleKeyMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoubleKeyMap_ESTest extends DoubleKeyMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleKeyMap<Object, String, Object> doubleKeyMap0 = new DoubleKeyMap<Object, String, Object>();
      Object object0 = new Object();
      doubleKeyMap0.get(object0, "cm$!~z_#x$V>>*G6*:");
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Integer, String, Object> doubleKeyMap1 = new DoubleKeyMap<Integer, String, Object>(class0);
      DoubleKeyMap<String, Object, Integer> doubleKeyMap2 = new DoubleKeyMap<String, Object, Integer>();
      // Undeclared exception!
      try { 
        doubleKeyMap2.put("cm$!~z_#x$V>>*G6*:", (Map<Object, Integer>) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoubleKeyMap<String, String, String> doubleKeyMap0 = new DoubleKeyMap<String, String, String>();
      String string0 = "";
      doubleKeyMap0.remove("", "");
      Class<Map> class0 = Map.class;
      DoubleKeyMap<String, Object, Object> doubleKeyMap1 = null;
      try {
        doubleKeyMap1 = new DoubleKeyMap<String, Object, Object>(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleKeyMap<Object, Object, Integer> doubleKeyMap0 = new DoubleKeyMap<Object, Object, Integer>();
      HashMap<String, Map<String, Integer>> hashMap0 = new HashMap<String, Map<String, Integer>>();
      DoubleKeyMap<String, String, Integer> doubleKeyMap1 = new DoubleKeyMap<String, String, Integer>(hashMap0);
      Integer integer0 = new Integer(0);
      doubleKeyMap1.put((String) null, (String) null, integer0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoubleKeyMap<String, Object, String> doubleKeyMap0 = new DoubleKeyMap<String, Object, String>();
      doubleKeyMap0.newMap();
      doubleKeyMap0.remove("");
      String string0 = "\"t;QQsb\\.yiErS |";
      doubleKeyMap0.put("\"t;QQsb.yiErS |", (Object) null, "");
      doubleKeyMap0.put("\"t;QQsb.yiErS |", (Object) "\"t;QQsb.yiErS |", "\"t;QQsb.yiErS |");
      doubleKeyMap0.newMap();
      String string1 = "}4TX^nH!seFb'qlGF";
      doubleKeyMap0.get("}4TX^nH!seFb'qlGF");
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap1 = null;
      try {
        doubleKeyMap1 = new DoubleKeyMap<Object, String, String>(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(class0);
      Class<HashMap> class1 = HashMap.class;
      DoubleKeyMap<String, String, String> doubleKeyMap1 = new DoubleKeyMap<String, String, String>(class1);
      doubleKeyMap1.put("", "", "");
      doubleKeyMap1.get("", "");
      doubleKeyMap0.remove((Object) "", "(RcA=XNCI9K>");
      Class<Map> class2 = Map.class;
      DoubleKeyMap<Integer, String, Object> doubleKeyMap2 = null;
      try {
        doubleKeyMap2 = new DoubleKeyMap<Integer, String, Object>(class2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HashMap<String, Map<String, Object>> hashMap0 = new HashMap<String, Map<String, Object>>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      hashMap0.put((String) null, hashMap1);
      DoubleKeyMap<String, String, Object> doubleKeyMap0 = new DoubleKeyMap<String, String, Object>(hashMap0);
      doubleKeyMap0.remove((String) null, (String) null);
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<String, String, String> doubleKeyMap1 = new DoubleKeyMap<String, String, String>(class0);
      doubleKeyMap1.get("vHv.(]YM^])k%xA8h-*", "");
      DoubleKeyMap<Object, String, String> doubleKeyMap2 = new DoubleKeyMap<Object, String, String>(class0);
      doubleKeyMap2.remove((Object) doubleKeyMap0, (String) null);
      Integer integer0 = new Integer(1076);
      assertEquals(1076, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HashMap<String, Map<String, Object>> hashMap0 = new HashMap<String, Map<String, Object>>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      hashMap0.put((String) null, hashMap1);
      Object object0 = new Object();
      hashMap1.put((String) null, object0);
      hashMap0.put("", (Map<String, Object>) null);
      DoubleKeyMap<String, String, Object> doubleKeyMap0 = new DoubleKeyMap<String, String, Object>(hashMap0);
      doubleKeyMap0.remove((String) null, "%*");
      DoubleKeyMap<Object, Object, String> doubleKeyMap1 = new DoubleKeyMap<Object, Object, String>();
      Object object1 = new Object();
      Object object2 = new Object();
      Integer integer0 = new Integer(0);
      Object object3 = new Object();
      doubleKeyMap1.get((Object) integer0, object3);
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap2 = null;
      try {
        doubleKeyMap2 = new DoubleKeyMap<Object, String, String>(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }
}
