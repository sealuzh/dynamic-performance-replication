/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:44:46 GMT 2018
 */

package weka.classifiers.bayes.net.search.ci;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm;
import weka.classifiers.functions.SMO;
import weka.classifiers.lazy.IBk;
import weka.classifiers.lazy.kstar.KStarConstants;
import weka.core.Attribute;
import weka.core.Instances;
import weka.core.NormalizableDistance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ICSSearchAlgorithm_ESTest extends ICSSearchAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray0 = new String[0];
      iCSSearchAlgorithm0.setOptions(stringArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String string0 = iCSSearchAlgorithm0.globalInfo();
      assertEquals("This Bayes Network learning algorithm uses conditional independence tests to find a skeleton, finds V-nodes and applies a set of rules to find the directions of the remaining arrows.", string0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.listOptions();
      String string0 = iCSSearchAlgorithm0.getRevision();
      assertEquals("8034", string0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      String string0 = iCSSearchAlgorithm_SeparationSet0.getRevision();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertEquals("8034", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains((-1029));
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      boolean[][] booleanArray0 = new boolean[1][2];
      String[] stringArray0 = iCSSearchAlgorithm0.getOptions();
      try { 
        iCSSearchAlgorithm0.setOptions(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.SelectedTag", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IBk iBk0 = new IBk();
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureBayesScore();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("\tWhether NOT use pruning\n\t(default: use pruning)", arrayList1);
      iCSSearchAlgorithm0.setMaxCardinality((-1160));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Instances instances0 = new Instances("ond", arrayList0, 2);
      instances0.toArray((Object[]) iCSSearchAlgorithm0.TAGS_SCORE_TYPE);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      iBk0.meanSquaredTipText();
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      boolean[][] booleanArrayArray0 = null;
      int int0 = 0;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.next((-513), (-513), 0, (boolean[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IBk iBk0 = new IBk();
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureBayesScore();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("\tWhether NOT use pruning\n\t(default: use pruning)", arrayList1);
      iCSSearchAlgorithm0.setMaxCardinality((-1160));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Instances instances0 = new Instances("", arrayList0, 2);
      instances0.toArray((Object[]) iCSSearchAlgorithm0.TAGS_SCORE_TYPE);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      iBk0.meanSquaredTipText();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)106;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      iCSSearchAlgorithm0.next(1, 1, 2, (boolean[][]) null);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(1024, (-1), 1927, (boolean[][]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm$SeparationSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      IBk iBk0 = new IBk();
      double double0 = KStarConstants.INITIAL_STEP;
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      bayesNet0.getCapabilities();
      Attribute attribute0 = new Attribute("\tWheter T use pruning\n\t(default: use puning)", arrayList1);
      iCSSearchAlgorithm0.setMaxCardinality((-1124));
      arrayList0.trimToSize();
      Instances instances0 = new Instances("string", arrayList0, 2);
      attribute0.copy("Z(,j<#I?F@Mp");
      int int0 = SMO.FILTER_NORMALIZE;
      arrayList0.add(attribute0);
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      IBk iBk0 = new IBk();
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute(".bsi", arrayList1);
      arrayList0.add(attribute0);
      Attribute attribute1 = new Attribute("relational");
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("date", arrayList0, 1);
      iBk0.windowSizeTipText();
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      IBk iBk0 = new IBk();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      BayesNet bayesNet0 = new BayesNet();
      double double0 = KStarConstants.ROOT_FINDER_ACCURACY;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[2] = null;
      Instances instances0 = new Instances((String) null, arrayList0, 2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".bsi");
      byte[] byteArray0 = new byte[11];
      instances0.setRelationName((String) null);
      byteArray0[2] = (byte)0;
      iBk0.toString();
      byteArray0[4] = (byte)0;
      iCSSearchAlgorithm0.setMarkovBlanketClassifier(false);
      arrayList0.add((Attribute) null);
      iBk0.setKNN((byte)0);
      instances0.setRelationName((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".arff");
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = KStarConstants.EPSILON;
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      iCSSearchAlgorithm0.getRevision();
      Attribute attribute0 = new Attribute("\tWhether NOT use pruning\n\t(default: use pruning)", arrayList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      Attribute attribute1 = new Attribute("real", arrayList0);
      iCSSearchAlgorithm0.setMaxCardinality(0);
      attribute1.copy("");
      Attribute.typeToString(2);
      String[] stringArray0 = new String[20];
      stringArray0[1] = "real";
      attribute1.enumerateValues();
      Attribute.main(stringArray0);
      Attribute.typeToString(486);
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("relational", arrayList1, 1);
      arrayList1.add(attribute1);
      iCSSearchAlgorithm0.maxCardinalityTipText();
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      IBk iBk0 = new IBk();
      BayesNet bayesNet0 = new BayesNet();
      bayesNet0.measureAICScore();
      FileSystemHandling.shouldAllThrowIOExceptions();
      double[] doubleArray0 = new double[5];
      doubleArray0[3] = (double) 1;
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Instances instances0 = new Instances(".bsi", arrayList0, 2);
      instances0.clear();
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[1] = true;
      booleanArray0[5] = true;
      boolean[][] booleanArray1 = new boolean[7][3];
      booleanArray1[0] = booleanArray0;
      booleanArray1[1] = booleanArray0;
      booleanArray1[2] = booleanArray0;
      booleanArray1[3] = booleanArray0;
      booleanArray1[4] = booleanArray0;
      booleanArray1[5] = booleanArray0;
      booleanArray1[6] = booleanArray0;
      iCSSearchAlgorithm0.existsSepSet(6, 1902, 2, booleanArray1);
      bayesNet0.estimatorTipText();
      String[] stringArray0 = new String[3];
      ICSSearchAlgorithm.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      intArray0[1] = (-1);
      intArray0[2] = (-1239);
      intArray0[3] = 36;
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      iCSSearchAlgorithm_SeparationSet0.contains((-1029));
      ICSSearchAlgorithm.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      double double0 = KStarConstants.ROOT_FINDER_ACCURACY;
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Attribute attribute0 = new Attribute("\tWhether NOT use pruning\n\t(default: use pruning)", arrayList1);
      iCSSearchAlgorithm0.setMaxCardinality((-1153));
      arrayList0.trimToSize();
      Instances instances0 = new Instances("string", arrayList0, 2);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      String[] stringArray0 = new String[2];
      arrayList1.iterator();
      Attribute.main(stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      bayesNet0.getCapabilities();
      Attribute attribute0 = new Attribute("weka/core/Capabilities.props");
      iCSSearchAlgorithm0.setMaxCardinality((-1124));
      arrayList0.trimToSize();
      double double0 = KStarConstants.INITIAL_STEP;
      Instances instances0 = new Instances("string", arrayList0, 2);
      arrayList0.parallelStream();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BayesNet bayesNet1 = new BayesNet();
      IBk iBk0 = new IBk(1);
      bayesNet1.setBIFFile("relational");
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BayesNet bayesNet0 = new BayesNet();
      IBk iBk0 = new IBk();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      bayesNet0.getCapabilities();
      Attribute attribute0 = new Attribute("weka/core/Capabilities.props");
      iCSSearchAlgorithm0.setMaxCardinality((-1124));
      arrayList0.trimToSize();
      double double0 = KStarConstants.FLOOR;
      arrayList1.add("relational");
      Instances instances0 = new Instances("string", arrayList0, 2);
      arrayList0.parallelStream();
      instances0.toArray();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      int int0 = NormalizableDistance.R_WIDTH;
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      BayesNet bayesNet1 = new BayesNet();
      IBk iBk1 = new IBk(2);
      bayesNet1.setBIFFile("relational");
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }
}
