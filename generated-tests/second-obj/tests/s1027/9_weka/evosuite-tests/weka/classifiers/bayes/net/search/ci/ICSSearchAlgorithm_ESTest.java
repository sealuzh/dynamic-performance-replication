/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:55:24 GMT 2018
 */

package weka.classifiers.bayes.net.search.ci;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CostMatrix;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instances;
import weka.core.ProtectedProperties;
import weka.core.tokenizers.NGramTokenizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ICSSearchAlgorithm_ESTest extends ICSSearchAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray0 = new String[0];
      iCSSearchAlgorithm0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.maxn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.listOptions();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(6);
      assertFalse(boolean0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.m_instances = null;
      int int0 = 0;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      FileSystemHandling.shouldAllThrowIOExceptions();
      iCSSearchAlgorithm_SeparationSet0.contains(0);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.name(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray0 = iCSSearchAlgorithm0.getOptions();
      BayesNet bayesNet0 = new BayesNet();
      BayesNet bayesNet1 = new BayesNet();
      boolean[][] booleanArray0 = new boolean[3][3];
      boolean[] booleanArray1 = new boolean[4];
      booleanArray1[0] = true;
      BayesNet bayesNet2 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setOptions(stringArray0);
      BayesNet bayesNet3 = new BayesNet();
      assertFalse(bayesNet3.getDebug());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      String string0 = iCSSearchAlgorithm_SeparationSet0.getRevision();
      assertEquals("8034", string0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Whether to use binary splits on nominal attributes when building the partial trees.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("Class for building and using a 0-R classifier. Predicts the mean (for a numeric class) or the mode (for a nominal class).");
      Instances instances0 = new Instances("@end", arrayList0, 2);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-2064));
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      iCSSearchAlgorithm0.globalInfo();
      boolean[][] booleanArray0 = new boolean[0][8];
      iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
      assertEquals((-2064), iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute(" seconds", 58);
      Attribute attribute1 = new Attribute(" seconds");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute1);
      Instances instances0 = new Instances("numeric", arrayList0, 2);
      instances0.setRelationName("real");
      arrayList0.add(attribute0);
      Instances instances1 = new Instances(instances0, 2);
      BayesNet bayesNet0 = new BayesNet();
      try { 
        iCSSearchAlgorithm0.search(bayesNet0, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.BayesNet", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute(" seconds", 58);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("numeric", arrayList0, 2);
      instances0.setRelationName("real");
      iCSSearchAlgorithm0.setMaxCardinality(0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Whether to use binary splits on nominal attributes when building the partial trees.");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("Class for building and using a 0-R classifier. Predicts the mean (for a numeric class) or the mode (for a nominal class).");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@end", arrayList0, 2);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-2064));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getRevision();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm0.setMaxCardinality((-2373));
      iCSSearchAlgorithm0.maxCardinalityTipText();
      iCSSearchAlgorithm0.getOptions();
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute(".@q", protectedProperties0);
      protectedProperties0.putIfAbsent("When determining whether an edge exists a search is performed for a set Z that separates the nodes. MaxCardinality determines the maximum size of the set Z. This greatly influences the length of the search. Default value is 2.", properties0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Instances instances0 = new Instances("string", arrayList0, 0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      Object object0 = new Object();
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm0.setMaxCardinality((-2373));
      String string0 = CostMatrix.FILE_EXTENSION;
      Locale.getISOLanguages();
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute0 = new Attribute(".@q", protectedProperties0);
      protectedProperties0.putIfAbsent(".cost", properties0);
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("string", arrayList0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      properties0.elements();
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      Object object0 = new Object();
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Properties properties0 = new Properties();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      iCSSearchAlgorithm_SeparationSet0.contains((-3720));
      iCSSearchAlgorithm0.maxCardinalityTipText();
      iCSSearchAlgorithm0.getOptions();
      Properties properties1 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        protectedProperties0.put(object0, iCSSearchAlgorithm_SeparationSet0.m_set);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ProtectedProperties cannot be modified!
         //
         verifyException("weka.core.ProtectedProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("", "");
      attribute0.isInRange((-393.93577624295057));
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Attribute.typeToString(1);
      Properties properties0 = new Properties();
      ProtectedProperties protectedProperties0 = new ProtectedProperties(properties0);
      Attribute attribute1 = new Attribute("@attribute", protectedProperties0);
      Object object0 = new Object();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList3 = new ArrayList<Attribute>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "relational";
      ICSSearchAlgorithm.main(stringArray0);
      Instances instances0 = new Instances("(mUsF(_U-ScTzE", arrayList1, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      arrayList2.add(attribute1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3");
      ArrayList<Attribute> arrayList4 = new ArrayList<Attribute>();
      ICSSearchAlgorithm iCSSearchAlgorithm1 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm1.maxCardinalityTipText();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<Attribute> arrayList5 = new ArrayList<Attribute>();
      arrayList5.add(attribute1);
      Random.setNextRandom(3);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      iCSSearchAlgorithm0.globalInfo();
      iCSSearchAlgorithm1.getOptions();
      iCSSearchAlgorithm0.existsSepSet(4, 0, 1, (boolean[][]) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm iCSSearchAlgorithm1 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute((String) null, "");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Attribute.typeToString(1);
      Instances instances0 = new Instances("`v/m;\u0004iOi]p", arrayList0, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      arrayList2.add(attribute0);
      ICSSearchAlgorithm iCSSearchAlgorithm2 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList3 = new ArrayList<Attribute>(2);
      ArrayList<Attribute> arrayList4 = new ArrayList<Attribute>();
      arrayList4.add(attribute0);
      ICSSearchAlgorithm iCSSearchAlgorithm3 = new ICSSearchAlgorithm();
      Random.setNextRandom((-1463));
      Instances instances1 = new Instances(instances0);
      iCSSearchAlgorithm1.search((BayesNet) null, instances1);
      NGramTokenizer nGramTokenizer0 = new NGramTokenizer();
      ICSSearchAlgorithm iCSSearchAlgorithm4 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm iCSSearchAlgorithm5 = new ICSSearchAlgorithm();
      boolean[][] booleanArray0 = new boolean[9][8];
      boolean[] booleanArray1 = new boolean[4];
      booleanArray1[0] = true;
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm5.new SeparationSet();
      iCSSearchAlgorithm1.existsSepSet(Integer.MAX_VALUE, 3, 2, booleanArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute("", "");
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      Attribute.typeToString(193);
      Instances instances0 = new Instances("@end", arrayList0, 4);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "real");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance(3);
      boolean[][] booleanArrayArray0 = null;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.next((-1286), 10, (-1286), (boolean[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }
}
