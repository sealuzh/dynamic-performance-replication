/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:42:10 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.SocketAddress;
import java.net.UnknownHostException;
import java.util.Calendar;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Socket_data;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConfigurationManagement.setAuth_before_save_file(1527);
      ConfigurationManagement.setAuth_before_save_file((-1845824503));
      FromClient fromClient0 = new FromClient();
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(50);
      int int0 = Calendar.MILLISECOND;
      login0.check_ip((InetAddress) null);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login0.do_initTXT();
      int int0 = login0.check_auth_sync();
      assertEquals(0, int0);
      
      InetAddress inetAddress0 = MockInetAddress.getByName("J'CsO");
      login0.check_ip(inetAddress0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login.setPASSWORDENC(31040);
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(2);
      Login.mmo_auth_syncXML();
      // Undeclared exception!
      try { 
        login0.parse_console("end");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login.mmo_auth_initXML();
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_console("pU?r5%FAZlGm3W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login.login_log("dNclz8a{(e");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockInetAddress.getLocalHost();
      FromAdmin fromAdmin0 = new FromAdmin();
      int int0 = Login.getPASSWORDENC();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw((String) null);
      Login.mmo_auth_initTXT();
      login0.getAuth_max();
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Login.mmo_auth_initTXT();
      MockSocket mockSocket0 = new MockSocket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromAdmin0);
      socket_data0.setMd5key("conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        login0.parse_admin((-1910739304), socket_data0, (Login) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      // Undeclared exception!
      try { 
        login0.check_auth_sync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login login0 = new Login();
      login0.getLog_fp();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("_`E-8TS*F-7p-nE|[", 10, inetAddress0, 50);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@960efe3c
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.check_ipmask((-36802500), "javolution.text.Text");
      assertEquals(0, int0);
      
      login0.getLog_fp();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Login login0 = new Login();
      Login.auth_num = 30;
      Login.mmo_auth_syncTXT();
      int int0 = FromClient.ALIVE_PACKET;
      MockSocket mockSocket0 = new MockSocket();
      // Undeclared exception!
      try { 
        Login.login_log("conf/subnet_athena.conf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("start_limited_time");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S{*H");
      Login login0 = new Login();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login.getMd5Data(socket_data0);
      assertEquals("2345678910111213", socket_data0.getMd5key());
      assertEquals(0, socket_data0.getEof());
      
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      Login.auth_num = 2;
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      Login.End login_End0 = login0.new End();
      login_End0.run();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login login0 = new Login();
      login0.setAuth_max(31038);
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("conf/subnet_athena.conf", 100000000, inetAddress0, 3092);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:100000000
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file(315);
      login0.parse_console("TF\"$otW50&Y7U_7");
      FromClient fromClient0 = new FromClient();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("com.thoughtworks.xstream.converters.basic.FloatConverter");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum((-1628274810));
      login0.getServer_fd();
      Login.setPASSWORDENC((-434));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      login0.check_ipmask(4023, "default");
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login.getMd5Data(socket_data0);
      socket_data0.setListenPort((-2751));
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(30);
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "conf/subnet_athena.conf");
      CharArrayWriter charArrayWriter2 = charArrayWriter1.append('Z');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter2, true);
      login0.setOut(mockPrintWriter0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("                                                                             ", 50);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Login login0 = new Login();
      UserManagement.setAccountIdCount(50);
      Login.mmo_auth_syncXML();
      login0.getOut();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte) (-79);
      byte byte0 = (byte)72;
      byteArray0[6] = (byte)72;
      byteArray0[7] = (byte)42;
      try { 
        MockInetAddress.getByAddress("conf/subnet_athena.conf", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [0, -82, -36, -87, 94, -79, 72, 42]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file(1543);
      Login.auth_num = 50;
      int int0 = FromClient.CODING_KEY_ADMINISTRATION;
      FromClient fromClient0 = new FromClient();
      Login.display_title();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file((-1489));
      login0.parse_console("J'CsO");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom(2000000);
      // Undeclared exception!
      Login.mmo_auth_initXML();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "login_log_35");
      Login.getDbManagemtType();
      Random.setNextRandom(103);
      Login login0 = new Login();
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file(9);
      Login.login_log("J'CsO");
      int int0 = login0.parse_console("~V!{-6~biA[`|n");
      FromClient fromClient0 = new FromClient();
      Login.mmo_auth_initTXT();
      boolean boolean0 = login0.yesNoOnOffToBoolean("OFF");
      assertFalse(boolean0);
      
      int int1 = login0.getAuth_max();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte) (-113);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Login login0 = new Login();
      EvoSuiteFile evoSuiteFile0 = null;
      login0.getAuth_num();
      login0.do_final();
      Login.showTab(byteArray0);
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "conf/subnet_athena.conf");
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 100000000;
      ConfigurationManagement.setSubnetmaski(intArray0);
      login0.parse_console("info_8");
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file(50);
      Login.login_log("J|Csl");
      login0.check_auth_sync();
      login0.parse_console("m(CE");
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file(1543);
      Login.login_log("quit");
      // Undeclared exception!
      try { 
        login0.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      login0.parse_console("4X{:k$7~ I[=D,");
      int int0 = Calendar.THURSDAY;
      Login.mmo_auth_initXML();
      login0.yesNoOnOffToBoolean("YES");
      MockFile mockFile0 = new MockFile("r", "4X{:k$7~ I[=D,");
      Login login1 = new Login();
      // Undeclared exception!
      login1.check_auth_sync();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.mmo_auth_syncTXT();
      Login.login_log("\"e");
      FromClient fromClient0 = new FromClient();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "conf/subnet_athena.conf");
      ConfigurationManagement.setAuth_before_save_file(0);
      ConfigurationManagement.lesslessAuth_before_save_file();
      String string0 = "`uit";
      Login.login_log((String) null);
      int int0 = Calendar.OCTOBER;
      UserManagement.addUserTXT("JR*$$~ST;-", (String) null, "`uit", ' ');
      ConfigurationManagement.setAuth_before_save_file(100000000);
      login0.parse_console("VWv^\"-t~+MUr");
      Login.End login_End0 = login0.new End();
      FromClient fromClient0 = new FromClient();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.login_log("conf/subnet_athena.conf");
      login0.parse_console("long");
      login0.parse_console("long");
      FromAdmin fromAdmin0 = new FromAdmin();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromAdmin0);
      Socket_data socket_data1 = new Socket_data(mockSocket0);
      login0.parse_console("No such field ");
      FromClient fromClient0 = new FromClient();
      Login.mmo_auth_initTXT();
      login0.getLog_fp();
      Login.mmo_auth_initTXT();
      login0.yesNoOnOffToBoolean("ON");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      login0.getAuth_max();
      Login login1 = new Login();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(30);
      login0.save_config_in_log();
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      ConfigurationManagement.setAuth_before_save_file((-2178));
      login0.parse_console("J|Csl");
      login0.parse_console("J|Csl");
      login0.parse_console("J|Csl");
      ConfigurationManagement.lesslessAuth_before_save_file();
      Login.login_log("conf/subnet_athena.conf");
      MockSocket mockSocket0 = new MockSocket();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FromClient fromClient0 = new FromClient();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      Login.mmo_auth_syncTXT();
      Login.login_log("J|Csl");
      FromClient fromClient1 = new FromClient();
      int int0 = FromChar.CHANGE_AN_EMAIL;
      login0.check_auth_sync();
      Socket_data socket_data1 = null;
      Login.logUnknownPackets((Socket_data) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte)62;
      byteArray0[2] = (byte) (-15);
      try { 
        MockInetAddress.getByAddress("rm+,/MEL#r+NW6IL", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-122, 62, -15]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }
}
