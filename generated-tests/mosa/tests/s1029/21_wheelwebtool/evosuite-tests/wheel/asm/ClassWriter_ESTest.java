/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 19:42:30 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Item;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      int int0 = classWriter0.addType("wheel.asm.MethodWriter");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.newConstItem("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.newConst(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      Boolean boolean0 = new Boolean(false);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.addType("java/lang/String");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.newMethodItem("", "", "", true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.visitEnd();
      Float float0 = new Float((float) 1);
      classWriter0.newConst(float0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      byte[] byteArray0 = ClassWriter.TYPE;
      // Undeclared exception!
      try { 
        classWriter0.newConst(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value [B@690128d3
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1714));
      Double double0 = new Double((-1714));
      classWriter0.newConstItem(double0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1380);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1131));
      classWriter0.newMethod("The suffix must not be null", "The suffix must not be null", "The suffix must not be null", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.newMethodItem("Enceosingethod", "Enceosingethod", "Enceosingethod", false);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-124));
      classWriter0.visitOuterClass("v*j", "v*j", "v*j");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5616));
      classWriter0.cr = null;
      classWriter0.newInteger(0);
      classWriter0.newDouble((-5616));
      classWriter0.newDouble(0);
      classWriter0.newDouble(0.0);
      classWriter0.newDouble(0.0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(264);
      classWriter0.visitSource("SourceFile", "SourceFile");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1228));
      classWriter0.newConstItem(1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1562));
      classWriter0.newFloat((-1562));
      classWriter0.newFloat((-1562));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1592);
      Long long0 = new Long(2472L);
      classWriter0.newConstItem(long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.visitOuterClass("", "v*%dql7&B-rsR|", (String) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1908));
      classWriter0.toByteArray();
      classWriter0.visitSource("cssa1F*A", (String) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4360));
      classWriter0.visitAnnotation("1]i|aL6m}r!Wv5VKP=", false);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(41);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      classWriter1.newField("wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      ClassWriter classWriter1 = new ClassWriter(2);
      Short short0 = new Short((short) (-1));
      classWriter0.newConstItem(short0);
      classWriter1.toByteArray();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3245));
      classWriter0.newMethodItem("lWkZ^Y3,%%p/C{uR", "lWkZ^Y3,%%p/C{uR", "lWkZ^Y3,%%p/C{uR", true);
      classWriter0.newField("lWkZ^Y3,%%p/C{uR", "lWkZ^Y3,%%p/C{uR", "lWkZ^Y3,%%p/C{uR");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(680);
      classWriter0.visitOuterClass("", (String) null, (String) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value [B@1d11c680
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      Byte byte0 = new Byte((byte) (-97));
      classWriter0.newConstItem(byte0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-129));
      classWriter0.addUninitializedType("wheel.asm.MethodWriter", (-129));
      classWriter0.newMethodItem("wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", true);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-129), (-129), "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter", stringArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.addType("RuntimeVisibleAnnotations");
      classWriter0.addUninitializedType("RuntimeVisibleAnnotations", 1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      classWriter0.visit((-206), (-206), "The FileFilter must not be null", "Kkb{0Hxg", "The FileFilter must not be null", (String[]) null);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(245);
      classWriter0.threshold = 245;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(245, 245, "", "", "G=$", stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(264);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "byte";
      stringArray0[1] = "byte";
      stringArray0[2] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(554, 554, "byte", "byte", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.visitInnerClass(")", ")", ")", 2192);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4346));
      classWriter0.newClass("Ljava/lang/Synthetic;");
      classWriter0.newField("i/2", "i/2", "i/2");
      classWriter0.visitSource((String) null, "Ljava/lang/Synthetic;");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-820));
      Character character0 = Character.valueOf('N');
      classWriter0.newConst(character0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(43);
      Byte byte0 = new Byte((byte)20);
      classWriter0.newConstItem(byte0);
      classWriter0.newConst(byte0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2220);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newLong(2220);
      ClassWriter classWriter1 = new ClassWriter(2);
      Item[] itemArray0 = new Item[1];
      Short.toUnsignedInt((short)48);
      classWriter1.typeTable = itemArray0;
      classWriter1.addType("value ");
      classWriter0.visitAnnotation("value ", true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.addType("guX!b`?sQ");
      classWriter0.addType("guX!b`?sQ");
      classWriter0.newClass("guX!b`?sQ");
      classWriter0.newFieldItem("org.apache.commons.io.filefilter.DirectoryFileFilter", "", "guX!b`?sQ");
      classWriter0.visitOuterClass("", "guX!b`?sQ", "");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter1.newLong(0L);
      classWriter1.newLong(0L);
      classWriter0.addUninitializedType("-0h,P[nNb4j", 1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(259);
      classWriter0.visitSource("Synthetic", "Synthetic");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-550));
      ClassWriter classWriter1 = new ClassWriter(6);
      // Undeclared exception!
      try { 
        classWriter1.newConstItem(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      Type type0 = Type.getObjectType("`syF$`+;^");
      Type type1 = type0.getElementType();
      classWriter0.newConstItem(type1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1518));
      Type type0 = Type.VOID_TYPE;
      classWriter0.newConst(type0);
      classWriter0.visitSource("SourceDebugExtension", "SourceDebugExtension");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      classWriter0.visitInnerClass("rpD'8%=\"QSPw7", "y,~d_^\"", "rpD'8%=\"QSPw7", 1409);
      classWriter0.visitInnerClass("RuntimeVisibleParameterAnnotations", "y,~d_^\"", "rpD'8%=\"QSPw7", (-5582));
      classWriter0.newDouble(0.0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-109));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "jPve8@{2?r3klP4))`&";
      stringArray0[1] = "jPve8@{2?r3klP4))`&";
      stringArray0[2] = "jPve8@{2?r3klP4))`&";
      stringArray0[3] = "value ";
      classWriter0.visitMethod((-109), "value ", "jPve8@{2?r3klP4))`&", "]rFjv0d=N, [", stringArray0);
      classWriter0.toByteArray();
      classWriter0.newClass("value ");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2192);
      classWriter0.visitAnnotation("", true);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      classWriter0.newConst("wheel.aHm.MbthodWrit!r");
      classWriter0.visitField(11, "wheel.aHm.MbthodWrit!r", "3t/*I", (String) null, "wheel.aHm.MbthodWrit!r");
      classWriter0.newMethodItem("wheel.aHm.MbthodWrit!r", "wheel.aHm.MbthodWrit!r", "wheel.aHm.MbthodWrit!r", false);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(259);
      classWriter0.visitField(259, "", "", "RuntimeInvisibleAnnotations", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2328);
      classWriter0.addUninitializedType("i/2", 26);
      classWriter0.visitEnd();
      classWriter0.addUninitializedType("i/2", 26);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1380);
      classWriter0.getCommonSuperClass("wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1366);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newField("wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
      classWriter0.newFieldItem("wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(229);
      classWriter0.visitAnnotation("x+`vpg]|6!vya\"]Yh", false);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      String string0 = "";
      classWriter0.visitField(6, "", "", "", "");
      classWriter0.newMethodItem("", "", "", true);
      classWriter0.toByteArray();
      classWriter0.newMethod("", "", "", true);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 262144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1750));
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.TrueFileFilter", "java/lang/String");
      classWriter0.getCommonSuperClass("java/lang/String", "java/lang/Object");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1715));
      classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Signature";
      stringArray0[1] = "(L.#wqbR@U#UN|u";
      classWriter0.visit(33, (-1715), "Signature", "Signature", "Exceptions", stringArray0);
      classWriter0.toByteArray();
      classWriter0.toByteArray();
      classWriter0.newMethod("(L.#wqbR@U#UN|u", "", "org.apache.commons.io.IOCase", false);
      classWriter0.newInteger(5);
      classWriter0.newInteger(16777217);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1715));
      Attribute attribute0 = new Attribute("V,wtB");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-59);
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(507);
      int int0 = 14;
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.HiddenFileFilter", 14);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*6U?`BP:Z#I");
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.TrueFileFilter");
      classWriter0.toByteArray();
      ClassWriter classWriter1 = new ClassWriter(12);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(21, 21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
