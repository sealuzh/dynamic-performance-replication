/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:34:53 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassWriter classWriter1 = new ClassWriter((-2));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2142), "", "", (String) null, "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("kMq=j+i", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1754, "", "", "", "");
      fieldWriter0.getSize();
      System.setCurrentTimeMillis(0L);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "qvin4UE1An~qGW!S^!h", "", "ConstantValue", "");
      classWriter0.newNameType("qvin4UE1An~qGW!S^!h", "qvin4UE1An~qGW!S^!h");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "LocalVariableTypeTable", "<Jly!v+>1", "LineNumberTable", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.toByteArray();
      classWriter0.newField("", "u6jG54:W-Ogjz", "u6jG54:W-Ogjz");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-536), "", "", "", "");
      System.setCurrentTimeMillis(0L);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      fieldWriter1.put(byteVector0);
      FieldWriter fieldWriter2 = fieldWriter0.next;
      assertNull(fieldWriter2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(16777216);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777216, "", "", "", "");
      fieldWriter0.visitAnnotation("ir:z@Ox^beuXN>o", false);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      System.setCurrentTimeMillis(2);
      int int1 = fieldWriter0.getSize();
      assertEquals(36, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      System.setCurrentTimeMillis((-889275714));
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-55), "_@)Dx/jgi>fg", "", "n", "_@)Dx/jgi>fg");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 90, "", "org.apache.commons.io.filefilter.EmptyFileFilter", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = classWriter0.newNameType("KghCWW-", "");
      assertEquals(5, int0);
      
      fieldWriter0.visitAnnotation("F[^t(r2=3*Yc2C!Bg:v", true);
      int int1 = fieldWriter0.getSize();
      assertEquals(28, int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2116), "", "", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("R\"O@|FO9", true);
      System.setCurrentTimeMillis((-2979L));
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("R\"O@|FO9");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.newField("", "u6jG54:W-Ogjz", "u6jG54:W-Ogjz");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ".class", "", "u6jG54:W-Ogjz", "u6jG54:W-Ogjz");
      System.setCurrentTimeMillis(2);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("");
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "Deprecated", ".class", (String) null, "");
      int int0 = fieldWriter1.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.toByteArray();
      int int0 = Frame.FLOAT;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777218, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      System.setCurrentTimeMillis((-41L));
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.toByteArray();
      classWriter0.newField("", "u6jG54:W-Ogjz", "u6jG54:W-Ogjz");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-536), "", "", "", "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "u6jG54:W-Ogjz";
      stringArray0[2] = "@";
      classWriter0.visit(2746, (-4611), "", "u6jG54:W-Ogjz", "M+-&bB>}J{He&ay7i", stringArray0);
      System.setCurrentTimeMillis(16777225);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.getSize();
      System.setCurrentTimeMillis(2539L);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.toByteArray();
      classWriter0.threshold = 0;
      classWriter0.newField("", "u6jG54:W-Ogjz", "u6jG54:W-Ogjz");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-943), "+4N(^%Pi2='82<c2", "", "", "jwt{1Z3-rs]#");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-943), "", "_L@aHq-== j7wq", (String) null, "");
      int int0 = classWriter0.newUTF8("jwt{1Z3-rs]#");
      assertEquals(7, int0);
      
      System.setCurrentTimeMillis(2);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter2.put(byteVector0);
      int int1 = fieldWriter1.getSize();
      assertEquals(28, int1);
  }
}
