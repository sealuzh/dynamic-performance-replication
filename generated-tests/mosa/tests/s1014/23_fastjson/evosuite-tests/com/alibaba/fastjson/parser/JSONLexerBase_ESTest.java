/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:17:07 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.JSONScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.CharArrayReader;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PushbackReader;
import java.io.StringReader;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TimeZone;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONLexerBase_ESTest extends JSONLexerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(":");
      jSONScanner0.scanUUID('o');
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : :pos 0, json : :
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONScanner jSONScanner1 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("se8et", 0);
      SymbolTable symbolTable0 = new SymbolTable(39);
      Class<String> class0 = String.class;
      jSONReaderScanner0.scanEnum(class0, symbolTable0, '\'');
      jSONReaderScanner0.nextToken((-1096));
      assertEquals(1, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";vscan new error", (-123008));
      jSONReaderScanner0.scanBoolean('7');
      boolean boolean0 = jSONReaderScanner0.isEnabled((-123008), 84);
      assertFalse(boolean0);
      
      jSONReaderScanner0.bytesValue();
      assertEquals((-123008), jSONReaderScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("scan new error", (-123008));
      assertEquals(0, jSONReaderScanner0.matchStat);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.scanBoolean('7');
      SymbolTable symbolTable0 = new SymbolTable(45);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, '7');
      assertEquals((-123008), jSONReaderScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.close();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDate('x');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("unclosed string : ", (-2822));
      jSONScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONScanner0.nextIdent();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("ZvN", (-2830));
      jSONScanner0.nextIdent();
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('[');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("`i[ck]v@=?Q:ez@jJ", 'd');
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('d');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("*", 0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("*", 0);
      char[] charArray0 = new char[4];
      jSONReaderScanner0.nextToken(796);
      assertEquals('\u001A', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK", 2371);
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 5, 0);
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      jSONReaderScanner0.setTimeZone(timeZone0);
      assertEquals((-2), jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("@type");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(8);
      SymbolTable symbolTable0 = new SymbolTable(66);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'x';
      charArray0[1] = 'D';
      charArray0[2] = '2';
      charArray0[3] = 'F';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0);
      jSONScanner0.isBlankInput();
      jSONScanner0.scanISO8601DateIfMatch(false);
      assertEquals(20, jSONScanner0.token());
      
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1099);
      boolean boolean0 = jSONReaderScanner0.isEnabled(0, 2341);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.util.OptionalInt", 7);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(0);
      assertEquals(1, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = 2824;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2824);
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(">S8");
      SymbolTable symbolTable0 = new SymbolTable(41);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : >pos 0, json : >S8
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      Feature feature0 = Feature.IgnoreNotMatch;
      jSONScanner0.config(feature0, true);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONScanner0.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.util.concurrent.atomic.LongAdder");
      int int0 = jSONReaderScanner0.token();
      assertEquals(0, int0);
      assertEquals(989, jSONReaderScanner0.getFeatures());
      assertEquals(0, jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.nextIdent();
      jSONScanner0.scanFieldBigInteger(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(">S8");
      char[] charArray0 = new char[9];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(">S8");
      jSONReaderScanner0.putChar('\u0000');
      jSONScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONScanner jSONScanner0 = new JSONScanner("error parse true", (-1407));
      String string0 = jSONScanner0.tokenName();
      assertEquals(0, jSONScanner0.matchStat);
      assertEquals("Unknown", string0);
      assertEquals((-1407), jSONScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA.@V~y-IK");
      jSONReaderScanner0.longValue();
      SymbolTable symbolTable0 = new SymbolTable(66);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, 'Q');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. B
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      char[] charArray0 = new char[5];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.info();
      jSONScanner0.nextIdent();
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.getCalendar();
      jSONScanner0.scanFieldFloat(charArray0);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("@;%*k Wd.j");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("7'Q9UC}M", 65);
      jSONReaderScanner0.nextToken(0);
      assertEquals(2, jSONReaderScanner0.token());
      
      JSONScanner jSONScanner0 = new JSONScanner("tMS=5(Y0");
      assertEquals(989, jSONScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("@ul}");
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 32);
      jSONReaderScanner0.nextToken((int) '^');
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      JSONScanner jSONScanner0 = new JSONScanner("HDS");
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner1.scanFieldDouble(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("HD[OS");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!-)%sBt#*");
      boolean boolean0 = jSONReaderScanner0.isEnabled(72, 1145);
      assertTrue(boolean0);
      
      int int0 = jSONReaderScanner0.pos();
      assertEquals(989, jSONReaderScanner0.getFeatures());
      assertEquals(0, int0);
      assertEquals(0, jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("j6s");
      SymbolTable symbolTable0 = new SymbolTable(31);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0, '0');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 585;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("k5a", 585);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.doubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK", 2371);
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 5, 2371);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONScanner0.arrayCopy(2576, charArray0, 5, 2576);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = '0';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("prv.{+%RBH$}s|EC3A", 125);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.newCollectionByType(class0);
      jSONReaderScanner0.scanDate('0');
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner(charArray0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("scan false error", 0);
      char[] charArray0 = new char[6];
      charArray0[0] = '~';
      charArray0[1] = 'x';
      jSONReaderScanner0.scanBoolean('v');
      jSONReaderScanner0.isEnabled(93, 41);
      jSONReaderScanner0.bytesValue();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[1] = 'D';
      charArray0[2] = 'i';
      JSONScanner jSONScanner0 = new JSONScanner(" 8f`Pc>*");
      jSONScanner0.scanBoolean('H');
      jSONScanner0.scanUUID('D');
      jSONScanner0.scanIdent();
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray0, 97, (-1040));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("sz", 18);
      jSONReaderScanner0.scanDecimal('j');
      int int0 = Calendar.DST_OFFSET;
      jSONReaderScanner0.resetStringPosition();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK", 2392);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA.@V~y-IK");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(2);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("`i[ck]v@=?Q:ez@jJ", 'd');
      jSONScanner0.nextIdent();
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('d');
      jSONScanner0.nextToken((-1));
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      JSONScanner jSONScanner0 = new JSONScanner("true", 0);
      jSONScanner0.nextToken((-1));
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.close();
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanDate('$');
      jSONScanner0.sub_chars(0, 0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("SGx}>:J02j`F8&L2*=i");
      JSONScanner jSONScanner1 = new JSONScanner("SGx}>:J02j`F8&L2*=i", 70);
      jSONScanner0.isEOF();
      jSONScanner0.bytesValue();
      jSONScanner1.scanString('q');
      JSONScanner jSONScanner2 = new JSONScanner("SGx}>:J02j`F8&L2*=i");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("SGx}>:J02j`F8&L2*=i");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(34);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("!xoh\"CKv3XS7G.:ZDc");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!xoh\"CKv3XS7G.:ZDc");
      Feature feature0 = Feature.OrderedField;
      jSONReaderScanner0.config(feature0, true);
      jSONReaderScanner0.matchField(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("';U6O^<9q;^\"whnq", 0);
      StringReader stringReader0 = new StringReader("!xoh\"CKv3XS7G.:ZDc");
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner2.scanFieldInt(charArray0);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(stringReader0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = '$';
      charArray0[1] = 'y';
      charArray0[2] = '$';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 512, (-1506));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 17, 5);
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("BtGA", 5);
      jSONReaderScanner2.isEnabled((int) '$', 5);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Ebnj7rO$Rwr${4!b0", 0);
      char[] charArray0 = new char[3];
      int int0 = 123;
      JSONScanner jSONScanner0 = new JSONScanner("true", 123);
      jSONScanner0.scanUUID('G');
      Feature feature0 = Feature.DisableASM;
      jSONScanner0.config(feature0, false);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      jSONScanner0.scanIdent();
      jSONScanner0.scanFieldBoolean(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("5g'F5/)Xp2yIt");
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("AsIXK5zWi^>", 46);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      jSONReaderScanner1.scanFieldStringArray(charArray0, class0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONScanner jSONScanner0 = new JSONScanner("error");
      jSONScanner0.nextToken(15);
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.bytesValue();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("error", 725);
      jSONReaderScanner0.nextToken((-1536));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("~-?[+T-Ex", 2);
      jSONReaderScanner0.nextToken(16);
      jSONReaderScanner0.next();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("y 08LF");
      jSONScanner0.scanUUID('o');
      JSONScanner jSONScanner1 = new JSONScanner("set");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      jSONReaderScanner0.nextToken(20);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("TreeSet");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet");
      jSONScanner0.isBlankInput();
      jSONReaderScanner0.features = 0;
      JSONScanner jSONScanner1 = new JSONScanner("TreeSet");
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.getCurrent();
      jSONScanner0.scanFieldDouble(charArray0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK", 2371);
      char[] charArray0 = new char[2];
      JSONScanner jSONScanner1 = new JSONScanner("BtGA.@V~y-IK", 0);
      jSONScanner1.scanFieldFloatArray2(charArray0);
      jSONScanner0.scanUUID('x');
      // Undeclared exception!
      try { 
        jSONScanner1.scanSymbol((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      charArray0[1] = '{';
      SymbolTable symbolTable0 = new SymbolTable(43);
      JSONScanner jSONScanner0 = new JSONScanner("Z=*j$R!<U0n% !w");
      jSONScanner0.bytesValue();
      jSONScanner0.scanString('5');
      jSONScanner0.nextToken(8);
      jSONScanner0.skipComment();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 43);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - @, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 65);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.matchField2(charArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      char char0 = '{';
      charArray0[1] = '{';
      int int0 = 1488;
      JSONScanner jSONScanner0 = new JSONScanner("5r{ljLHY'@gY", 1488);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol((SymbolTable) null, '@');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0, 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, 115);
      jSONReaderScanner0.scanFieldDouble(charArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("IS8");
      SymbolTable symbolTable0 = new SymbolTable(6);
      jSONScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 4173, 104);
      jSONReaderScanner0.longValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - \u0000, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("!xoh\"CKv3XS7G.:ZDc");
      JSONScanner jSONScanner1 = new JSONScanner("!xoh\"CKv3XS7G.:ZDc");
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"`gG!'W^T%^/7", 0);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONScanner1.nextToken((-2));
      // Undeclared exception!
      try { 
        jSONScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      jSONScanner0.scanUUID('o');
      jSONScanner0.scanSymbol((SymbolTable) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("7'Q9UC}M", 65);
      jSONReaderScanner0.scanFieldInt(charArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("rror");
      jSONReaderScanner0.scanFieldInt(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("rror", (-1));
      int int0 = Calendar.FRIDAY;
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.hasSpecial = false;
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("';U6O^<9q;^\"whnq", 0);
      jSONReaderScanner1.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken(3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Feature.AllowSingleQuotes is false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      JSONScanner jSONScanner0 = new JSONScanner("HDS");
      SymbolTable symbolTable0 = new SymbolTable(41);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("';U6O^<9q;^\"whnq", 21);
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(21);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Feature.AllowSingleQuotes is false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      jSONScanner0.scanUUID('o');
      jSONScanner0.scanFieldDouble(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Set", 0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken((-510));
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          char[] charArray0 = new char[0];
          JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 65);
          jSONReaderScanner0.scanFieldInt(charArray0);
          jSONReaderScanner0.nextToken(2139);
          JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-");
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("5g'F5/)Xp2yIt", 0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("5g'F5/)Xp2yIt");
      char[] charArray0 = new char[7];
      charArray0[0] = 'u';
      jSONReaderScanner0.intValue();
      charArray0[1] = '\"';
      charArray0[3] = 'u';
      jSONReaderScanner0.scanInt('f');
      charArray0[4] = 'f';
      charArray0[5] = 'u';
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(8);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.intValue();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      Feature feature0 = Feature.AllowUnQuotedFieldNames;
      jSONScanner0.config(feature0, true);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.hasSpecial = false;
      JSONScanner jSONScanner1 = new JSONScanner("", 0);
      jSONReaderScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken((-1081));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      jSONScanner0.scanString('[');
      JSONScanner jSONScanner1 = new JSONScanner("eraar");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("eraar");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken((-989));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet");
      jSONReaderScanner0.nextToken((-3323));
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.tokenName();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-");
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.nextToken((-1));
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      JSONScanner jSONScanner0 = new JSONScanner("HDS");
      SymbolTable symbolTable0 = new SymbolTable(41);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 42);
      jSONReaderScanner0.nextToken(2);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      JSONScanner jSONScanner0 = new JSONScanner("HD['S");
      Locale locale0 = Locale.JAPANESE;
      jSONScanner0.setLocale(locale0);
      jSONScanner0.token = 2266;
      SymbolTable symbolTable0 = new SymbolTable(41);
      jSONScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextIdent();
      StringReader stringReader0 = new StringReader("scan false error");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner1.getCurrent();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = "]IB`\"vym6V";
      JSONScanner jSONScanner0 = new JSONScanner("]IB`\"vym6V");
      jSONScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONScanner0.integerValue();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("true", (-1));
      SymbolTable symbolTable0 = new SymbolTable(11);
      jSONScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanDate('x');
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK");
      char[] charArray0 = new char[2];
      jSONScanner0.scanFieldFloatArray2(charArray0);
      jSONScanner0.scanBoolean('x');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA.@V~y-IK");
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanDate('x');
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("V%W+>M#Z16JR}gu", 45380);
      jSONReaderScanner0.nextToken((-1148));
      jSONReaderScanner0.scanFieldDate(charArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("BtGA.@V~y-IK", 2371);
      char[] charArray0 = new char[2];
      JSONScanner jSONScanner1 = new JSONScanner("BtGA.@V~y-IK", 0);
      jSONScanner1.scanFieldFloatArray2(charArray0);
      jSONScanner1.scanBoolean('x');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2371, 0);
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 725);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(" - ", (-2108));
      jSONReaderScanner2.nextToken(36);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-", (-1712));
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      int int0 = Calendar.DST_OFFSET;
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("inxc9D%$ftWhcE(", 13);
      JSONScanner jSONScanner2 = new JSONScanner("inxc9D%$ftWhcE(");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("f|_E>}k]+,L", 13);
      System.setCurrentTimeMillis((-2));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.info();
      jSONScanner0.nextIdent();
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.scanFloat('}');
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!xoh\"CKv3XS7G.:ZDc");
      Locale locale0 = Locale.KOREAN;
      jSONReaderScanner0.scanInt('f');
      jSONReaderScanner0.scanDouble('w');
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set", 0);
      jSONReaderScanner0.scanInt('U');
      JSONScanner jSONScanner1 = new JSONScanner("null");
      // Undeclared exception!
      try { 
        jSONScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2vq3f*p'Oe2Qt");
      JSONScanner jSONScanner0 = new JSONScanner("java.util.concurrent.atomic.LongAdder", 1215);
      jSONScanner0.scanISO8601DateIfMatch(true);
      jSONReaderScanner0.scanInt('u');
      jSONScanner0.scanBoolean('u');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("*", (-3503));
      JSONScanner jSONScanner1 = new JSONScanner("*");
      jSONScanner1.scanUUID('u');
      // Undeclared exception!
      try { 
        jSONScanner1.scanSymbol((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : *pos 0, json : *
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = (-3503);
      JSONScanner jSONScanner0 = new JSONScanner("", (-3503));
      JSONScanner jSONScanner1 = new JSONScanner("");
      jSONScanner1.scanUUID('u');
      jSONScanner1.scanSymbol((SymbolTable) null);
      int int1 = 47;
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", ", 91);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.nextIdent();
      PipedReader pipedReader0 = new PipedReader();
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner(pipedReader0, 46);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Pipe not connected
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("2vq3f*p'Oe2Qt");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2vq3f*p'Oe2Qt", (-2));
      jSONScanner0.scanFieldBigInteger(charArray0);
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("`i[ck]v@=?Q:ez@jJ", 'd');
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('d');
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = 'd';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("yJV6w,", 10);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null");
      jSONScanner0.getTimeZone();
      jSONReaderScanner0.scanInt('\"');
      jSONReaderScanner1.scanDouble('f');
      jSONScanner0.nextToken(10);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("sortfield");
      jSONScanner0.info();
      jSONScanner0.nextIdent();
      jSONScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("sortfield");
      jSONScanner1.scanFloat('}');
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set", 0);
      jSONScanner0.scanFloat('@');
      jSONReaderScanner0.scanBoolean('~');
      jSONReaderScanner0.nextIdent();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.getLocale();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[2] = 'd';
      charArray0[1] = 'd';
      charArray0[2] = '\u0000';
      charArray0[5] = 'I';
      charArray0[5] = 'j';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 45);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(7);
      jSONReaderScanner0.nextToken(3678080);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = (-123008);
      String string0 = "(H]";
      JSONScanner jSONScanner0 = new JSONScanner("(H]");
      jSONScanner0.nextIdent();
      String string1 = null;
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithChar('9');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match 9 - H, info : pos 1, json : (H]
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      TimeZone timeZone0 = jSONScanner0.getTimeZone();
      jSONScanner0.timeZone = timeZone0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONScanner0.getTimeZone();
      int int0 = Calendar.FRIDAY;
      SymbolTable symbolTable0 = new SymbolTable(6);
      jSONScanner0.scanSymbol(symbolTable0);
      jSONReaderScanner0.scanStringArray((Collection<String>) null, 'U');
      jSONReaderScanner0.scanLong('U');
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("oo");
      JSONScanner jSONScanner1 = new JSONScanner("oo");
      jSONScanner0.scanBoolean('\"');
      jSONScanner1.nextToken((-1));
      jSONScanner1.scanString('g');
      JSONScanner jSONScanner2 = new JSONScanner("oo", (-1));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("N15");
      jSONReaderScanner0.nextToken(3383);
      int int0 = 5562;
      int int1 = 842;
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set");
      char[] charArray1 = new char[0];
      jSONScanner0.scanSymbolWithSeperator((SymbolTable) null, '@');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("05lX", 2495);
      jSONReaderScanner1.charArrayCompare(charArray1);
      int int0 = Calendar.MINUTE;
      jSONScanner0.scanBoolean('G');
      jSONScanner0.getCalendar();
      jSONScanner0.scanFieldFloat(charArray1);
      jSONReaderScanner0.scanFieldDouble(charArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      char[] charArray0 = new char[1];
      Feature feature0 = Feature.SupportArrayToBean;
      JSONScanner jSONScanner0 = new JSONScanner("\"@Dc#O9L2d-", (-2467));
      jSONScanner0.config(feature0, false);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("5g");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("unclosed.str.lit", 11);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("@kK8y8{+3-GyR", 11);
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken((-2467));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("undefined", 2377);
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.nextToken(368);
      jSONScanner0.scanString('v');
      JSONScanner jSONScanner1 = new JSONScanner("B");
      int int0 = Calendar.DST_OFFSET;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 110, 2377);
      jSONReaderScanner0.resetStringPosition();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = 'V';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("'S|{!vp\"dSE", 43);
      JSONScanner jSONScanner0 = new JSONScanner("9Ss0:~11D3?ytfp4/");
      jSONScanner0.nextIdent();
      jSONReaderScanner0.scanBoolean('W');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner1.nextIdent();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner1.getLocale();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("!xoh\"CKv3XS7G.:ZDc");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!xoh\"CKv3XS7G.:ZDc");
      Feature feature0 = Feature.OrderedField;
      jSONReaderScanner0.config(feature0, true);
      SymbolTable symbolTable0 = new SymbolTable(893);
      jSONReaderScanner0.scanFieldInt(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" - ");
      Class<Object> class0 = Object.class;
      jSONReaderScanner1.newCollectionByType(class0);
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0, 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - -, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONScanner.checkDate('}', '}', '}', 'k', '}', '2', 111, (-3208));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteDateUseDateFormat", 111);
      jSONReaderScanner0.matchStat();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("BtGA", (-1150));
      char[] charArray0 = new char[0];
      jSONReaderScanner0.nextToken(1149);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 6, 47);
      jSONReaderScanner1.scanFieldDate(charArray0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("java.util.concurrent.atomic.LongAdder", 218);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      jSONReaderScanner0.scanInt('i');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("java.util.concurrent.atomic.LongAdder");
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONScanner0.nextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("BtGA");
      char[] charArray0 = new char[6];
      charArray0[1] = 's';
      charArray0[2] = '2';
      charArray0[3] = '2';
      charArray0[4] = 'L';
      charArray0[4] = 'L';
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner1.nextToken(18);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'u';
      JSONScanner jSONScanner0 = new JSONScanner("HDS");
      SymbolTable symbolTable0 = new SymbolTable(41);
      jSONScanner0.scanFieldDouble(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("SGx");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("{", 0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("VFVP_a'#UNyKeB", 10);
      SymbolTable symbolTable0 = new SymbolTable(10);
      jSONScanner0.scanSymbolUnQuoted(symbolTable0);
      jSONScanner0.longValue();
      jSONScanner0.bytesValue();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONScanner jSONScanner1 = new JSONScanner("VFVP_a");
      jSONScanner0.scanUUID(')');
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("scan new error", (-123008));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanBoolean('7');
      jSONReaderScanner0.nextToken(13);
      SymbolTable symbolTable0 = new SymbolTable(45);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, '7');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. c
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA.@V~y-IK");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(2);
      Locale locale0 = Locale.ITALIAN;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      jSONReaderScanner0.scanStringArray(set0, '`');
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 45);
      jSONReaderScanner1.scanType("1=MJ .?qGq\"oB-");
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner1.pos();
      jSONReaderScanner1.scanDate('&');
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      jSONReaderScanner0.longValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("`i[ck]v@=?Q:ez@jJ", 'd');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('d');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".h,");
      jSONReaderScanner0.nextToken(67);
      jSONScanner0.tokenName();
      char char0 = File.separatorChar;
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "*";
      JSONScanner jSONScanner0 = new JSONScanner("*", 0);
      jSONScanner0.scanInt('u');
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jSONScanner0.nextIdent();
      SymbolTable symbolTable0 = new SymbolTable(7);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbolUnQuoted(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : \u001Apos 0, json : *
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("error", 2371);
      char[] charArray0 = new char[2];
      JSONScanner jSONScanner1 = new JSONScanner("error", 0);
      jSONScanner1.scanBoolean(':');
      jSONScanner1.nextToken((-2997));
      jSONScanner1.scanString(':');
      JSONScanner jSONScanner2 = new JSONScanner("T~0z|f._?z");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("error");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.nextToken(9);
      jSONReaderScanner0.next();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("jXJz(5<", 2503);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithColon(2503);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - j, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("SGx}>:J02j`F8&L2*=i", 70);
      JSONScanner jSONScanner1 = new JSONScanner("SGx}>:J02j`F8&L2*=i");
      jSONScanner0.isEOF();
      jSONScanner1.bytesValue();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(":TF3?o1");
      jSONReaderScanner0.nextToken(12);
      jSONReaderScanner0.nextToken(3161);
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 12);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(":TF3?o1");
      jSONReaderScanner0.scanLong('>');
      jSONReaderScanner0.nextToken((-2275));
      char[] charArray0 = new char[4];
      charArray0[0] = '@';
      charArray0[1] = '>';
      charArray0[2] = '@';
      charArray0[3] = '>';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+\"2I");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONScanner jSONScanner1 = new JSONScanner("writeenumusingname");
      JSONScanner jSONScanner2 = new JSONScanner("S_6Ab");
      // Undeclared exception!
      try { 
        jSONScanner2.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = Calendar.SEPTEMBER;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("~m2YJ^w$|?z\":DW ", 3);
      jSONReaderScanner0.scanDecimal('\'');
      jSONReaderScanner0.nextToken(46);
      jSONReaderScanner0.next();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 65);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('x');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("prv.{+%RBH$}s|EC3A", 3384);
      char char0 = 'c';
      jSONReaderScanner0.scanDecimal('c');
      int int0 = Calendar.DST_OFFSET;
      jSONReaderScanner0.nextToken(6);
      JSONScanner jSONScanner0 = new JSONScanner("!CA;\">#n]:7BC6X^S");
      JSONScanner jSONScanner1 = new JSONScanner("uvT}R.OUXI", 6);
      // Undeclared exception!
      try { 
        jSONScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      JSONLexerBase.readString(charArray0, 0);
      char[] charArray1 = new char[3];
      charArray1[0] = '^';
      charArray1[1] = '^';
      charArray1[2] = '^';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, '^');
      jSONReaderScanner0.nextToken(32);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[23];
      JSONScanner jSONScanner1 = new JSONScanner("+*uCso5m^<ihV9HAbkn", 0);
      jSONScanner1.nextIdent();
      SymbolTable symbolTable0 = new SymbolTable(983);
      // Undeclared exception!
      try { 
        jSONScanner1.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("pect ':' at ");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      StringReader stringReader0 = new StringReader("1=MJ .?qGq\"oB-");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      SymbolTable symbolTable0 = new SymbolTable(1544);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray(charArray0, (-2), symbolTable0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0, 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.intValue();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("y 08LF");
      jSONScanner0.scanUUID('o');
      jSONScanner0.nextToken(368);
      char[] charArray0 = new char[7];
      charArray0[0] = 'o';
      charArray0[1] = 'o';
      charArray0[2] = 'o';
      charArray0[4] = 'o';
      charArray0[5] = 'o';
      charArray0[6] = 'o';
      StringReader stringReader0 = new StringReader("y 08LF");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0, (-1));
      char[] charArray1 = new char[7];
      charArray1[0] = 'X';
      charArray1[1] = 'o';
      charArray1[2] = 'o';
      charArray1[3] = 'o';
      charArray1[4] = 'o';
      charArray1[5] = 'M';
      charArray1[6] = 'o';
      jSONReaderScanner0.scanFieldInt(charArray1);
      jSONReaderScanner0.nextToken(23);
      JSONScanner jSONScanner1 = new JSONScanner("y 08LF", (-1136));
      jSONScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray1, 2229, 123);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(stringReader0, (-3094));
      jSONReaderScanner2.scanInt('w');
      jSONReaderScanner2.close();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONScanner jSONScanner0 = new JSONScanner("pect ':' at ");
      JSONScanner jSONScanner1 = new JSONScanner("VkC8.KVYMS^jP&", 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Rcm$w", 0);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.charArrayCompare(charArray0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONScanner jSONScanner2 = new JSONScanner("Rcm$w");
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONScanner2.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 78);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanBoolean(')');
      jSONReaderScanner0.nextToken(2);
      SymbolTable symbolTable0 = new SymbolTable(3);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, '7');
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      jSONScanner0.scanFieldUUID(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("xTH xq3e`UY50F#GR'b");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(59);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. T
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = '0';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("prv.{+%RBH$}s|EC3A", 112);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanBoolean('0');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("%^|r:EmOi6+B9}?Jd X");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-");
      JSONScanner jSONScanner1 = new JSONScanner("undefined", 0);
      JSONScanner jSONScanner2 = new JSONScanner("false");
      jSONScanner2.nextIdent();
      jSONScanner2.scanString('@');
      // Undeclared exception!
      try { 
        jSONScanner2.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      System.setCurrentTimeMillis(2835L);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".h)-G,U5", (-4630));
      jSONReaderScanner0.sp = (-4630);
      char[] charArray0 = new char[1];
      char char0 = '`';
      charArray0[0] = '`';
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 58, 637);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3184);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 19, 42);
      jSONReaderScanner1.close();
      jSONReaderScanner0.scanBoolean('&');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 42);
      int int0 = 25;
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("mW3wdbh7", 25);
      jSONReaderScanner3.next();
      jSONReaderScanner2.scanLong('W');
      jSONReaderScanner1.nextToken(19);
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner(charArray0, 19);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("%zQh<ksx.5]T_5<", 112);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanBoolean('%');
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.getCurrent();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("=tK");
      Feature feature0 = Feature.SupportArrayToBean;
      jSONReaderScanner0.config(feature0, true);
      jSONReaderScanner0.matchField(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("=tK");
      jSONScanner0.nextIdent();
      jSONReaderScanner0.scanBoolean('^');
      jSONReaderScanner0.nextIdent();
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.getLocale();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
      JSONScanner jSONScanner0 = new JSONScanner("true", 0);
      jSONScanner0.scanFieldDouble(charArray0);
      jSONScanner0.close();
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanDate('$');
      jSONReaderScanner0.isEnabled(0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3, 3);
      jSONReaderScanner0.scanInt('0');
      jSONReaderScanner0.scanLong('0');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("/,", (-1));
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("'S|{!vp\"dSE");
      JSONScanner jSONScanner0 = new JSONScanner("rror");
      jSONScanner0.scanIdent();
      jSONReaderScanner1.scanFieldBoolean(charArray0);
      jSONReaderScanner2.scanDate('Z');
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set", 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null");
      jSONReaderScanner1.nextToken(12);
      jSONReaderScanner1.nextToken(93);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArrayReader0, 3161);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("14");
      jSONReaderScanner3.nextToken(0);
      SymbolTable symbolTable0 = new SymbolTable(51);
      jSONReaderScanner3.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner2.scanFieldFloatArray(charArray0);
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner("14");
      jSONReaderScanner4.scanDate('@');
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("slA2bq|~");
      jSONScanner0.nextIdent();
      jSONScanner0.scanFieldBigInteger(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("l3");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("l3");
      jSONScanner0.getTimeZone();
      jSONReaderScanner0.scanDouble('1');
      jSONScanner0.scanUUID('=');
      JSONScanner jSONScanner1 = new JSONScanner("l3");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("err parse nul or new");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("yJV6w,", 58);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("err parse nul or new");
      int int0 = Calendar.FRIDAY;
      int int1 = Calendar.MAY;
      jSONReaderScanner1.scanDouble('f');
      char[] charArray0 = new char[6];
      jSONReaderScanner1.scanInt('f');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.nextToken(4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONScanner0.charArrayCompare(charArray0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char char0 = 'u';
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 3384);
      jSONReaderScanner0.scanDecimal('u');
      int int0 = Calendar.DST_OFFSET;
      jSONReaderScanner0.nextToken(4);
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray0, 16, (-2837));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("xTH xq3e`UY50F#GR'b", (-1));
      JSONScanner jSONScanner2 = new JSONScanner("lJ");
      jSONScanner2.scanUUID('u');
      jSONScanner0.scanSymbol((SymbolTable) null);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"`gG!'W^T%^/7", (-2));
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("\"`gG!'W^T%^/7", 8);
      // Undeclared exception!
      try { 
        jSONScanner1.scanString('e');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 120, (-1807));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("\":\"");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("\":\"", (-1807));
      jSONScanner1.scanString('J');
      jSONScanner1.nextToken((-630));
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("pect ':' at ");
      JSONScanner jSONScanner1 = new JSONScanner("VkC8.KVYMS^jP&", 0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.nextToken(14);
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(1717);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("n`&eOz2)a,_wn4W");
      jSONScanner0.scanUUID('X');
      SymbolTable symbolTable0 = null;
      jSONScanner0.scanSymbol((SymbolTable) null);
      int int0 = 449;
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        jSONScanner0.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.Integer
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.close();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("n15");
      jSONReaderScanner1.scanDate('K');
      jSONScanner0.isEnabled((-1), 0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2HB=^rO");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONScanner0.skipWhitespace();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", 65);
      int int0 = Calendar.MAY;
      jSONReaderScanner0.scanDouble('f');
      jSONReaderScanner0.scanInt('i');
      jSONReaderScanner0.scanDouble('p');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("error parse false");
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("vnV/T%u,6]gg^", 0);
      jSONReaderScanner0.scanDecimal(')');
      int int0 = Calendar.DST_OFFSET;
      char[] charArray1 = new char[5];
      charArray1[0] = ')';
      charArray1[1] = '.';
      charArray1[2] = ')';
      charArray1[4] = '.';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray1, 55232);
      jSONReaderScanner1.nextToken(84);
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray1, 11, 41);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 120, (-1807));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("\":\"");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      jSONScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("\":\"", (-1));
      jSONScanner1.scanFieldDouble(charArray0);
      jSONScanner1.nextIdent();
      jSONScanner0.scanDecimal('=');
      jSONScanner0.scanDouble('Z');
      Class<InputStream> class0 = InputStream.class;
      // Undeclared exception!
      try { 
        jSONScanner0.scanFieldStringArray(charArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      SymbolTable symbolTable0 = new SymbolTable(31);
      JSONScanner jSONScanner1 = new JSONScanner("\"`gG!'W^T%^/7");
      jSONScanner1.bytesValue();
      jSONScanner0.scanString('5');
      jSONScanner1.scanFieldDouble(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextToken(8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. T
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("~R~ZhFX&K", 10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[6];
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("~R~ZhFX&K", 34);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("1=MJ4.?qGq\"oB");
      jSONScanner0.resetStringPosition();
      jSONScanner1.scanBoolean('x');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("~R~ZhFX&K");
      jSONReaderScanner1.nextToken((-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = (-123008);
      JSONScanner jSONScanner0 = new JSONScanner("n#-^1t~2[Xq`c7:>/");
      Locale locale0 = Locale.JAPANESE;
      // Undeclared exception!
      try { 
        jSONScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      JSONScanner jSONScanner1 = new JSONScanner("illegal state. ", (-1100));
      jSONScanner1.nextIdent();
      SymbolTable symbolTable0 = new SymbolTable(161);
      jSONScanner1.scanSymbol(symbolTable0);
      // Undeclared exception!
      try { 
        jSONScanner1.scanFieldBigInteger((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("toJSON error", 0);
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('0');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      TimeZone timeZone0 = jSONScanner0.getTimeZone();
      jSONScanner0.timeZone = timeZone0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONScanner0.getTimeZone();
      int int0 = Calendar.FRIDAY;
      SymbolTable symbolTable0 = new SymbolTable(6);
      jSONScanner0.scanSymbol(symbolTable0);
      jSONReaderScanner0.scanStringArray((Collection<String>) null, 'C');
      jSONReaderScanner0.scanDate('<');
      jSONReaderScanner0.resetStringPosition();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      char[] charArray0 = new char[7];
      charArray0[0] = '^';
      charArray0[1] = 'D';
      charArray0[2] = ':';
      charArray0[3] = '4';
      charArray0[4] = 'A';
      charArray0[5] = '^';
      jSONScanner0.scanFieldSymbol(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      jSONScanner0.scanFieldUUID(charArray0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      char[] charArray1 = new char[2];
      charArray1[0] = 'S';
      charArray1[1] = 'D';
      jSONReaderScanner0.scanFieldFloatArray(charArray1);
      jSONReaderScanner0.scanDate('D');
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      char[] charArray0 = new char[0];
      SymbolTable symbolTable0 = new SymbolTable(43);
      JSONScanner jSONScanner0 = new JSONScanner("Z=*j$R!<U0n% !w");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("rror");
      jSONScanner0.matchField2(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("false", 0);
      jSONScanner1.scanBoolean('Q');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("error parse false", (-189));
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      jSONScanner0.scanFieldFloatArray2(charArray0);
      char char0 = 'x';
      JSONScanner jSONScanner1 = new JSONScanner("fastjson.compatibleWithJavaBean", (-2));
      jSONScanner1.scanBoolean('x');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("read string from reader error");
      jSONReaderScanner0.longValue();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner(charArray0, (-2), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      char[] charArray0 = new char[0];
      String string0 = "xTH xq3e`UY50F#GR'b";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("xTH xq3e`UY50F#GR'b");
      Feature feature0 = Feature.OrderedField;
      jSONReaderScanner0.config(feature0, true);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.matchField(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. T
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"`gG!'W^T%^/7", (-2));
      jSONReaderScanner0.resetStringPosition();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("\"`gG!'W^T%^/7", 8);
      // Undeclared exception!
      try { 
        jSONScanner1.nextToken(74);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONScanner jSONScanner0 = new JSONScanner("n`&eOz2)a,_wn4W");
      jSONScanner0.scanFloat('a');
      jSONScanner0.scanBoolean('W');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("N");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanDate('d');
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0WriteEnuUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      Feature feature0 = Feature.AutoCloseSource;
      jSONReaderScanner0.config(feature0, false);
      jSONReaderScanner0.scanLong('4');
      JSONScanner jSONScanner0 = new JSONScanner("r<+bIM:CY b>[&");
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner0.scanFieldUUID(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("'S|{!vp\"dSE", 43);
      char[] charArray1 = new char[8];
      jSONReaderScanner0.scanLong('z');
      JSONScanner jSONScanner1 = new JSONScanner("W/:G!D-", 58);
      jSONScanner1.nextToken(5);
      JSONScanner jSONScanner2 = new JSONScanner("WriteEnumUsingName", (-3189));
      jSONScanner1.scanString('N');
      jSONScanner0.scanFieldBigInteger(charArray1);
      jSONReaderScanner0.scanDecimal('N');
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-");
      JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-", 0);
      jSONReaderScanner0.scanLong('z');
      char[] charArray0 = new char[9];
      JSONScanner jSONScanner1 = new JSONScanner("1=MJ .?qGq\"oB-");
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner1.scanFieldUUID(charArray0);
      jSONScanner0.scanFloat('N');
      char[] charArray1 = new char[3];
      charArray1[0] = 'N';
      charArray1[1] = 'N';
      charArray1[2] = 'z';
      jSONScanner0.scanFieldBigInteger(charArray1);
      // Undeclared exception!
      try { 
        jSONScanner1.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader("f~EHv7&");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldLong(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("pect ':' at ");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      StringReader stringReader0 = new StringReader("1=MJ .?qGq\"oB-");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, (-2));
      jSONReaderScanner1.resetStringPosition();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("2vq3f*p'Oe2Qt");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", (-2));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONScanner jSONScanner1 = new JSONScanner("}ery*3da'");
      jSONScanner1.info();
      jSONScanner1.scanUUID('u');
      jSONScanner0.intValue();
      jSONScanner1.scanSymbol((SymbolTable) null);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("sc", 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null");
      jSONScanner0.getTimeZone();
      int int0 = Calendar.FRIDAY;
      jSONReaderScanner1.scanInt('\"');
      jSONReaderScanner0.scanDouble('f');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 16);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.nextToken((-1606));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      int int0 = 10;
      JSONScanner jSONScanner0 = new JSONScanner("VFVP_a'#UNyKeB", 10);
      SymbolTable symbolTable0 = new SymbolTable(10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONScanner0.scanSymbolUnQuoted(symbolTable0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("`i;DNq/KnMqcA)e");
      char[] charArray0 = new char[9];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[6] = '/';
      charArray0[7] = '~';
      charArray0[8] = '/';
      jSONReaderScanner0.scanFieldInt(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"");
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanDate('P');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JSONScanner jSONScanner0 = new JSONScanner("false");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false", 0);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner0.nextToken(0);
      JSONScanner jSONScanner1 = new JSONScanner("false", 0);
      jSONScanner0.scanString('@');
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldBigInteger(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("r", 0);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner1.getFeatures();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("null");
      linkedHashSet0.add("null");
      jSONScanner0.scanDouble('j');
      jSONScanner0.scanStringArray(linkedHashSet0, 'z');
      jSONScanner0.nextIdent();
      jSONScanner0.nextIdent();
      jSONScanner0.scanString('z');
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("TreeSet");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet");
      jSONScanner0.isBlankInput();
      jSONReaderScanner0.features = 0;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("P$wsG", 0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanBoolean('\'');
      jSONReaderScanner1.nextIdent();
      jSONReaderScanner1.getCurrent();
      jSONReaderScanner0.scanFieldString(charArray0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Wrri1eEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-");
      JSONScanner jSONScanner1 = new JSONScanner("'S|{!vp\"dSE");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("com.alibaba.fastjson.JSONArray", 0);
      jSONReaderScanner1.scanLong('z');
      // Undeclared exception!
      try { 
        jSONScanner1.nextToken((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed single-quote string
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      String string0 = "n`&eOz2)a,_wn4W";
      String string1 = "<Ky7Sv(gV JI\\D9p:";
      JSONScanner jSONScanner0 = new JSONScanner("<Ky7Sv(gV JID9p:", (-1332));
      SymbolTable symbolTable0 = new SymbolTable(56320);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0, '_');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("~R~ZhFX&K", 10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[6];
      charArray0[0] = 'C';
      charArray0[1] = 'V';
      charArray0[2] = 'Z';
      charArray0[3] = '+';
      charArray0[4] = 'D';
      charArray0[5] = ']';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 10);
      jSONReaderScanner0.longValue();
      JSONScanner jSONScanner1 = new JSONScanner("(H]", 10);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol((SymbolTable) null, 'P');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-");
      JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-", 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("*D^/hPob", 599);
      jSONReaderScanner0.scanLong('4');
      char[] charArray0 = new char[9];
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(";tB1_", (-1867));
      jSONReaderScanner2.isRef();
      jSONReaderScanner2.scanFieldBoolean(charArray0);
      jSONReaderScanner1.scanFieldSymbol(charArray0);
      jSONReaderScanner2.scanBoolean('%');
      jSONReaderScanner1.nextIdent();
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader(";tB1_");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      char[] charArray0 = new char[3];
      JSONScanner jSONScanner0 = new JSONScanner("!xoh\"CKv3XS7G.:ZDc");
      SymbolTable symbolTable0 = new SymbolTable(893);
      jSONScanner0.scanSymbolWithSeperator(symbolTable0, '5');
      JSONScanner jSONScanner1 = new JSONScanner(" 1HjgydN9");
      jSONScanner1.nextToken();
      JSONReaderScanner jSONReaderScanner0 = null;
      try {
        jSONReaderScanner0 = new JSONReaderScanner(charArray0, (-1), 44);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("undefined", 2371);
      char[] charArray0 = new char[0];
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.nextToken(368);
      jSONScanner0.scanString('v');
      JSONScanner jSONScanner1 = new JSONScanner("TreeSet");
      jSONScanner1.isBlankInput();
      JSONScanner jSONScanner2 = new JSONScanner("TreeSet");
      jSONScanner1.sp = 2371;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("undefined");
      jSONScanner1.matchField2(charArray0);
      jSONScanner0.scanString();
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      char[] charArray0 = new char[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      jSONReaderScanner0.scanLong('@');
      jSONScanner0.nextToken(368);
      JSONScanner jSONScanner1 = new JSONScanner("null", (-818));
      // Undeclared exception!
      try { 
        jSONScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      char[] charArray0 = new char[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      jSONReaderScanner0.scanLong('@');
      jSONScanner0.nextToken(368);
      JSONScanner jSONScanner1 = new JSONScanner("null", (-818));
      jSONScanner1.scanString('@');
      jSONScanner1.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanDecimal('@');
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QwPnkuO_mJR.t");
      JSONScanner jSONScanner0 = new JSONScanner("n`&eOz2)a,_wn4W");
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = '&';
      charArray0[2] = '?';
      charArray0[3] = 'W';
      charArray0[4] = ';';
      charArray0[5] = 'J';
      charArray0[6] = '1';
      Class<String> class0 = String.class;
      jSONScanner0.scanFieldStringArray(charArray0, class0);
      jSONScanner0.scanStringArray((Collection<String>) null, 'a');
      // Undeclared exception!
      try { 
        jSONScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("sz", 18);
      jSONReaderScanner0.scanDecimal('j');
      jSONReaderScanner0.nextToken(17);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("treeset");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("hvHH]NAr5'm", 82);
      SymbolTable symbolTable0 = new SymbolTable(82);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONScanner0.scanSymbolUnQuoted(symbolTable0);
      jSONScanner0.longValue();
      jSONScanner0.isRef();
      jSONScanner0.bytesValue();
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JSONScanner jSONScanner1 = new JSONScanner("hvHH");
      jSONScanner1.scanUUID('^');
      // Undeclared exception!
      try { 
        symbolTable0.addSymbol("c-U#", 82, 0, 82, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set", (-643));
      char[] charArray1 = new char[0];
      jSONReaderScanner0.scanFieldIntArray(charArray1);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanInt('a');
      jSONReaderScanner0.scanDouble('@');
      JSONScanner jSONScanner1 = new JSONScanner("'S|{!vp\"dSE");
      jSONReaderScanner0.integerValue();
      jSONReaderScanner0.nextToken();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-", (-1375));
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanInt('a');
      jSONReaderScanner0.scanDouble('Y');
      JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-");
      jSONReaderScanner0.integerValue();
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.scanDecimal('a');
      jSONScanner0.scanDouble('Y');
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = Calendar.WEEK_OF_YEAR;
      StringReader stringReader0 = new StringReader("f~EHv7&");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(518);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("WriteEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("'S|{!vp\"dSE", 43);
      char[] charArray1 = new char[8];
      charArray1[0] = 'z';
      charArray1[1] = 'z';
      charArray1[2] = 'z';
      charArray1[3] = 'z';
      charArray1[4] = 'G';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner1 = new JSONScanner("WriteEnumUsingName");
      jSONScanner1.longValue();
      jSONReaderScanner0.integerValue();
      jSONReaderScanner0.scanFieldBoolean(charArray0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0WriteEnuUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("W/:G!D-");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("'S|{!vp\"dSE", 43);
      jSONScanner0.scanString('o');
      jSONScanner0.skipComment();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONScanner0.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK_IN_MONTH;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"`gG!'W^T%^/7", (-2));
      jSONReaderScanner0.scanDouble('');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 255);
      jSONScanner0.scanUUID('P');
      JSONScanner jSONScanner1 = new JSONScanner("\"`gG!'W^T%^/7");
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithChar('P');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match P - x, info : pos 0, json : xTH xq3e`UY50F#GR'b
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      int int0 = Calendar.DST_OFFSET;
      JSONScanner jSONScanner1 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null", 0);
      jSONReaderScanner0.scanLong('@');
      jSONScanner1.scanFieldDouble(charArray0);
      jSONScanner1.nextToken(46);
      JSONScanner jSONScanner2 = new JSONScanner("TreeSet", 16);
      jSONScanner1.scanString('t');
      jSONScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanDecimal('@');
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("<Ky7Sv(gV JID9p:", (-1332));
      int int0 = 56320;
      char char0 = '_';
      // Undeclared exception!
      try { 
        jSONScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", (-214748364));
      JSONScanner jSONScanner0 = new JSONScanner("new", 70);
      JSONScanner jSONScanner1 = new JSONScanner("new");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(")#;", 70);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner0.nextToken(614);
      JSONScanner jSONScanner2 = new JSONScanner(")#;", 66);
      jSONScanner2.scanString('u');
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 'u';
      jSONScanner2.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanDecimal('0');
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      char[] charArray1 = new char[0];
      jSONScanner0.scanFieldUUID(charArray1);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      // Undeclared exception!
      try { 
        jSONScanner0.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("true", 95);
      jSONScanner0.scanBoolean('Z');
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      jSONScanner0.scanNumber();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("T`<5^sdh6d<", (-1));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", (-214748364));
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = '0';
      jSONReaderScanner0.scanFieldInt(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("new", 3021);
      jSONReaderScanner1.nextToken(1508);
      JSONScanner jSONScanner0 = new JSONScanner("loI-ybL32JL84t");
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner(", json : ", (-3391));
      char[] charArray0 = new char[3];
      charArray0[0] = '?';
      charArray0[1] = '/';
      jSONScanner0.scanBoolean('Z');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1752);
      jSONReaderScanner0.nextToken(1752);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\":\"");
      jSONScanner0.getTimeZone();
      int int0 = Calendar.FRIDAY;
      SymbolTable symbolTable0 = new SymbolTable(59);
      SymbolTable symbolTable1 = new SymbolTable(128);
      jSONScanner0.scanSymbol(symbolTable1);
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      char[] charArray0 = new char[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner0.nextToken(368);
      JSONScanner jSONScanner1 = new JSONScanner("null", (-818));
      jSONScanner1.scanString('@');
      jSONScanner1.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanDecimal('@');
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3, 3);
      jSONReaderScanner0.scanInt('0');
      jSONReaderScanner0.scanLong('0');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("/,", (-1));
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.putChar('0');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("'S|{!vp\"dSE");
      JSONScanner jSONScanner0 = new JSONScanner("rror");
      jSONScanner0.scanIdent();
      jSONScanner0.longValue();
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\u0000\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0WriteEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanBoolean('[');
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("/");
      JSONScanner jSONScanner1 = new JSONScanner("/", 218);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("/");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("/");
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONScanner1.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner2 = new JSONScanner("/", 0);
      // Undeclared exception!
      try { 
        jSONScanner2.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0WriteEnumUsingName");
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("0WriteEnumUsingName");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(",I(l*;ir'", (-1));
      jSONReaderScanner0.charArrayCompare(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldDecimal(charArray0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '@';
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("set");
      char[] charArray1 = new char[0];
      jSONReaderScanner0.scanFieldIntArray(charArray1);
      jSONScanner0.scanFieldUUID(charArray1);
      jSONReaderScanner0.nextIdent();
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONScanner0.nextToken((-2));
      JSONScanner jSONScanner1 = new JSONScanner("null", (-2));
      jSONScanner1.scanFieldBigInteger(charArray1);
      jSONReaderScanner0.scanDecimal('1');
      jSONReaderScanner0.charArrayCompare(charArray1);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null or new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      char char0 = '0';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", (-214748364));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("new");
      char char1 = '2';
      char char2 = ')';
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("new", (-214748364));
      jSONReaderScanner0.scanInt('t');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char char3 = 'W';
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("unclosed single-quote string");
      // Undeclared exception!
      try { 
        jSONReaderScanner2.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", (-214748364));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("new");
      JSONScanner jSONScanner0 = new JSONScanner("new", 70);
      jSONReaderScanner1.setTimeZone((TimeZone) null);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(",I(l*;ir'", 70);
      char[] charArray0 = new char[0];
      jSONScanner0.isBlankInput();
      jSONReaderScanner1.charArrayCompare(charArray0);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner2.scanFieldLong(charArray0);
      jSONScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("new", 625);
      jSONScanner0.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", (-214748364));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("new");
      JSONScanner jSONScanner0 = new JSONScanner("new", 0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("tK");
      jSONReaderScanner2.scanInt('i');
      jSONScanner0.scanString('i');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("new");
      char[] charArray0 = new char[2];
      charArray0[0] = 'i';
      charArray0[1] = 'i';
      jSONScanner0.matchField2(charArray0);
      jSONReaderScanner1.scanFieldInt(charArray0);
      jSONReaderScanner3.scanFieldDate(charArray0);
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray0, 8);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      jSONScanner0.getTimeZone();
      JSONScanner jSONScanner1 = new JSONScanner("null");
      jSONScanner1.resetStringPosition();
      jSONScanner1.setToken(0);
      char char0 = '2';
      jSONScanner1.scanDecimal('2');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fastjson.parser.autoTypeSupport", (-1));
      jSONReaderScanner0.scanInt('C');
      char char1 = 'R';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "null");
      jSONScanner1.resetStringPosition();
      jSONReaderScanner0.scanDouble('R');
      JSONScanner jSONScanner2 = new JSONScanner(" 8f");
      jSONReaderScanner0.scanFloat('C');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" 8f", (-1));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1=MJ .?qGq\"oB-");
      JSONScanner jSONScanner0 = new JSONScanner("1=MJ .?qGq\"oB-", 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("*D^/hPob", 599);
      jSONReaderScanner0.scanLong('4');
      jSONReaderScanner1.scanInt(' ');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*D^/hPob");
      jSONScanner0.resetStringPosition();
      jSONReaderScanner0.scanDouble('=');
      JSONScanner jSONScanner1 = new JSONScanner("_FFdu5jh*a~2o");
      jSONReaderScanner0.scanFloat('x');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      TimeZone timeZone0 = jSONScanner0.getTimeZone();
      jSONScanner0.timeZone = timeZone0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      jSONScanner0.getTimeZone();
      jSONReaderScanner0.scanInt('.');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "null");
      char[] charArray0 = new char[3];
      charArray0[0] = '.';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      JSONScanner jSONScanner1 = new JSONScanner(charArray0, 0);
      jSONScanner1.resetStringPosition();
      jSONReaderScanner0.scanDouble('R');
      JSONScanner jSONScanner2 = new JSONScanner("utf8 decode error, ");
      jSONReaderScanner0.scanFloat('.');
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("-null");
      jSONScanner0.getTimeZone();
      JSONScanner jSONScanner1 = new JSONScanner("-null");
      jSONScanner1.resetStringPosition();
      jSONScanner1.setToken(0);
      jSONScanner1.scanDecimal('6');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fastjson.parser.autoTypeSupport", (-1));
      jSONReaderScanner0.scanInt('C');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-null");
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.scanFloat('s');
      jSONScanner1.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("BtGA.@V~y-IK");
      jSONReaderScanner0.nextToken(2);
      Locale locale0 = Locale.ITALIAN;
      jSONReaderScanner0.scanInt('\\');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BtGA.@V~y-IK");
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'R';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      charArray0[7] = 'R';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0, (-1));
      jSONScanner0.resetStringPosition();
      jSONReaderScanner0.scanDouble('\\');
      JSONScanner jSONScanner1 = new JSONScanner("En[Np]NUze=-(Z");
      char char0 = 'S';
      jSONReaderScanner0.scanFloat('S');
      int int0 = 453;
      SymbolTable symbolTable0 = new SymbolTable(827);
      // Undeclared exception!
      try { 
        jSONScanner1.scanSymbol(symbolTable0, '}');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Rcm");
      JSONScanner jSONScanner0 = new JSONScanner("c");
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("set");
      jSONReaderScanner1.scanFieldIntArray(charArray0);
      jSONScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner1.nextIdent();
      int int0 = Calendar.SHORT;
      jSONReaderScanner0.scanDouble('O');
      JSONScanner jSONScanner1 = new JSONScanner("6,I'@MPkO~#*R");
      JSONScanner jSONScanner2 = new JSONScanner("6,I'@MPkO~#*R");
      jSONScanner2.next();
      jSONScanner2.scanString('.');
      char[] charArray1 = new char[7];
      charArray1[0] = ';';
      charArray1[1] = 'a';
      charArray1[2] = 'O';
      charArray1[3] = 'a';
      charArray1[4] = 'S';
      charArray1[5] = 'U';
      charArray1[6] = ';';
      jSONScanner0.scanFieldUUID(charArray1);
      jSONScanner0.scanFloat('U');
      jSONScanner1.scanFieldBigInteger(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.charAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = '7';
      charArray0[2] = '~';
      jSONScanner0.scanFieldFloatArray2(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed.str", (-2));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
      jSONReaderScanner0.next();
      jSONReaderScanner1.scanFieldDate(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("2vq3f*p'Oe2Qt");
      int int0 = Calendar.SUNDAY;
      jSONReaderScanner0.scanDouble('5');
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner(charArray0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null");
      JSONScanner jSONScanner1 = new JSONScanner("EOF error");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("true", 45);
      jSONReaderScanner0.scanLong(']');
      JSONScanner jSONScanner2 = new JSONScanner("error parse false");
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      charArray0[1] = '7';
      charArray0[2] = ']';
      jSONScanner1.scanFieldUUID(charArray0);
      jSONScanner0.scanFloat('V');
      SymbolTable symbolTable0 = new SymbolTable(123);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, 'S');
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      jSONScanner1.scanFieldBigInteger(charArray0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("xTH xq3e`UY50F#GR'b");
      JSONScanner jSONScanner1 = new JSONScanner("true", 39);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("{-\"~6L|jSYj;Jd", 8192);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("xTH xq3e`UY50F#GR'b", 1245);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONScanner jSONScanner2 = new JSONScanner("`i", 0);
      JSONScanner jSONScanner3 = new JSONScanner("int", 26);
      jSONScanner1.scanFieldFloat(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. T
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      String string0 = "null";
      JSONScanner jSONScanner0 = new JSONScanner(";rC^[I#Y}x");
      int int0 = 10;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";rC^[I#Y}x", (-1639));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("D");
      jSONScanner0.getTimeZone();
      jSONReaderScanner1.scanInt('\"');
      jSONReaderScanner1.scanDouble('\"');
      jSONScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("5g'F5/)Xp2yIt");
      jSONScanner0.resetStringPosition();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ShHAv7B:2(L65/ a", 4159);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanInt('=');
      String string0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ShHAv7B:2(L65/ a");
      jSONScanner0.resetStringPosition();
      jSONReaderScanner0.scanDouble('Q');
      JSONScanner jSONScanner1 = new JSONScanner("ShHAv7B:2(L65/ a");
      jSONReaderScanner0.integerValue();
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      jSONScanner1.scanISO8601DateIfMatch(false);
      // Undeclared exception!
      try { 
        jSONScanner1.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.time.chrono.ChronoLocalDate
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }
}
