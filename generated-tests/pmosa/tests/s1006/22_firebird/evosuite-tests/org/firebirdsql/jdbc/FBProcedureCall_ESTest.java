/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 05:33:29 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, (-40561581));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-1));
      fBProcedureCall0.getOutputParam((-2286));
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getInputParams();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-3618), "SELECT * FROM null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3618
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1718, "org.firebirdsql.gds.GDSException");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(1718, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1718);
      assertEquals(1718, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("");
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      String string0 = null;
      int int0 = (-883);
      boolean boolean1 = false;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(993, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-1));
      fBProcedureParam0.clone();
      Object object0 = fBProcedureCall0.clone();
      fBProcedureParam0.setType(887);
      fBProcedureCall0.getOutputParam((-635));
      fBProcedureParam0.setType((-1));
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-1));
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals((-1), fBProcedureParam0.getType());
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null)", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "$/");
      assertEquals(0, fBProcedureParam0.getPosition());
      assertNotSame(fBProcedureCall0, object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addParam(0, "SELECT * FROM null");
      fBProcedureCall0.addParam(0, "I>E)");
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-2878), "_eJ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2878
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(925, "XQGp<(-5jV5Bb@");
      fBProcedureCall0.addParam(925, "25000");
      fBProcedureCall0.clone();
      try { 
        fBProcedureCall0.registerOutParam(925, 1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(41);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(40);
      fBProcedureCall0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(63);
      fBProcedureParam0.clone();
      int int0 = 1587;
      fBProcedureParam0.setType(1587);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getName();
      fBProcedureCall0.hashCode();
      try { 
        fBProcedureCall0.registerOutParam(63, 63);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.clone();
      fBProcedureCall1.getInputParam(1);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.getOutputParam(2);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(0);
      try { 
        fBProcedureParam0.setValue(fBProcedureParam1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(37, "ZK/]S`PC/<x5(E");
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName("DMVrAN~2");
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getName();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(37, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-1937));
      fBProcedureCall0.mapOutParamIndexToPosition(887);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.setName("zk/");
      Object object1 = fBProcedureCall0.clone();
      assertTrue(object1.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.addParam(0, "zk/");
      Object object2 = fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("Specified parameter does not exist.");
      fBProcedureCall0.equals("SELECT * FROM zk/(zk/)");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "zk/");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getName();
      boolean boolean0 = object2.equals(fBProcedureCall0);
      assertFalse(object2.equals((Object)fBProcedureCall0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "int");
      assertEquals("int", fBProcedureParam0.getParamValue());
      assertEquals(1, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(46);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.mapOutParamIndexToPosition(46);
      fBProcedureCall1.setName("Ls[");
      fBProcedureCall1.getSQL(false);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-2269), "iNTx*zV9^J)7X`}IN/");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2269
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(567, "s@N?|Z");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParam(127);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null, s@N?|Z)", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "3ui?7?O^b@F{my1AU;");
      assertEquals(1, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(3ui?7?O^b@F{my1AU;)", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(567, "s@N?|Z");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(567, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(41);
      assertEquals(41, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "%]?NR40c5~]H");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(893);
      assertEquals(893, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1, true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.addParam(2115, "s{n");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(567, "s@N?|Z");
      fBProcedureParam1.setValue(fBProcedureParam0);
      fBProcedureParam1.setIndex(2);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(133);
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam((-1), "01S00");
      fBProcedureCall1.equals(fBProcedureParam3);
      assertTrue(fBProcedureParam3.equals((Object)fBProcedureParam2));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(567, "s@N?|Z");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(567, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(s@N?|Z)", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "%]?NR40c5~]H");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(3, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(893);
      assertEquals(893, int0);
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(%]?NR40c5~]H)", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
      
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.setName("SELECT * FROM null");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall2);
      assertFalse(boolean0);
      
      fBProcedureCall2.getInputParams();
      assertTrue(fBProcedureCall2.equals((Object)fBProcedureCall1));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam((-1), (-324));
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-324), "outjG]9Bb");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -324
         //
         verifyException("java.util.Vector", e);
      }
  }
}
