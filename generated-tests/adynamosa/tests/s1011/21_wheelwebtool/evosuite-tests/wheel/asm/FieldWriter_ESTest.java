/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 14:49:21 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      classWriter0.index = (-597);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-597), "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      classWriter0.index = (-597);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 202, "", "", (String) null, "");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      classWriter0.index = (-597);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-597), "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      classWriter0.index = (-597);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 202, "", "", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "[]", "[]", (String) null, (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(525);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1467, "eZQmMsLdK3^:[k", "[]", "[]", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-351), "+0efbSj:2XJlZ!J_[E", "*:iYE$UMJ')6GXt*", "*:iYE$UMJ')6GXt*", "_l8EuPhA`|Q]h");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(330);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "_l8EuPhA`|Q]h", "_l8EuPhA`|Q]h", "<c?ZV0", "<c?ZV0");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, (String) null, "DsdlA_gsny", (String) null, object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2062, "9Be", "9Be", ".Kfiwn", ".Kfiwn");
      fieldWriter0.visitAnnotation("=AwEKJEIE9T", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-351), "+0efbSj:2XJlZ!J_[E", "*:iYE$UMJ')6GXt*", "*:iYE$UMJ')6GXt*", "_l8EuPhA`|Q]h");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("_l8EuPhA`|Q]h", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "iTlJOR*kRa3(B(#R";
      stringArray0[1] = "";
      stringArray0[2] = "XsT)S^{";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "XsT)S^{";
      stringArray0[6] = "";
      stringArray0[7] = "";
      classWriter0.visit(787, (-740), "XsT)S^{", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-597), "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1467, "$Xe~vaIei4", "$Xe~vaIei4", "", "");
      Attribute attribute0 = new Attribute("Deprecated");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(551);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1467, "eZQmMsLdK3^:[k", "[]", "[]", (Object) null);
      fieldWriter0.visitAnnotation("[]", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "iTlJOR*kRa3(B(#R";
      stringArray0[1] = "";
      stringArray0[2] = "XsT)S^{";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "XsT)S^{";
      stringArray0[6] = "";
      stringArray0[7] = "";
      classWriter0.visit(787, (-740), "XsT)S^{", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-597), "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2766), "AyD):", "H/Xr^p3;4_54?wQ0$o;", "", "H/Xr^p3;4_54?wQ0$o;");
      fieldWriter0.visitAnnotation(":8Du7Vd@R]9Al", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2766), "EBfguwSOC7x", "Sensitive", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@3769b7b1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-597), "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "|`'<`=]@9", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ByteVector@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-351), "+0efbSj:2XJlZ!J_[E", "*:iYE$UMJ')6GXt*", "*:iYE$UMJ')6GXt*", "_l8EuPhA`|Q]h");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-740));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2062, "9Be", "9Be", ".Kfiwn", ".Kfiwn");
      Attribute attribute0 = new Attribute("ydX/N");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
