/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 05:56:25 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2145833006), fieldTypeDouble0, 0, 1138L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1138, tiffField0.getOffset());
      assertEquals((-2145833006), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)17;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2244, fieldTypeByte0, 0L, (-280L), byteArray0, byteOrder0, 0);
      fieldTypeByte0.getValue(tiffField0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)50;
      byteArray1[1] = (byte)0;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(0, 0, fieldTypeByte0, 0L, 491L, byteArray1, byteOrder1, 0);
      tiffField1.getDescriptionWithoutValue();
      try { 
        tiffField1.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1d1c1e8c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(457, 457, fieldTypeFloat0, 457, (-859L), byteArray0, byteOrder0, 457);
      tiffField0.getTagName();
      System.setCurrentTimeMillis(457);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1140, 1140, fieldTypeFloat0, 1140, 1140, byteArray0, byteOrder0, 1140);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2147269604), (-2147269604), fieldTypeFloat0, (-2147269604), (-2147269604), byteArray0, byteOrder0, (-2147269604));
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)122;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-120);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)0;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("?GGjPbJ#K");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-554), fieldTypeRational0, 0, 0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-554), tiffField0.getDirectoryType());
      assertEquals("GPSVersionID", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-799), (-2147269604), fieldTypeAscii0, 0L, 2934L, byteArray0, byteOrder0, (-799));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2934, tiffField0.getOffset());
      assertEquals((-799), tiffField0.getTag());
      assertEquals((-2147269604), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-799), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)112;
      byteArray0[5] = (byte)41;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, (-1));
      tiffField0.getValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@520f8317
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, (byte) (-42));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-903), (byte)0);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string1);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: IFD", string1);
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1130, 1130, fieldTypeFloat0, 1130, 1130, byteArray0, byteOrder0, 1130);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1130, 1130);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string1);
      assertEquals(1130L, tiffField0.getCount());
      assertEquals(1130, tiffField0.getDirectoryType());
      assertEquals(1130, tiffField0.getTag());
      assertEquals(1130, tiffField0.getOffset());
      assertEquals(4520, tiffField0.getBytesLength());
      assertEquals(1130, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, (byte) (-42));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getByteArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(50, int0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int1);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1707, 1707, fieldTypeRational0, 2202L, 1707, byteArray0, byteOrder1, 1707);
      tiffField0.getDoubleArrayValue();
      assertEquals(1707, tiffField0.getSortHint());
      assertEquals(1707, tiffField0.getDirectoryType());
      assertEquals(1707, tiffField0.getTag());
      assertEquals(2202L, tiffField0.getCount());
      assertEquals(17616, tiffField0.getBytesLength());
      assertEquals(1707, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "O<eQ?`T;El");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-111);
      byteArray0[4] = (byte)14;
      byteArray0[4] = (byte)14;
      TiffField tiffField0 = new TiffField(1, (-1990), fieldTypeRational0, 3973L, (-3912L), byteArray0, byteOrder0, (byte) (-111));
      assertEquals((-3912), tiffField0.getOffset());
      
      TiffField tiffField1 = new TiffField((-2145833006), 1774, fieldTypeRational0, 4L, 4L, byteArray0, byteOrder0, (byte)14);
      tiffField1.getDoubleArrayValue();
      assertEquals(14, tiffField1.getSortHint());
      assertEquals((-2145833006), tiffField1.getTag());
      assertEquals(1774, tiffField1.getDirectoryType());
      assertEquals(4L, tiffField1.getCount());
      assertEquals(32, tiffField1.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeLong0, 0L, (byte)115, byteArray0, byteOrder0, (-2582));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      tiffField0.getDirectoryType();
      String string0 = tiffField0.toString();
      assertEquals("3 (0x3: Unknown Tag):  (0 IFD)", string0);
      
      String string1 = tiffField0.getValueDescription();
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      
      String string2 = tiffField0.getValueDescription();
      assertTrue(string2.equals((Object)string1));
      assertEquals(115, tiffField0.getOffset());
      assertEquals((-2582), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-324), "Unknown: ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-85);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(196, (-389), fieldTypeFloat0, 2752L, 2752L, byteArray0, byteOrder0, (byte) (-85));
      fieldTypeFloat0.getValue(tiffField0);
      TiffField tiffField1 = new TiffField((-324), (-324), fieldTypeFloat0, (-324), (-324), (byte[]) null, (ByteOrder) null, (-324));
      tiffField0.getValue();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Locale locale0 = Locale.ITALY;
      mockPrintWriter0.format(locale0, "3moCoB=kAJ()zrMle", (Object[]) null);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.io.filefilter.NotFileFilter");
      assertEquals(110, pipedInputStream0.available());
      
      tiffField0.getTagInfo();
      tiffField0.getDoubleArrayValue();
      assertEquals((-389), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 0L, 50, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.dump();
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)17;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(107, (byte)1, fieldTypeLong0, 2671L, 4L, byteArray0, byteOrder0, (-653));
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(102, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong1 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-1760), (-1760), fieldTypeLong1, 102, (-1760), byteArray0, byteOrder0, 1318);
      String string0 = tiffField0.getValueDescription();
      String string1 = tiffField0.getValueDescription();
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1318, tiffField0.getSortHint());
      assertEquals(408, tiffField0.getBytesLength());
      assertEquals((-1760L), tiffElement0.offset);
      assertEquals(102L, tiffField0.getCount());
      assertEquals((-1760), tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals((-1760), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray1 = new byte[4];
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)22, (byte)22, fieldTypeDouble0, (byte)0, (byte)0, byteArray1, byteOrder0, 0);
      TiffField tiffField1 = new TiffField((-1717986917), 37520, fieldTypeDouble0, (byte)22, (byte) (-116), byteArray1, byteOrder1, (byte)32);
      tiffField1.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)17;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2780), (byte)1, fieldTypeByte0, 255L, 408L, byteArray0, byteOrder0, 0);
      tiffField0.getValueDescription();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(50, 2147309522, fieldTypeByte0, (byte)1, (-1784L), byteArray1, byteOrder0, 0);
      tiffField1.getIntValue();
      tiffField1.getOffset();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@73e5639 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)115, (byte) (-116), fieldTypeLong0, 255L, 2147483647L, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      tiffField0.getValueDescription();
      TiffField tiffField1 = new TiffField(8, 380, fieldTypeLong0, (-1583L), 2147483647L, byteArray0, byteOrder0, 723);
      // Undeclared exception!
      try { 
        tiffField1.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)3;
      TiffField tiffField0 = new TiffField(2135070447, 65100, fieldTypeLong0, 0, 65100, byteArray0, (ByteOrder) null, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals(2135070447, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65100, tiffField0.getOffset());
      assertEquals(65100, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(84, (byte) (-105), fieldTypeShort0, 15L, 12336L, byteArray0, byteOrder0, (-1585));
      tiffField0.getDoubleArrayValue();
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(12336, tiffField0.getOffset());
      assertEquals(15L, tiffField0.getCount());
      assertEquals((-105), tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getTag());
      assertEquals((-1585), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147309522, (-4460), fieldTypeShort0, 102, (-4460), byteArray0, byteOrder0, (byte)96);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getTagInfo();
      tiffField0.getDoubleArrayValue();
      assertEquals(204, tiffField0.getBytesLength());
      assertEquals(2147309522, tiffField0.getTag());
      assertEquals((-4460), tiffField0.getOffset());
      assertEquals((-4460), tiffField0.getDirectoryType());
      assertEquals(102L, tiffField0.getCount());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray1 = new byte[4];
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)22, (byte)22, fieldTypeDouble0, (byte)0, (byte)0, byteArray1, byteOrder0, 0);
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((-1717986917), 37520, fieldTypeDouble0, (byte)22, (byte) (-116), byteArray1, byteOrder1, (byte)32);
      tiffField1.getValueDescription();
      tiffField0.getDirectoryType();
      tiffField1.isLocalValue();
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7266dcb4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = 146;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(146, (-771), fieldTypeLong0, 1571L, 102, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3206);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(146, (-771), fieldTypeLong0, 1571L, 102, byteArray0, byteOrder0, (-771));
      tiffField0.getDoubleArrayValue();
      assertEquals((-771), tiffField0.getDirectoryType());
      assertEquals((-771), tiffField0.getSortHint());
      assertEquals(146, tiffField0.getTag());
      assertEquals(6284, tiffField0.getBytesLength());
      assertEquals(102, tiffField0.getOffset());
      assertEquals(1571L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "*T.");
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2142181219, 0, fieldTypeRational0, 702L, 0L, byteArray0, byteOrder0, 2142181219);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(5616, tiffField0.getBytesLength());
      assertEquals(2142181219, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2142181219, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(702L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147309522, (-4460), fieldTypeShort0, 102, (-4460), byteArray0, byteOrder0, (byte)96);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(102L, tiffField0.getCount());
      assertEquals((-4460), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2147309522, tiffField0.getTag());
      assertEquals(204, tiffField0.getBytesLength());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals((-4460), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147309522, (-4460), fieldTypeShort0, 102, (-4460), byteArray0, byteOrder0, (byte)96);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField((-4460), 663, fieldTypeLong0, 2147309522, 102, byteArray0, byteOrder1, (-4460));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2147309522, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-4460), tiffField0.getDirectoryType());
      assertEquals((-4460), tiffField0.getOffset());
      assertEquals(102L, tiffField0.getCount());
      assertEquals(204, tiffField0.getBytesLength());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)96;
      byteArray0[5] = (byte)96;
      byteArray0[6] = (byte)1;
      TiffField tiffField0 = new TiffField(2147309522, 2012, fieldTypeShort0, 974L, 102, byteArray0, byteOrder1, (-4460));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField tiffField1 = new TiffField(50, 2438, fieldTypeShort0, (-2413L), 4L, byteArray0, byteOrder1, (byte)1);
      tiffField1.getTagInfo();
      assertEquals(1, tiffField1.getSortHint());
      assertEquals(50, tiffField1.getTag());
      assertEquals(4, tiffField1.getOffset());
      assertEquals((-2413L), tiffField1.getCount());
      assertEquals((-4826), tiffField1.getBytesLength());
      assertEquals(2438, tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1143, 1143, fieldTypeShort0, 1143, 1143, byteArray0, byteOrder0, 1143);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1143, tiffField0.getOffset());
      assertEquals(2286, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1143, tiffField0.getDirectoryType());
      assertEquals(1143, tiffField0.getSortHint());
      assertEquals(1143, tiffField0.getTag());
      assertEquals(1143L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147309522, (-4460), fieldTypeShort0, 102, (-4460), byteArray0, byteOrder0, (byte)96);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getIntArrayValue();
      assertEquals((-4460), tiffField0.getOffset());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(204, tiffField0.getBytesLength());
      assertEquals((-4460), tiffField0.getDirectoryType());
      assertEquals(102L, tiffField0.getCount());
      assertEquals(2147309522, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "FreeByteCounts");
      TiffField tiffField0 = new TiffField((-2146329706), (byte)32, fieldTypeRational0, (byte)32, 0, byteArray0, byteOrder0, 0);
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(2621, 2141847207, fieldTypeRational0, 2193L, 0, byteArray0, byteOrder1, (-1));
      tiffField0.getValueDescription();
      tiffField0.isLocalValue();
      TiffField tiffField2 = new TiffField((-159), (-2146329706), fieldTypeDouble0, (-2145833006), 0, byteArray0, byteOrder0, 624);
      try { 
        tiffField2.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@68159f16 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "bQ7nGtL:oD*5S_)-f");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)119;
      byteArray0[7] = (byte)1;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeDouble0, (byte)62, (-1), byteArray0, byteOrder0, (byte)120);
      fieldTypeDouble0.getValue(tiffField0);
      assertEquals((-1), tiffField0.getOffset());
      
      byteArray0[8] = (byte)0;
      TiffField tiffField1 = new TiffField(0, (-1), fieldTypeDouble0, 1260L, 0, byteArray0, byteOrder0, 1696);
      String string0 = tiffField1.getValueDescription();
      assertNotNull(string0);
      
      TagInfo tagInfo0 = tiffField1.getTagInfo();
      assertEquals(0, tiffField1.getTag());
      assertEquals(0, tagInfo0.tag);
      assertEquals(10080, tiffField1.getBytesLength());
      assertEquals(1696, tiffField1.getSortHint());
      assertEquals((-1), tiffField1.getDirectoryType());
      assertEquals(1260L, tiffField1.getCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeDouble0, 10, 10, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getValueDescription();
      assertEquals(10L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "FreeByteCounts");
      TiffField tiffField0 = new TiffField((-2146329706), (byte)32, fieldTypeRational0, (byte)32, 0, byteArray0, byteOrder0, 0);
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(2621, 2141847207, fieldTypeRational0, 2193L, 0, byteArray0, byteOrder1, (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      TiffField tiffField2 = new TiffField((-159), (-2146329706), fieldTypeDouble0, (-2145833006), 0, byteArray0, byteOrder0, 624);
      assertTrue(tiffField2.isLocalValue());
      
      tiffField1.getIntArrayValue();
      assertEquals(2621, tiffField1.getTag());
      assertEquals(17544, tiffField1.getBytesLength());
      assertEquals(2141847207, tiffField1.getDirectoryType());
      assertEquals(2193L, tiffField1.getCount());
      assertEquals(0, tiffField1.getOffset());
      assertEquals((-1), tiffField1.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "FreeByteCounts");
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 2621);
      String string0 = tiffField0.getStringValue();
      assertEquals(2621, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34, 3, fieldTypeDouble0.ASCII, 3, 3, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getByteOrder();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(34, tiffField0.getTag());
      assertEquals(3, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)29, "(xC'wLU~3p&sP");
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)94;
      TiffField tiffField0 = new TiffField((-2146329706), 2138105990, fieldTypeRational0, (-2146329706), (byte)29, byteArray0, byteOrder0, (byte)107);
      assertEquals(9231536, tiffField0.getBytesLength());
      
      ByteOrder.nativeOrder();
      Object object0 = new Object();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2146329706L), tiffField0.getCount());
      assertEquals((-2146329706), tiffField0.getTag());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getOffset());
      assertEquals(2138105990, tiffField0.getDirectoryType());
  }
}
