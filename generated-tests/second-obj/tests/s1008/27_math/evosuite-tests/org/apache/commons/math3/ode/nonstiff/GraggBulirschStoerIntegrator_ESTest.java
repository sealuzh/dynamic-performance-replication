/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:37:30 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3088.8785286328), (-3088.8785286328), (-3088.8785286328), (-3088.8785286328));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1843.91909, (-3088.8785286328), (-361), (UnivariateSolver) null);
      assertEquals(3088.8785286328, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.6419797090870802E-8, 1806.917564127897, 224379.48959999962, 1320.532823992);
      graggBulirschStoerIntegrator0.setControlFactors(870.3953260805785, 224379.48959999962, 1806.917564127897, 2239.389744);
      assertEquals(0.00544694591150955, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), 1.0E-4);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2145984008);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1780.7896));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.872649515690124E56);
      expandableStatefulODE0.getCompleteState();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2137.8409220515146, 2137.8409220515146, 2137.8409220515146, 0.94);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1218.855), fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(366).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      int int0 = expandableStatefulODE0.getTotalDimension();
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2137.8409220515146);
      boolean boolean0 = true;
      double double0 = 1.0E-10;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int0, double0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-228.839), 103.4972041, (-1780.7896), 969.442524);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 32);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 6, (-635), 0.02);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-2456.420838348114));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2511.5921193406916));
      assertEquals(21, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = (-1780.7896);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), (-1488.0988));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2145984008);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2145984008, 6, 2145984008);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.872649515690124E56);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(double0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = (-1488.0988);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), 1.0E-4);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2145984008);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2145984008, 6, (-336.0006153));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = (-3.1327120557842516E145);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-3.1327120557842516E145));
      double double2 = (-1445.633878069664);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = double1;
      double double3 = 2139.0076;
      double double4 = 1591.764136759534;
      graggBulirschStoerIntegrator0.setControlFactors(double2, double3, double2, double4);
      double double5 = 656.500998;
      double double6 = 8.633726388939636E-60;
      double double7 = (-6.619064395428225E206);
      graggBulirschStoerIntegrator0.setControlFactors(double0, double5, double6, double7);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3.652892398145774E-153, 3.652892398145774E-153, 3.652892398145774E-153, 4.589506477601956E-9);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 4.589506477601956E-9;
      graggBulirschStoerIntegrator0.filterStep((-5.04128025464686E71), false, false);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setOrderControl((-1332), 2271.77771716, 630.444);
      graggBulirschStoerIntegrator0.setControlFactors((-8.745525834919404E-8), (-5.04128025464686E71), (-3736.4322980923), 3.652892398145774E-153);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType1);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(9).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setControlFactors(4.589506477601956E-9, 2271.77771716, 1014.31646752643, 0.8);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2882.93323));
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3.652892398145774E-153, 3.652892398145774E-153, 3.652892398145774E-153, 4.589506477601956E-9);
      boolean boolean0 = false;
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 4.589506477601956E-9;
      double double0 = (-5.04128025464686E71);
      graggBulirschStoerIntegrator0.filterStep((-5.04128025464686E71), false, false);
      double double1 = 0.0;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1332), (-1332), 0.0);
      int int0 = 981;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(981).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double2 = (-1900.5253);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1900.5253));
      int int1 = 3;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int1, double1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
      FixedStepHandler fixedStepHandler0 = null;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(double2, fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1760.4502633307454), (-1760.4502633307454), 8.098545495417704E274, (-1760.4502633307454));
      graggBulirschStoerIntegrator0.setOrderControl(202, 211.333300581398, 0.0);
      assertEquals(1760.4502633307454, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.533717155456543;
      doubleArray0[1] = 2.533717155456543;
      doubleArray0[2] = 2.533717155456543;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.533717155456543, 2.533717155456543, 2.533717155456543, 2.533717155456543);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1071);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(1071, (-2511.5921193406916), 2.533717155456543);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.161437419724;
      doubleArray0[1] = 0.450652539730072;
      doubleArray0[2] = 1.161437419724;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.161437419724, 0.450652539730072, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(1.161437419724, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setStepSizeControl(0.450652539730072, 0.450652539730072, 1.161437419724, 1.161437419724);
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setMaxEvaluations((-1322));
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setOrderControl((-1322), 0.450652539730072, 1.161437419724);
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setControlFactors(1.0730302255093144E-182, 999.9, 1.161437419724, (-1322));
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      
      graggBulirschStoerIntegrator0.setControlFactors(0.450652539730072, (-1322), 2774.1801620305123, 0.0);
      assertArrayEquals(new double[] {1.161437419724, 0.450652539730072, 1.161437419724, 0.0}, doubleArray0, 0.01);
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(0.450652539730072, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0.7234671540133403, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.533717155456543;
      doubleArray0[1] = 2.533717155456543;
      doubleArray0[2] = 1493.5379731977312;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.533717155456543, 2.533717155456543, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {2.533717155456543, 2.533717155456543, 1493.5379731977312}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1071);
      assertArrayEquals(new double[] {2.533717155456543, 2.533717155456543, 1493.5379731977312}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      
      graggBulirschStoerIntegrator0.setControlFactors((-1468.650973874992), (-2401.326), 2.291259288787842, 2.291259288787842);
      assertArrayEquals(new double[] {2.533717155456543, 2.533717155456543, 1493.5379731977312}, doubleArray0, 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(2.533717155456543, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 3348.0;
      doubleArray0[1] = 3348.0;
      doubleArray0[2] = 3348.0;
      doubleArray0[3] = 3348.0;
      doubleArray0[4] = (-5.04128025464686E71);
      doubleArray0[5] = 3348.0;
      doubleArray0[6] = 3348.0;
      doubleArray0[7] = 3348.0;
      doubleArray0[8] = 3348.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3348.0, 3348.0, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {3348.0, 3348.0, 3348.0, 3348.0, (-5.04128025464686E71), 3348.0, 3348.0, 3348.0, 3348.0}, doubleArray0, 0.01);
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1);
      assertArrayEquals(new double[] {3348.0, 3348.0, 3348.0, 3348.0, (-5.04128025464686E71), 3348.0, 3348.0, 3348.0, 3348.0}, doubleArray0, 0.01);
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(3348.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2137.8409220515146, 2137.8409220515146, 2137.8409220515146, 0.94);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1218.855), fixedStepHandler0, stepNormalizerBounds0);
      assertNotNull(stepNormalizer0);
      
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 36);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 36, 36, (-166.0899228));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(1041, (-1218.855), 0.94);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2137.8409220515146, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(350.53993, (-2511.5921193406916), doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(350.53993, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2511.5921193406916, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(938.3034294417972, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors(2069.54457701195, (-2511.5921193406916), 1431.0, 1684.1302939364616);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(350.53993, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2511.5921193406916, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(938.3034294417972, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setControlFactors(350.53993, 2069.54457701195, (-4509.24560181), 1431.0);
      assertArrayEquals(new double[] {}, doubleArray0, 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(350.53993, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(2511.5921193406916, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(938.3034294417972, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 4287.564409714);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), 1.0E-4);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      double double0 = graggBulirschStoerIntegrator0.filterStep(1.0E-4, false, true);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals((-1780.7896), double0, 0.01);
      
      graggBulirschStoerIntegrator0.clearStepHandlers();
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 555, 555, 9.044519282818302E-8);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(307).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(614, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      graggBulirschStoerIntegrator0.setControlFactors((-1780.7896), 139.3219959, 669.36, (-1.0857572226543142E-10));
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setOrderControl(2062, (-2009.23014), (-2.909443297645926E-8));
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(332).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      assertEquals(664, firstOrderConverter1.getDimension());
      assertFalse(firstOrderConverter1.equals((Object)firstOrderConverter0));
      assertNotNull(firstOrderConverter1);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(614, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertFalse(firstOrderConverter0.equals((Object)firstOrderConverter1));
      assertNotNull(expandableStatefulODE0);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 493.670979);
      double double1 = (-57.0692);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double1);
      int int0 = (-1);
      double double2 = (-2273.9535417129778);
      graggBulirschStoerIntegrator0.setOrderControl(int0, double2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = (-1642.7540309);
      eventFilter0.eventOccurred(2210.16949712, doubleArray0, true);
      assertArrayEquals(new double[] {0.0, (-1642.7540309)}, doubleArray0, 0.01);
      
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-4365.48200499519));
      assertEquals(0, illinoisSolver0.getMaxEvaluations());
      assertEquals((-4365.48200499519), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0, illinoisSolver0.getEvaluations());
      assertEquals(1.0E-14, illinoisSolver0.getRelativeAccuracy(), 0.01);
      assertEquals(1.0E-15, illinoisSolver0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMax(), 0.01);
      assertEquals(0.0, illinoisSolver0.getStartValue(), 0.01);
      assertEquals(0.0, illinoisSolver0.getMin(), 0.01);
      assertNotNull(illinoisSolver0);
      
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6553317308425903, 0.9, (-3103.1429709901), 289.894947);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.6553317308425903, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.7679834358619536, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.9, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setControlFactors(2411.0, 0.9, 0, 2.147483647E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(0.6553317308425903, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0.7679834358619536, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(0.9, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1780.7896), 1.0E-4);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.mainSetDimension = 1093;
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1093);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setControlFactors((-1780.7896), 2.872649515690124E56, 1.0E-4, 2.147483647E9);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1417.0);
      doubleArray0[1] = (-1999.0252);
      doubleArray0[2] = 3046.44335464;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1999.0252), 3046.44335464, doubleArray0, doubleArray0);
      assertArrayEquals(new double[] {(-1417.0), (-1999.0252), 3046.44335464}, doubleArray0, 0.01);
      assertEquals(1999.0252, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3046.44335464, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2467.7757264990464, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 164);
      assertArrayEquals(new double[] {(-1417.0), (-1999.0252), 3046.44335464}, doubleArray0, 0.01);
      assertEquals(1999.0252, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3046.44335464, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2467.7757264990464, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 164, 6, 0.9999);
      assertArrayEquals(new double[] {(-1417.0), (-1999.0252), 3046.44335464}, doubleArray0, 0.01);
      assertEquals(1999.0252, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3046.44335464, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2467.7757264990464, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      assertNotNull(eventFilter0);
      
      MullerSolver2 mullerSolver2_0 = new MullerSolver2((-1.0));
      assertEquals(1.0E-14, mullerSolver2_0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getMax(), 0.01);
      assertEquals((-1.0), mullerSolver2_0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getStartValue(), 0.01);
      assertEquals(1.0E-15, mullerSolver2_0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getMin(), 0.01);
      assertEquals(0, mullerSolver2_0.getMaxEvaluations());
      assertEquals(0, mullerSolver2_0.getEvaluations());
      assertNotNull(mullerSolver2_0);
      
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 3046.44335464, (-1999.0252), 1525, (UnivariateSolver) mullerSolver2_0);
      assertArrayEquals(new double[] {(-1417.0), (-1999.0252), 3046.44335464}, doubleArray0, 0.01);
      assertEquals(1999.0252, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(3046.44335464, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(2467.7757264990464, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1.0E-14, mullerSolver2_0.getRelativeAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getMax(), 0.01);
      assertEquals((-1.0), mullerSolver2_0.getAbsoluteAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getStartValue(), 0.01);
      assertEquals(1.0E-15, mullerSolver2_0.getFunctionValueAccuracy(), 0.01);
      assertEquals(0.0, mullerSolver2_0.getMin(), 0.01);
      assertEquals(0, mullerSolver2_0.getMaxEvaluations());
      assertEquals(0, mullerSolver2_0.getEvaluations());
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(0, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.94);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), (-3.344806129021162E-131));
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2145984008);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2145984008, 6, 6);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      expandableStatefulODE0.setTime((-1780.7896));
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals((-1780.7896), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.872649515690124E56);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), 0.12392682535244433);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2145984008);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      expandableStatefulODE0.setTime((-1780.7896));
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals((-1780.7896), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.872649515690124E56);
      expandableStatefulODE0.getCompleteState();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1780.7896), (-1780.7896), (-1488.0988), 1.0E-4);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      assertNotNull(graggBulirschStoerIntegrator0);
      
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2145984008);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      int int0 = 6;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2145984008, 6, (-336.0006153));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
      assertEquals(1780.7896, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
      
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(437).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertNotNull(firstOrderConverter0);
      
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals(Double.NaN, expandableStatefulODE0.getTime(), 0.01);
      assertNotNull(expandableStatefulODE0);
      
      expandableStatefulODE0.setTime((-1780.7896));
      assertEquals(874, firstOrderConverter0.getDimension());
      assertEquals((-1780.7896), expandableStatefulODE0.getTime(), 0.01);
      
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1488.0988));
      expandableStatefulODE0.getSecondaryState(6);
      double double0 = (-3.1327120557842516E145);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
      double double1 = (-1445.633878069664);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = double0;
      double double2 = 2139.0076;
      double double3 = 1591.764136759534;
      graggBulirschStoerIntegrator0.setControlFactors(double1, double2, double1, double3);
      double double4 = (-3593.3508145);
      double double5 = 2069.545;
      double double6 = 1.0E-4;
      graggBulirschStoerIntegrator0.setControlFactors(double4, double5, double6, double4);
      double double7 = 1431.0;
      graggBulirschStoerIntegrator0.setOrderControl(int0, double7, double2);
      double double8 = 1.0001;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(double8, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }
}
