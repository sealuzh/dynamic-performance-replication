/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:52:11 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.MachineInput;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      int[] intArray0 = new int[7];
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = new RE2("can't happen");
      List<String[]> list0 = rE2_0.findAllSubmatch("", 407);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("T!-&:$cI8E?$y1Ra");
      rE2_0.find("T!-&:$cI8E?$y1Ra");
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("IA");
      String string0 = rE2_0.replaceFirst("IA", "IA");
      assertEquals("IA", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Logical_Order_Exception");
      byte[] byteArray0 = new byte[1];
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, (-8));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("DSQ'}Ph");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte)65;
      byteArray0[4] = (byte) (-6);
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllIndex("", 11267956);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", (-1537));
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("$V'``L");
      List<String> list0 = rE2_0.findAll("$V'``L", 9);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = new RE2("^\"p&f");
      rE2_0.match("^\"p&f");
      String string0 = rE2_0.expr;
      assertEquals("^\"p&f", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", 11267956);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllSubmatch("", 505);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("1u");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = new RE2("g11,{p3+A?<1.Jl/");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      rE2_0.findAllUTF8Index(byteArray0, 64279);
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = new RE2("8e!Mc");
      rE2_0.find("8e!Mc");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = new RE2("c<;;%");
      rE2_0.findIndex("c<;;%");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("$V'``L");
      rE2_0.findIndex("$V'``L");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("_hUk");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)64;
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAll("", 1662);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = new RE2("UTF-8");
      rE2_0.replaceAll("END_LINE", "END_LINE");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("REPEAT");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("$V'``L");
      rE2_0.findAll("$V'``L", (-24));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("'``L");
      rE2_0.findAll("'``L", 15);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("ALT");
      rE2_0.findSubmatch("WE_-{");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllIndex("", 345);
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 345);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.numberOfCapturingGroups();
      byte[] byteArray0 = new byte[0];
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = new RE2("(?-m:$)");
      Machine machine0 = new Machine(rE2_0);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-23);
      machine0.init(0);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-23);
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, (byte)64);
      String string0 = "4 br/U7*n42f=zHM></";
      // Undeclared exception!
      try { 
        rE2_0.replaceAllFunc("4 br/U7*n42f=zHM></", (RE2.ReplaceFunc) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.RE2", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = new RE2("_zhd09tsNST");
      // Undeclared exception!
      try { 
        rE2_0.findUTF8SubmatchIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      RE2 rE2_0 = new RE2("");
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        rE2_0.match("6%?TM8H", 0, 0, 0, intArray0, 6433);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("$(gsEN%K)G~X");
      rE2_0.findAllIndex("$(gsEN%K)G~X", 7841);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2.compilePOSIX("e!c");
      RE2.quoteMeta("e!c");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2.match("", "");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = new RE2("@9wY[1@?]q*");
      rE2_0.reset();
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, 128);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, 137);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("{Ix", 0, false);
      int[] intArray0 = new int[3];
      intArray0[1] = 0;
      intArray0[2] = 0;
      rE2_0.match("{Ix", 0, 0, 0, intArray0, 0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)16;
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("^727OcH#<");
      byte[] byteArray0 = new byte[1];
      rE2_0.findAllUTF8Submatch(byteArray0, (byte)0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2.quoteMeta(".+*?()|[]{}^$");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "";
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, 314);
      byte[] byteArray1 = null;
      // Undeclared exception!
      try { 
        rE2_0.findUTF8Submatch((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.numberOfCapturingGroups();
      rE2_0.findAllSubmatchIndex("'6``L", 1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("u");
      rE2_0.replaceAll("u", "");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("_zhd09tsNST");
      int[] intArray0 = new int[0];
      rE2_0.match("_zhd09tsNST", 921, (-4), 921, intArray0, (-1265));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.reset();
      rE2_0.replaceFirst("A,G1y|e1Fe}/O1m11q", "");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.longest = true;
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      rE2_0.findAllUTF8Submatch(byteArray1, 697);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = new RE2("com.google.re2j.RE2");
      rE2_0.find("z");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      RE2 rE2_0 = new RE2("");
      int int0 = RE2.CLASS_NL;
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "(?-m:$)";
      RE2 rE2_0 = new RE2("(?-m:$)");
      rE2_0.replaceAll("(?-m:$)", "(?-m:$)");
      MachineInput.fromUTF16("(?-m:$)", 201, (-2157));
      int int0 = 10;
      try { 
        RE2.compilePOSIX("TepeH0[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing closing ]: `[`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findSubmatchIndex("");
      byte[] byteArray0 = new byte[4];
      rE2_0.findAllSubmatch("tymw!(4@", 0);
      boolean boolean0 = rE2_0.prefixComplete;
      rE2_0.findSubmatch("invalid escape sequence");
      RE2 rE2_1 = RE2.compilePOSIX("invalid escape sequence");
      rE2_1.findUTF8(byteArray0);
      rE2_1.findUTF8SubmatchIndex(byteArray0);
      rE2_0.findAllUTF8Submatch(byteArray0, (-1525));
      rE2_1.findAllSubmatch("", 0);
      rE2_0.prefixComplete = true;
      rE2_1.findUTF8Submatch(byteArray0);
      rE2_1.toString();
      rE2_0.match("invalid escape sequence", 0, 0, 0, (int[]) null, 0);
      try { 
        RE2.compilePOSIX("tymw!(4@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing closing ): `tymw!(4@`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }
}
