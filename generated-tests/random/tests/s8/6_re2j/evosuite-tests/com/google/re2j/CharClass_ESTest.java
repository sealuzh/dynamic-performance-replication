/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 16:17:28 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 2574;
      int int1 = 1114111;
      // Undeclared exception!
      charClass0.appendFoldedRange(2574, 1114111);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 788;
      intArray0[1] = (-1196);
      intArray0[2] = 215;
      intArray0[3] = 547;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[5][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendFoldedClass(intArray0);
      CharClass charClass4 = charClass3.appendFoldedRange((-1196), 2);
      charClass4.cleanClass();
      CharClass charClass5 = charClass2.appendLiteral(547, 215);
      assertSame(charClass5, charClass4);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral((-697), 643);
      CharClass charClass1 = charClass0.appendFoldedRange(390, 390);
      charClass1.toString();
      CharClass charClass2 = charClass1.cleanClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 643;
      intArray0[1] = (-1);
      intArray0[2] = (-697);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = 643;
      charClass2.appendClass(intArray0);
      charClass1.appendRange((-1), (-697));
      charClass2.negateClass();
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign((int[][]) null, (-1770));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 600;
      intArray0[1] = 399;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][4];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.appendTableWithSign(intArray1, 0);
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 0);
      charClass4.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass0.cleanClass();
      CharClass charClass6 = charClass5.appendClassWithSign(intArray0, 600);
      charClass6.appendNegatedTable(intArray1);
      CharClass charClass7 = charClass5.appendFoldedClass(intArray0);
      charClass7.appendClass(intArray0);
      charClass4.appendTable(intArray1);
      charClass0.appendNegatedClass(intArray0);
      charClass4.appendClassWithSign(intArray0, 1114111);
      charClass4.appendRange((-625), 1114111);
      charClass1.appendClass(intArray0);
      charClass1.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {(-625), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 788;
      intArray0[1] = (-1196);
      intArray0[2] = 215;
      intArray0[3] = 547;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[5][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass3.appendFoldedClass(intArray0);
      CharClass charClass5 = charClass4.appendFoldedRange((-1196), 2);
      CharClass charClass6 = charClass5.cleanClass();
      assertSame(charClass6, charClass4);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-23);
      intArray0[1] = 954;
      intArray0[2] = 2026;
      intArray0[3] = 4;
      intArray0[4] = (-2088258916);
      intArray0[5] = (-4131);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-2093327525));
      CharClass charClass2 = charClass1.negateClass();
      int[] intArray1 = charClass2.toArray();
      assertArrayEquals(new int[] {955, 2025}, intArray1);
      assertArrayEquals(new int[] {(-23), 954, 2026, 4, (-2088258916), (-4131)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(119963, 119963);
      int[] intArray1 = new int[5];
      intArray1[0] = 119963;
      intArray1[1] = 119963;
      intArray1[2] = 119963;
      intArray1[3] = (-2);
      intArray1[4] = 119963;
      // Undeclared exception!
      try { 
        charClass2.appendClassWithSign(intArray1, (-2004));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 188;
      intArray0[0] = 188;
      intArray0[1] = 846;
      int int1 = 95;
      intArray0[2] = 95;
      int int2 = 42894;
      intArray0[3] = 42894;
      CharClass.charClassToString(intArray0, (-183));
      int[] intArray1 = new int[6];
      intArray1[0] = 188;
      intArray1[1] = 188;
      int int3 = (-2375);
      intArray1[2] = (-2375);
      intArray1[3] = 42894;
      intArray1[4] = 42894;
      intArray1[5] = 188;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray1, 3859);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(5713, 5713);
      int[] intArray0 = charClass1.toArray();
      int[][] intArray1 = new int[8][0];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[0];
      charClass0.appendLiteral(5713, 5713);
      intArray1[1] = intArray2;
      charClass1.negateClass();
      intArray1[2] = intArray0;
      charClass1.negateClass();
      CharClass charClass2 = charClass0.appendRange(2, 2);
      charClass2.appendFoldedRange(122, 2);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray2, 5713);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = (-714);
      intArray0[1] = 1865;
      intArray0[2] = 271;
      intArray0[3] = 100;
      intArray0[4] = (-922);
      intArray0[5] = (-544);
      intArray0[6] = (-134);
      intArray0[7] = (-1);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[4][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, 128247);
      CharClass charClass3 = charClass2.negateClass();
      CharClass charClass4 = charClass3.appendFoldedRange(271, 8);
      CharClass charClass5 = charClass4.cleanClass();
      CharClass charClass6 = charClass5.appendLiteral((-134), 1114112);
      assertSame(charClass6, charClass5);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = (-3011);
      intArray0[0] = (-3011);
      intArray0[1] = 4;
      intArray0[2] = 3685;
      intArray0[3] = 327679;
      intArray0[4] = 2754;
      intArray0[5] = (-254);
      CharClass charClass0 = new CharClass(intArray0);
      int int1 = (-1996);
      CharClass charClass1 = charClass0.appendLiteral(2754, (-1996));
      CharClass charClass2 = charClass1.negateClass();
      // Undeclared exception!
      try { 
        charClass2.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      int int0 = 7;
      charClass0.toString();
      intArray0[0] = 7;
      intArray0[1] = (-626);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign((int[][]) null, 5091);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = null;
      CharClass charClass0 = null;
      try {
        charClass0 = new CharClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[0];
      int int0 = 0;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      int int1 = (-907);
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-907));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 1999);
      int[] intArray0 = new int[7];
      intArray0[0] = 1999;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 43455;
      intArray0[4] = 1999;
      intArray0[5] = 1999;
      intArray0[6] = 1999;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 5091;
      int int0 = 32;
      intArray0[1] = 32;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 5091);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-128);
      intArray0[2] = 2672;
      intArray0[3] = (-30);
      intArray0[4] = 4256;
      intArray0[5] = (-519);
      intArray0[6] = (-1061);
      intArray0[7] = 680;
      intArray0[8] = (-24);
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 680);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][3];
      int[] intArray1 = new int[2];
      intArray1[0] = (-126624);
      intArray1[1] = 3770;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[2];
      intArray2[0] = (-126624);
      intArray2[1] = 3770;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = (-856);
      intArray0[0] = (-856);
      int int1 = 684;
      intArray0[1] = 684;
      int int2 = 810;
      intArray0[2] = 810;
      intArray0[3] = 1455;
      int int3 = 589;
      intArray0[4] = 589;
      int int4 = 3774;
      intArray0[5] = 3774;
      int int5 = 481;
      intArray0[6] = 481;
      intArray0[7] = (-127176);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(632, (-127039));
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, 145);
      CharClass charClass3 = charClass2.negateClass();
      assertSame(charClass0, charClass3);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 11812;
      intArray0[1] = (-910);
      intArray0[2] = 1389;
      intArray0[3] = (-1195);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-1195));
      int[][] intArray1 = new int[4][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = (-1195);
      intArray2[1] = 1389;
      intArray2[2] = 1389;
      intArray2[3] = (-910);
      intArray2[4] = 11812;
      intArray2[5] = 2455;
      intArray2[6] = (-1195);
      intArray2[7] = 11812;
      intArray2[8] = (-910);
      intArray1[3] = intArray2;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {11812, (-910), 1389, (-1195)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-529);
      intArray0[0] = (-529);
      int int1 = (-2633);
      intArray0[1] = (-2633);
      int int2 = 178;
      intArray0[2] = 178;
      int int3 = 127344;
      intArray0[3] = 127344;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, (-529));
      int int4 = (-2119);
      charClass1.appendTableWithSign(intArray1, (-2119));
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.appendTable(intArray1);
      charClass1.appendTable(intArray1);
      CharClass charClass4 = charClass1.appendNegatedClass(intArray0);
      charClass4.negateClass();
      int[] intArray2 = new int[8];
      intArray2[0] = (-2119);
      intArray2[1] = (-529);
      intArray2[2] = (-2119);
      intArray2[3] = (-2633);
      intArray2[4] = 178;
      intArray2[5] = (-529);
      intArray2[6] = (-2119);
      intArray2[7] = 127344;
      charClass2.appendClass(intArray2);
      // Undeclared exception!
      try { 
        charClass3.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.appendRange(1861, 2971);
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[6];
      intArray1[0] = 2971;
      intArray1[1] = 1861;
      intArray1[2] = 64;
      intArray1[3] = 1861;
      intArray1[4] = 1861;
      intArray1[5] = 1861;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[24];
      intArray2[0] = 2971;
      intArray2[1] = 4;
      intArray2[2] = 1861;
      intArray2[3] = 64;
      intArray2[4] = 64;
      intArray2[5] = 64;
      intArray2[6] = 2971;
      intArray2[7] = 64;
      intArray2[8] = 64;
      intArray0[1] = intArray2;
      CharClass charClass4 = charClass3.appendTable(intArray0);
      CharClass charClass5 = charClass4.appendFoldedRange(2971, 3013);
      CharClass charClass6 = charClass5.appendLiteral(389, 1861);
      charClass6.appendFoldedRange(3770, (-1174));
      // Undeclared exception!
      charClass4.appendFoldedClass(intArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-3887);
      intArray0[1] = (-1886);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-2200);
      int int0 = (-126694);
      intArray0[1] = (-126694);
      int int1 = (-1586);
      intArray0[2] = (-1586);
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      int int0 = (-907);
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-907));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
