/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:40:26 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 16777222);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(27);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1579));
      Item item0 = classWriter0.newDouble((-1579));
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(909);
      classWriter0.index = 28;
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("uR1g", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(1490);
      Double double0 = new Double(1);
      Double.min(1490, 1810.6756);
      classWriter0.newConstItem(double0);
      int int0 = classWriter0.newUTF8("");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2979));
      classWriter0.visitEnd();
      classWriter0.visitOuterClass("&a%SW*O67T#", "&a%SW*O67T#", "&a%SW*O67T#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1478));
      byte[] byteArray0 = ClassWriter.TYPE;
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-1478), ",[K5RDepN>vAe3c~", ",[K5RDepN>vAe3c~", ",[K5RDepN>vAe3c~", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1579));
      classWriter0.newDouble((-1579));
      classWriter0.typeTable = null;
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "zd.Mz61(0cZ", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      int int0 = classWriter0.newMethod("~]J2C", "~]J2C", "~]J2C", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(107);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-1028));
      classWriter0.visitEnd();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-128), 107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(506);
      classWriter0.addUninitializedType("1_I", 506);
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(201);
      classWriter0.visit(29, 6, "InnerClasses", "InnerClasses", "InnerClasses", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AdSJ:u~P$SA*^H=JTl";
      classWriter0.visit((-95), (-95), "l%zs(t>F`_z`!,v78", "AdSJ:u~P$SA*^H=JTl", "RuntimeInvisibleAnnotations", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(167);
      String string0 = null;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-199));
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 167);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Short.BYTES;
      Item item0 = new Item(2);
      classWriter0.newNameType("java/lang/Object", "java/lang/Object");
      classWriter0.getCommonSuperClass("java/lang/Object", "java/lang/Object");
      byte[] byteArray0 = classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Item item1 = new Item();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "java/lang/Object");
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.newInteger((-2214));
      int int1 = Frame.INTEGER;
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      classWriter0.newNameType("java/lang/Object", "java/lang/Object");
      byte[] byteArray1 = classWriter0.toByteArray();
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      int int0 = classWriter0.newField("%K1;oT3asbh3*D", "%K1;oT3asbh3*D", "%K1;oT3asbh3*D");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      classWriter0.newDouble(292552704);
      Item item0 = classWriter0.newConstItem("");
      classWriter0.addUninitializedType("", 292552704);
      Item item1 = classWriter0.newInteger(11);
      assertFalse(item1.equals((Object)item0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1989));
      Character character0 = new Character('_');
      Item item0 = classWriter0.newConstItem(character0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2314));
      Type type0 = Type.FLOAT_TYPE;
      type0.getDescriptor();
      classWriter0.newConstItem(type0);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Long long0 = new Long(0);
      classWriter0.newConst(long0);
      classWriter0.addUninitializedType("java/langKObject", 1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: java.langKObject
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newInteger(1);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      Item item0 = new Item(1);
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "wheel.asm.ClassWriter");
      classWriter0.newClassItem("Signature");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.lastMethod = null;
      String[] stringArray0 = new String[0];
      classWriter0.visit(1860, 0, "java/lang/Object", "_p]ac$FKXy% l,w5KA<", "Signature", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(506);
      classWriter0.index = 506;
      classWriter0.visitEnd();
      Byte byte0 = new Byte((byte)95);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(81, "", "java/lang/Object", "InnerClasses", byte0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292552704);
      classWriter0.newClassItem("");
      classWriter0.visitOuterClass("", "", (String) null);
      classWriter0.newConstItem("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.visitSource((String) null, (String) null);
      classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      classWriter0.visitSource("Insensitive", "Insensitive");
      int int0 = Type.SHORT;
      classWriter0.visitAnnotation("K[.,FS(gWMgH-", false);
      classWriter0.addType("Insensitive");
      classWriter0.visitOuterClass("", (String) null, "");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      Float float0 = new Float(0.75);
      classWriter0.newConst(float0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      classWriter0.newDouble(0.0);
      String string0 = "";
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      String string1 = "YrkE+=&]rwM*{l(I";
      stringArray0[2] = "YrkE+=&]rwM*{l(I";
      stringArray0[3] = "";
      // Undeclared exception!
      try { 
        classWriter0.visit((-3832), 4, "", (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newDouble(0);
      Integer integer0 = new Integer(387);
      classWriter0.newConstItem(integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4540));
      Boolean boolean0 = Boolean.valueOf(true);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2101));
      Item item0 = classWriter0.key2;
      Boolean boolean0 = new Boolean((String) null);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      classWriter0.visitSource((String) null, "");
      Float float0 = new Float((float) 2);
      classWriter0.newConstItem(float0);
      classWriter0.newFloat(2);
      Type type0 = Type.FLOAT_TYPE;
      FieldWriter fieldWriter0 = classWriter0.firstField;
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource("j", "j");
      classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitInnerClass("T/:j/", "T/:j/", "T/:j/", 0);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Character character0 = new Character('w');
      classWriter0.visitAnnotation("", true);
      Character.valueOf('H');
      Byte byte0 = new Byte((byte)33);
      Byte.toUnsignedInt((byte)33);
      classWriter0.visitField(286, "", "T]~", (String) null, byte0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3238));
      classWriter0.threshold = (-3238);
      classWriter0.newNameType("Code", "Code");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "java/lang/Object";
      classWriter0.toByteArray();
      Item item0 = classWriter0.key3;
      classWriter0.addUninitializedType("java/lang/Object", 1);
      classWriter0.newClassItem("java/lang/Object");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newDouble(2496.1507974925);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newInteger(3886);
      classWriter0.toByteArray();
      classWriter0.newDouble(2496.1507974925);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(370, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 370
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Item item0 = new Item(1);
      String string0 = "wheel.asm.ClassWriter";
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "wheel.asm.ClassWriter");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.newInteger(23);
      classWriter0.visitAnnotation("org.apache.commons.io.filefilter.EmptyFileFilter", false);
      byte[] byteArray1 = classWriter0.toByteArray();
      short short0 = (short) (-11);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Short short1 = new Short((short) (-11));
      classWriter0.newClass("java/lang/Object");
      int int0 = 24;
      classWriter0.addUninitializedType("java/lang/Object", 5);
      Attribute attribute0 = new Attribute("1w<44qOFz!WFF");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray1, 2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 122
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.key3;
      classWriter0.addUninitializedType("java/lang/Object", 1);
      classWriter0.addUninitializedType("java/lang/Object", 1);
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.visitOuterClass("System", "System", "f|");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.invalidFrames = true;
      String string0 = "java/lang/Object";
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      Short short0 = new Short((short)1524);
      classWriter0.newConst(short0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(192, 43, "java/lang/Object", "", "java/lang/Object", stringArray0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newInteger(1);
      classWriter0.newNameType("java/lang/Object", "java/lang/Object");
      Character.getName(0);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.newInteger(0);
      classWriter0.index = 6;
      classWriter0.toByteArray();
      FieldWriter fieldWriter2 = classWriter0.lastField;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newInteger(0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("+|u-L=", "+|u-L=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '+|u-L=.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(252);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "yB*d\"g)7";
      stringArray0[1] = "";
      classWriter0.visit(252, 0, "org.apache.commons.io.filefilter.CanWriteFileFilter", (String) null, "", stringArray0);
      classWriter0.newClassItem("yB*d\"g)7");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newDouble(898.0521238301009);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newInteger(0);
      String string0 = File.separator;
      classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte) (-30);
      ClassWriter classWriter0 = new ClassWriter(31);
      classWriter0.addType("+");
      classWriter0.addType("+");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = (-1002);
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte)33;
      byteArray0[0] = (byte)33;
      int int1 = Type.OBJECT;
      ClassWriter classWriter0 = new ClassWriter((-1002));
      String[] stringArray0 = new String[0];
      classWriter0.visit(0, (-3030), "2Kw<.=5mge~YHET^M,V", "", "5r`KaXKpR79je", stringArray0);
      Item item0 = classWriter0.newClassItem("Signature");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item item1 = new Item(1, item0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newInteger(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = File.separator;
      classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("2Kw<.=5mge~YHET^M,V");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource("Insensitive", "Insensitive");
      int int0 = Double.MAX_EXPONENT;
      boolean boolean0 = ClassReader.WRITER;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      classWriter0.visit(1023, 4638, "", "Insensitive", "org.apache.commons.io.filefilter.CanWriteFileFilter", stringArray0);
      classWriter0.newClassItem("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newDouble(1023);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newInteger(0);
      String string0 = File.separator;
      classWriter0.toByteArray();
      classWriter0.newDouble(51);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 1023);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1030));
      classWriter0.visitSource("Insensitive", "Insensitive");
      classWriter0.version = (-1030);
      int int0 = Double.MAX_EXPONENT;
      Item item0 = new Item();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Insensitive";
      classWriter0.newDouble(2);
      stringArray0[1] = "Insensitive";
      stringArray0[2] = "Insensitive";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[3] = "Insensitive";
      classWriter0.newInteger(1);
      Type type0 = Type.FLOAT_TYPE;
      System.setCurrentTimeMillis(3);
      classWriter0.newConst("Insensitive");
      Character character0 = new Character('U');
      Character.isIdeographic(2);
      classWriter0.newConstItem(character0);
      classWriter0.addUninitializedType("Insensitive", 2);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      classWriter0.newConstItem("Insensitive");
      classWriter0.newUTF8("EnclosingMethod");
      String string0 = "StackMap";
      classWriter0.visitInnerClass("StackMap", "Insensitive", "Insensitive", 5);
      classWriter0.visitAnnotation("StackMap", false);
      String string1 = "boolean";
      // Undeclared exception!
      try { 
        classWriter0.visitField(36, "StackMap", "boolean", "EnclosingMethod", mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@61a3b28b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      Attribute attribute0 = new Attribute("javadlang/Objecu");
      classWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.newInteger(1);
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nX^|8R}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Character character0 = new Character('8');
      classWriter0.visitField((-889275714), "", "", "", character0);
      classWriter0.newConst(character0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      boolean boolean0 = ClassReader.SIGNATURES;
      int int0 = Type.BYTE;
      byte[] byteArray0 = ClassWriter.TYPE;
      Item[] itemArray0 = new Item[1];
      classWriter0.invalidFrames = false;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("", 30);
      // Undeclared exception!
      try { 
        classWriter0.visitField(33554432, (String) null, "", "value ", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "java/lang/Object";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`;4l,'na a&_zji~jp";
      classWriter0.visitMethod(0, "java/lang/Object", "java/lang/Object", "`;4l,'na a&_zji~jp", stringArray0);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(13, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Item item0 = classWriter0.key3;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      classWriter0.newLong(1);
      int int1 = Edge.NORMAL;
      classWriter0.addUninitializedType("java/lang/Object", 1);
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 25);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFieldItem("T/:j/", "T/:j/", "T/:j/");
      classWriter0.visitInnerClass("T/:j/", "T/:j/", "T/:j/", 0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T/:j/");
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newField("T/:j/", "T/:j/", "T/:j/");
      classWriter0.newInteger(2);
      classWriter0.addUninitializedType("T/:j/", 1);
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newInteger(1);
      Character.getName(0);
      classWriter0.firstField = null;
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "wheel.asm.ClassWriter");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.newClassItem("Signature");
      byte[] byteArray0 = ClassWriter.TYPE;
      Item item0 = new Item();
      classWriter0.toByteArray();
      classWriter0.newMethod("org.apache.commons.io.filefilter.EmptyFileFilter", "!tJ4s?Wc.4rb6zwE", "DlW6:./", false);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      Type type0 = Type.getReturnType(",!L0h%5^;(jPF");
      type0.toString();
      classWriter0.newConstItem(type0);
      classWriter0.visitAnnotation("Deprecated", false);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newMethod("T/:j/", "T/:j/", "T/:j/", true);
      Item item0 = classWriter0.newMethodItem("T/:j/", "T/:j/", "T/:j/", true);
      item0.set((-1163.0F));
      item0.strVal2 = "";
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Item item1 = classWriter0.key2;
      classWriter0.addUninitializedType("T/:j/", 1);
      classWriter0.newLong(0);
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'T/:j/.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.key;
      classWriter0.addUninitializedType("java/lang/Object", 1);
      classWriter0.newLong(1);
      classWriter0.getMergedType(1, 1);
      classWriter0.getMergedType(1, 1);
      classWriter0.getCommonSuperClass("java/lang/Object", "java/lang/Object");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1030));
      classWriter0.visitSource("Insensitive", "Insensitive");
      String string0 = "org.apache.commons.io.filefilter.EmptyFileFilter";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Insensitive";
      classWriter0.visit(4638, (-1030), "org.apache.commons.io.filefilter.EmptyFileFilter", "Insensitive", "E]2", stringArray0);
      Item item0 = classWriter0.key;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newDouble(2);
      Attribute attribute0 = new Attribute("Insensitive");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)108;
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newInteger(4638);
      classWriter0.newInteger(23);
      String string1 = File.separator;
      classWriter0.toByteArray();
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.newDouble(2);
      // Undeclared exception!
      try { 
        classWriter1.getMergedType((-1640), 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.newInteger(1);
      Item item0 = new Item(2);
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.EmptyFileFilter", "wheel.asm.ClassWriter");
      classWriter0.newClassItem("java/lang/Object");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.toByteArray();
  }
}
