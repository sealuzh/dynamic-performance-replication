/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 17:47:43 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      regexp0.equals(object0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexp1.reinit();
      regexp0.flags = 413;
      regexp1.flags = (-593);
      regexpArray0[0].subs = regexp1.subs;
      regexp1.maxCap();
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp1.maxCap();
      regexp1.equals(object0);
      Object object1 = new Object();
      boolean boolean0 = regexp1.equals(object1);
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean1 = regexp1.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "PLUS";
      Regexp.Op regexp_Op0 = Regexp.Op.valueOf("PLUS");
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-7);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.equals((Object) null);
      Regexp.Op regexp_Op2 = Regexp.Op.CONCAT;
      regexp_Op2.isPseudo();
      Regexp regexp3 = new Regexp(regexp_Op2);
      Object object1 = new Object();
      Regexp.Op regexp_Op3 = Regexp.Op.REPEAT;
      Regexp regexp4 = new Regexp(regexp_Op3);
      regexp4.flags = 1505;
      regexp4.equals(regexp2);
      regexp1.equals("4Q)%");
      Regexp regexp5 = new Regexp(regexp3);
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.op = regexp_Op0;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.subs = regexpArray0;
      regexp1.min = 5682;
      regexp0.max = 5682;
      regexp1.toString();
      regexp1.equals("[^x00-x{10FFFF}]");
      regexp1.equals("[^x00-x{10FFFF}]");
      regexp0.equals(regexp1);
      regexp1.toString();
      regexp0.maxCap();
      Regexp.Op.values();
      regexp1.maxCap();
      regexp0.equals(regexp_Op0);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("vTu9qOk+^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.vTu9qOk+^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      regexp0.runes = intArray0;
      intArray0[1] = (-1098);
      intArray0[2] = 0;
      String string0 = regexp0.toString();
      assertEquals("[\\x00-\\xfffffbb6\\x00\\x00\\x00]", string0);
      
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertFalse(boolean0);
      
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp1);
      regexp4.min = 0;
      regexp4.toString();
      regexp2.maxCap();
      assertTrue(regexp2.equals((Object)regexp0));
      
      int int0 = regexp4.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.cap = 4128;
      boolean boolean0 = regexp0.equals(regexp1);
      int int0 = regexp0.min;
      regexp0.toString();
      int int1 = regexp0.maxCap();
      assertEquals(0, int1);
      
      regexp1.toString();
      regexp1.toString();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp_Op1);
      Object object1 = new Object();
      regexp0.equals(object1);
      Regexp regexp4 = new Regexp(regexp2);
      int int2 = regexp1.maxCap();
      assertEquals(0, int2);
      
      regexp2.reinit();
      regexp0.reinit();
      regexp4.toString();
      regexp1.toString();
      regexp2.equals(regexp3);
      boolean boolean1 = regexp0.equals("z");
      assertFalse(boolean1 == boolean0);
      
      regexp1.toString();
      assertFalse(regexp1.equals((Object)regexp4));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.toString();
      Object object1 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.equals(regexp2);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op regexp_Op2 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexp1.equals(regexp0);
      Regexp regexp4 = new Regexp(regexp1);
      Regexp regexp5 = new Regexp(regexp4);
      regexp5.toString();
      regexp2.toString();
      Regexp regexp6 = new Regexp(regexp3);
      regexp6.toString();
      assertFalse(regexp3.equals((Object)regexp5));
      assertTrue(regexp6.equals((Object)regexp3));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp1);
      int int0 = regexp0.min;
      regexp1.toString();
      regexp1.toString();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      regexp0.runes = intArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      boolean boolean1 = regexp0.equals(object0);
      assertFalse(boolean1 == boolean0);
      
      Regexp regexp3 = new Regexp(regexp2);
      regexp3.toString();
      regexp1.toString();
      String string0 = regexp1.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[4] = (-2250);
      intArray0[1] = (-1098);
      intArray0[2] = 0;
      intArray0[3] = 2248;
      intArray0[5] = 9;
      intArray0[6] = 19;
      intArray0[0] = 10;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.equals(regexp2);
      Regexp regexp3 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.equals(regexp0.op);
      regexp1.maxCap();
      regexp0.reinit();
      int int0 = regexp1.cap;
      regexp1.cap = (-1560);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.maxCap();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.reinit();
      regexp0.maxCap();
      Regexp regexp3 = new Regexp(regexp1);
      Regexp regexp4 = new Regexp(regexp2);
      regexp0.equals(regexp4);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0.op);
      regexp1.maxCap();
      regexp0.reinit();
      regexp0.maxCap();
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-2250);
      intArray0[1] = (-1098);
      intArray0[2] = (-2250);
      intArray0[3] = 2248;
      intArray0[6] = (-2);
      intArray0[0] = 10;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("[\n-xfffffbb6xfffff736-x{8c8}x00xfffffffe-x00]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.[
         // -xfffffbb6xfffff736-x{8c8}x00xfffffffe-x00]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp1.op = regexp_Op0;
      regexp1.min = 1525;
      regexp1.flags = 350;
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp2.toString();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("jdu M;daQtz7[z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.jdu M;daQtz7[z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = "";
      regexp0.name = "";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.runes = null;
      regexp1.min = 5;
      regexp1.min = (-1096);
      regexp1.max = (-2417);
      regexp1.flags = (-2417);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp1.min = 1525;
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp2);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
      
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp4 = new Regexp(regexp_Op1);
      int int0 = regexp4.maxCap();
      assertEquals(0, int0);
      assertFalse(regexp4.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp0.reinit();
      regexp0.toString();
      regexp0.toString();
      regexp0.toString();
      Object object0 = new Object();
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp2);
      regexp2.equals(regexp3);
      Regexp regexp4 = new Regexp(regexp0);
      regexp0.reinit();
      regexp0.equals(regexp0);
      regexp3.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp0.equals(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.VERTICAL_BAR;
      regexp_Op2.isPseudo();
      regexp1.reinit();
      regexp0.maxCap();
      regexp4.reinit();
      regexp0.reinit();
      regexp0.reinit();
      regexp3.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      String string0 = "tOOv/^;%hy)Ave}xc\\";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      regexp0.cap = (-16);
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      regexp0.cap = 4800;
      regexp_Op2.isPseudo();
      regexp0.maxCap();
      Regexp.Op regexp_Op3 = Regexp.Op.CONCAT;
      regexp_Op3.isPseudo();
      Regexp.Op.values();
      regexp0.equals("tOOv/^;%hy)Ave}xc");
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.toString();
      boolean boolean0 = regexp0.equals("tn|Ci]");
      assertFalse(boolean0);
      
      regexp2.toString();
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp2.equals(regexp0);
      regexp3.maxCap();
      Regexp regexp4 = new Regexp(regexp_Op1);
      int int0 = regexp4.maxCap();
      assertFalse(regexp4.equals((Object)regexp3));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexp0.cap = 12;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      int int0 = regexp0.min;
      regexp0.toString();
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.min = (-3036);
      regexp0.equals(regexp1);
      Regexp.Op.values();
      Regexp regexp2 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-2250);
      intArray0[1] = (-1098);
      intArray0[2] = 7;
      intArray0[3] = 2248;
      intArray0[4] = 3703;
      intArray0[5] = 9;
      intArray0[6] = 19;
      intArray0[7] = 10;
      regexp0.runes = intArray0;
      regexp0.toString();
      String string0 = regexp0.toString();
      assertEquals("[\\xfffff736-\\xfffffbb6\\x07-\\x{8c8}\\x{e77}-\\t\\x13-\\n]", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0.op);
      regexp1.maxCap();
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.subs = null;
      regexp2.maxCap();
      Regexp regexp3 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp3.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4143;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.reinit();
      Regexp regexp3 = new Regexp(regexp2);
      regexp3.equals(regexp_Op1);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op1.isPseudo();
      regexp3.reinit();
      Object object0 = new Object();
      regexp2.equals((Object) null);
      Regexp regexp4 = new Regexp(regexp0);
      boolean boolean0 = regexp4.equals(regexp1);
      Regexp regexp5 = new Regexp(regexp4);
      boolean boolean1 = regexp5.equals("3mW\"QwhgGTV<_xm13");
      assertFalse(regexp5.equals((Object)regexp3));
      assertFalse(boolean1);
      
      Regexp.Op regexp_Op2 = Regexp.Op.CAPTURE;
      boolean boolean2 = regexp_Op2.isPseudo();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp3.reinit();
      Regexp regexp4 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp0.reinit();
      regexp0.reinit();
      regexp0.reinit();
      Regexp.Op regexp_Op2 = Regexp.Op.LEFT_PAREN;
      regexp_Op2.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("OlOLhiki");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.OlOLhiki
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      String string0 = "%BjzQ_qg!`pv(.}nSRZ";
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp_Op1.isPseudo();
      Regexp.Op regexp_Op2 = Regexp.Op.NO_MATCH;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("%BjzQ_qg!`pv(.}nSRZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.%BjzQ_qg!`pv(.}nSRZ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.max = 0;
      regexp2.reinit();
      Regexp[] regexpArray0 = new Regexp[4];
      regexpArray0[0] = regexp2;
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexpArray0[1] = regexp3;
      regexpArray0[2] = regexp2;
      regexpArray0[3] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      String string0 = "tOOv/^;%hy)Ave}xc\\";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      regexp0.cap = (-16);
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      regexp_Op2.isPseudo();
      regexp0.maxCap();
      Regexp.Op regexp_Op3 = Regexp.Op.CONCAT;
      regexp_Op3.isPseudo();
      regexp0.equals("tOOv/^;%hy)Ave}xc");
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.reinit();
      String string0 = regexp1.name;
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
      
      Regexp.Op.values();
      Regexp.Op.values();
      boolean boolean1 = regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp1.equals(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      regexp_Op1.isPseudo();
      boolean boolean2 = regexp1.equals(regexp_Op1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-2688);
      intArray0[1] = (-703);
      intArray0[2] = 320;
      regexp0.reinit();
      intArray0[3] = 19;
      intArray0[4] = 216;
      intArray0[5] = 41;
      intArray0[6] = 2363;
      regexp0.runes = intArray0;
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp0.toString();
      regexp0.equals("\b");
      Regexp.Op.values();
      regexp0.toString();
      regexp0.equals("\b");
      String string0 = regexp0.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.toString();
      int[] intArray0 = new int[4];
      intArray0[0] = 10;
      regexp0.runes = intArray0;
      intArray0[1] = 18;
      intArray0[2] = 2653;
      intArray0[3] = 0;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      String string0 = "tOOv/^;%hy)Ave}xc\\";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      Regexp.Op regexp_Op2 = Regexp.Op.ANY_CHAR;
      regexp_Op2.isPseudo();
      regexp0.maxCap();
      Regexp.Op regexp_Op3 = Regexp.Op.CONCAT;
      regexp_Op3.isPseudo();
      regexp0.equals("tOOv/^;%hy)Ave}xc");
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.toString();
      regexp2.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp regexp3 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp1.equals("A");
      assertFalse(boolean0);
      
      regexp2.maxCap();
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp[] regexpArray1 = new Regexp[8];
      regexpArray1[0] = regexp0;
      regexpArray1[1] = regexp0;
      regexpArray1[2] = regexp0;
      regexpArray1[3] = regexp0;
      regexpArray1[4] = regexp0;
      regexpArray1[5] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray1[6] = regexp1;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      Regexp regexp2 = new Regexp(regexp1);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp3.reinit();
      Regexp regexp4 = new Regexp(regexp2);
      boolean boolean0 = regexp2.equals(regexp4);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp2.reinit();
      Object object0 = new Object();
      boolean boolean1 = regexp4.equals(object0);
      assertFalse(boolean1);
      
      regexp4.equals(regexp0);
      regexp0.equals(regexp2);
      assertFalse(regexp2.equals((Object)regexp3));
      
      boolean boolean2 = regexp_Op1.isPseudo();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.toString();
      Object object0 = new Object();
      regexp0.equals(object0);
      Regexp regexp3 = new Regexp(regexp0);
      regexp3.toString();
      Regexp regexp4 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp1.equals("V/FN|%nS");
      assertFalse(boolean0);
      
      regexp4.maxCap();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      Object object0 = new Object();
      regexp0.equals(object0);
      String string0 = "Bh)V";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 0;
      regexp0.min = 0;
      regexp1.toString();
      regexp1.reinit();
      regexp_Op0.isPseudo();
      regexp0.flags = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp0.equals(regexp2);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(" a-N*@}jm.:%$f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op. a-N*@}jm.:%$f
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      regexp0.equals((Object) null);
      intArray0[0] = (-462);
      regexp0.runes = intArray0;
      regexp0.min = (-462);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      regexp2.cap = 93;
      regexp2.flags = 42510;
      regexp2.equals(regexp_Op0);
      regexp2.maxCap();
      regexp0.maxCap();
      regexp2.op = regexp_Op0;
      Regexp.Op.values();
      regexp2.runes = intArray0;
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp_Op0.isPseudo();
      regexp2.reinit();
      regexp2.maxCap();
      regexp0.reinit();
      regexp0.reinit();
      regexp2.reinit();
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 40;
      intArray0[1] = 0;
      intArray0[2] = 11379;
      intArray0[3] = 439;
      intArray0[4] = 0;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.reinit();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      regexp_Op1.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-8307);
      regexp1.max = 2193;
      Object object0 = new Object();
      regexp1.toString();
      int[] intArray0 = new int[8];
      intArray0[0] = (-8307);
      intArray0[1] = (-8307);
      intArray0[2] = 2193;
      intArray0[3] = 2193;
      intArray0[4] = 2193;
      intArray0[5] = 2193;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp1.equals(regexp2);
      regexp_Op0.isPseudo();
      regexp2.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("|qY1-@)q@xD,jC1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.|qY1-@)q@xD,jC1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp_Op1.isPseudo();
      regexp1.equals(regexp_Op0);
      regexp0.toString();
      Regexp.Op regexp_Op2 = Regexp.Op.ALTERNATE;
      regexp_Op2.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("v");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.v
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexp0.reinit();
      Regexp regexp3 = new Regexp(regexp1);
      Regexp regexp4 = new Regexp(regexp3);
      regexp3.equals(regexp4);
      Regexp.Op.values();
      Regexp.Op.values();
      boolean boolean0 = regexp_Op1.isPseudo();
      regexp4.reinit();
      regexp0.equals((Object) null);
      regexp_Op1.isPseudo();
      Object object0 = new Object();
      boolean boolean1 = regexp2.equals(object0);
      assertFalse(regexp1.equals((Object)regexp2));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      int int0 = (-462);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      regexp0.cap = (-2591);
      int[] intArray0 = new int[6];
      intArray0[0] = (-2591);
      intArray0[1] = (-27);
      intArray0[2] = (-2591);
      intArray0[3] = (-2591);
      intArray0[4] = 2492;
      intArray0[5] = 94;
      regexp0.runes = intArray0;
      regexp0.equals(regexp1);
      regexp0.cap = 104;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(" a-N*@}jm.:%$f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op. a-N*@}jm.:%$f
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[3];
      regexp1.max = 0;
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexpArray0[0].op = regexp_Op1;
      regexpArray0[2] = regexp2;
      regexp1.subs = regexpArray0;
      regexp2.max = (-2544);
      regexp2.cap = (-2544);
      regexp_Op0.isPseudo();
      regexp2.maxCap();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 350;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4128;
      regexp0.reinit();
      regexp1.min = 1525;
      regexp1.flags = 0;
      regexp1.max = 0;
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      regexp0.max = 0;
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp1.reinit();
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = regexp0.equals(regexp_Op0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.reinit();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 3881;
      regexp0.runes = intArray0;
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.maxCap();
      String string0 = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.STAR;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[1];
      regexp0.equals((Object) null);
      intArray0[0] = (-462);
      regexp0.runes = intArray0;
      regexp0.min = 0;
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.reinit();
      regexp2.cap = 93;
      regexp2.flags = 42510;
      regexp2.equals(regexp_Op0);
      regexp2.maxCap();
      regexp0.maxCap();
      regexp2.op = regexp_Op0;
      Regexp.Op.values();
      regexp2.runes = intArray0;
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp_Op0.isPseudo();
      regexp2.reinit();
      regexp2.maxCap();
      regexp0.reinit();
      regexp0.reinit();
      regexp2.reinit();
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 125;
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.flags = 0;
      regexp0.cap = 0;
      regexp0.reinit();
      regexp0.name = "";
      regexp0.equals(object0);
      regexp0.flags = 2575;
      regexp0.flags = 40;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp0.min = 36;
      regexp0.equals(regexp_Op0);
      regexp_Op0.isPseudo();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("RgtAt-y{w~]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.RgtAt-y{w~]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 40;
      intArray0[1] = 0;
      intArray0[2] = 11379;
      intArray0[3] = 439;
      intArray0[4] = 0;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.reinit();
      regexp0.min = (-178);
      regexp0.subs = regexpArray0;
      regexp0.cap = (-178);
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 1608;
      regexp0.equals(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.maxCap();
      Object object0 = new Object();
      boolean boolean1 = regexp0.equals(object0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      int int0 = (-16);
      String string0 = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "%BjzQ_qg!`pv(.}nSRZ";
      regexp0.name = "tOOv/^;%hy)Ave}xc";
      regexp0.max = (-16);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-8307);
      regexp1.max = 2193;
      Object object0 = new Object();
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      int[] intArray0 = new int[8];
      intArray0[0] = (-8307);
      intArray0[1] = (-8307);
      intArray0[2] = 2193;
      intArray0[3] = 2193;
      intArray0[4] = 2193;
      intArray0[5] = 2193;
      intArray0[6] = 2193;
      intArray0[7] = 2193;
      regexp0.runes = intArray0;
      regexp1.op = regexp_Op1;
      regexp1.op.isPseudo();
      regexp1.op = regexp_Op1;
      regexp1.equals(object0);
      regexp1.reinit();
      regexp0.toString();
      Regexp.Op.values();
      regexp1.reinit();
      assertFalse(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 2194;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 2194;
      regexp0.max = 2194;
      regexp1.reinit();
      regexp1.toString();
      regexp1.equals(regexp_Op0);
      regexp0.flags = 0;
      regexp1.name = "Mongolian";
      regexp1.maxCap();
      regexp1.flags = 0;
      regexp_Op0.isPseudo();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 2194;
      intArray0[3] = 2194;
      intArray0[4] = 0;
      intArray0[5] = 0;
      regexp0.runes = intArray0;
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp1.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("{afxqF@1}Bm:)Qw6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.{afxqF@1}Bm:)Qw6
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-595);
      intArray0[3] = (-807);
      intArray0[4] = (-1245);
      intArray0[5] = 667;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 2635;
      regexp1.runes = intArray0;
      regexp1.maxCap();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }
}
