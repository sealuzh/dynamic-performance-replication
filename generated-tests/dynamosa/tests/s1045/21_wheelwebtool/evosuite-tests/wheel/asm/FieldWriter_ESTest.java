/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 06 01:14:47 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4136);
      classWriter0.version = 4136;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4136, "'N;mnOu", "'N;mnOu", "'N;mnOu", "'N;mnOu");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      classWriter0.index = (-2317);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "kx2", "", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(88, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4121);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4121, "/E@xJj/h0", "/E@xJj/h0", "/E@xJj/h0", "/E@xJj/h0");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "pn2q", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4156, "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4136);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "|ReGIjto\"A'RyV;", "|ReGIjto\"A'RyV;", "|ReGIjto\"A'RyV;", "|ReGIjto\"A'RyV;");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4156, "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter");
      Attribute attribute0 = new Attribute(":UR.$jeruNJJ");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2047);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[1];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4121);
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "9-wH1_~", "<'?yibWeW=1 :", "/E@xJj/h0", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1827), "~ ?`>{OHj<IV,/", "wheel.asm.FieldWriter", (String) null, "4ZB8_}");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 2732, "Tp](ZLko[gL#4Iu2^5", "Tp](ZLko[gL#4Iu2^5", "Tp](ZLko[gL#4Iu2^5", "Tp](ZLko[gL#4Iu2^5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2047);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "!>h&UAi^]i7@zsy!7", "!>h&UAi^]i7@zsy!7", "!>h&UAi^]i7@zsy!7", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4156, "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter");
      Attribute attribute0 = new Attribute(":UR.$jeruNJJ");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2068);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "9kkJ&Ed:<{", "9kkJ&Ed:<{", "9kkJ&Ed:<{", "9kkJ&Ed:<{");
      Attribute attribute0 = new Attribute("9kkJ&Ed:<{");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2047);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      fieldWriter0.visitAnnotation("wheel.asm.FieldWriter", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(145, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3791));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3791), "org.ap/che.co13ons.io.filefilter.NameFileFilter", "org.ap/che.co13ons.io.filefilter.NameFileFilter", "org.ap/che.co13ons.io.filefilter.NameFileFilter", "org.ap/che.co13ons.io.filefilter.NameFileFilter");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(166, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4136);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4136, "TK@v3D{}P++KHa%7\tyA", "TK@v3D{}P++KHa%7\tyA", "TK@v3D{}P++KHa%7\tyA", "TK@v3D{}P++KHa%7\tyA");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(101, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2047);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (String) null, (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(56, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4156, "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter", "org.apache.co1mons.io.filefilter.NameFileFilter");
      fieldWriter0.visitAnnotation("org.apache.co1mons.io.filefilter.NameFileFilter", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(187, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4156);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "kx2", "", "", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1296, "java/lang/Object", "A", "", "A");
      fieldWriter0.visitEnd();
  }
}
