/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 09:02:47 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2448, 2448, fieldTypeShort0, 2448, (-2147483648L), byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2, int0);
      assertEquals(2448, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2448, tiffField0.getTag());
      assertEquals(4896, tiffField0.getBytesLength());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)115;
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1207, (-490), fieldTypeRational0, 2507L, (-13840L), byteArray0, (ByteOrder) null, (byte)115);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(20056, tiffField0.getBytesLength());
      assertEquals((-13840), tiffField0.getOffset());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-490), tiffField0.getDirectoryType());
      assertEquals(115, int0);
      assertEquals(1207, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1207, (-490), fieldTypeRational0, 2507L, (-13840L), byteArray0, (ByteOrder) null, (byte)115);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(20056, tiffField0.getBytesLength());
      assertEquals((-13840), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1207, tiffField0.getTag());
      assertEquals((-490), tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(40091, 50, fieldTypeLong0, (-1148L), (-1L), byteArray0, byteOrder0, (byte) (-110));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals((-110), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)28, (byte) (-121), fieldTypeDouble0.IFD, 50732, 50732, byteArray0, byteOrder0, 50732);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(50732, tiffField0.getSortHint());
      assertEquals(50732, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.length);
      assertEquals(28, tiffField0.getTag());
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40965, (-1), fieldTypeRational0, (byte)63, 0, byteArray0, (ByteOrder) null, 39);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
      assertEquals(40965, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      int int0 = tiffField0.getTag();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(2178, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2178, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "u=dhB)<1!tn<Ri%");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-274), fieldTypeFloat0, 0L, (-1), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getTag();
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0.ASCII, 0L, (-760L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-760), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeLong0, 676L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2104), "[boolean[]: ");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "[boolean[]: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-2104), byteArray0, byteOrder0, (byte) (-114));
      int int0 = tiffField0.getSortHint();
      assertEquals((-114), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2104), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(342, (-1686), fieldTypeAscii0, 342, 1322L, byteArray0, byteOrder0, (byte) (-66));
      int int0 = tiffField0.getOffset();
      assertEquals((-1686), tiffField0.getDirectoryType());
      assertEquals(342, tiffField0.getTag());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(1322, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)104, (-6), fieldTypeShort0, (byte)108, (-103L), byteArray0, byteOrder0, (-6));
      int int0 = tiffField0.getOffset();
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getTag());
      assertEquals((-103), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)74;
      TiffField tiffField0 = new TiffField(777, (-614), fieldTypeFloat0.LONG, 777, (-1372L), byteArray0, byteOrder0, (byte)74);
      tiffField0.getIntValueOrArraySum();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals((-614), tiffField0.getDirectoryType());
      assertEquals((-1372), tiffField0.getOffset());
      assertEquals(3108, tiffField0.getBytesLength());
      assertEquals(777, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)74;
      byteArray0[7] = (byte)74;
      TiffField tiffField0 = new TiffField(2137401565, (-1426), fieldTypeFloat0.LONG, 8L, 167L, byteArray0, byteOrder0, (byte)74);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1426), tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(167, tiffField0.getOffset());
      assertEquals(2137401565, tiffField0.getTag());
      assertEquals(74, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)125;
      byteArray0[4] = (byte)31;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2133628913), (-336), fieldTypeRational0, 1L, 47314L, byteArray0, byteOrder0, (byte)20);
      tiffField0.getIntValue();
      assertEquals(47314, tiffField0.getOffset());
      assertEquals((-2133628913), tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals((-336), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4056), 3323, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 2137495354);
      tiffField0.getIntValue();
      assertEquals(3323, tiffField0.getDirectoryType());
      assertEquals((-4056), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2137495354, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, (String) null);
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, 19L, 19L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2192, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(22, 2192, fieldTypeShort0, 717L, (-718L), byteArray0, byteOrder0, 48130);
      tiffField0.getFieldTypeName();
      assertEquals(2192, tiffField0.getDirectoryType());
      assertEquals(48130, tiffField0.getSortHint());
      assertEquals((-718), tiffField0.getOffset());
      assertEquals(22, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "u=dhB)<1!tn<Ri%");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-274), fieldTypeFloat0, 0L, (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-53), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(40, 133, fieldTypeShort0, 40, (-546L), byteArray0, byteOrder0, (-15));
      tiffField0.getFieldType();
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getTag());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-546), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeDouble0, (byte)28, (-2447L), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals((-2447), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "wE]e");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[27];
      TiffField tiffField0 = new TiffField(48, 12, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).IFD).FLOAT, 1L, 1, byteArray0, byteOrder0, (-1666));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getTag());
      assertEquals((-1666), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)125;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-473), (byte)125, fieldTypeRational0, 1L, 657L, byteArray0, byteOrder0, 2147005260);
      tiffField0.getDoubleValue();
      assertEquals(657, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-473), tiffField0.getTag());
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(2147005260, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-53), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-102);
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-4134L), byteArray0, byteOrder0, 29);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-4134), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 2732, fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, 34855);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2732, int0);
      assertEquals(34855, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(42, tiffField0.getOffset());
      assertEquals(2178, tiffField0.getSortHint());
      assertEquals(2178, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2178, (-703), fieldTypeShort0, 2178, 11736L, byteArray0, byteOrder0, 6);
      tiffField0.getCount();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-703), tiffField0.getDirectoryType());
      assertEquals(2178, tiffField0.getTag());
      assertEquals(11736, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1796, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1796, 1796, fieldTypeDouble0, (-2006L), (-827L), byteArray0, byteOrder0, (byte)112);
      tiffField0.getCount();
      assertEquals(112, tiffField0.getSortHint());
      assertEquals(1796, tiffField0.getDirectoryType());
      assertEquals(1796, tiffField0.getTag());
      assertEquals((-827), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2178, fieldTypeFloat0, 0, 42L, byteArray0, byteOrder0, 2178);
      int int0 = tiffField0.getBytesLength();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2178, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2178, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeLong0, 676L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2704, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5851L, 2934L, byteArray0, (ByteOrder) null, 325);
      tiffField0.getByteOrder();
      assertEquals(2934, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(325, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeDouble0, (byte)28, (-2447L), byteArray0, byteOrder0, 50);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(125, byteArray1.length);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals((-2447), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)74, (-999), fieldTypeFloat0, 0, (-917L), byteArray0, byteOrder0, 1);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-999), tiffField0.getDirectoryType());
      assertEquals((-917), tiffField0.getOffset());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-104), (-1), fieldTypeLong0, 157L, 255L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-4134L), byteArray0, byteOrder0, 29);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("0 (0x0: Unknown Tag):  (0 SRational)\n", stringWriter0.toString());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[166];
      TiffField tiffField0 = new TiffField((-1143), 2874, fieldTypeFloat0, 2147483647L, 2874, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 2732, fieldTypeFloat0, 1, 1, byteArray0, (ByteOrder) null, 34855);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-8), (-1416), fieldTypeFloat0, (-4135L), (-1416), byteArray0, byteOrder0, (byte) (-22));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48322, 48322, fieldTypeLong0, (-709L), 439L, byteArray0, byteOrder0, (byte) (-43));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1358), 1, fieldTypeRational0, 1, 4L, byteArray0, byteOrder0, (byte)94);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 100, (FieldType) null, (-649L), (-213L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)4, 'j', fieldTypeShort0, 2034L, (byte)0, byteArray0, byteOrder0, (byte)4);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (byte)64, fieldTypeFloat0, (-1123L), 0, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0.IFD, 255L, 157L, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (byte)64, fieldTypeFloat0, (-1123L), 0, byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(327, 3656, (FieldType) null, 3504L, 2515L, byteArray0, byteOrder0, 1906);
      tiffField0.getFieldType();
      assertEquals(1906, tiffField0.getSortHint());
      assertEquals(2515, tiffField0.getOffset());
      assertEquals(3656, tiffField0.getDirectoryType());
      assertEquals(327, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[85];
      TiffField tiffField0 = new TiffField((byte) (-110), (byte) (-110), fieldTypeFloat0.IFD, (byte)78, (byte)78, byteArray0, byteOrder0, 25);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(78, tiffField0.getOffset());
      assertEquals((-110), int0);
      assertEquals(25, tiffField0.getSortHint());
      assertEquals((-110), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeAscii0, 1237L, 0L, byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getValue();
      assertEquals(281, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(281, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(1237, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, (byte)64, fieldTypeFloat0, (-1123L), 0, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)58);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeByte0, (-2866L), (-2866L), byteArray0, byteOrder0, (byte)63);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2866), tiffField0.getOffset());
      assertEquals((-2866), int0);
      assertEquals(583, tiffField0.getTag());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(583, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(27, (byte) (-104), fieldTypeByte0, 2797L, (-4194L), byteArray0, byteOrder0, (byte)86);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4056), 3323, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 2137495354);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2137495354, tiffField0.getSortHint());
      assertEquals(3323, tiffField0.getDirectoryType());
      assertEquals((-4056), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1439, fieldTypeFloat0, 50, 1439, byteArray0, byteOrder0, (byte)118);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@75cb816c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeRational0, (byte)125, 657L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 4, fieldTypeShort0, 1, (-1161L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1161), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2, "8j,3>@");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(120, 120, fieldTypeAscii0, 1L, 344L, byteArray0, byteOrder0, 5188);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1760, 1119, fieldTypeFloat0, 4L, 3533L, byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1119, tiffField0.getDirectoryType());
      assertEquals(1760, tiffField0.getTag());
      assertEquals(3533, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (-4277), fieldTypeFloat0, 991L, (-4270L), byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getDoubleArrayValue();
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(3964, tiffField0.getBytesLength());
      assertEquals(991L, tiffField0.getCount());
      assertEquals((-4277), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4270), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeLong0, 676L, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2704, tiffField0.getBytesLength());
      assertEquals(676L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)104, (-6), fieldTypeShort0, (byte)108, (-103L), byteArray0, byteOrder0, (-6));
      tiffField0.getDoubleArrayValue();
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals(108L, tiffField0.getCount());
      assertEquals((-103), tiffField0.getOffset());
      assertEquals(104, tiffField0.getTag());
      assertEquals(216, tiffField0.getBytesLength());
      assertEquals((-6), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeRational0, (byte)125, 657L, byteArray0, byteOrder0, (-1));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(125, tiffField0.getTag());
      assertEquals(125L, tiffField0.getCount());
      assertEquals(1000, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(657, tiffField0.getOffset());
      assertEquals(125, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2231, 1, fieldTypeFloat0.LONG, 1, 1152L, byteArray0, byteOrder0, 1469);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1469, tiffField0.getSortHint());
      assertEquals(1152, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2231, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, 1, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SLONG).BYTE, 0, 552L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@49d6bf8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)104, (-6), fieldTypeShort0, (byte)108, (-103L), byteArray0, byteOrder0, (-6));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getOffset());
      assertEquals(108L, tiffField0.getCount());
      assertEquals(104, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals(216, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-37), 3, fieldTypeRational0, 11702L, (byte)0, byteArray0, byteOrder0, 101);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 5404L, (byte)63, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntArrayValue();
      assertEquals(5404L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(63, tiffField0.getOffset());
      assertEquals(43232, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4056), 3323, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 2137495354);
      tiffField0.getIntArrayValue();
      assertEquals(3323, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2137495354, tiffField0.getSortHint());
      assertEquals((-4056), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 40960, fieldTypeFloat0.SLONG, 0L, 2137495354, byteArray0, byteOrder0, 618);
      tiffField0.getIntArrayValue();
      assertEquals(40960, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(618, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2137495354, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 5126, fieldTypeByte0, 4L, (-265L), byteArray0, byteOrder0, (byte) (-48));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@58a56eed
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(27, (byte) (-104), fieldTypeByte0, 2797L, (-4194L), byteArray0, byteOrder0, (byte)86);
      String string0 = tiffField0.getStringValue();
      assertEquals(2797, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-4194), tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-104), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(342, (-1686), fieldTypeAscii0, 342, 1322L, byteArray0, byteOrder0, (byte) (-66));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x156)", string0);
      assertEquals(1322, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-1686), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(27, (byte) (-104), fieldTypeByte0, 2797L, (-4194L), byteArray0, byteOrder0, (byte)86);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSProcessingMethod", string0);
      assertEquals((-104), tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-4194), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeFloat0, (byte)53, 65535, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53)", string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(53L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1439, fieldTypeFloat0, 50, 1439, byteArray0, byteOrder0, (byte)118);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1439, tiffField0.getOffset());
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1439, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[85];
      TiffField tiffField0 = new TiffField(39, 50728, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SLONG.DOUBLE).SBYTE, 515L, (-946L), byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50728, tiffField0.getDirectoryType());
      assertEquals(515, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-946), tiffField0.getOffset());
      assertEquals(39, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(515L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(4, 1, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).IFD).SBYTE, 0, 552L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(552, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeDouble0, (byte)28, (-2447L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2447), tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(28L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[218];
      TiffField tiffField0 = new TiffField((byte)78, (byte)78, fieldTypeFloat0.SLONG, (byte)78, (byte)78, byteArray0, byteOrder0, 3354);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54)", string0);
      assertEquals(78, tiffField0.getTag());
      assertEquals(78L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
      assertEquals(3354, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50732, 50732, fieldTypeDouble0.SLONG, 50, (-1), byteArray0, byteOrder0, (-1339));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50732, tiffField0.getDirectoryType());
      assertEquals("50732 (0xc62c: BaselineSharpness): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (50 SLong)", string0);
      assertEquals((-1339), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2178, (-703), fieldTypeShort0, 2178, 11736L, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-703), tiffField0.getDirectoryType());
      assertEquals(11736, tiffField0.getOffset());
      assertEquals(2178, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4356, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(2178L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[113];
      TiffField tiffField0 = new TiffField((byte) (-110), 2609, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).DOUBLE).SSHORT, 2616L, (byte) (-110), byteArray0, byteOrder0, 1336);
      String string0 = tiffField0.toString();
      assertEquals("-110 (0xffffff92: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (2616 SShort)", string0);
      assertEquals(5232, tiffField0.getBytesLength());
      assertEquals(2609, tiffField0.getDirectoryType());
      assertEquals(1336, tiffField0.getSortHint());
      assertEquals((-110), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(327, (byte)0, fieldTypeDouble0.ASCII, 327, 327, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(327, tiffField0.getOffset());
      assertEquals(327, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(327, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte) (-67);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeAscii0, 1237L, 0L, byteArray0, byteOrder0, (byte) (-37));
      MockFile mockFile0 = new MockFile("J$(f5BaZ>", "PrimaryChromaticities");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, ": ");
      assertEquals(1237, tiffField0.getBytesLength());
      assertEquals(281, tiffField0.getTag());
      assertEquals(76L, mockFile0.length());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(281, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2137495354, 3323, fieldTypeFloat0, 0, 11736L, byteArray0, byteOrder0, 3);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3323, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(11736, tiffField0.getOffset());
      assertEquals(2137495354, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[85];
      TiffField tiffField0 = new TiffField((byte) (-110), (byte) (-110), fieldTypeFloat0.IFD, (byte)78, (byte)78, byteArray0, byteOrder0, 25);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(78L, tiffElement0.offset);
      assertEquals(25, tiffField0.getSortHint());
      assertEquals((-110), tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getTag());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5851L, 2934L, byteArray0, (ByteOrder) null, 325);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte) (-75));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(325, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2934, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 5851L, 2934L, byteArray0, (ByteOrder) null, 325);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte) (-75));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: yyyy-MM-dd'T'HH:mm:ss.SSSZ", string0);
      assertEquals(325, tiffField0.getSortHint());
      assertEquals(2934, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 5126, fieldTypeByte0, 4L, (-265L), byteArray0, byteOrder0, (byte) (-48));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(5126, tiffField0.getDirectoryType());
      assertEquals((-265), tiffField0.getOffset());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeDouble0, (byte)28, (-2447L), byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2447), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)58);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(583, 583, fieldTypeByte0, (-2866L), (-2866L), byteArray0, byteOrder0, (byte)63);
      tiffField0.getFieldTypeName();
      assertEquals((-2866), tiffField0.getOffset());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(583, tiffField0.getTag());
      assertEquals(583, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(281, 281, fieldTypeAscii0, 1237L, 0L, byteArray0, byteOrder0, (byte) (-37));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(281, tiffField0.getTag());
      assertEquals(281, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)28, (byte) (-121), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SHORT).LONG, 50732, 50732, byteArray0, byteOrder0, 50732);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-53), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.dump();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)36, (byte) (-37), fieldTypeFloat0.SLONG, (byte)0, (-11), byteArray0, byteOrder0, 2526);
      int int0 = tiffField0.getSortHint();
      assertEquals(2526, int0);
      assertEquals((-37), tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals((-11), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[125];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, (byte) (-121), fieldTypeDouble0, (byte)28, (-2447L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-2447), tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): ", string0);
      assertEquals((-121), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-3278), (byte)74, fieldTypeFloat0, 0, (-1L), byteArray0, byteOrder0, (byte)18);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-94), (-1593), fieldTypeDouble0, 0, (byte) (-79), byteArray0, (ByteOrder) null, (byte)109);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-94), tiffField0.getTag());
      assertEquals((-1593), tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getOffset());
      assertEquals(109, tiffField0.getSortHint());
  }
}
