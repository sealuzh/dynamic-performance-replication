/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 19:46:57 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Site;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Site_ESTest extends Site_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Site site0 = new Site();
      Set<Integer> set0 = site0.getAcceptStatCode();
      Site site1 = site0.setAcceptStatCode(set0);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.isDisableCookieManagement();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertFalse(boolean0);
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Site site0 = new Site();
      site0.toTask();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setUseGzip(true);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertTrue(site0.isUseGzip());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getRetrySleepTime();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(1000, int0);
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Site site0 = Site.me();
      site0.getCharset();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getCycleRetryTimes();
      assertTrue(site0.isUseGzip());
      assertEquals(0, int0);
      assertEquals(0, site0.getRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Site site0 = new Site();
      int int0 = site0.getRetryTimes();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setDisableCookieManagement(false);
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Site site0 = new Site();
      site0.getUserAgent();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Site site0 = new Site();
      site0.getDomain();
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getSleepTime();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, int0);
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Site site0 = new Site();
      site0.getHeaders();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Site site0 = Site.me();
      site0.setDomain("_AjE|G6HH'kDh{v");
      site0.hashCode();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Site site0 = new Site();
      site0.setUserAgent(":6&:-G5OP<j+GpW\"T+#");
      site0.hashCode();
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Site site0 = Site.me();
      String string0 = site0.toString();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Site site0 = Site.me();
      site0.getAllCookies();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Site site0 = new Site();
      int int0 = site0.getTimeOut();
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, int0);
      assertEquals(1000, site0.getRetrySleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setCharset(", sleepTime=");
      site1.hashCode();
      assertEquals(0, site1.getRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(0, site1.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.equals((Object) null);
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(boolean0);
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Site site0 = new Site();
      site0.setAcceptStatCode((Set<Integer>) null);
      site0.hashCode();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      Site site2 = site1.setSleepTime((-1212));
      boolean boolean0 = site2.equals(site0);
      assertEquals((-1212), site1.getSleepTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.addCookie(" Ka0", " Ka0", " Ka0");
      Site site2 = site1.addCookie(" Ka0", "?;", "?;");
      assertEquals(5000, site2.getSleepTime());
      assertTrue(site2.isUseGzip());
      assertEquals(1000, site2.getRetrySleepTime());
      assertEquals(5000, site2.getTimeOut());
      assertEquals(0, site2.getRetryTimes());
      assertEquals(0, site2.getCycleRetryTimes());
      assertFalse(site2.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      Site site2 = site0.setTimeOut(137);
      boolean boolean0 = site2.equals(site1);
      assertEquals(137, site0.getTimeOut());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Site site0 = Site.me();
      site0.setRetryTimes((-1));
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertEquals((-1), site0.getRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      site1.setCycleRetryTimes((-2134145238));
      boolean boolean0 = site1.equals(site0);
      assertEquals((-2134145238), site1.getCycleRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setDomain("6bSF&dIf%=}G");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setUserAgent("");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setCharset("Xc4'");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site0.setCharset("");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.addCookie("2i4#=C]", "2i4#=C]");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setCharset("z");
      Site site2 = new Site();
      Site site3 = Site.me();
      Site site4 = site3.addCookie("Qsu#0 0Fc\"=xSR9", "z");
      site2.setCharset("z");
      Site site5 = Site.me();
      site2.equals(site0);
      assertTrue(site2.equals((Object)site1));
      
      Site site6 = site5.addCookie("z", "z", "");
      boolean boolean0 = site6.equals("Qsu#0 0Fc\"=xSR9");
      assertFalse(boolean0);
      
      site4.getAcceptStatCode();
      assertEquals(5000, site3.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      site0.toString();
      assertTrue(site0.equals((Object)site1));
      
      Site site2 = site1.setUserAgent("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      site0.equals(site2);
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.addHeader("6j{{P+E;V", "6j{{P+E;V");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      site1.setAcceptStatCode(linkedHashSet0);
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site0.setDomain("FmW<igujrfs{a");
      boolean boolean0 = site1.equals(site2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Site site0 = Site.me();
      site0.addHeader("Site{domain='null', userAgent=', retryTimes=', cookies={}, charset='null', sleepTime=-726, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}", "Site{domain='null', userAgent=', retryTimes=', cookies={}, charset='null', sleepTime=-726, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}");
      Site site1 = new Site();
      Site site2 = Site.me();
      Site site3 = site2.setRetryTimes(0);
      Site site4 = site3.setUserAgent("z");
      site4.setAcceptStatCode((Set<Integer>) null);
      Site site5 = site1.setRetrySleepTime(0);
      site5.setTimeOut(1);
      Site site6 = Site.me();
      site2.equals(site0);
      Site site7 = site0.setAcceptStatCode((Set<Integer>) null);
      Site site8 = site7.setAcceptStatCode((Set<Integer>) null);
      site8.setDomain("z");
      site2.setRetrySleepTime(1);
      Site site9 = site2.setRetrySleepTime(0);
      Site site10 = site5.setTimeOut(0);
      Site.me();
      site0.equals(site9);
      Integer integer0 = new Integer(434);
      site6.isUseGzip();
      site3.getCookies();
      site5.hashCode();
      site10.setDomain("BD;'n(]fEg");
      assertEquals(0, site1.getRetrySleepTime());
      assertFalse(site10.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      Site site2 = site0.setDomain("6bSF&dIf%=}G");
      assertFalse(site2.equals((Object)site1));
      
      site1.setDomain("6bSF&dIf%=}G");
      boolean boolean0 = site1.equals(site0);
      assertTrue(site0.equals((Object)site1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      Site site2 = site0.setUserAgent("L");
      assertFalse(site2.equals((Object)site1));
      
      site1.setUserAgent("L");
      boolean boolean0 = site1.equals(site0);
      assertTrue(site0.equals((Object)site1));
      assertTrue(boolean0);
  }
}
