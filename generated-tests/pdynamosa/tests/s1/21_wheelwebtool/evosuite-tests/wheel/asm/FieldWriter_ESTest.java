/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:02:36 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visit(66, 1532, "H;_:8 e ZnX@e", "H;_:8 e ZnX@e", "L.)c+JtTswhP(", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-640), "\".MS#~", "H;_:8 e ZnX@e", "H;_:8 e ZnX@e", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.index = (-1349);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "bTT7o", "bTT7o", "bTT7o", "bTT7o");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visit(66, 1532, "H;_:8 e ZnX@e", "H;_:8 e ZnX@e", "L.)c+JtTswhP(", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-640), "\".MS#~", "H;_:8 e ZnX@e", "H;_:8 e ZnX@e", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.index = (-1349);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "bTT7o", "bTT7o", "bTT7o", "bTT7o");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4012));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "?~k<@@>Hd,f", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3720));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-1597), "", "n>X1Z>^[#4?#{%", "", "ConstantValue");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-360));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-360), "QgdeLao9_u>-Fe\"", "QgdeLao9_u>-Fe\"", "lfdg9Y`", "RuntimeVisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2511);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2854, "", "", "aGf}8LM<tssVG", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@14206b3d
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1257), "cys681o?|Wq#uJ8mY", "cys681o?|Wq#uJ8mY", "H;_X e ZnX@e", "H;_X e ZnX@e");
      fieldWriter0.next = fieldWriter0;
      Attribute attribute0 = new Attribute("H;_X e ZnX@e");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.next.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-640), "\".MS#~", "H;_:8 e ZnX@e", "H;_:8 e ZnX@e", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("\".MS#~", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2511);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131065, "ConstantValue", "(!]`", (String) null, "ConstantValue");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visit(49, 1, "", "", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-640), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "The FilenameFilter must not be null", "RuntimeVisibleAnnotations", "&%RaQ9<9", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1257), "cys681o?|Wq#uJ8mY", "cys681o?|Wq#uJ8mY", "H;_X e ZnX@e", "H;_X e ZnX@e");
      fieldWriter0.next = fieldWriter0;
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.next.next.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1257), "cys681o?|Wq#uJ8mY", "cys681o?|Wq#uJ8mY", "H;_X e ZnX@e", "H;_X e ZnX@e");
      fieldWriter0.next = fieldWriter0;
      fieldWriter0.next.visitAnnotation("cys681o?|Wq#uJ8mY", true);
      int int0 = fieldWriter0.next.next.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visit(49, 1, "", "", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-640), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "RuntimeVisibleAnnotations", "The FilenameFilter must not be null", "?Ah", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("The FilenameFilter must not be null", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "The FilenameFilter must not be null", "RuntimeVisibleAnnotations", "&%RaQ9<9", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2511);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131065, "ConstantValue", "(!]`", (String) null, "ConstantValue");
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3, "bTT7o", "bTT7o", "bTT7o", "bTT7o");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "", "", "bTT7o", "bTT7o");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1257), "cys681o?|Wq#uJ8mY", "cys681o?|Wq#uJ8mY", "H;_X e ZnX@e", "H;_X e ZnX@e");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1257), "cys681o?|Wq#uJ8mY", "cys681o?|Wq#uJ8mY", "H;_X e ZnX@e", "H;_X e ZnX@e");
      fieldWriter0.next = fieldWriter0;
      Attribute attribute0 = new Attribute("H;_X e ZnX@e");
      fieldWriter0.next.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.next.next.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
