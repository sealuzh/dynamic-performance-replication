/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 23:29:18 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InterruptedIOException;
import java.util.concurrent.TimeUnit;
import okio.Timeout;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Timeout_ESTest extends Timeout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      // Undeclared exception!
      try { 
        timeout0.NONE.waitUntilNotified("");
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Timeout timeout0 = Timeout.NONE;
      Timeout timeout1 = timeout0.clearTimeout();
      timeout1.NONE.throwIfReached();
      Timeout timeout2 = timeout1.clearDeadline();
      timeout1.deadlineNanoTime(0L);
      Timeout timeout3 = timeout2.deadlineNanoTime(0L);
      timeout3.clearTimeout();
      Timeout timeout4 = timeout3.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      timeout4.NONE.timeout(0L, timeUnit0);
      timeout1.clearTimeout();
      // Undeclared exception!
      try { 
        timeout3.waitUntilNotified(timeout4);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.clearTimeout();
      timeout1.throwIfReached();
      assertEquals(0L, timeout1.timeoutNanos());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      timeout0.clearTimeout();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Timeout timeout1 = timeout0.NONE.deadline(1000000L, timeUnit0);
      // Undeclared exception!
      try { 
        timeout1.waitUntilNotified(timeout0);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      timeout0.deadlineNanoTime((-1270L));
      try { 
        timeout0.throwIfReached();
        fail("Expecting exception: InterruptedIOException");
      
      } catch(InterruptedIOException e) {
         //
         // deadline reached
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      long long0 = 24L;
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Timeout timeout1 = timeout0.deadline(24L, timeUnit0);
      timeout1.throwIfReached();
      Timeout timeout2 = timeout1.NONE.deadlineNanoTime(49L);
      timeout1.NONE.throwIfReached();
      TimeUnit timeUnit1 = TimeUnit.HOURS;
      timeout2.deadlineNanoTime(415L);
      Timeout timeout3 = timeout0.NONE.timeout(49L, timeUnit1);
      Timeout timeout4 = timeout3.NONE.clearDeadline();
      timeout4.NONE.deadlineNanoTime(415L);
      timeout1.NONE.throwIfReached();
      timeout0.deadlineNanoTime();
      timeout0.deadlineNanoTime();
      timeout1.NONE.throwIfReached();
      timeout0.clearTimeout();
      Timeout timeout5 = timeout0.clearDeadline();
      timeout5.NONE.throwIfReached();
      // Undeclared exception!
      try { 
        timeout0.waitUntilNotified(timeout1);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.deadlineNanoTime(0L);
      Object object0 = new Object();
      try { 
        timeout1.waitUntilNotified(object0);
        fail("Expecting exception: InterruptedIOException");
      
      } catch(InterruptedIOException e) {
         //
         // timeout
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      timeout0.timeout(308L, timeUnit0);
      assertEquals(308000000L, timeout0.timeoutNanos());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      long long0 = (-553L);
      long long1 = 2924L;
      Timeout timeout1 = timeout0.deadlineNanoTime(2924L);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      Timeout timeout2 = timeout1.timeout(0L, timeUnit0);
      // Undeclared exception!
      try { 
        timeout2.timeout((-847L), timeUnit0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout < 0: -847
         //
         verifyException("okio.Timeout", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Timeout timeout0 = new Timeout();
      Timeout timeout1 = timeout0.deadlineNanoTime(1156L);
      Timeout timeout2 = timeout0.clearTimeout();
      timeout2.deadlineNanoTime();
      timeout0.hasDeadline();
      timeout0.timeoutNanos();
      Timeout timeout3 = timeout1.deadlineNanoTime(0L);
      timeout1.clearTimeout();
      Timeout timeout4 = timeout3.clearTimeout();
      timeout3.deadlineNanoTime();
      timeout0.clearDeadline();
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      TimeUnit timeUnit1 = TimeUnit.MINUTES;
      timeout3.timeout(1156L, timeUnit1);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        timeout4.waitUntilNotified(timeUnit0);
        fail("Expecting exception: IllegalMonitorStateException");
      
      } catch(IllegalMonitorStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.Object", e);
      }
  }
}
