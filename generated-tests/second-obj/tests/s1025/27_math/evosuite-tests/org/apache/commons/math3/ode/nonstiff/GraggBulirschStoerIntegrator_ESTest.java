/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:06:39 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(2.7214076662438963E-100, fixedStepHandler0, stepNormalizerBounds0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(285, (-1051.0), 2.7214076662438963E-100, (-822.6444108817616));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(14);
      double[] doubleArray0 = new double[18];
      doubleArray0[0] = 2.7214076662438963E-100;
      doubleArray0[1] = (-1051.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1525.0767672249087), (-822.6444108817616), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver((-3295.233324603), 2);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 285, (-3295.233324603), 1872, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator1.setOrderControl(14, (-1051.0), (-1525.0767672249087));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.9999);
      assertEquals(20, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(6.797582288163603, fixedStepHandler0, stepNormalizerBounds0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(285, 6.797582288163603, 6.797582288163603, (-822.6444108817616));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.getStepHandlers();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(14);
      double double0 = (-6.344612631552417E-136);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver((-5.207000323380292E-8), 2);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 285, (-5.207000323380292E-8), 1872, (UnivariateSolver) riddersSolver0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.9999);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (2.85E02) reached, integration needs 1.44E01
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-364.4), 4308.070297126707, 4308.070297126707, (-1.9220613500411237E-289));
      graggBulirschStoerIntegrator0.setOrderControl((-1687), 6, 6);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1.9220613500411237E-289);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1120.0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(10, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(10).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(585).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-341.0));
      boolean boolean0 = true;
      int int0 = 1140;
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType1);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      double double0 = (-3295.233324603);
      RiddersSolver riddersSolver0 = new RiddersSolver();
      double double1 = 1759.5719;
      int int1 = 1;
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter1, (double) int0, double1, int1, (UnivariateSolver) riddersSolver0);
      double double2 = 323.58648;
      graggBulirschStoerIntegrator0.setOrderControl(int1, double2, double0);
      double double3 = 9.02268127425393E-232;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double3);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 2663.10320385;
      doubleArray0[1] = 2663.10320385;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 2663.10320385;
      doubleArray0[4] = 2663.10320385;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2663.10320385, 2663.10320385, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(7, 0.0, 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(2663.10320385, fixedStepHandler0, stepNormalizerBounds0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2663.10320385, (-3667.3459), (-1.0), 2663.10320385);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(608.1605);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(0.65, 2663.10320385, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (-822.6444108817616));
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.7214076662438963E-100, 2.7214076662438963E-100, 2.7214076662438963E-100, 2.7214076662438963E-100);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 7);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(7, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(3.5346080979652066E-295);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.7214076662438963E-100);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 534);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(7, 285, 1.528388084444653E68, 285);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 1.0E-4, 606.9459, 7, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-2146076455));
      graggBulirschStoerIntegrator0.setOrderControl(0, 7, (-2146076455));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1197.8825, 1197.8825, 676.8618074446, 1998.24260198904);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 676.8618074446;
      graggBulirschStoerIntegrator0.setOrderControl(2701, 1197.8825, 1197.8825);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 33, 5, 33);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.4939635093999683E-8, 2.4939635093999683E-8, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2470.922);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      graggBulirschStoerIntegrator0.setControlFactors(1322.3923390061566, 1322.3923390061566, (-676.280240088), 1.7976931348623157E308);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4006.729782, 4006.729782, 4006.729782, 4006.729782);
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      graggBulirschStoerIntegrator0.setControlFactors(4006.729782, 4006.729782, 4006.729782, 4006.729782);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 368.72913391300875);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.8;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.8;
      doubleArray0[3] = 2614.7968997106973;
      doubleArray0[4] = 0.8;
      doubleArray0[5] = 0.8;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.8;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.8, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors((-719.648535477), 0.8, 1.0E-4, 3406.043401400381);
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1197.8825, 1197.8825, 1197.8825, 1998.24260198904);
      graggBulirschStoerIntegrator0.setOrderControl(632, 632, 170.454864053707);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.01;
      doubleArray0[1] = 0.01;
      doubleArray0[2] = 0.01;
      doubleArray0[3] = 0.01;
      doubleArray0[4] = 0.01;
      doubleArray0[5] = 0.01;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.01, 0.01, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 6012);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.01, (double) 1399, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1399, 0.21214580535888672, 0.01);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.01, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 2701;
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 676.8618074446;
      doubleArray1[1] = (double) 2701;
      doubleArray1[2] = 170.454864053707;
      doubleArray1[3] = (double) 2701;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.766924303914492E-76), (-3487.3281309168283), doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setOrderControl(106, 0.9999, 2868.6360324829852);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2868.6360324829852);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 1
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-494.5291721797), (-494.5291721797), 2.1503376960754395, (-494.5291721797));
      graggBulirschStoerIntegrator0.setControlFactors((-815.231), (-944.6115161725669), (-944.6115161725669), 1146.8);
      int int0 = 1;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 702, 1, (-944.6115161725669));
      graggBulirschStoerIntegrator0.setControlFactors(2.1503376960754395, 0.8, (-2.0821912536551675E-8), (-494.5291721797));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1561).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 1);
      FirstOrderDifferentialEquations firstOrderDifferentialEquations0 = null;
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderDifferentialEquations0);
      double[] doubleArray0 = expandableStatefulODE1.getSecondaryState(int0);
      int int1 = (-2155);
      expandableStatefulODE1.setSecondaryState(int1, doubleArray0);
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      double double0 = 1659.2780313716;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, double0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      double double1 = 2351.523505055;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, double1);
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(7, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      DummyStepHandler.getInstance();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(7, 4, (-1167.78400628189), 7);
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(7, (-1167.78400628189), 493.6074555663547, 4);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.7214076662438963E-100, 2.7214076662438963E-100, 2.7214076662438963E-100, 2.7214076662438963E-100);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 7);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(7, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3919).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(3.5346080979652066E-295);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 232.8427);
      boolean boolean0 = false;
      int int0 = 291;
      int int1 = 195;
      double double0 = (-1.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int1, double0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2246.3971077927285;
      doubleArray0[1] = 2246.3971077927285;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1188.3757), 2246.3971077927285, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.21214580535888672, 2246.3971077927285, (-1771.1061), 4247.45846441);
      double[] doubleArray1 = new double[12];
      doubleArray1[0] = (-1188.3757);
      doubleArray1[1] = 1.9485199912395296E-8;
      doubleArray1[2] = 6169.2496;
      doubleArray1[3] = 0.8;
      doubleArray1[4] = (-1188.3757);
      doubleArray1[5] = (-1844.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(6169.2496, 1.9485199912395296E-8, doubleArray1, doubleArray1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1048.234155125426), (-632.0), (-1048.234155125426), 780.5380954292497);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = (-1048.234155125426);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2, 31, 0.008571845105036547);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = 780.5380954292497;
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 9);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 9, 0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(2.7214076662438963E-100, fixedStepHandler1, stepNormalizerBounds0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(285, (-1051.0), 2.7214076662438963E-100, (-822.6444108817616));
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1968.0));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-213.7448624);
      doubleArray0[1] = (-1051.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1525.0767672249087), (-822.6444108817616), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(2.7214076662438963E-100, 376.4884, (-951.01755392), 358.446).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 285, (-3295.233324603), 1888, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator1.setOrderControl(14, (-1051.0), (-1525.0767672249087));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.9999);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 14;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      int int1 = 285;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(2.7214076662438963E-100, fixedStepHandler0, stepNormalizerBounds0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(285, 14, 2.7214076662438963E-100, (-822.6444108817616));
      int int2 = 2;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(14);
      double[] doubleArray0 = new double[18];
      doubleArray0[0] = 2.7214076662438963E-100;
      doubleArray0[1] = (double) 285;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1525.0767672249087), (-822.6444108817616), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      double double0 = (-3295.233324603);
      RiddersSolver riddersSolver0 = new RiddersSolver((-3295.233324603), 2);
      graggBulirschStoerIntegrator1.setOrderControl(14, 285, (-1525.0767672249087));
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.9999);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (2.85E02) reached, integration needs 2.96E01
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 1185.2, 1185.2, 1185.2);
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-2724));
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 679, 679, (-2684.5));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 679, 1120, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 679);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1294.2835315, 1120, 1185.2, 1.4093490364499379E22);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(679).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1009.0316865243217));
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (double) (-2724));
      int int0 = 9;
      graggBulirschStoerIntegrator1.setInterpolationControl(boolean0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(10, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      int int0 = 285;
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      DummyStepHandler.getInstance();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(285).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = (-1844.0);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1968.0));
      double double0 = (-2236.12727629);
      double[] doubleArray0 = new double[2];
      double[] doubleArray1 = new double[1];
      graggBulirschStoerIntegrator0.setStepSizeControl((double) 10, (-1968.0), 0.94, (-1844.0));
      doubleArray0[1] = (-2236.12727629);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(10, 0.008571845105036547, doubleArray1, doubleArray0);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 285);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 285);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1183.594417956605);
      double double1 = 0.008571845105036547;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double1);
      graggBulirschStoerIntegrator0.setOrderControl(int0, int0, doubleArray0[1]);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1904.940014;
      doubleArray0[1] = 1904.940014;
      doubleArray0[2] = 1904.940014;
      doubleArray0[3] = 1904.940014;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1904.940014;
      doubleArray1[1] = 1904.940014;
      doubleArray1[2] = 1904.940014;
      doubleArray1[3] = 1904.940014;
      doubleArray1[4] = 1422.45052;
      doubleArray1[5] = 1904.940014;
      doubleArray1[6] = (-1394.15216);
      doubleArray1[7] = 1904.940014;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1904.940014, 1904.940014, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1);
  }
}
