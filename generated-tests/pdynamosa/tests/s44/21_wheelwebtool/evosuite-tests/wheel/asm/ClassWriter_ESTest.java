/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:15:53 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1316);
      classWriter0.index = (-1652);
      int int0 = classWriter0.newNameType("Synthetic", "Synthetic");
      assertEquals((-1651), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1430);
      classWriter0.index = (-3823);
      int int0 = classWriter0.newMethod("pxbX!i<3>N0K0", "pxbX!i<3>N0K0", "pxbX!i<3>N0K0", false);
      assertEquals((-3820), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      Short short0 = new Short((short)167);
      Item item0 = classWriter0.newConstItem(short0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2366));
      classWriter0.index = (-2366);
      int int0 = classWriter0.newClass("H,aoH aW_H");
      assertEquals((-2365), int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.visitSource("", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(7, "java/lang/Object", "java/lang/Object", "java/lang/Object", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(0, "", "QAivIa", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1859));
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-2927), (String) null, (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitInnerClass("", "", "mqYZc", 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      classWriter0.visitInnerClass("", "", "", 20);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "", "org.apache.commons.io.filefilter.HiddenFileFilter", "", (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1066);
      // Undeclared exception!
      try { 
        classWriter0.visitField(20, "D'p", (String) null, "i8iWH", "D'p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        classWriter0.visit(16777225, 9, (String) null, "RuntimeInvisibleAnnotations", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1611));
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        classWriter0.visit(0, 0, "", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2237));
      int int0 = classWriter0.newUTF8("org.apache.commons.io.IOCase");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      int int0 = classWriter0.newUTF8("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      // Undeclared exception!
      try { 
        classWriter0.newNameType("RuntimeInvisibleAnnotations", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1680);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("zw>R", "", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      Item item0 = classWriter0.newMethodItem("", "", "", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newMethodItem("Code", "", "gu@I2.w", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1066);
      int int0 = classWriter0.newMethod(";TYu", "", "v", true);
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "x", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      int int0 = classWriter0.newMethod("", "qM13#4(V", "", true);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newLong(0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2100);
      Item item0 = classWriter0.newLong((-3007L));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newInteger(0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-66));
      Item item0 = classWriter0.newInteger((-2337));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      Item item0 = classWriter0.newFloat((-128));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("", "", string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFieldItem("'(V|p)0Xc", "", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, (String) null, "org.apache.commons.io.filefilter.WildcardFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2237));
      Item item0 = classWriter0.newFieldItem("", "org.apache.commons.io.IOCase", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.newField("Ljava/lang/Synthetic;", "", "");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      int int0 = classWriter0.newField("", "InnerClasses", "*Y[iA,fY3{?");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      Item item0 = classWriter0.newDouble(1);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      Item item0 = classWriter0.newDouble((-3742.14));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1048576));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConst(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@7508c65c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      Item item0 = classWriter0.newClassItem("wheel.asm.FieldWriter");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(220);
      Item item0 = classWriter0.newClassItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      int int0 = classWriter0.newClass("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3185));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-3185), (-3185));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1741));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-478));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-478), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("DQ", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'DQ.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2211));
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1846));
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "", "WmjyvhJtKggX`5|.-j*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1478);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(192, "n E!ldkaa55", "", "RuntimeVisibleAnnotations", (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.visitField(0, (String) null, "5TMI-_#y=d'b%", (String) null, "5TMI-_#y=d'b%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5829));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField(32, "", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@34d73eef
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(31);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(268435456);
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      // Undeclared exception!
      try { 
        classWriter0.newUTF8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-20));
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, "Label offset position has not been resolved yet");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, "q", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      // Undeclared exception!
      try { 
        classWriter0.newMethod("SourceFile", (String) null, "java/lang/Object", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5987));
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2301);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classWriter0.newClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1223);
      classWriter0.addType("");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1066);
      classWriter0.addUninitializedType("v", 1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 2047);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2047
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2306);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "oGRIz'|}!eoS&RnE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1478);
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 1608);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-74));
      Item[] itemArray0 = new Item[1];
      classWriter0.addUninitializedType("chaV", 1);
      classWriter0.typeTable = itemArray0;
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType("chaV", 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1380));
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, (-3595));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1017);
      int int0 = classWriter0.newNameType("", "");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      int int0 = classWriter0.newField(":9|9TvN%g 67Xp6F?", ":9|9TvN%g 67Xp6F?", "SourceDebugExtension");
      assertEquals(5, int0);
      
      int int1 = classWriter0.newNameType(":9|9TvN%g 67Xp6F?", "SourceDebugExtension");
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2100);
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.threshold = 3;
      Character character0 = Character.valueOf('T');
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 25, "", "SourceFile", "<9g`=fTQp1#", character0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-478));
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.IOCase");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      assertEquals("org.apache.commons.io.IOCase", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1223);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "java/lang/Object");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-66));
      Item[] itemArray0 = new Item[5];
      classWriter0.addUninitializedType("chaV", 1);
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("chaV", 2);
      classWriter0.addType("chaV");
      classWriter0.addType("3!xwP]2&W;Fa(MSUUX+");
      int int0 = classWriter0.addType("org.apache.commons.io.FilenameUtils");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      Item[] itemArray0 = new Item[5];
      classWriter0.typeTable = itemArray0;
      int int0 = classWriter0.addUninitializedType("5ucyJ@,oYy4Ze{w", (-899));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1548));
      classWriter0.addUninitializedType("", (-1706));
      int int0 = classWriter0.addUninitializedType("", (-1706));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(240);
      classWriter0.addType("RuntimeInvisibleAnnotations");
      int int0 = classWriter0.addType("RuntimeInvisibleAnnotations");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.newField(":9|9TvN%g 67Xp6F?", ":9|9TvN%g 67Xp6F?", "SourceDebugExtension");
      Item item0 = classWriter0.newMethodItem(":9|9TvN%g 67Xp6F?", ":9|9TvN%g 67Xp6F?", "SourceDebugExtension", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5840));
      classWriter0.newConst("");
      int int0 = classWriter0.newConst("");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1065));
      Item item0 = classWriter0.newDouble(0.0);
      Item item1 = classWriter0.newDouble(0.0);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      Item item0 = classWriter0.newLong(9);
      Item item1 = classWriter0.newLong(9);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1045));
      Item item0 = classWriter0.newFloat(Integer.MAX_VALUE);
      Item item1 = classWriter0.newFloat(Integer.MAX_VALUE);
      assertNotNull(item1);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      Item item0 = classWriter0.newInteger(37);
      Item item1 = classWriter0.newInteger(37);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1017);
      int int0 = classWriter0.newMethod("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", false);
      assertEquals(4, int0);
      
      int int1 = classWriter0.newMethod("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", false);
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      classWriter0.newField("char", "char", "char");
      int int0 = classWriter0.newField("char", "char", "char");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Type type0 = Type.VOID_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      Type type0 = Type.getObjectType("4J6L7^{B^NsDG");
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(91);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@1bc8c791
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2306);
      Long long0 = new Long(0L);
      int int0 = classWriter0.newConst(long0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(177);
      Float float0 = new Float((float) 1);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(177, "", "?)u. ", "dGv}1x'6", float0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      Boolean boolean0 = new Boolean("Signature");
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Boolean boolean0 = new Boolean(true);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(0, "", "^>bmX5yzJL!R5C", "", boolean0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1066);
      Byte byte0 = new Byte((byte)94);
      int int0 = classWriter0.newConst(byte0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 981, "W0`7By2cVHTg+ <+eSk", "W0`7By2cVHTg+ <+eSk", "", classWriter0.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5840));
      classWriter0.visitInnerClass(".{FN", ".{FN", ".{FN", (-5840));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(65, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-66));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "char";
      stringArray0[4] = "";
      stringArray0[5] = "char";
      classWriter0.visit(4, (-894), "", "", "char", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(109, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1846));
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1846), (-1846), "", "", "Pz\"bs,*-\"", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(84, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitOuterClass("", "", "ap1Pv9I");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(73, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ":9|9TvN%g 67Xp6F?";
      stringArray0[1] = "";
      stringArray0[2] = "ap1Pv9I";
      stringArray0[3] = ":9|9TvN%g 67Xp6F?";
      stringArray0[4] = "";
      stringArray0[5] = "ap1Pv9I";
      stringArray0[6] = ":9|9TvN%g 67Xp6F?";
      classWriter0.visitMethod(7, "", "", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(129, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.visitInnerClass("CtoR>87qn=2H", "8[cwxWs16V<N8r}za", (String) null, 3135);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-42));
      classWriter0.visitInnerClass((String) null, (String) null, "", (-42));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777225);
      classWriter0.visitInnerClass("RuntimeInvisibleAnnotations", "InnerClasses", "InnerClasses", 9);
      classWriter0.visitInnerClass("Bi[li0'of|$5", "InnerClasses", "RuntimeInvisibleAnnotations", 9);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      classWriter0.visitAnnotation("org.apache.commons.io.FilenameUtils", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(102, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4112));
      classWriter0.visitAnnotation("EvX'NjDb!t!&Tlt", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(84, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2211));
      classWriter0.visitOuterClass("InnerClasses", "QlJ", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1223);
      classWriter0.visitOuterClass("", "", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.visitOuterClass("The FilenameFilter must not be null", (String) null, "UQ}pCWtr");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-313));
      classWriter0.visitSource("org.apache.commons.io.filefilter.CanWriteFileFilter", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitSource("ap1Pv9I", "ap1Pv9I");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(91, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource((String) null, "Code");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1223);
      classWriter0.visit(4376, 1223, "I!1g\"lj?u{HU|}", "", "", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2237));
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        classWriter0.visit((-2237), 4, "FKMB", "EOU^G+[(ODO;Bs~[;]!", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[0];
      classWriter0.visit(10, 892, "pEI?g<x>gZ}K", (String) null, "pEI?g<x>gZ}K", stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4112));
      Double double0 = new Double((-756.2597));
      int int0 = classWriter0.newConst(double0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1879);
      classWriter0.invalidFrames = true;
      String[] stringArray0 = new String[8];
      stringArray0[0] = " .2=$U'X Ky84Zruj7";
      stringArray0[1] = " .2=$U'X Ky84Zruj7";
      stringArray0[2] = " .2=$U'X Ky84Zruj7";
      stringArray0[3] = " .2=$U'X Ky84Zruj7";
      stringArray0[4] = " .2=$U'X Ky84Zruj7";
      stringArray0[5] = " .2=$U'X Ky84Zruj7";
      stringArray0[6] = " .2=$U'X Ky84Zruj7";
      stringArray0[7] = " .2=$U'X Ky84Zruj7";
      classWriter0.visit(1879, 1144, " .2=$U'X Ky84Zruj7", " .2=$U'X Ky84Zruj7", " .2=$U'X Ky84Zruj7", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(84, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      int int0 = classWriter0.newField("^vl(GB=_", "", "wheel.asm.AnnotationWriter");
      assertEquals(208, int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-304));
      classWriter0.visitField((-304), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "a", "a");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(148, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      Attribute attribute0 = new Attribute("Synthetic");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
