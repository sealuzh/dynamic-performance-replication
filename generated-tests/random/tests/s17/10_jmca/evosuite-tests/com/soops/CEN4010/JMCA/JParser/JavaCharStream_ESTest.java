/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:36:11 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavaCharStream.hexval('a');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1837, (-53), (-1002));
      int int0 = (-482);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-53), (-482));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaCharStream.hexval('8');
      StringReader stringReader0 = new StringReader("J>w?Qxl;c-HPK/&Ul");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1528);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(13, 1528);
      assertEquals(13, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)115;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaCharStream.hexval('b');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("PC$/!bL[/CgUWgG4;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      javaCharStream0.backup((-247));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-169), (-1));
      javaCharStream0.AdjustBuffSize();
      assertEquals(246, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e_C$7;|U{MdD5Mn(");
      StringReader stringReader0 = new StringReader("%b}<x`44i`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = (int) (byte)0;
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        stringReader0.mark((-164));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("D_\"2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, (-1), 10);
      javaCharStream0.inBuf = (-635);
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      javaCharStream0.readChar();
      charArray0[1] = 'B';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-113);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)78);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.skip(3072L);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 4054, (byte)78);
      dataInputStream0.readBoolean();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-76);
      byteArray0[6] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3677, (byte) (-112));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char char0 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-529), 1001);
      String string0 = javaCharStream0.GetImage();
      JavaCharStream.hexval('0');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader1);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)1);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1), 1);
      byteArrayInputStream0.markSupported();
      javaCharStream0.adjustBeginLineColumn((byte)1, (byte)84);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      javaCharStream0.GetSuffix(2564);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(3, javaCharStream0.getBeginLine());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("8IGRepx$lMYKFK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 914, 914);
      javaCharStream0.adjustBeginLineColumn(66, 66);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReadByte();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^%U**_4.br");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.FillBuff();
      char char0 = '=';
      char[] charArray0 = new char[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^%U**_4.br");
      stringReader0.skip((-5556L));
      charArray0[0] = '=';
      javaCharStream0.nextCharBuf = charArray0;
      stringReader0.reset();
      stringReader0.close();
      JavaCharStream.hexval('d');
      // Undeclared exception!
      try { 
        stringReader0.mark((-3772));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Read-ahead limit < 0
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char char0 = 'U';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1629, 1629, 1880);
      javaCharStream0.ReInit((Reader) stringReader0, 1880, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char char0 = ':';
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a!qj");
      stringReader0.skip(1006L);
      stringReader0.mark(100);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0, (-1), (-1));
      javaCharStream0.available = 100;
      javaCharStream0.maxNextCharInd = 184;
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.adjustBeginLineColumn((-2094), (-1));
      javaCharStream0.getBeginLine();
      javaCharStream0.backup((-2094));
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaCharStream.hexval('9');
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 99, 428);
      javaCharStream0.Done();
      javaCharStream0.prevCharIsLF = true;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('1');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.markSupported();
      char[] charArray0 = new char[5];
      stringReader0.read();
      charArray0[0] = '|';
      charArray0[1] = '\\';
      charArray0[2] = '>';
      charArray0[3] = ':';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      charArray0[4] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaCharStream.hexval('e');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)96;
      byte byte0 = (byte) (-62);
      byteArray0[3] = (byte) (-62);
      byteArray0[4] = (byte) (-50);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)96, (byte) (-22));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2164);
      byteArrayInputStream0.markSupported();
      pushbackInputStream0.available();
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 0, (int) (byte)96);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "Y-O";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Y-O");
      int int0 = 2344;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2344, 2344);
      stringReader0.skip(2344);
      javaCharStream0.available = 2344;
      stringReader0.reset();
      javaCharStream0.ReInit((Reader) stringReader0, 2344, 2344);
      int int1 = 4074;
      javaCharStream0.available = 4074;
      javaCharStream0.getBeginLine();
      stringReader0.mark(2);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("flo{[`$");
      stringReader0.markSupported();
      stringReader0.read();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, 92);
      char[] charArray0 = javaCharStream0.GetSuffix(70);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream.hexval('A');
      javaCharStream0.ReadByte();
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2193), 1, 1);
      JavaCharStream.hexval('c');
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      stringReader0.skip((-1577L));
      javaCharStream0.ReInit((Reader) stringReader0, 12, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.reset();
      javaCharStream0.Done();
      int int0 = 4090;
      javaCharStream0.backup(4090);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4, 3820);
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream0.bufsize = 3820;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BLnKJ 9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
      
      char[] charArray0 = new char[18];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "<o%{<ba+e";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<o%{<ba+e");
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      javaCharStream0.adjustBeginLineColumn(15, (-609));
      javaCharStream0.adjustBeginLineColumn((-1515), (-1515));
      assertEquals((-1515), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char char0 = '1';
      JavaCharStream.hexval('1');
      int int0 = (-490);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-490));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = 214;
      PipedInputStream pipedInputStream0 = new PipedInputStream(214);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 214, 214);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      char char0 = 'J';
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 6, 3820);
      javaCharStream0.GetSuffix(3820);
      javaCharStream0.bufsize = 3820;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 494, 58);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 10, 10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.inBuf = 10;
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader(string0);
      stringReader0.markSupported();
      stringReader0.mark(10);
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReadByte();
      javaCharStream0.ExpandBuff(false);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream((InputStream) null, (-800));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)72, (-850));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)51, (byte)72);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JavaCharStream.hexval('3');
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 77);
      javaCharStream0.bufsize = 976;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(' ', char0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I]1_lL[kw:biI1:F-n");
      int int0 = 1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0);
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      int int1 = 816;
      javaCharStream0.GetSuffix(816);
      javaCharStream0.getBeginLine();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 2645, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "{";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("{");
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4096);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-1);
      intArray0[1] = 4096;
      intArray0[2] = 4096;
      intArray0[3] = 4096;
      intArray0[4] = 4096;
      javaCharStream0.bufcolumn = intArray0;
      int int0 = 785;
      int int1 = (-1608);
      javaCharStream0.inBuf = (-2815);
      javaCharStream0.ReInit((Reader) stringReader0, 785, (-1608), 785);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-53);
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte) (-7);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-274), 4066, (byte)0);
      javaCharStream0.backup((byte) (-9));
      javaCharStream0.getEndColumn();
      javaCharStream0.available = (int) (byte)0;
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-2755), 1, 1);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-J");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 91, 91);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('-', char0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11, 3792);
      javaCharStream0.GetSuffix(3792);
      javaCharStream0.bufsize = 3792;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3|");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      stringReader0.markSupported();
      char[] charArray0 = new char[5];
      stringReader0.read();
      charArray0[0] = '|';
      charArray0[1] = '\\';
      charArray0[2] = '>';
      charArray0[3] = ':';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      charArray0[4] = '|';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      int int0 = 4096;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4096, 4096);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!C$CIk<*JQxsm<<WI");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1970, 1970);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.Done();
      javaCharStream0.backup(5);
      assertEquals(4090, javaCharStream0.bufpos);
      
      StringReader stringReader0 = new StringReader("d2w%%@dZ");
      javaCharStream0.ReInit((Reader) stringReader0, 5, 5);
      javaCharStream0.ReInit((Reader) stringReader0, 4096, 4096);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 5, (-1), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte) (-80);
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)78;
      byteArray0[7] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4, (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)110, (byte) (-80));
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 3, (int) (byte) (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte) (-58);
      byteArray0[3] = (byte)0;
      byte byte0 = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte) (-67);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-58), (byte)0);
      int int0 = 0;
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4096, 0, 0);
      javaCharStream0.available = 4096;
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte) (-113);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)1, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 4282, (int) (byte) (-113), (-548));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-519), (-519), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)0;
      try { 
        pushbackInputStream0.read(byteArray0, (-1), 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-2457);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2457));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JavaCharStream.hexval('F');
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15, 3820);
      javaCharStream0.GetSuffix(3820);
      javaCharStream0.bufsize = 3820;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<JgT#WUo9`fhT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.FillBuff();
      javaCharStream0.GetSuffix(14);
      byte[] byteArray0 = new byte[1];
      stringReader0.reset();
      byteArray0[0] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 10, 10);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 3362, 3, 3);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BLnKJ 9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-90);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-519), (-519), 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("/Yiv");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@n");
      char[] charArray0 = new char[7];
      charArray0[0] = '7';
      charArray0[1] = 'H';
      charArray0[2] = 'B';
      charArray0[3] = '(';
      charArray0[4] = '';
      charArray0[5] = 'V';
      charArray0[6] = '4';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 3, 13);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 248, 248);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.tokenBegin = 248;
      javaCharStream0.adjustBeginLineColumn(620, 1);
      javaCharStream0.FillBuff();
      javaCharStream0.backup(3091);
      javaCharStream0.UpdateLineColumn('#');
      javaCharStream0.adjustBeginLineColumn(135, 248);
      javaCharStream0.backup(96);
      javaCharStream0.getBeginLine();
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      charArray0[1] = '#';
      charArray0[2] = '#';
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "b");
      stringReader0.read(charBuffer0);
      charArray0[3] = '#';
      charArray0[4] = '#';
      charArray0[5] = '#';
      javaCharStream0.readChar();
      javaCharStream0.buffer = charArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1372, 3023);
      assertEquals(0, javaCharStream0.getBeginLine());
  }
}
