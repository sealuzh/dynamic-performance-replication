/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:56:01 GMT 2019
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Cbrt;
import org.apache.commons.math3.analysis.function.Exp;
import org.apache.commons.math3.analysis.function.Minus;
import org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.EquationsMapper;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = (-605.1089);
      double double1 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-605.1089), (-605.1089), (-605.1089), 0.0);
      int int0 = 3398;
      graggBulirschStoerIntegrator0.setOrderControl(3398, 0.0, 3398);
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3398);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-605.1089));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.mainSetDimension = 8;
      graggBulirschStoerIntegrator0.setOrderControl(8, 1.0E-4, 1.0E-10);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-4, 8, (-2334.51), 532.0);
      graggBulirschStoerIntegrator0.setOrderControl(1859, 0.5, (-2129.0384296));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1386.2;
      doubleArray0[1] = 1386.2;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1386.2;
      doubleArray1[1] = 3292.083;
      doubleArray1[2] = 1.866294830116931E-164;
      doubleArray1[3] = 1386.2;
      doubleArray1[4] = 3292.083;
      doubleArray1[5] = 3292.083;
      doubleArray1[6] = 2.1190686225891113;
      doubleArray1[7] = 3292.083;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3292.083, 1386.2, doubleArray1, doubleArray1);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(1522.87, 1386.2, 1522.87, 1352.013624);
      graggBulirschStoerIntegrator0.setOrderControl(969, 2.1190686225891113, 999.9);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      RiddersSolver riddersSolver0 = new RiddersSolver(1.00605438061E-312);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1.0E15, 0.0, 969, (UnivariateSolver) riddersSolver0);
      assertEquals(1.0E-14, riddersSolver0.getRelativeAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.3885660525939072E-8), 438.77802, 1453.262, 3070.887884917305);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2764.91364520599));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-108.62453), (-108.62453), (-799.0161557481975), (-108.62453));
      graggBulirschStoerIntegrator0.setStepSizeControl(179.5859, (-108.62453), 3.0, 3.0);
      graggBulirschStoerIntegrator0.setControlFactors(3.0, (-799.0161557481975), 179.5859, (-727.6428532730281));
      graggBulirschStoerIntegrator0.setControlFactors(0.9999, 0.9999, (-22.232452537439), 3.0);
      assertEquals(108.62453, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0001, 1.0E15, 0.0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.0;
      graggBulirschStoerIntegrator0.setControlFactors(1.0001, 0.0, 1.0001, 1.0E-10);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-2240));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-2240);
      doubleArray0[1] = 1.4977047507315718E290;
      doubleArray0[2] = 1.0E15;
      double double0 = 2.1290855095314206E-220;
      eventFilter0.init(1.4977047507315718E290, doubleArray0, 2.1290855095314206E-220);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2.0, 1.0E-10);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 1.0E15, (-2240), (UnivariateSolver) regulaFalsiSolver0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 1412.80178154556);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(23.27692530049, 3668.432105, 23.27692530049, 23.27692530049);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = 695.8466670596;
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 695.8466670596);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1156.4225;
      doubleArray1[1] = 1156.4225;
      doubleArray1[2] = 1156.4225;
      doubleArray1[3] = 1156.4225;
      doubleArray1[4] = 1156.4225;
      doubleArray1[5] = 1156.4225;
      doubleArray1[6] = 1156.4225;
      doubleArray1[7] = 1156.4225;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1156.4225, 1156.4225, doubleArray0, doubleArray1);
      int int0 = (-36);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-36), (-36), 0.9999);
      EventHandler eventHandler0 = null;
      double double0 = (-671.0);
      double double1 = 0.0;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray1;
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(959.618119253825);
      Exp exp0 = new Exp();
      try { 
        mullerSolver2_0.solve(488, (UnivariateFunction) exp0, 1156.4225, 0.5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [1,156.422, 0.5]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1052.01384504852);
      doubleArray0[1] = (-1052.01384504852);
      doubleArray0[2] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1052.01384504852), doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      SecantSolver secantSolver0 = new SecantSolver((-1052.01384504852));
      Minus minus0 = new Minus();
      secantSolver0.solve(1318, (UnivariateFunction) minus0, 1.0E-4, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1052.01384504852), 0.0, 18, (UnivariateSolver) secantSolver0);
      graggBulirschStoerIntegrator0.setControlFactors(2610.59649, (-1052.01384504852), (-249.429265), 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1318, 1318, (-4217.9360909));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 845.89101508;
      doubleArray0[1] = 845.89101508;
      doubleArray0[2] = (-121.307249);
      doubleArray0[3] = 845.89101508;
      doubleArray0[4] = (-2176.249741126192);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, (-1560.4300677), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 501, 501, (-583.11893423));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(845.89101508, 845.89101508, (-1374.49), 0.9999);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 0, 6, 6);
      graggBulirschStoerIntegrator1.setOrderControl(501, 3304.76, 0.9999);
      assertEquals(845.89101508, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 4.0, 4.0, 4.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.0, 0.0, 4.0, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors(808.75551, 0.0, 0.0, 808.75551);
      int int0 = 21;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(21).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 6.363872957010456E-9);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.02;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 0.94;
      doubleArray1[1] = (-143.8716262155);
      doubleArray1[2] = 0.02;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 1.0E-4;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, (-143.8716262155), doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(0.8, 0.9999, 0.8, 0.9999);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.02, (FixedStepHandler) null, stepNormalizerMode0, stepNormalizerBounds0);
      // Undeclared exception!
      try { 
        stepNormalizer0.init(0.94, doubleArray0, 0.9999);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.sampling.StepNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(1783, 594.0, 594.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(2937.0, 1783.0, 0.0, 564);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 2937.0, (-1034), (UnivariateSolver) bracketingNthOrderBrentSolver0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-4246.74762);
      doubleArray0[1] = (-4246.74762);
      doubleArray0[2] = 4221.52104504451;
      doubleArray0[3] = (-4246.74762);
      doubleArray0[4] = 4221.52104504451;
      doubleArray0[5] = 4221.52104504451;
      doubleArray0[6] = (-4246.74762);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-4246.74762), 4221.52104504451, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 18, 0, (-4246.74762));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1836), (-1836), 4221.52104504451);
      graggBulirschStoerIntegrator0.setOrderControl(2497, 4221.52104504451, 0.5215104818344116);
      assertEquals(4221.52104504451, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.7533416748046875, 935.2370193982318, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setMaxEvaluations(11);
      graggBulirschStoerIntegrator0.setControlFactors((-1788.835), (-3503.2853), 292.96493893, 999.9);
      graggBulirschStoerIntegrator0.setOrderControl((-1), 11, 292.96493893);
      assertEquals(935.2370193982318, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0001, 1.0E15, 0.0);
      DummyStepHandler.getInstance();
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-2176.249741126192);
      doubleArray0[1] = 1.0001;
      doubleArray0[2] = (-2176.249741126192);
      doubleArray0[3] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-2176.249741126192), (-2176.249741126192), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.clearEventHandlers();
      graggBulirschStoerIntegrator1.setControlFactors(0.0, 1.0E15, (-2176.249741126192), (-121.307249));
      graggBulirschStoerIntegrator1.setOrderControl(969, 1332.0, 969);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType1);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver((-4.370104767451421E-10));
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter1, (-32.39537364), (double) 969, 245, (UnivariateSolver) riddersSolver0);
      assertEquals(0, riddersSolver0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 4.0, 4.0, 4.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.0, 0.0, 4.0, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors(808.75551, 0.0, 0.0, 808.75551);
      graggBulirschStoerIntegrator0.setControlFactors(6.363872957010456E-9, 1.0001, 0.0, 0.65);
      graggBulirschStoerIntegrator0.setInitialStepSize((-2719.727349882));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 0, (-500.9));
      graggBulirschStoerIntegrator0.setOrderControl(1108, 1492.18883562928, 4.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1108);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.0001;
      doubleArray0[1] = 6.363872957010456E-9;
      doubleArray0[2] = 1.0001;
      doubleArray0[3] = (-2719.727349882);
      doubleArray0[4] = 4.0;
      doubleArray0[5] = 1.0001;
      doubleArray0[6] = 6.363872957010456E-9;
      doubleArray0[7] = (double) 0;
      doubleArray0[8] = (-2719.727349882);
      eventFilter0.eventOccurred(1.0E-15, doubleArray0, false);
      BrentSolver brentSolver0 = new BrentSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1.0001, 0.65, 1108, (UnivariateSolver) brentSolver0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1049.2512286);
      doubleArray0[1] = 79.4149;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1049.2512286), (-1049.2512286), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors((-2250.643188639), (-1049.2512286), 0.0, 79.4149);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(79.4149, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors((-1049.2512286), 79.4149, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(2886, 0.6759096384048462, 79.4149);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver((-2250.643188639));
      graggBulirschStoerIntegrator1.addEventHandler((EventHandler) eventFilter0, (-564.5), (double) 969, 969, (UnivariateSolver) riddersSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (-2250.643188639));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 2
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1702.77, 1702.77, 1702.77, 1702.77);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-590));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 7);
      assertEquals(1702.77, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2588.1389749731, 0.0, (-2.401816502004675E-309), 932.0137920784775);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(932.0137920784775, 0.0, (-2.401816502004675E-309), 2588.1389749731);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 425, 262, 425);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 360.863095148, 217.57373420501435, 3534, (UnivariateSolver) regulaFalsiSolver0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, Double.NEGATIVE_INFINITY, 0.0, (-108.62453));
      graggBulirschStoerIntegrator0.setControlFactors(2.0896888605749563E-8, 2.0896888605749563E-8, Double.NEGATIVE_INFINITY, 179.5859);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.94;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      doubleArray0[8] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0.0, 0.94);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 1.0E-4, 0.0, 0.94);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 1.0E-4);
      int int0 = (-3745);
      graggBulirschStoerIntegrator0.setOrderControl((-3745), 0.0, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors((-615.855), (-615.855), 0.0, (-2907.108551781303));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(318).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2907.108551781303));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = 0.5990082025527954;
      double double1 = (-1788.835);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5990082025527954, (-1262.861716947), (-1788.835), (-1262.861716947));
      double double2 = 438.77802;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double3 = (-628.5885471443713);
      expandableStatefulODE0.setTime((-628.5885471443713));
      double double4 = (-1139.9553833042);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1139.9553833042));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0001, 1.0E15, 0.0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 2.0;
      graggBulirschStoerIntegrator0.setControlFactors(1.0001, 0.0, 1.0001, 1.0E-10);
      int int0 = (-2240);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-2240));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (-2240);
      doubleArray0[1] = 1.4977047507315718E290;
      doubleArray0[2] = 1.0E15;
      eventFilter0.init(1.4977047507315718E290, doubleArray0, 2.1290855095314206E-220);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(2.0, 1.0E-10);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 1.0E15, (-2240), (UnivariateSolver) regulaFalsiSolver0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 1412.80178154556);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1049.2512286);
      double double0 = 79.4149;
      doubleArray0[1] = 79.4149;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1049.2512286), (-1049.2512286), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors((-2250.643188639), (-1049.2512286), 0.0, 79.4149);
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      int int0 = 4;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 4);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.computeDerivatives((-1049.2512286), doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-1618.5224943);
      doubleArray0[1] = (-1618.5224943);
      doubleArray0[2] = (-1618.5224943);
      doubleArray0[3] = (-1618.5224943);
      doubleArray0[4] = (-1618.5224943);
      doubleArray0[5] = (-1618.5224943);
      doubleArray0[6] = (-1618.5224943);
      doubleArray0[7] = (-1618.5224943);
      doubleArray0[8] = (-1618.5224943);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1618.5224943), (-1618.5224943), doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1618.5224943), fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-226));
      graggBulirschStoerIntegrator0.setOrderControl(0, 4590.4616, 596.600904);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-882.5548682));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 9
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-303.1469757), (-303.1469757), (-303.1469757), (-303.1469757));
      graggBulirschStoerIntegrator0.setControlFactors((-303.1469757), (-2.382825271750576E144), 0.9999, 0.9999);
      assertEquals(303.1469757, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl((-1556), 0.9999, (-2468.3319732642));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver(0.9999, (-1299.7244316655497));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 0.9999, 1768, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.setOrderControl((-1073634439), (-1087.557), 2.0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2060.096633;
      doubleArray0[1] = 2060.096633;
      doubleArray0[2] = 2060.096633;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1786.93680373979, 2060.096633, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(0.0, 1786.93680373979);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 0.0, 0, (UnivariateSolver) regulaFalsiSolver0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-0.4839168592963935), (-0.4839168592963935), (-0.4839168592963935), (-0.4839168592963935));
      graggBulirschStoerIntegrator0.clearStepHandlers();
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(452).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.5, (-140.7626894042938), 1.0001, 1.0001);
      graggBulirschStoerIntegrator1.setControlFactors(4.0, 54.0, 273.85253628046, 1.0001);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver((-2095.3225), 1.0001, 4.0E-15);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 266.557245727, 1.9987994582857286E-8, 452, (UnivariateSolver) brentSolver0);
      assertEquals(0, brentSolver0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5990082025527954, (-1262.861716947), (-1788.835), 2332.6544905303);
      graggBulirschStoerIntegrator0.setControlFactors((-1262.861716947), 2145.0, 2332.6544905303, 976.2120184398075);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-2061.629614), (-1788.835));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.8, 2957.75865671881, 106, (UnivariateSolver) illinoisSolver0);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1386.2;
      doubleArray0[1] = 1386.2;
      doubleArray0[2] = (-195.03334146397);
      doubleArray0[3] = 1386.2;
      doubleArray0[4] = 3292.083;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1386.2, 3292.083, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 83);
      assertEquals(1386.2, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-1233));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver(536.627452);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, (double) (-1233), 0, (UnivariateSolver) riddersSolver0);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.3383347029375378E42, (FixedStepHandler) null, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 6.291008309266035E-9, (-310.94969), (-1233), (UnivariateSolver) riddersSolver0);
      assertEquals(1.0E-15, riddersSolver0.getFunctionValueAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 2.1066884994506836;
      doubleArray0[2] = 2.1066884994506836;
      doubleArray0[3] = 2.1066884994506836;
      doubleArray0[4] = 885.98015221;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 2.1066884994506836;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.1066884994506836, 0.0, doubleArray0, doubleArray0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 885.98015221, 2.1066884994506836, 2814.359491608483);
      int int0 = 12;
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 12, 12, 1.0E-4);
      EventHandler eventHandler0 = null;
      double double0 = 3668.432105;
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(3668.432105);
      Exp exp0 = new Exp();
      try { 
        mullerSolver2_0.solve(12, (UnivariateFunction) exp0, 2.1066884994506836, (double) 12, (-403.70054));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // function values at endpoints do not have different signs, endpoints: [2.107, 12], values: [8.221, 162,754.791]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.MullerSolver2", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(328.250819665921, (-1524.3184142126138), 3348.454920137182, 7.873970951802825E-104);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BracketingNthOrderBrentSolver bracketingNthOrderBrentSolver0 = new BracketingNthOrderBrentSolver(7.873970951802825E-104, (-1082.946273), (-139.95728872802147), 3057);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 328.250819665921, 2432.9248643, 3057, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      graggBulirschStoerIntegrator0.setControlFactors(0.9, 2432.9248643, 3731.857428148827, 3731.857428148827);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1.7976931348623157E308, (-1707.31354039), 924, (UnivariateSolver) bracketingNthOrderBrentSolver0);
      graggBulirschStoerIntegrator0.setOrderControl(3057, (-1.0), (-1082.946273));
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors(808.75551, 0.0, 0.0, 808.75551);
      graggBulirschStoerIntegrator0.setControlFactors(6.363872957010456E-9, 1.0001, 0.0, 0.65);
      graggBulirschStoerIntegrator0.setInitialStepSize((-2719.7273499));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 0, (-500.9));
      graggBulirschStoerIntegrator0.setOrderControl(1108, 1492.18883562928, 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(849.0, 849.0, 1108, 294.641605014);
      graggBulirschStoerIntegrator1.setOrderControl(1616, 10.0, 294.641605014);
      graggBulirschStoerIntegrator1.setOrderControl(3, (-107.84891), 1.0E-4);
      assertEquals(849.0, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl(1783, 4430.230505671091, 0.0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 1.0E-4);
      int int0 = (-3745);
      graggBulirschStoerIntegrator0.setOrderControl((-3745), 3209.56944046, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors((-615.855), (-615.855), 0.0, (-2906.91830793));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2906.91830793));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.mainSetDimension = 8;
      graggBulirschStoerIntegrator0.setOrderControl(8, 1.0E-4, 1.0E-10);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 8);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(272.480497270253, (-191.2177052894), (-3434.9), (-3434.9));
      graggBulirschStoerIntegrator0.setControlFactors(2.1190686225891113, 2.1190686225891113, (-1307.142166), (-3434.9));
      graggBulirschStoerIntegrator0.scalRelativeTolerance = (-191.2177052894);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1754, 1754, (-3434.9));
      graggBulirschStoerIntegrator0.getEventHandlers();
      int int0 = 1271;
      graggBulirschStoerIntegrator0.setMaxEvaluations(1271);
      double double0 = 0.1428571423679182;
      graggBulirschStoerIntegrator0.setControlFactors((-3434.9), (-191.2177052894), (-3434.9), 0.1428571423679182);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double double1 = 0.0;
      double double2 = (-704.61554);
      int int1 = 0;
      RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(59874.140625, 272.480497270253);
      // Undeclared exception!
      try { 
        regulaFalsiSolver0.solve(1271, (UnivariateFunction) null, 487.5981287192, (-191.2177052894), (-997.65145571));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not allowed
         //
         verifyException("org.apache.commons.math3.util.MathUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1625.0254), (-1625.0254), (-1625.0254), (-1625.0254));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      boolean boolean0 = false;
      double double0 = 39.956881532;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1413, 1413, 39.956881532);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1808.2711700098616));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      int int0 = 3233;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(438.77802);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 3233);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(23.27692530049, 3668.432105, 23.27692530049, 23.27692530049);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 695.8466670596);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.45251762866973877, 4994.0, 0.45251762866973877, 5.014010481958507E150);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 4017);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(10.0, fixedStepHandler0, stepNormalizerMode0);
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 5.014010481958507E150;
      doubleArray0[1] = 4994.0;
      doubleArray0[2] = 0.45251762866973877;
      doubleArray0[3] = 10.0;
      doubleArray0[4] = 0.45251762866973877;
      double double0 = 1511.0;
      stepNormalizer0.init(10.0, doubleArray0, 0.0);
      stepNormalizer0.init(5.014010481958507E150, doubleArray0, 1511.0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      boolean boolean0 = true;
      int int0 = 711;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 711);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 711);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 845.89101508;
      doubleArray0[1] = 845.89101508;
      doubleArray0[2] = (-121.307249);
      doubleArray0[3] = 845.89101508;
      doubleArray0[4] = (-2176.249741126192);
      doubleArray0[5] = 845.89101508;
      doubleArray0[6] = 845.89101508;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(845.89101508, 845.89101508, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors((-121.307249), 0.0, 0.8, 845.89101508);
      graggBulirschStoerIntegrator0.setOrderControl(969, 845.89101508, (-2176.249741126192));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver(845.89101508);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 845.89101508, 969, (UnivariateSolver) riddersSolver0);
      assertEquals(0.0, riddersSolver0.getMax(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double double0 = 0.5;
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.5;
      doubleArray0[1] = 0.5;
      doubleArray0[2] = 551.71296767;
      doubleArray0[3] = 551.71296767;
      doubleArray0[4] = 551.71296767;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.5;
      doubleArray0[7] = 551.71296767;
      doubleArray0[8] = 551.71296767;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5, 551.71296767, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.6, 0.5, 0.0, 0.0);
      double double1 = (-263.4031);
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.36086535453796387;
      doubleArray0[1] = 0.36086535453796387;
      doubleArray0[2] = 0.36086535453796387;
      doubleArray0[3] = 0.36086535453796387;
      doubleArray0[4] = 0.36086535453796387;
      doubleArray0[5] = 0.36086535453796387;
      doubleArray0[6] = 0.36086535453796387;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.36086535453796387, 0.36086535453796387, doubleArray0, doubleArray0);
      int int0 = 587;
      int int1 = 3981;
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 587, 3981, 0.0);
      EventHandler eventHandler0 = null;
      double double0 = 0.0;
      PegasusSolver pegasusSolver0 = new PegasusSolver((-300.807014309776));
      Cbrt cbrt0 = new Cbrt();
      // Undeclared exception!
      try { 
        pegasusSolver0.solve(0, (UnivariateFunction) cbrt0, (double) 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (0) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.02;
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 0.94;
      doubleArray1[1] = (-143.8716262155);
      doubleArray1[2] = 0.02;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 1.0E-4;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, (-143.8716262155), doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(0.8, 0.9999, 0.8, 0.9999);
      graggBulirschStoerIntegrator0.setControlFactors((-1430.565259), 0.02, 1.0E-4, (-1.0));
      graggBulirschStoerIntegrator0.setOrderControl(1908871702, 2105.5536, 0.8);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 562.7353340752103;
      doubleArray0[2] = 562.7353340752103;
      doubleArray0[3] = 562.7353340752103;
      doubleArray0[4] = 1311.33052;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 1311.33052;
      doubleArray1[1] = 562.7353340752103;
      doubleArray1[2] = 1311.33052;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 1311.33052;
      doubleArray1[5] = 1311.33052;
      doubleArray1[6] = 1311.33052;
      doubleArray1[7] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(562.7353340752103, 0.0, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = (-605.1089);
      double double1 = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-605.1089), (-605.1089), (-605.1089), 0.0);
      int int0 = 3398;
      double double2 = 0.0;
      graggBulirschStoerIntegrator0.setOrderControl(3398, 0.0, 3398);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3398);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3398).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-605.1089));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2.2251062393188477;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 2.2251062393188477;
      doubleArray0[4] = 2.2251062393188477;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 2.2251062393188477, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 18, 18, 2.2251062393188477);
      assertEquals(2.2251062393188477, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (-724.253114976646);
      doubleArray0[1] = (-724.253114976646);
      doubleArray0[2] = (-724.253114976646);
      doubleArray0[3] = (-724.253114976646);
      doubleArray0[4] = (-724.253114976646);
      doubleArray0[5] = (-724.253114976646);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-724.253114976646), (-724.253114976646), doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-724.253114976646), fixedStepHandler0, stepNormalizerBounds0);
      double[][] doubleArray1 = new double[4][6];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      EquationsMapper equationsMapper0 = new EquationsMapper(0, 0);
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[2];
      equationsMapperArray0[0] = equationsMapper0;
      equationsMapperArray0[1] = equationsMapper0;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, true, equationsMapper0, equationsMapperArray0);
      stepNormalizer0.handleStep(graggBulirschStoerStepInterpolator0, true);
      stepNormalizer0.init(999.188, doubleArray0, (-724.253114976646));
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setOrderControl(6, (-724.253114976646), (-724.253114976646));
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-724.253114976646));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.36086535453796387;
      doubleArray0[1] = 0.36086535453796387;
      doubleArray0[2] = 0.36086535453796387;
      doubleArray0[4] = 0.36086535453796387;
      doubleArray0[5] = 0.36086535453796387;
      doubleArray0[6] = 0.36086535453796387;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.36086535453796387, 0.36086535453796387, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 587, 3981, 0.0);
      PegasusSolver pegasusSolver0 = new PegasusSolver((-300.807014309776));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 0.0, (double) 587, 3981, (UnivariateSolver) pegasusSolver0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 2.201331615447998, 249.4526315563612, 587, (UnivariateSolver) pegasusSolver0);
      assertEquals(0.36086535453796387, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1335.5190702699, 1335.5190702699, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(2444, 1702.77, 1.0E-15);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 2444);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 845.89101508;
      doubleArray0[1] = 845.89101508;
      doubleArray0[2] = (-121.307249);
      doubleArray0[3] = 845.89101508;
      doubleArray0[4] = (-2176.249741126192);
      doubleArray0[5] = 845.89101508;
      doubleArray0[6] = 845.89101508;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(845.89101508, 845.89101508, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors((-121.307249), 0.0, 0.8, 845.89101508);
      graggBulirschStoerIntegrator0.setOrderControl(969, 845.89101508, (-2176.249741126192));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 845.89101508, 940.160306, 6, (UnivariateSolver) null);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals(845.89101508, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }
}
