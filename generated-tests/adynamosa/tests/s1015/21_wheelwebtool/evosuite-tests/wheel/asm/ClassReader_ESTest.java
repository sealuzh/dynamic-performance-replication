/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 21:47:06 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(575);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      int int0 = 132;
      classReader0.accept((ClassVisitor) classAdapter0, 132);
      char[] charArray0 = new char[0];
      Object object0 = new Object();
      int int1 = 36;
      ClassReader classReader1 = new ClassReader(classReader0.b, 36, 4);
      // Undeclared exception!
      try { 
        classReader1.accept((ClassVisitor) classWriter0, 3836);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      boolean boolean0 = true;
      PipedOutputStream pipedOutputStream0 = null;
      int int0 = 4;
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = '#';
      charArray0[2] = 'V';
      charArray0[3] = '%';
      charArray0[4] = '~';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2008));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 1);
      ClassReader classReader1 = new ClassReader(classReader0.b, 575, 1);
      ClassWriter classWriter1 = new ClassWriter(88);
      classReader0.copyPool(classWriter1);
      ClassWriter classWriter2 = null;
      try {
        classWriter2 = new ClassWriter(classReader1, (-1423));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.readLong(2);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readClass(11, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)116;
      byte byte0 = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = '{';
      charArray0[2] = '1';
      charArray0[3] = '*';
      charArray0[4] = 'n';
      charArray0[5] = 'l';
      charArray0[6] = '*';
      charArray0[7] = 'g';
      // Undeclared exception!
      try { 
        classReader0.readClass((byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getInterfaces();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      classReader0.getInterfaces();
      charArray0[1] = 'H';
      charArray0[2] = '{';
      charArray0[3] = 'C';
      charArray0[4] = 'Q';
      charArray0[5] = 'l';
      charArray0[6] = '>';
      // Undeclared exception!
      try { 
        classReader0.readConst(23, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.copyPool(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassReader classReader1 = new ClassReader(classReader0.b, 575, (-2863));
      classReader1.getSuperName();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1253));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(1);
      int int0 = 24;
      classWriter0.visit(24, 2, "Deprecated", "Exceptions", (String) null, (String[]) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter0, (-195));
      classReader1.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 23);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      assertEquals(575, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.newNameType("org.apache.commons.io.filefilter.SizeFileFilter", "Signature");
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.SizeFileFilter", 64);
      classWriter0.visit(218, 4769, "org.apache.commons.io.filefilter.SizeFileFilter", "Ljava/lang/Synthetic;", "org.apache.commons.io.filefilter.SizeFileFilter", (String[]) null);
      classReader0.accept((ClassVisitor) classWriter0, 180);
      String string0 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      classReader0.getAccess();
      int int0 = classReader0.getItem(1);
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classReader2.getInterfaces();
      int int0 = ClassReader.SKIP_CODE;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 32);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(classReader1, 1);
      classReader1.accept((ClassVisitor) classAdapter0, 4);
      MockFile mockFile0 = new MockFile("org.apache.commons.io.filefilter.NotFileFilter", "6pl)RU_dA?@o,");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "SourceFile");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"SourceFile\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      assertEquals(575, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      int int0 = classReader0.readUnsignedShort(1);
      assertEquals(65210, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("java/lang/Throwable");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classReader2.getInterfaces();
      int int0 = ClassReader.SKIP_CODE;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      int int1 = (-700);
      classReader1.accept((ClassVisitor) classAdapter0, (-700));
      classReader1.getAccess();
      char[] charArray0 = new char[8];
      charArray0[0] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = 'M';
      charArray0[4] = 'M';
      charArray0[5] = 'M';
      charArray0[6] = '3';
      charArray0[7] = '3';
      classReader0.readClass(43, charArray0);
      classReader0.getSuperName();
      classReader2.readShort(32);
      // Undeclared exception!
      try { 
        classReader2.readClass(8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      char char0 = 'G';
      classReader0.accept((ClassVisitor) classWriter0, 2);
      char char1 = '.';
      char char2 = 'D';
      char[] charArray0 = new char[3];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      charArray0[2] = 'D';
      // Undeclared exception!
      try { 
        classReader0.readConst(456, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newLong((-1L));
      classReader0.getInterfaces();
      classReader0.readByte(2);
      classReader0.getClassName();
      classReader0.getSuperName();
      classReader0.getSuperName();
      classReader0.readLong(3);
      // Undeclared exception!
      try { 
        classReader0.readLabel(459, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      int int0 = 131;
      char[] charArray0 = new char[7];
      ClassWriter classWriter0 = new ClassWriter(4951);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 4);
      charArray0[0] = 'A';
      charArray0[1] = 'G';
      classReader0.accept((ClassVisitor) classWriter0, 1);
      charArray0[2] = 'P';
      charArray0[4] = 'D';
      charArray0[5] = '';
      // Undeclared exception!
      try { 
        classReader0.readConst(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getSuperName();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-2339));
      // Undeclared exception!
      try { 
        classReader1.readLong((-1082));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(4951, classReader0.header);
      assertEquals(1, stringArray0.length);
      
      int int0 = 131;
      char[] charArray0 = new char[7];
      ClassWriter classWriter0 = new ClassWriter(4951);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-1189));
      charArray0[0] = 'A';
      charArray0[1] = 'G';
      classReader0.accept((ClassVisitor) classWriter0, 1);
      charArray0[2] = 'P';
      charArray0[3] = '.';
      charArray0[4] = 'D';
      charArray0[5] = '';
      // Undeclared exception!
      try { 
        classReader0.readConst((-1189), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'c';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      int int0 = 2041;
      classReader0.accept((ClassVisitor) classWriter0, 2041);
      charArray0[3] = '$';
      charArray0[4] = 'j';
      charArray0[4] = 'v';
      classReader0.getAccess();
      char[] charArray1 = new char[8];
      charArray1[0] = 'v';
      charArray1[1] = '$';
      charArray1[2] = 'v';
      charArray1[3] = 'j';
      charArray1[4] = '7';
      charArray1[5] = 'j';
      charArray1[6] = 'v';
      charArray1[7] = '$';
      // Undeclared exception!
      try { 
        classReader0.readClass(101, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'c';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2041);
      charArray0[3] = '$';
      charArray0[4] = 'j';
      charArray0[4] = 'v';
      classReader0.readByte(1);
      charArray0[6] = 'A';
      charArray0[7] = '-';
      classReader0.readConst(101, charArray0);
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(classReader0, 4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 3039);
      assertEquals(4951, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      int int0 = 101;
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[6] = 'j';
      charArray0[2] = 'c';
      charArray0[3] = '$';
      charArray0[4] = 'j';
      char char0 = 'v';
      // Undeclared exception!
      try { 
        classReader0.readConst(342, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader0.getInterfaces();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(2947, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'c';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2041);
      charArray0[3] = '$';
      charArray0[4] = 'j';
      charArray0[4] = 'v';
      classReader0.readByte(1);
      charArray0[6] = 'A';
      charArray0[7] = '-';
      classReader0.readConst(101, charArray0);
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(classReader0, 4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 3044);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      classReader2.getInterfaces();
      int int0 = ClassReader.SKIP_CODE;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classAdapter0, (-700));
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = '3';
      // Undeclared exception!
      try { 
        classReader2.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      Locale.getISOCountries();
      int int0 = 1843;
      int int1 = 2147483645;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2147483645);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(431, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      int int0 = ClassReader.SKIP_FRAMES;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(2147);
      classWriter0.newLong(8);
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
      
      int int1 = classReader0.readByte(199);
      assertEquals(575, classReader0.header);
      assertEquals(116, int1);
      
      String string0 = classReader1.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
      
      long long0 = classReader2.readLong(10);
      assertEquals(720585836487901194L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      int int0 = 2442;
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2442, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      int int0 = ClassReader.SKIP_FRAMES;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      assertEquals(575, classReader2.header);
      
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      ClassWriter classWriter0 = new ClassWriter(classReader1, (-1691));
      classReader2.copyPool(classWriter0);
      String string0 = classReader2.readUTF8(575, charArray0);
      assertEquals("The size must be non-negative", string0);
      
      short short0 = classReader2.readShort(390);
      assertEquals((short)3840, short0);
      
      int int1 = classReader1.readInt(181);
      assertEquals(1718185076, int1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader1.readLong((-1082));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getInterfaces();
      int int0 = 1843;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("Exceptions");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      int int1 = 2795;
      int int2 = 303;
      char[] charArray0 = null;
      Label[] labelArray0 = new Label[3];
      // Undeclared exception!
      try { 
        classReader0.readLabel(2795, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      assertEquals(575, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(2767);
      classReader0.accept((ClassVisitor) classWriter0, 28);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      int int0 = ClassReader.SKIP_FRAMES;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      // Undeclared exception!
      try { 
        classReader2.readUTF8(575, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      assertEquals(4951, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-654));
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readShort(1);
      int int0 = classReader1.readInt(4096);
      assertEquals(1630497889, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 242);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader1.b);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 4951);
      assertEquals(9688, byteArrayInputStream0.available());
      
      ClassReader classReader2 = new ClassReader(pushbackInputStream0);
      classReader2.getInterfaces();
      ClassReader classReader3 = new ClassReader(classReader1.b);
      classReader2.readShort(2);
      int int0 = classReader3.readInt(1);
      assertEquals((-21316096), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newLong((-1L));
      classReader0.getInterfaces();
      classReader0.readByte(2);
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readLong(2074);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter((-3007));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      classReader0.accept((ClassVisitor) classAdapter1, 1);
      assertEquals(4, ClassReader.SKIP_FRAMES);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readShort(1);
      // Undeclared exception!
      try { 
        classReader1.readInt((-124));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = 'v';
      charArray0[2] = 'Z';
      charArray0[3] = '$';
      charArray0[4] = 'L';
      charArray0[5] = 'N';
      charArray0[6] = 'L';
      charArray0[7] = '-';
      charArray0[8] = '-';
      // Undeclared exception!
      try { 
        classReader0.readConst((-3752), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1, 374);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 938
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = 'L';
      // Undeclared exception!
      try { 
        classReader0.readConst((byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      int int0 = ClassReader.SKIP_CODE;
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 0);
      assertEquals(8, ClassReader.EXPAND_FRAMES);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      classReader0.readByte(1);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      assertEquals(575, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      classReader0.readByte(1);
      classReader0.accept((ClassVisitor) classWriter0, (-918));
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-460), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = ClassReader.WRITER;
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      int int0 = 251;
      // Undeclared exception!
      try { 
        classReader0.readConst(251, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'f';
      charArray0[2] = 'c';
      charArray0[3] = '$';
      charArray0[4] = '?';
      charArray0[5] = 'v';
      charArray0[6] = 'L';
      int int0 = classReader0.getAccess();
      assertEquals(4951, classReader0.header);
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        classReader0.readConst(131, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(4951, classReader1.header);
      
      String string0 = classReader1.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      Attribute attribute2 = attribute0.next;
      attributeArray0[1] = null;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 3809);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getInterfaces();
      char[] charArray0 = new char[8];
      charArray0[0] = 'j';
      charArray0[1] = 'f';
      charArray0[2] = 'c';
      charArray0[3] = '$';
      charArray0[4] = '?';
      charArray0[5] = 'v';
      charArray0[6] = 'L';
      charArray0[7] = '!';
      // Undeclared exception!
      try { 
        classReader0.readConst(101, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.readShort((byte)0);
      int int0 = classReader0.readInt((short)0);
      assertEquals(10, classReader0.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(2621, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getInterfaces();
      classReader0.readByte(1);
      classReader0.accept((ClassVisitor) classWriter0, 1843);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)118;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Omcjtbk*");
      ClassReader classReader0 = new ClassReader(byteArray0);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel((byte)118, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte byte0 = (byte)116;
      byteArray0[0] = (byte)116;
      byte byte1 = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      Label[] labelArray0 = new Label[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 4, 10);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        classReader1.readLabel((-3169), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader1.readUnsignedShort(10);
      assertEquals(10, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(1503);
      classWriter0.version = 134;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, (-1969));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 1937;
      ClassWriter classWriter0 = new ClassWriter(1937);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-20);
      byteArray0[5] = (byte) (-113);
      byteArray0[6] = (byte) (-117);
      byteArray0[7] = (byte) (-49);
      byteArray0[8] = (byte) (-31);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 22
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'W';
      charArray0[2] = '?';
      charArray0[3] = 'e';
      charArray0[4] = 's';
      charArray0[5] = '^';
      charArray0[6] = '|';
      charArray0[7] = '$';
      // Undeclared exception!
      try { 
        classReader0.readClass((-126), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.readShort((-2946));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2946
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O)xde");
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = classReader0.readByte(16);
      assertEquals(10, classReader0.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(24);
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2092);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(10);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassWriter classWriter0 = new ClassWriter((-1334));
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readByte((-2119));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2119
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[1] = (byte) (-123);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        classReader0.readInt((-6102));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2509), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(10, classReader0.header);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = 1361;
      char[] charArray0 = new char[5];
      char char0 = 'E';
      charArray0[0] = 'E';
      char char1 = 'W';
      charArray0[1] = 'W';
      char char2 = '1';
      charArray0[2] = '1';
      char char3 = '7';
      charArray0[3] = '7';
      char char4 = 'D';
      charArray0[4] = 'D';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1361, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(21);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, 21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)116;
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, (byte)116);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      ClassReader classReader0 = new ClassReader(bufferedInputStream0);
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.getItem(12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readByte(3353);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3353
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(33, classReader1.getAccess());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = (-920);
      Label[] labelArray0 = new Label[9];
      // Undeclared exception!
      try { 
        classReader0.readLabel(1961, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[1] = (byte)116;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(1245);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)116;
      ClassReader classReader0 = new ClassReader(byteArray0);
      short short0 = classReader0.readShort((byte)0);
      assertEquals((short)29696, short0);
      assertEquals(10, classReader0.header);
      
      int int0 = classReader0.readByte((byte)0);
      assertEquals(10, classReader0.header);
      assertEquals(116, int0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getItem((-800));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -800
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)116;
      ClassReader classReader0 = new ClassReader(byteArray0);
      short short0 = classReader0.readShort((byte)0);
      assertEquals((short)29696, short0);
      
      int int0 = classReader0.readInt(6);
      assertEquals(10, classReader0.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[1] = (byte)116;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      short short0 = classReader0.readShort(5);
      assertEquals(10, classReader0.header);
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)116;
      byte byte0 = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, (byte)116);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1038));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      int int0 = (-6102);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)116;
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)116;
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[1] = '<';
      charArray0[2] = 'a';
      charArray0[3] = '.';
      // Undeclared exception!
      try { 
        classReader0.readClass(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-94);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 0, 108);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte) (-43);
      ClassReader classReader0 = new ClassReader(byteArray0);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-123);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-41);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)41;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-4);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)12;
      byteArray0[8] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 0, (-343));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("3}isIG");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte) (-43);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
