/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 14:46:23 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 0, 0);
      T4AndT6Compression.decompressT6(byteArray0, 0, 0);
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 0, 0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)44;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 2, (byte)44);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)38;
      byteArray0[0] = (byte)38;
      byte byte1 = (byte)116;
      byteArray0[1] = (byte)116;
      byte byte2 = (byte)41;
      byteArray0[2] = (byte)41;
      byte byte3 = (byte)0;
      byteArray0[3] = (byte)0;
      boolean boolean0 = false;
      T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      T4AndT6Compression.compressT4_2D(byteArray0, 0, (byte)38, false, (-660));
      int int0 = (-1);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray0, (-1), 8);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, false, 2);
      assertArrayEquals(new byte[] {(byte)0, (byte)27, (byte) (-128), (byte)10, (byte)0, (byte)32}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 3, 17, true, 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 0, 0);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 0, 0);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 0, 0, false, 25);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-73);
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)101, (byte) (-73), true);
      byte[] byteArray2 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1676), (byte)0);
      T4AndT6Compression.compressT4_1D(byteArray1, 809, 0, false);
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray2, 0, (-15), true);
      // Undeclared exception!
      T4AndT6Compression.compressModifiedHuffman(byteArray3, 0, 1638);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-783), (-783));
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 1792, 1792);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)5;
      byteArray0[0] = (byte)5;
      byte byte1 = (byte)71;
      byteArray0[1] = (byte)71;
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, (byte)5, (byte)5, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 63, (-27), true);
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)44;
      byte byte0 = (byte) (-73);
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte) (-90);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 2368, (byte)44);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)0);
      T4AndT6Compression.compressT4_2D(byteArray1, (byte)3, (byte)0, true, (byte)0);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, (byte)3, (byte)3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, true);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)5;
      byteArray0[0] = (byte)5;
      int int0 = 1792;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 1792);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)108;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte)108;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)54;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)54, (byte)54);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, (-1165), true, (-1130));
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-2994), 63);
      byte[] byteArray2 = T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte) (-10), (byte)0);
      // Undeclared exception!
      T4AndT6Compression.compressModifiedHuffman(byteArray2, (-2), 1285);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)107;
      byte byte0 = (byte)11;
      byteArray0[2] = (byte)11;
      T4AndT6Compression.decompressT4_1D(byteArray0, 0, 0, false);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)107;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)107;
      byte byte1 = (byte)0;
      byteArray1[6] = (byte)0;
      T4AndT6Compression.compressT4_1D(byteArray1, (byte)0, (-2872), false);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, (byte)11, (byte)107);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-39);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, 128);
      byte[] byteArray2 = T4AndT6Compression.decompressT6(byteArray1, (byte)0, 0);
      byte[] byteArray3 = T4AndT6Compression.compressT6(byteArray2, (byte)4, 0);
      byte[] byteArray4 = T4AndT6Compression.compressT4_1D(byteArray0, 35, (byte)0, false);
      T4AndT6Compression.compressModifiedHuffman(byteArray4, (byte)0, (byte) (-39));
      byte[] byteArray5 = T4AndT6Compression.compressT6(byteArray3, (byte)4, (-3823));
      T4AndT6Compression.decompressModifiedHuffman(byteArray3, 0, 2111);
      byte[] byteArray6 = T4AndT6Compression.decompressT4_2D(byteArray3, 0, (byte)0, false);
      assertFalse(byteArray6.equals((Object)byteArray5));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)19;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)3, (byte)19);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)12;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)1;
      byteArray0[3] = (byte)1;
      byte byte3 = (byte)127;
      byteArray0[4] = (byte)127;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)12, (byte)1, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)33;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)33, (byte)33, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), 1, true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte)53, (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      T4AndT6Compression.decompressT4_1D(byteArray0, (-475), (-475), false);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 1, 1, true, 21);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, 21, (-475));
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-114), (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)6;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, (-4915), false, (byte) (-38));
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray1, 0, (byte) (-85), false);
      T4AndT6Compression.decompressT4_1D(byteArray2, 1247, (byte)0, true);
      T4AndT6Compression.decompressModifiedHuffman(byteArray2, (-714), (-786));
      byte[] byteArray3 = T4AndT6Compression.compressT4_2D(byteArray1, 0, 1, true, 2065);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-102), (byte) (-128), (byte)1}, byteArray3);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-117);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, 761);
      T4AndT6Compression.decompressT4_1D(byteArray1, (-808), 0, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1381, (byte)47);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      T4AndT6Compression.compressT6(byteArray0, 0, 1);
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 0, (-1764), false);
      byte[] byteArray2 = T4AndT6Compression.decompressT6(byteArray1, 82, (-798));
      assertNotSame(byteArray0, byteArray2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte) (-114);
      byteArray0[6] = (byte) (-114);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)16;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)16, (byte)16);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)31;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 21, 21);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), (-1), true);
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1), (-1));
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-1), 35, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-117);
      byteArray0[0] = (byte) (-117);
      byte byte1 = (byte)47;
      byte byte2 = (byte)0;
      int int0 = 761;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, 761);
      int int1 = 665;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 4, 665, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte)81);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 8, (byte)81, true, 2483);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)5;
      byte byte1 = (byte)0;
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1892, 0);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-4609), 112, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)54;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = 761;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, 761);
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)0, 761, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-21);
      byte byte0 = (byte)11;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)63;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)10;
      byte byte0 = (byte) (-41);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte)8;
      byte byte1 = (byte)115;
      byteArray0[6] = (byte)115;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)8, (byte)8, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)10;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)10, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-78);
      byteArray1[1] = (byte)114;
      byteArray1[2] = (byte) (-64);
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 1, 3653, false, 450);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)64;
      byteArray0[7] = (byte)32;
      byteArray0[8] = (byte) (-22);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)12, 381, false, 101);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byte byte0 = (byte)68;
      byteArray0[1] = (byte)68;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 3, 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)3;
      byte byte0 = (byte)22;
      byteArray0[2] = (byte)22;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)22, (byte)22);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)10;
      byte byte0 = (byte) (-41);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte)8;
      byte byte1 = (byte)115;
      byteArray0[6] = (byte)115;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)8, (byte)8, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)22;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)3, (byte)3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-33);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 2, (byte)13, false, 780);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)3;
      byte byte0 = (byte)22;
      byteArray0[2] = (byte)3;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)3, (byte)3);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)3, (byte)19, true, (byte)3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)3;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 8, (byte)3);
      int int0 = (-3016);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (-770), (byte)3, true, (-3016));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)3;
      int int0 = 8;
      int int1 = 2253;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 8, 2253);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[4] = (byte)10;
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)10;
      byteArray1[1] = (byte)10;
      byteArray1[2] = (byte)10;
      byte byte0 = (byte) (-1);
      byteArray1[3] = (byte) (-1);
      byteArray1[4] = (byte) (-3);
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)10;
      byteArray1[7] = (byte)10;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)10, 35);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)2;
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-100);
      byte byte1 = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte) (-113);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)28, 1792, false, 1457);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 64, 3, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 64, (byte)96);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      int int0 = 8;
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 8, 8);
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray1, 8, 8);
      int int1 = 49;
      try { 
        T4AndT6Compression.compressT6(byteArray2, 8, 49);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[6] = (byte)8;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-21);
      byte byte0 = (byte)11;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)63;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)10;
      byteArray0[1] = (byte)10;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)10, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      int int0 = 2;
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 2, 2, false);
      int int1 = 262;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 8, 262, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)1, (byte)1, false, (byte)1);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)1, 10, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)13;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)13, (byte)13, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)5;
      byteArray0[0] = (byte)5;
      int int0 = 1;
      int int1 = 1792;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 1792);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      int int0 = 144;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 144, 12);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2), 26, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 26, 26, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2), 6, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 848, 848, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
