/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 15:39:09 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter((-106));
      classReader0.accept((ClassVisitor) classWriter0, (-106));
      long long0 = classReader0.readLong(2);
      assertEquals((-4990551337076653877L), long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 2);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 1248);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      char[] charArray0 = new char[4];
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2611);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2611);
      charArray0[0] = 'I';
      charArray0[1] = 'N';
      charArray0[2] = '\\';
      charArray0[3] = 'g';
      // Undeclared exception!
      try { 
        classReader0.readConst(7, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      short short0 = classReader0.readShort(2);
      assertEquals((short) (-17730), short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(1);
      Locale.getISOCountries();
      Attribute[] attributeArray0 = new Attribute[1];
      classReader2.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      String[] stringArray0 = classReader2.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader2 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(1528);
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("wheel.asm.AnnotationWriter");
      attribute0.next = attribute1;
      Attribute attribute2 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 8);
      classReader1.readInt(8);
      classReader0.getInterfaces();
      int int0 = classReader1.readUnsignedShort(2);
      assertEquals(47806, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.readShort(1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'k';
      charArray0[2] = '-';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader("wheel.asm.AnnotationWriter");
      String string0 = classReader1.getClassName();
      assertEquals("wheel/asm/AnnotationWriter", string0);
      
      int int0 = classReader1.readInt(663);
      assertEquals(1819632897, int0);
      
      int int1 = classReader1.getAccess();
      assertEquals(2149, classReader1.header);
      assertEquals(48, int1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      ClassReader classReader1 = new ClassReader("wheel.asm.ClassReader");
      // Undeclared exception!
      try { 
        classReader1.readUTF8((-2823), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.readShort(10);
      // Undeclared exception!
      try { 
        classReader0.readLong(1005);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'p';
      charArray0[2] = 'M';
      charArray0[3] = 'e';
      charArray0[4] = '{';
      // Undeclared exception!
      try { 
        classReader1.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1248);
      classReader2.accept((ClassVisitor) classWriter0, 1340);
      classReader0.getInterfaces();
      String string0 = classReader2.getSuperName();
      assertNull(string0);
      
      classReader1.accept((ClassVisitor) classWriter0, 8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      int int0 = 86;
      char[] charArray0 = new char[1];
      charArray0[0] = 'O';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)85;
      byteArray0[4] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      int int1 = (-2332);
      char[] charArray0 = null;
      classReader0.readLong(172);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-2332), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classReader0.readShort(2);
      classReader0.getInterfaces();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, (int) (short) (-17730));
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(10, classReader0.header);
      assertEquals(0, stringArray0.length);
      
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-2957));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-63);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.getAccess();
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2283), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 7);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("e(\"J4W&3:T");
      attributeArray0[0] = attribute0;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1246);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'o';
      charArray0[2] = 'M';
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2283), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readClass(5, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1248);
      classReader2.accept((ClassVisitor) classWriter0, 1545);
      classReader1.getInterfaces();
      Attribute[] attributeArray0 = new Attribute[0];
      classReader2.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      classReader2.getSuperName();
      String string0 = classReader2.getSuperName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = 0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1);
      classReader2.accept((ClassVisitor) classWriter0, 2);
      classReader0.getInterfaces();
      classReader2.getSuperName();
      classReader1.accept((ClassVisitor) classWriter0, 8);
      classReader2.getClassName();
      // Undeclared exception!
      try { 
        classReader1.getItem((-1432));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1432
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(8);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1008);
      classReader0.accept((ClassVisitor) classWriter0, 1008);
      classReader1.getInterfaces();
      classReader2.getInterfaces();
      int int0 = 4679;
      Label[] labelArray0 = new Label[9];
      Label label0 = classReader0.readLabel(8, labelArray0);
      labelArray0[0] = label0;
      Label label1 = label0.getFirst();
      labelArray0[1] = label1;
      // Undeclared exception!
      try { 
        classReader0.readLabel(191, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      // Undeclared exception!
      try { 
        classReader0.readLong((-2564));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.readShort(2);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader1, (-104));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classWriter0, 1);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(280, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(496);
      classReader0.accept((ClassVisitor) classWriter0, 496);
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      // Undeclared exception!
      try { 
        classReader0.readClass((-410), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'p';
      charArray0[2] = 'M';
      int int0 = classReader0.readInt(2);
      assertEquals((-1161953280), int0);
      
      ClassReader classReader2 = new ClassReader(classReader1.b, 61, 2093);
      int int1 = classReader2.getAccess();
      assertEquals(48, classReader1.getAccess());
      assertEquals(3072, int1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.readByte(13);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      // Undeclared exception!
      try { 
        classReader1.readShort(161);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      // Undeclared exception!
      try { 
        classReader0.readInt((-2564));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[6];
      Attribute attribute0 = new Attribute("wheel.asm.AnnotationWriter");
      Attribute attribute1 = attribute0.next;
      int int0 = (-673);
      int int1 = (-1799);
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      char char0 = '3';
      charArray0[1] = '3';
      char char1 = 'm';
      charArray0[2] = 'm';
      Label[] labelArray0 = new Label[5];
      Label[] labelArray1 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(1, labelArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'V';
      charArray0[3] = ',';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 2725);
      classReader0.readLong(1);
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 2);
      // Undeclared exception!
      try { 
        classReader1.getItem(2149);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2149
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        classReader0.readConst(16, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'p';
      char[] charArray1 = new char[6];
      charArray1[0] = 'd';
      charArray1[1] = 'p';
      charArray1[2] = 'e';
      charArray1[3] = 'e';
      charArray1[4] = '_';
      charArray1[5] = 'M';
      classReader1.readConst(119, charArray1);
      assertEquals(2149, classReader1.header);
      assertArrayEquals(new char[] {'<', 'i', 'n', 'i', 't', '>'}, charArray1);
      
      String[] stringArray0 = classReader1.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "AnnotationDefault");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      ClassWriter classWriter0 = new ClassWriter(199);
      classReader0.accept((ClassVisitor) classWriter0, 199);
      short short0 = classReader0.readShort(199);
      assertEquals((short)39, short0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        classReader0.readShort((-367));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'M';
      charArray0[3] = ',';
      charArray0[4] = 'm';
      charArray0[5] = 'r';
      charArray0[6] = 'M';
      charArray0[7] = 'u';
      // Undeclared exception!
      try { 
        classReader0.readClass(2725, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      byteArrayInputStream0.read();
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.readShort(1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      // Undeclared exception!
      try { 
        classReader1.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.getInterfaces();
      Attribute attribute0 = new Attribute("wheel.asm.AnnotationWriter");
      Attribute attribute1 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[5];
      attributeArray0[0] = attribute0;
      attributeArray0[1] = null;
      attributeArray0[2] = null;
      attributeArray0[3] = attribute0;
      Attribute attribute2 = new Attribute("VHL<a WMm[/fE)");
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      charArray0[1] = ':';
      charArray0[2] = 'P';
      Label[] labelArray0 = new Label[0];
      Attribute attribute3 = attribute2.read(classReader0, 4, 8, charArray0, 2, labelArray0);
      attributeArray0[4] = attribute3;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader0.readInt(170);
      // Undeclared exception!
      try { 
        classReader0.readClass(170, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      assertEquals(2149, classReader1.header);
      
      char[] charArray0 = new char[2];
      charArray0[0] = 'p';
      ClassWriter classWriter0 = new ClassWriter(125);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 0);
      classReader1.getInterfaces();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute[] attributeArray0 = new Attribute[2];
      classReader0.getInterfaces();
      Attribute attribute0 = new Attribute((String) null);
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      Attribute[] attributeArray1 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray1, 91);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'V';
      charArray0[3] = ',';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 2725);
      classReader0.readLong(1);
      classReader0.getSuperName();
      Label[] labelArray0 = new Label[1];
      Label label0 = new Label();
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        classReader0.readLabel((-3086), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'a';
      charArray0[1] = 'z';
      charArray0[2] = 'u';
      charArray0[3] = '{';
      charArray0[4] = 'R';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader0.readShort(1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'M';
      // Undeclared exception!
      try { 
        classReader0.readClass((-4520), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2332), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte) (-33);
      byte byte0 = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)67;
      byteArray0[8] = (byte)67;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      charArray0[1] = 'p';
      charArray0[2] = 'M';
      charArray0[3] = 'e';
      charArray0[4] = '{';
      classReader1.readUTF8(1218, charArray0);
      // Undeclared exception!
      try { 
        classReader1.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 668);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classReader0.readLong(5);
      ClassReader classReader1 = new ClassReader(classReader0.b, 2149, 2);
      int int0 = classReader0.getItem(11);
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      int int0 = 131;
      Label[] labelArray0 = new Label[6];
      // Undeclared exception!
      try { 
        classReader0.readLabel(189, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      ClassWriter classWriter0 = new ClassWriter(1026);
      classReader0.accept((ClassVisitor) classWriter0, 1026);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'V';
      charArray0[3] = ',';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      char[] charArray1 = null;
      // Undeclared exception!
      try { 
        classReader0.readConst(2, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'V';
      charArray0[3] = ',';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 2725);
      classReader0.readLong(1);
      char[] charArray1 = new char[9];
      charArray1[0] = 'V';
      charArray1[1] = '*';
      charArray1[2] = 'j';
      charArray1[3] = ',';
      charArray1[4] = 'j';
      charArray1[5] = 'j';
      charArray1[6] = ',';
      charArray1[7] = ',';
      charArray1[8] = ',';
      // Undeclared exception!
      try { 
        classReader0.readConst((-3224), charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3224
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      Attribute[] attributeArray0 = new Attribute[0];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 90);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader2 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader2.header);
      
      ClassWriter classWriter0 = new ClassWriter(1528);
      classReader2.getInterfaces();
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 8);
      int int0 = classReader1.readInt(8);
      assertEquals(13306368, int0);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)123;
      ClassReader classReader0 = new ClassReader(byteArray0);
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      char[] charArray0 = new char[5];
      charArray0[0] = 'p';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'p';
      // Undeclared exception!
      try { 
        classReader0.readConst(188, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1248);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 3868);
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 4);
      classReader0.readInt(6);
      classReader2.accept((ClassVisitor) classWriter0, 251);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45740
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader1.readShort(4);
      // Undeclared exception!
      try { 
        classReader1.getItem((short)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassVisitor classVisitor0 = null;
      Attribute[] attributeArray0 = new Attribute[0];
      int int1 = 91;
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 257);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[1];
      charArray0[0] = '{';
      // Undeclared exception!
      try { 
        classReader0.readConst(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readLong(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ClassReader classReader0 = new ClassReader(byteArray0);
      long long0 = classReader0.readLong(2);
      assertEquals(10, classReader0.header);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      char char0 = 'r';
      char char1 = 'M';
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      char[] charArray0 = new char[9];
      charArray0[0] = 'M';
      charArray0[1] = 'r';
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("GN}F");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("GN}F");
      attributeArray0[1] = attribute1;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, attributeArray0, 194);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = (-2564);
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      int int1 = 2725;
      char[] charArray0 = new char[8];
      classReader0.getClassName();
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      charArray0[2] = 'M';
      charArray0[3] = ',';
      charArray0[4] = 'm';
      charArray0[5] = 'r';
      charArray0[6] = 'M';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2725, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = 'j';
      ClassWriter classWriter0 = new ClassWriter(1026);
      classReader0.accept((ClassVisitor) classWriter0, 1026);
      long long0 = classReader0.readLong(199);
      assertEquals(10978202864353280L, long0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter((-1028));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, (-1028));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 4, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.version = 8;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 8);
      Locale.getISOCountries();
      Attribute[] attributeArray0 = new Attribute[1];
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 8);
      classReader0.getSuperName();
      char[] charArray0 = new char[7];
      charArray0[0] = 'B';
      charArray0[1] = '6';
      charArray0[2] = 'g';
      charArray0[3] = '+';
      charArray0[4] = 'z';
      charArray0[5] = '}';
      charArray0[6] = 'R';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(1311, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader2.getInterfaces();
      char[] charArray0 = new char[7];
      charArray0[0] = ';';
      charArray0[1] = '_';
      charArray0[2] = '-';
      charArray0[3] = '\'';
      charArray0[4] = 'n';
      charArray0[5] = '\"';
      charArray0[6] = '_';
      // Undeclared exception!
      try { 
        classReader1.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.readByte(558);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 558
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassReader classReader1 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.AnnotationWriter");
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(16777221);
      classReader1.accept((ClassVisitor) classWriter0, 2);
      classReader0.readLong(1);
      classReader1.readUnsignedShort(1270);
      // Undeclared exception!
      try { 
        classReader1.readByte((-1497));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1497
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassWriter classWriter0 = new ClassWriter(classReader2, 1008);
      classReader0.accept((ClassVisitor) classWriter0, 1008);
      classReader1.getInterfaces();
      classReader0.getSuperName();
      classReader2.readClass(1008, (char[]) null);
      int int0 = classReader0.readByte(2);
      assertEquals(186, int0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, 1014);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
