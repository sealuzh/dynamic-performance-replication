/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 06:29:36 GMT 2018
 */

package okhttp3.internal.tls;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Principal;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import javax.security.auth.Subject;
import javax.security.auth.x500.X500Principal;
import okhttp3.internal.tls.DistinguishedNameParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DistinguishedNameParser_ESTest extends DistinguishedNameParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = "";
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      X500Principal x500Principal0 = new X500Principal("", hashMap0);
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      x500Principal0.equals(hashMap0);
      String string1 = "jwXZs6UCn*'qcH/Ph";
      hashMap0.put("r1m6rKsQ6Iu", "");
      hashMap0.put("r1m6rKsQ6Iu", "dN+wc{@V7'ty~3");
      distinguishedNameParser0.findMostSpecific("jwXZs6UCn*'qcH/Ph");
      Subject subject0 = new Subject();
      Class<Principal> class0 = Principal.class;
      Set<Principal> set0 = subject0.getPrivateCredentials(class0);
      Subject subject1 = new Subject(false, set0, set0, set0);
      Class<X500Principal> class1 = X500Principal.class;
      subject1.getPublicCredentials(class1);
      // Undeclared exception!
      try { 
        x500Principal0.getName("", (Map<String, String>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid format specified
         //
         verifyException("javax.security.auth.x500.X500Principal", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("C=ug");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      String string0 = distinguishedNameParser0.findMostSpecific("C=ug");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("C=td/ug");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      distinguishedNameParser0.findMostSpecific("C=td/ug");
      String string0 = distinguishedNameParser0.findMostSpecific("m6`");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("t=");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      String string0 = distinguishedNameParser0.findMostSpecific("t=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("t=d%g");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      String string0 = distinguishedNameParser0.findMostSpecific("t=d%g");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("t=dOug");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      String string0 = distinguishedNameParser0.findMostSpecific("t=dOug");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("cN=");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      String string0 = distinguishedNameParser0.findMostSpecific("cN=");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":@F%:IR:AL}t");
      X500Principal x500Principal0 = new X500Principal("c=");
      DistinguishedNameParser distinguishedNameParser0 = new DistinguishedNameParser(x500Principal0);
      distinguishedNameParser0.findMostSpecific("c=");
      String string0 = distinguishedNameParser0.findMostSpecific("Malformed DN: ");
      assertNull(string0);
  }
}
