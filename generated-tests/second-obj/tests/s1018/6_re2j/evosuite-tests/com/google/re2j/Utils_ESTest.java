/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:51:52 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Utils.unhex(11710);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.unhex(57);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utils.runeToString((-1943));
      int[] intArray0 = Utils.stringToRunes("\uF869");
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, (-1943), 839);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1943
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(49);
      assertTrue(boolean0);
      
      byte[] byteArray0 = new byte[2];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 49);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = Utils.emptyOpContext(90, 90);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(1153);
      assertFalse(boolean0);
      
      String string0 = Utils.runeToString(1153);
      assertEquals("\u0481", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = Utils.stringToRunes("");
      int[] intArray1 = Utils.subarray(intArray0, 8657, 8657);
      assertNotSame(intArray1, intArray0);
      assertArrayEquals(new int[] {}, intArray1);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = Utils.subarray(byteArray0, 4, 4);
      assertNotSame(byteArray1, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = Utils.emptyOpContext((-965), (-965));
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Utils.isWordRune(49);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, 49, 3535);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 49
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = Utils.unhex(34);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-348));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-381));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-360));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(2441);
      assertFalse(boolean0);
      
      String string0 = Utils.runeToString(2441);
      assertEquals("\u0989", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = Utils.emptyOpContext(65, 1364);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(116);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, (-1075));
      assertEquals("\\xfffffbcd", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, (byte)0);
      assertEquals("\\x00", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = Utils.unhex(97);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = Utils.emptyOpContext((byte)0, 10);
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = Utils.runeToString(0);
      assertEquals("\u0000", string0);
      
      boolean boolean0 = Utils.isalnum(102);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Lao");
      Utils.escapeRune(stringBuilder0, 92);
      assertEquals("Lao\\\\", stringBuilder0.toString());
      
      String string0 = Utils.runeToString(92);
      assertEquals("\\", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Lao");
      Utils.escapeRune(stringBuilder0, 119);
      assertEquals("Laow", stringBuilder0.toString());
      
      String string0 = Utils.runeToString(119);
      assertEquals("w", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = Utils.unhex(65);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utils.indexOf(byteArray0, byteArray0, 48);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(57);
      boolean boolean1 = Utils.isalnum(57);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = Utils.emptyOpContext(95, 95);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = Utils.EMPTY_END_LINE;
      byte[] byteArray0 = new byte[10];
      int int1 = Utils.indexOf(byteArray0, byteArray0, 2);
      assertEquals((-1), int1);
      
      String string0 = Utils.runeToString(2);
      assertEquals("\u0002", string0);
      
      boolean boolean0 = Utils.isalnum((-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byteArray0[2] = (byte) (-24);
      byte[] byteArray1 = new byte[5];
      byteArray1[3] = (byte)0;
      Utils.indexOf(byteArray0, byteArray1, (byte)0);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray1, (byte) (-24), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -24
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)83;
      byteArray0[3] = (byte)83;
      byte[] byteArray1 = new byte[5];
      byteArray1[3] = (byte)83;
      byteArray1[4] = (byte)83;
      Utils.indexOf(byteArray0, byteArray1, (byte)0);
      Utils.runeToString(59);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, (-1), (byte)83);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-24);
      byte[] byteArray1 = new byte[5];
      byteArray1[3] = (byte)0;
      Utils.indexOf(byteArray0, byteArray1, (byte)0);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray1, (byte) (-24), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -24
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("Mn");
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append("Mn");
      Utils.escapeRune(stringBuilder2, 2490);
      assertEquals("MnMn\\x{9ba}", stringBuilder2.toString());
      assertEquals("MnMn\\x{9ba}", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((byte)10);
      stringBuilder0.reverse();
      Utils.escapeRune(stringBuilder0, 8);
      assertEquals("\\b", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      Utils.escapeRune(stringBuilder0, (byte)10);
      assertEquals("\\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(70);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune((-5012));
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)12;
      byteArray0[3] = (byte) (-54);
      byteArray0[4] = (byte) (-54);
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte) (-84);
      byteArray0[7] = (byte)57;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)124;
      int int0 = Utils.indexOf(byteArray0, byteArray1, (-441));
      assertEquals(5, int0);
      
      int int1 = Utils.unhex((-197));
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = Utils.EMPTY_END_TEXT;
      StringBuilder stringBuilder0 = new StringBuilder((byte)0);
      stringBuilder0.appendCodePoint((byte)0);
      Utils.escapeRune(stringBuilder0, 12);
      StringBuilder stringBuilder1 = new StringBuilder();
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = Utils.emptyOpContext((byte)10, 4);
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = Utils.EMPTY_INTS;
      StringBuilder stringBuilder0 = new StringBuilder();
      Object object0 = new Object();
      Utils.escapeRune(stringBuilder0, 13);
      assertEquals("\\r", stringBuilder0.toString());
  }
}
