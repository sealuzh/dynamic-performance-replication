/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 12:09:16 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)89;
      byteArray0[4] = (byte)5;
      TiffField tiffField0 = new TiffField(206, (-1413), fieldTypeRational0, (byte)5, 4816L, byteArray0, byteOrder0, (byte) (-48));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(206, tiffField0.getTag());
      assertEquals((-1413), tiffField0.getDirectoryType());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals(4816, tiffField0.getOffset());
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)5;
      TiffField tiffField0 = new TiffField(206, (-1413), fieldTypeRational0, (byte)5, 4816L, byteArray0, byteOrder0, (byte) (-48));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(206, tiffField0.getTag());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals(4816, tiffField0.getOffset());
      assertEquals((-1413), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-112), (-112), fieldTypeShort0, 2L, 2L, byteArray0, byteOrder0, (byte) (-54));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-112), tiffField0.getTag());
      assertEquals((-112), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-54), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-385), (byte) (-83), fieldTypeLong0, (byte)0, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-83), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-385), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-2308), fieldTypeRational0, 2799L, 2799L, byteArray0, byteOrder0, 134);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2308), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(2799, tiffField0.getOffset());
      assertEquals(134, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1947, 1947, fieldTypeLong0, 1947, 1947, byteArray0, (ByteOrder) null, (byte) (-24));
      tiffField0.getTagInfo();
      assertEquals(1947, tiffField0.getTag());
      assertEquals(1947, tiffField0.getOffset());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(1947, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(37396, 37396, (FieldType) null, 37396, 37396, byteArray0, byteOrder0, 2911);
      int int0 = tiffField0.getTag();
      assertEquals(37396, tiffField0.getOffset());
      assertEquals(37396, int0);
      assertEquals(2911, tiffField0.getSortHint());
      assertEquals(37396, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3656), 50, fieldTypeLong0, 0L, (byte) (-1), byteArray0, byteOrder0, (-3300));
      int int0 = tiffField0.getTag();
      assertEquals((-3656), int0);
      assertEquals((-3300), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte)111;
      TiffField tiffField0 = new TiffField((-1898), 50, fieldTypeRational0.ASCII, 50, 1564L, byteArray0, byteOrder0, 3786);
      String string0 = tiffField0.getStringValue();
      assertEquals(3786, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1898), tiffField0.getTag());
      assertEquals(1564, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1927), (-1927), fieldTypeShort0, (-1927), 1L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1927), tiffField0.getTag());
      assertEquals((-1927), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(22, (byte) (-45), fieldTypeLong0, 22, (byte)49, byteArray0, (ByteOrder) null, (-671));
      int int0 = tiffField0.getSortHint();
      assertEquals(22, tiffField0.getTag());
      assertEquals((-45), tiffField0.getDirectoryType());
      assertEquals(49, tiffField0.getOffset());
      assertEquals((-671), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2377L, 0, byteArray0, byteOrder0, 136);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(136, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2147226679, (-5499), fieldTypeByte0, 0L, (-3L), byteArray0, byteOrder0, (-1634));
      int int0 = tiffField0.getOffset();
      assertEquals((-3), int0);
      assertEquals(2147226679, tiffField0.getTag());
      assertEquals((-5499), tiffField0.getDirectoryType());
      assertEquals((-1634), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)30;
      TiffField tiffField0 = new TiffField(139, (-671), fieldTypeLong0, 139, 139, byteArray0, (ByteOrder) null, (-57));
      tiffField0.getIntValueOrArraySum();
      assertEquals(139, tiffField0.getTag());
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals((-671), tiffField0.getDirectoryType());
      assertEquals(139, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-103);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1924, (byte)78, fieldTypeShort0, 1924, (-168L), byteArray0, byteOrder0, (byte) (-59));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-168), tiffField0.getOffset());
      assertEquals((-26368), int0);
      assertEquals((-59), tiffField0.getSortHint());
      assertEquals(1924, tiffField0.getTag());
      assertEquals(78, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)105, (-1014), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 2146432505);
      tiffField0.getIntValue();
      assertEquals(105, tiffField0.getTag());
      assertEquals(2146432505, tiffField0.getSortHint());
      assertEquals((-1014), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)90;
      TiffField tiffField0 = new TiffField(2147374020, (-118), fieldTypeLong0, 1L, (-118), byteArray0, byteOrder0, (-2147114726));
      tiffField0.getIntValue();
      assertEquals(2147374020, tiffField0.getTag());
      assertEquals((-118), tiffField0.getOffset());
      assertEquals((-2147114726), tiffField0.getSortHint());
      assertEquals((-118), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      TiffField tiffField0 = new TiffField(1710, (byte) (-15), fieldTypeByte0, 1L, 260436L, byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getIntValue();
      assertEquals(1710, tiffField0.getTag());
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(260436, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2147313710), (String) null);
      TiffField tiffField0 = new TiffField((-2147313710), (-2147313710), fieldTypeLong0, (-2147313710), 255L, byteArray0, byteOrder0, (-2147313710));
      tiffField0.getFieldTypeName();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-2147313710), tiffField0.getSortHint());
      assertEquals((-2147313710), tiffField0.getTag());
      assertEquals((-2147313710), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1439), (-1439), fieldTypeByte0, (-1439), 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1439), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1439), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2131090643, 2131090643, (FieldType) null, 2131090643, 2131090643, byteArray0, byteOrder0, (-1986));
      tiffField0.getFieldType();
      assertEquals((-1986), tiffField0.getSortHint());
      assertEquals(2131090643, tiffField0.getDirectoryType());
      assertEquals(2131090643, tiffField0.getTag());
      assertEquals(2131090643, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "eOp*[#5");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(756, 0, fieldTypeFloat0, 756, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(756, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte) (-103), ".");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1, fieldTypeDouble0, (byte)2, (byte) (-7), byteArray0, byteOrder0, 1943);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1943, tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-77);
      TiffField tiffField0 = new TiffField(25, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, (-290));
      tiffField0.getDoubleValue();
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-3390), 0, fieldTypeShort0, 1L, 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3390), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(273, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(273, (-2640), fieldTypeFloat0, (-2640), 981L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(981, tiffField0.getOffset());
      assertEquals((-2640), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(273, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, (-4441L), byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-4441), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "eOp*[#5");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(756, 0, fieldTypeFloat0, 756, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(756, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), 0L, byteArray0, byteOrder0, (byte) (-46));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-46), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-385), (byte) (-83), fieldTypeLong0, (byte)0, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-83), tiffField0.getDirectoryType());
      assertEquals((-385), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(349, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoFloats");
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-96), fieldTypeByte0, (-1184L), 349, byteArray0, byteOrder0, 349);
      tiffField0.getBytesLength();
      assertEquals((-96), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(349, tiffField0.getSortHint());
      assertEquals(349, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1720), "): ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2890), 50, fieldTypeLong0, 4L, 4L, byteArray0, (ByteOrder) null, (byte)41);
      tiffField0.getByteOrder();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2890), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, (byte) (-103));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-79), (byte)0, fieldTypeLong0, 4L, (-1549L), byteArray0, byteOrder0, 48320);
      tiffField0.getByteArrayValue();
      assertEquals(48320, tiffField0.getSortHint());
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "RawFile");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-726), (-726), fieldTypeAscii0, 0, (-726), byteArray0, byteOrder0, (-1628));
      tiffField0.getByteArrayValue();
      assertEquals((-726), tiffField0.getOffset());
      assertEquals((-1628), tiffField0.getSortHint());
      assertEquals((-726), tiffField0.getDirectoryType());
      assertEquals((-726), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      TiffField tiffField0 = new TiffField((byte)89, (byte) (-13), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).ASCII).UNDEFINED, (-257), (byte) (-13), byteArray0, byteOrder0, (byte)89);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)65, fieldTypeLong0, (-2464L), 0L, byteArray0, byteOrder0, (-1634));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2131090643, 2131090643, (FieldType) null, 2131090643, 2131090643, byteArray0, byteOrder0, (-1986));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, (byte)0, fieldTypeRational0, (-611L), 1L, byteArray0, byteOrder0, (byte)24);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2560), (-689), fieldTypeAscii0, (-2560), (-689), byteArray0, byteOrder0, 50936);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-874), 0, fieldTypeShort0, 0, (byte) (-49), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1L, 0, byteArray0, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), 0L, byteArray0, byteOrder0, (byte) (-46));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34665, 48132, (FieldType) null, (-1L), (-1L), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50942, (-1021), fieldTypeRational0, (-1L), 296L, byteArray0, byteOrder0, 3220);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1688), 2133447807, fieldTypeRational0.ASCII, (-1688), (-1688), byteArray0, byteOrder0, (-3862));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, (byte) (-103));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-103), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2144867955, (byte) (-103), fieldTypeShort0, (byte)78, 2408L, byteArray0, byteOrder0, (byte) (-103));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2144867955, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-103), tiffField0.getSortHint());
      assertEquals(2408, tiffField0.getOffset());
      assertEquals((-103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1, fieldTypeShort0.DOUBLE, (byte)2, (byte) (-7), byteArray0, byteOrder0, 1943);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1943, tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(103, 4, fieldTypeRational0, 32771, 1498L, byteArray0, byteOrder0, 103);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(103, tiffField0.getTag());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(4, int0);
      assertEquals(1498, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, 1432);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1432, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)78, (byte) (-59), fieldTypeShort0, 464L, 428L, byteArray0, byteOrder0, (-1610612735));
      int int0 = tiffField0.getOffset();
      assertEquals(78, tiffField0.getTag());
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals(428, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(254, ", ");
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeLong0, 22, 0L, byteArray0, byteOrder0, 400);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2046L, 1L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, 1432);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1432, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2461), (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (-593));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-593), tiffField0.getSortHint());
      assertEquals("0 (0x0: GPSVersionID): ", string0);
      assertEquals((-2461), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)105, (-1014), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 2146432505);
      tiffField0.getDoubleValue();
      assertEquals((-1014), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2146432505, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeDouble0, 56, 56, byteArray0, byteOrder0, 56);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(103, 32771, fieldTypeRational0, 1045L, 1L, byteArray0, byteOrder0, 32771);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146432505, 32771, fieldTypeRational0.SBYTE, 1L, 103, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(103, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2146432505, tiffField0.getTag());
      assertEquals(32771, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-464), (-464), fieldTypeByte0, (byte)105, 8L, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@56954c88 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 5082, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)75);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7c18536d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-103), 36868, fieldTypeShort0.FLOAT, 89L, 89L, byteArray0, byteOrder0, 50972);
      tiffField0.getDoubleArrayValue();
      assertEquals(36868, tiffField0.getDirectoryType());
      assertEquals(50972, tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
      assertEquals(89, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2147313710), (String) null);
      TiffField tiffField0 = new TiffField((-2147313710), (-2147313710), fieldTypeLong0, (-2147313710), 255L, byteArray0, byteOrder0, (-2147313710));
      assertEquals(679752, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147313710), tiffField0.getSortHint());
      assertEquals((-2147313710), tiffField0.getTag());
      assertEquals((-2147313710), tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2164, 0, fieldTypeShort0, 183L, (-1536L), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(2164, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(366, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1536), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, (byte) (-103));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-103), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(206, (-1413), fieldTypeRational0, (byte)5, 4816L, byteArray0, byteOrder0, (byte) (-48));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1413), tiffField0.getDirectoryType());
      assertEquals(206, tiffField0.getTag());
      assertEquals(4816, tiffField0.getOffset());
      assertEquals((-48), tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1L, 109L, byteArray0, byteOrder0, 50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(109, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2450), (-2450), fieldTypeRational0.DOUBLE, 784L, 1L, byteArray0, byteOrder0, 1200);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1200, tiffField0.getSortHint());
      assertEquals((-2450), tiffField0.getTag());
      assertEquals((-2450), tiffField0.getDirectoryType());
      assertEquals(784L, tiffField0.getCount());
      assertEquals(6272, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32771, (-323), fieldTypeRational0.DOUBLE, 32771, 34850, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@16a1d215 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)78, (byte) (-59), fieldTypeShort0, 464L, 428L, byteArray0, byteOrder0, (-1610612735));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(78, tiffField0.getTag());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals(464L, tiffField0.getCount());
      assertEquals(428, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals(928, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      Short short0 = new Short((byte)24);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = fieldTypeRational0.writeData(short0, byteOrder0);
      TiffField tiffField0 = new TiffField((byte)65, 1, fieldTypeRational0, 752L, 1356L, byteArray0, byteOrder0, (byte)65);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(752L, tiffField0.getCount());
      assertArrayEquals(new int[] {24}, intArray0);
      assertEquals(1356, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getTag());
      assertEquals(6016, tiffField0.getBytesLength());
      assertEquals(65, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, 1, fieldTypeRational0, 752L, 1356L, byteArray0, byteOrder0, (byte)65);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals(6016, tiffField0.getBytesLength());
      assertEquals(65, tiffField0.getTag());
      assertEquals(752L, tiffField0.getCount());
      assertEquals(1356, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-610), 68, fieldTypeRational0, 1L, 2147483647L, byteArray0, byteOrder0, 1593);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2268, 2268, fieldTypeLong0, 2268, (-2147483629L), byteArray0, byteOrder0, 2268);
      tiffField0.getIntArrayValue();
      assertEquals(2268, tiffField0.getSortHint());
      assertEquals((-2147483629), tiffField0.getOffset());
      assertEquals(2268L, tiffField0.getCount());
      assertEquals(2268, tiffField0.getTag());
      assertEquals(2268, tiffField0.getDirectoryType());
      assertEquals(9072, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((-1), 2141963124, fieldTypeRational0.ASCII, 1L, 2066L, byteArray0, byteOrder0, 2147438469);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(2141963124, tiffField0.getDirectoryType());
      assertEquals(2147438469, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2066, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.ASCII, 2147438469, 2066L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@7cac4146
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)65, fieldTypeLong0, (-2464L), 0L, byteArray0, byteOrder0, (-1634));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffffff)", string0);
      assertEquals((-1634), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(5, (byte) (-80), fieldTypeByte0.SHORT, 0L, 149568L, byteArray0, byteOrder0, (byte) (-80));
      String string0 = tiffField0.getTagName();
      assertEquals("GPSAltitudeRef", string0);
      assertEquals(5, tiffField0.getTag());
      assertEquals((-80), tiffField0.getDirectoryType());
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(149568, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeByte0, 0L, (-144L), byteArray0, byteOrder0, (byte)49);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrByte");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2113929218, ">W<y5woJ?#%zp,bc");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(53, 1405, fieldTypeFloat0, 2855L, (-1237L), byteArray0, byteOrder0, (-2146682646));
      String string0 = tiffField0.toString();
      assertEquals(1405, tiffField0.getDirectoryType());
      assertEquals((-1237), tiffField0.getOffset());
      assertEquals(11420, tiffField0.getBytesLength());
      assertEquals((-2146682646), tiffField0.getSortHint());
      assertEquals("53 (0x35: Unknown Tag): 0.0, 0.0 (2855 >W<y5woJ?#%zp,bc)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, 1432);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1432, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1469, 1469, fieldTypeDouble0.FLOAT, 3810L, 391L, byteArray0, byteOrder0, (-4349));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4349), tiffField0.getSortHint());
      assertEquals(391, tiffField0.getOffset());
      assertEquals(1469, tiffField0.getDirectoryType());
      assertEquals(15240, tiffField0.getBytesLength());
      assertEquals(3810L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1469, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2147051848, ")");
      TiffField tiffField0 = new TiffField(2147051848, 2147051848, fieldTypeByte0, 2147051848, 2147051848, byteArray0, byteOrder0, 2147051848);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147051848, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147051848, tiffField0.getBytesLength());
      assertEquals(2147051848, tiffField0.getDirectoryType());
      assertEquals(2147051848, tiffField0.getTag());
      assertEquals(2147051848, tiffField0.getSortHint());
      assertEquals(2147051848L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(139, (-671), fieldTypeLong0, 139, 139, byteArray0, (ByteOrder) null, (-57));
      String string0 = tiffField0.toString();
      assertEquals("139 (0x8b: Unknown Tag): 0 (139 SLong)", string0);
      assertEquals(556, tiffField0.getBytesLength());
      assertEquals(139, tiffField0.getOffset());
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals((-671), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2268, 2268, fieldTypeLong0, 2268, (-2147483629L), byteArray0, byteOrder0, 2268);
      String string0 = tiffField0.toString();
      assertEquals("2268 (0x8dc: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2268 Long)", string0);
      assertEquals(2268, tiffField0.getDirectoryType());
      assertEquals((-2147483629), tiffField0.getOffset());
      assertEquals(9072, tiffField0.getBytesLength());
      assertEquals(2268, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)78, (byte) (-59), fieldTypeShort0, 464L, 428L, byteArray0, byteOrder0, (-1610612735));
      tiffField0.dump();
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals(464L, tiffField0.getCount());
      assertEquals(928, tiffField0.getBytesLength());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals(428, tiffField0.getOffset());
      assertEquals(78, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[107];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1142), 1975, fieldTypeDouble0.SSHORT, 680L, (-1445L), byteArray0, byteOrder0, (-1142));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1142), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1142), tiffField0.getTag());
      assertEquals(1975, tiffField0.getDirectoryType());
      assertEquals((-1445), tiffField0.getOffset());
      assertEquals(680L, tiffField0.getCount());
      assertEquals(1360, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(103, 32771, fieldTypeRational0, 1045L, 1L, byteArray0, byteOrder0, 32771);
      tiffField0.toString();
      assertEquals(1045L, tiffField0.getCount());
      assertEquals(32771, tiffField0.getSortHint());
      assertEquals(32771, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
      assertEquals(8360, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1942), 8, fieldTypeAscii0, 2687, 2687, byteArray0, byteOrder0, 2146772325);
      tiffField0.toString();
      assertEquals(2146772325, tiffField0.getSortHint());
      assertEquals(2687, tiffField0.getBytesLength());
      assertEquals(2687L, tiffField0.getCount());
      assertEquals(2687, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-1942), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, (-1845), fieldTypeLong0.ASCII, 0L, (-351L), byteArray0, (ByteOrder) null, (-1982292597));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1845), tiffField0.getDirectoryType());
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals((-351), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte) (-80), fieldTypeByte0, 216L, 2191L, byteArray0, byteOrder0, 37386);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 1496);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-80), tiffField0.getDirectoryType());
      assertEquals(37386, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(73, tiffField0.getTag());
      assertEquals(2191, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)105, (-1014), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 2146432505);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1014), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2146432505, tiffField0.getSortHint());
      assertEquals(105, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[18];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2146943399), "");
      TiffField tiffField0 = new TiffField(103, 0, fieldTypeRational0, 103, 1952L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
      assertEquals(1952, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(103, 32771, fieldTypeRational0, 1045L, 1L, byteArray0, byteOrder0, 32771);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(103, tiffField0.getTag());
      assertEquals(32771, tiffField0.getSortHint());
      assertEquals(32771, tiffField0.getDirectoryType());
      assertEquals(1L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1, fieldTypeShort0.DOUBLE, (byte)2, (byte) (-7), byteArray0, byteOrder0, 1943);
      tiffField0.dump();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(1943, tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-283L), 0L, byteArray0, byteOrder0, (byte)25);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-283L), tiffField0.getCount());
      assertEquals(25, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-2308), fieldTypeRational0, 2799L, 2799L, byteArray0, byteOrder0, 134);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2308), tiffField0.getDirectoryType());
      assertEquals(134, tiffField0.getSortHint());
      assertEquals(2799, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1669, 1393, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, 65535);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(67, charArrayWriter0.size());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[36];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2147051801, 73, fieldTypeShort0.DOUBLE, 73, 344L, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.toString();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(344, tiffField0.getOffset());
      assertEquals("2147051801 (0x7ff96919: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (73 Double)", string0);
      assertEquals(584, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37392, 65535, fieldTypeFloat0, 37392, 37392, byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(322, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(37392, tiffField0.getOffset());
      assertEquals(37392, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: FocalPlaneResolutionUnit, fieldType: Float", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(37392L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
  }
}
