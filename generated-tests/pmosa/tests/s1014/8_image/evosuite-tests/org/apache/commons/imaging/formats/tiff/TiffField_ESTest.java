/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 04:59:45 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2094), (byte)30, fieldTypeByte0, 2285L, 3020L, byteArray0, byteOrder0, 929);
      fieldTypeByte0.getValue(tiffField0);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      TiffField tiffField1 = new TiffField(929, 0, fieldTypeByte0, 807L, 929, byteArray0, (ByteOrder) null, (byte)30);
      try { 
        tiffField1.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5be6461a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffElement0.offset);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2520, "3|#Y%6Bxf|zRt-JD[");
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-826), (-2250), fieldTypeDouble0, 2520, 1L, byteArray0, byteOrder0, 2147475450);
      tiffField0.getDoubleArrayValue();
      assertEquals(20160, tiffField0.getBytesLength());
      assertEquals((-2250), tiffField0.getDirectoryType());
      assertEquals(2147475450, tiffField0.getSortHint());
      assertEquals(2520L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-826), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeFloat0, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(16L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("=y,O`4D5}_qd7");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte) (-1));
      fieldTypeAscii0.getValue(tiffField0);
      byteArray0[0] = (byte) (-1);
      TiffField tiffField1 = new TiffField(0, 0, fieldTypeAscii0, 0L, 1129L, byteArray0, (ByteOrder) null, 991);
      fieldTypeAscii0.getValue(tiffField1);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField2 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder1, 0);
      tiffField2.getDescriptionWithoutValue();
      // Undeclared exception!
      try { 
        Charset.forName("0 (0x0: Unknown Tag): ");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // 0 (0x0: Unknown Tag): 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65483, 65483, fieldTypeFloat0, 65483, 65483, byteArray0, byteOrder0, 65483);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-73);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(382, 72, (FieldType) null, 72, 1638L, byteArray0, byteOrder0, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("$B^jwnExN`A");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-81);
      byteArray0[5] = (byte)95;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1912, 1912, fieldTypeLong0, 1912, 1912, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      tiffField0.getIntArrayValue();
      tiffField0.toString();
      ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      ByteOrder.nativeOrder();
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      try { 
        fieldTypeLong0.writeData(doubleArray0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: [D@3fd7ded2 ([double[]: 1])
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65109, (-1558), fieldTypeShort0, 65462, 65462, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1558), tiffField0.getDirectoryType());
      assertEquals(130924, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(65462, tiffField0.getOffset());
      assertEquals(65109, tiffField0.getTag());
      assertEquals(65462L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte) (-128);
      TiffField tiffField0 = new TiffField(115, 41484, fieldTypeAscii0, 376L, 1L, byteArray0, (ByteOrder) null, (-4691));
      tiffField0.dump();
      tiffField0.dump();
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getFieldTypeName();
      tiffField0.getFieldType();
      tiffField0.getByteOrder();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7025843b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(7, "$");
      TiffField tiffField0 = new TiffField(65485, (-2144569829), fieldTypeRational0, 65485, (-2144569829), byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2144569829), tiffField0.getDirectoryType());
      assertEquals(65485, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65485L, tiffField0.getCount());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-2144569829), tiffField0.getOffset());
      assertEquals(523880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
          ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
          byte[] byteArray0 = new byte[9];
          byteArray0[0] = (byte)98;
          byteArray0[1] = (byte)98;
          byteArray0[2] = (byte)98;
          byteArray0[3] = (byte)98;
          byteArray0[4] = (byte)98;
          byteArray0[5] = (byte)98;
          byteArray0[6] = (byte)98;
          byteArray0[7] = (byte)98;
          byteArray0[8] = (byte)98;
          TiffField tiffField0 = new TiffField(1264, (-1837), fieldTypeShort0, 4496L, (-161L), byteArray0, byteOrder0, (byte)98);
          fieldTypeShort0.UNDEFINED.getValue(tiffField0);
          ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
          TiffField tiffField1 = new TiffField((-1837), 98, fieldTypeShort0, (byte)98, (-433L), byteArray0, byteOrder0, 98);
          tiffField1.getDirectoryType();
          tiffField0.getIntValueOrArraySum();
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileWriter mockFileWriter0 = null;
          try {
            mockFileWriter0 = new MockFileWriter(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1556)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // java.io.FileWriter.<init>(FileWriter.java:116)
             // org.evosuite.runtime.mock.java.io.MockFileWriter.<init>(MockFileWriter.java:79)
             // sun.reflect.GeneratedConstructorAccessor91.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int int0 = 308;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(308, "org.apache.commons.io.filefilter.HiddenFileFilter");
      long long0 = 4096L;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, 2147202747, fieldTypeDouble0, 4096L, 2415L, byteArray0, byteOrder0, (-1875));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@38c7cd75 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 790;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-35);
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(790, 790, fieldTypeLong0, 790, 790, byteArray0, byteOrder0, (byte)0);
      TiffField tiffField1 = new TiffField(50982, (byte)0, fieldTypeLong0, 8992L, (-1L), byteArray0, byteOrder0, 2);
      tiffField1.getIntValueOrArraySum();
      tiffField0.getTagInfo();
      int int1 = 2147244746;
      String string0 = " read: ";
      // Undeclared exception!
      try { 
        Charset.forName(" read: ");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         //  read: 
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 3777, fieldTypeShort0, 4496L, 1, byteArray0, byteOrder0, 1);
      TiffField tiffField1 = new TiffField(1, 1, fieldTypeShort0, 0L, 3777, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2094), (byte)30, fieldTypeByte0, 2285L, 3020L, byteArray0, byteOrder0, 929);
      fieldTypeByte0.getValue(tiffField0);
      assertEquals(929, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals((-2094), tiffField0.getTag());
      
      TiffField tiffField1 = new TiffField(929, 929, fieldTypeByte0, 4L, (-2094), byteArray0, byteOrder0, 0);
      String string0 = tiffField1.toString();
      assertEquals(4, tiffField1.getBytesLength());
      assertEquals("929 (0x3a1: Unknown Tag): -3, 30, 0, 0 (4 SByte)", string0);
      assertEquals((-2094), tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)69;
      ByteOrder.nativeOrder();
      byteArray0[4] = (byte) (-81);
      byteArray0[5] = (byte) (-38);
      TiffField tiffField0 = new TiffField(3380, 1683, fieldTypeFloat0, 65535, 3380, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals(1683, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("3380 (0xd34: Unknown Tag): 1.9378821E-38 (65535 Float)", string0);
      assertEquals(3380, tiffField0.getOffset());
      assertEquals(262140, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField((-2960), 592, fieldTypeFloat0, 4L, (-1L), byteArray0, byteOrder1, 65535);
      tiffField0.getDoubleArrayValue();
      String string0 = "";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("", "U4)VJXZtTrYc6;YmdlZ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)99, (byte) (-5), fieldTypeShort0, (byte)99, (byte)99, byteArray0, byteOrder0, (byte)99);
      tiffField0.getDoubleArrayValue();
      assertEquals(198, tiffField0.getBytesLength());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(99, tiffField0.getTag());
      assertEquals(99, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getDirectoryType());
      assertEquals(99L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte) (-5);
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte)50;
      byteArray0[8] = (byte)50;
      TiffField tiffField0 = new TiffField(0, 34026, fieldTypeShort0, 1264, 4496L, byteArray0, (ByteOrder) null, 50781);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2528, tiffField0.getBytesLength());
      assertEquals(34026, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50781, tiffField0.getSortHint());
      assertEquals(4496, tiffField0.getOffset());
      assertArrayEquals(new double[] {12850.0, 13051.0, (-1230.0), 12850.0}, doubleArray0, 0.01);
      assertEquals(1264L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 4496L, 4496L, byteArray0, (ByteOrder) null, 50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("65535 (0xffff: Unknown Tag): -21933, 12827 (4496 Short)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(8992, tiffField0.getBytesLength());
      assertEquals(4496, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      TiffField tiffField0 = new TiffField(0, 1264, fieldTypeShort0, 0, 255L, byteArray0, byteOrder0, 1264);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte) (-84));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1264, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1264, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2, 81, fieldTypeRational0, 2, 81, byteArray0, byteOrder0, 2147244746);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2147244746, tiffField0.getSortHint());
      assertEquals(81, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      TiffField tiffField0 = new TiffField(2163, 1385, fieldTypeLong0, 2163, (-1129L), byteArray0, byteOrder0, 1385);
      ByteOrder.nativeOrder();
      int[] intArray0 = tiffField0.getIntArrayValue();
      tiffField0.getIntArrayValue();
      tiffField0.toString();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      tiffField0.getDoubleArrayValue();
      fieldTypeLong0.writeData(intArray0, byteOrder2);
      tiffField0.getIntValueOrArraySum();
      ByteOrder.nativeOrder();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@346e48f2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 2147244746, fieldTypeRational0, (byte)51, (byte)95, byteArray0, byteOrder0, (-1));
      tiffField0.getIntArrayValue();
      tiffField0.getIntArrayValue();
      tiffField0.toString();
      ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      ByteOrder.nativeOrder();
      tiffField0.getDoubleArrayValue();
      Float float0 = new Float((float) 95L);
      try { 
        fieldTypeFloat0.SLONG.writeData(float0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 95.0 (java.lang.Float)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(412, " could not be read.");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)51;
      TiffField tiffField0 = new TiffField(1, (-3742), fieldTypeAscii0, 8988L, 366L, byteArray0, byteOrder0, 1);
      tiffField0.getStringValue();
      tiffField0.getValue();
      fieldTypeAscii0.LONG.getValue(tiffField0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: 33 for: 1 (0x1: InteroperabilityIndex): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(342, 32895, fieldTypeFloat0, 74242L, (byte)51, byteArray0, byteOrder1, 32895);
      String string0 = tiffField0.toString();
      assertEquals("342 (0x156: TransferRange):  (74242 Float)", string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals(32895, tiffField0.getSortHint());
      assertEquals(32895, tiffField0.getDirectoryType());
      assertEquals(296968, tiffField0.getBytesLength());
      assertEquals("TransferRange", string1);
      assertEquals(51, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte)81;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1727), (-1727), fieldTypeDouble0, 2804L, 2804L, byteArray0, byteOrder0, 3626);
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis((-1L));
      tiffField0.getValueDescription();
      tiffField0.getOversizeValueElement();
      tiffField0.isLocalValue();
      ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      tiffField0.getCount();
      tiffField0.getSortHint();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte)90;
      byteArray0[7] = (byte)5;
      TiffField tiffField0 = new TiffField((-1727), (-1727), fieldTypeDouble0, 2679L, (-1727), byteArray0, byteOrder0, (-1052));
      String string0 = tiffField0.toString();
      assertEquals((-1727), tiffField0.getDirectoryType());
      assertEquals(21432, tiffField0.getBytesLength());
      assertEquals("-1727 (0xfffff941: Unknown Tag): 7.12493407222529E-283 (2679 Double)", string0);
      assertEquals((-1727), tiffField0.getOffset());
      assertEquals((-1052), tiffField0.getSortHint());
  }
}
