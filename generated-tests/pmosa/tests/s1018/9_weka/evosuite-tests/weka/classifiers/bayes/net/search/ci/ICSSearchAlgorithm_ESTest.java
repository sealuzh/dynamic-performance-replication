/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 14:09:54 GMT 2018
 */

package weka.classifiers.bayes.net.search.ci;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm;
import weka.classifiers.meta.MultiClassClassifier;
import weka.core.Attribute;
import weka.core.Instances;
import weka.core.SelectedTag;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ICSSearchAlgorithm_ESTest extends ICSSearchAlgorithm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSet0.getRevision();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "8034";
      ICSSearchAlgorithm.main(stringArray0);
      boolean[][] booleanArray0 = new boolean[1][5];
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      booleanArray0[0] = booleanArray1;
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[9][5];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[8];
      iCSSearchAlgorithm_SeparationSetArray1[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[1] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[2] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[3] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[4] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[5] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[6] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray1[7] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray0[0] = iCSSearchAlgorithm_SeparationSetArray1;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray2 = new ICSSearchAlgorithm.SeparationSet[7];
      iCSSearchAlgorithm_SeparationSetArray2[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[1] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[2] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[3] = iCSSearchAlgorithm_SeparationSet0;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet((-940), (-940), 0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.setMaxCardinality(2);
      boolean[][] booleanArray0 = new boolean[0][0];
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[8][3];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[4];
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(2, 2, 2, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getScoreType();
      iCSSearchAlgorithm0.getRevision();
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.maxn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String string0 = iCSSearchAlgorithm0.maxCardinalityTipText();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      assertEquals("When determining whether an edge exists a search is performed for a set Z that separates the nodes. MaxCardinality determines the maximum size of the set Z. This greatly influences the length of the search. Default value is 2.", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      iCSSearchAlgorithm0.setOptions(stringArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      boolean boolean0 = iCSSearchAlgorithm_SeparationSet0.contains(0);
      assertTrue(boolean0);
      
      String string0 = iCSSearchAlgorithm_SeparationSet0.getRevision();
      assertEquals("8034", string0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.getOptions();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      int int0 = (-2685);
      iCSSearchAlgorithm0.setMaxCardinality((-2685));
      iCSSearchAlgorithm0.getOptions();
      int int1 = 2;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.name(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.globalInfo();
      int int0 = 1693;
      boolean[][] booleanArray0 = new boolean[7][8];
      boolean[] booleanArray1 = new boolean[3];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray1[2] = true;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[6];
      booleanArray2[0] = false;
      booleanArray2[1] = true;
      booleanArray2[2] = false;
      booleanArray2[3] = false;
      booleanArray2[4] = true;
      booleanArray2[5] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[4];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = false;
      booleanArray3[3] = true;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[3];
      booleanArray4[0] = true;
      booleanArray4[1] = false;
      booleanArray4[2] = true;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[9];
      booleanArray5[0] = false;
      booleanArray5[1] = true;
      booleanArray5[2] = true;
      booleanArray5[3] = false;
      booleanArray5[4] = false;
      booleanArray5[5] = true;
      booleanArray5[6] = false;
      booleanArray5[7] = false;
      booleanArray5[8] = true;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[2];
      booleanArray6[0] = true;
      booleanArray6[1] = true;
      booleanArray0[5] = booleanArray6;
      boolean[] booleanArray7 = new boolean[8];
      booleanArray7[0] = false;
      booleanArray7[1] = false;
      booleanArray7[2] = false;
      booleanArray7[3] = true;
      booleanArray7[4] = false;
      booleanArray7[5] = false;
      booleanArray7[6] = false;
      booleanArray7[7] = true;
      booleanArray0[6] = booleanArray7;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(1693, 1693, 1693, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1693
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      MultiClassClassifier multiClassClassifier0 = new MultiClassClassifier();
      SelectedTag selectedTag0 = multiClassClassifier0.getMethod();
      iCSSearchAlgorithm0.getOptions();
      multiClassClassifier0.getOptions();
      selectedTag0.getRevision();
      iCSSearchAlgorithm0.setScoreType(selectedTag0);
      String[] stringArray0 = iCSSearchAlgorithm0.getOptions();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSet0.getRevision();
      iCSSearchAlgorithm_SeparationSet0.contains(3);
      iCSSearchAlgorithm0.getOptions();
      iCSSearchAlgorithm0.setOptions(stringArray0);
      boolean[][] booleanArrayArray0 = null;
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[8][5];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[1];
      iCSSearchAlgorithm_SeparationSetArray1[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray0[0] = iCSSearchAlgorithm_SeparationSetArray1;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray2 = new ICSSearchAlgorithm.SeparationSet[7];
      iCSSearchAlgorithm_SeparationSetArray2[0] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[1] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[2] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[3] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[4] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[5] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray2[6] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray0[1] = iCSSearchAlgorithm_SeparationSetArray2;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray3 = new ICSSearchAlgorithm.SeparationSet[5];
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet1 = iCSSearchAlgorithm0.new SeparationSet();
      iCSSearchAlgorithm_SeparationSetArray3[0] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray3[1] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray3[2] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray3[3] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray3[4] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray0[2] = iCSSearchAlgorithm_SeparationSetArray3;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray4 = new ICSSearchAlgorithm.SeparationSet[4];
      iCSSearchAlgorithm_SeparationSetArray4[0] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray4[1] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray4[2] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray4[3] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray0[3] = iCSSearchAlgorithm_SeparationSetArray4;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray5 = new ICSSearchAlgorithm.SeparationSet[5];
      iCSSearchAlgorithm_SeparationSetArray5[0] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[1] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[2] = iCSSearchAlgorithm_SeparationSet0;
      iCSSearchAlgorithm_SeparationSetArray5[3] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray5[4] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray0[4] = iCSSearchAlgorithm_SeparationSetArray5;
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray6 = new ICSSearchAlgorithm.SeparationSet[8];
      iCSSearchAlgorithm_SeparationSetArray6[0] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray6[1] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray6[2] = iCSSearchAlgorithm_SeparationSet1;
      iCSSearchAlgorithm_SeparationSetArray6[3] = iCSSearchAlgorithm_SeparationSet1;
      int int0 = 10;
      int int1 = 0;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet(multiClassClassifier0.METHOD_ERROR_RANDOM, int0, int1, booleanArrayArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "kV#n[aRlbj9S-GHI";
      stringArray0[1] = "";
      stringArray0[2] = "5D";
      stringArray0[3] = "yAex:_F&U3xprcq449<";
      stringArray0[4] = "H-y6q*Kya02t7lD=4";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "u";
      stringArray0[8] = "cardinality";
      ICSSearchAlgorithm.main(stringArray0);
      iCSSearchAlgorithm0.listOptions();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "";
      ICSSearchAlgorithm.main(stringArray1);
      boolean[][] booleanArray0 = new boolean[6][8];
      boolean[] booleanArray1 = new boolean[2];
      booleanArray1[0] = true;
      booleanArray1[1] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[2];
      booleanArray2[0] = false;
      booleanArray2[1] = false;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[7];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = true;
      booleanArray3[3] = false;
      booleanArray3[4] = false;
      booleanArray3[5] = true;
      booleanArray3[6] = true;
      booleanArray0[2] = booleanArray3;
      boolean[] booleanArray4 = new boolean[5];
      booleanArray4[0] = false;
      booleanArray4[1] = true;
      booleanArray4[2] = true;
      booleanArray4[3] = false;
      booleanArray4[4] = false;
      booleanArray0[3] = booleanArray4;
      boolean[] booleanArray5 = new boolean[7];
      booleanArray5[0] = true;
      booleanArray5[1] = true;
      booleanArray5[2] = true;
      booleanArray5[3] = false;
      booleanArray5[4] = true;
      booleanArray5[5] = false;
      booleanArray5[6] = false;
      booleanArray0[4] = booleanArray5;
      boolean[] booleanArray6 = new boolean[1];
      booleanArray6[0] = false;
      booleanArray0[5] = booleanArray6;
      ICSSearchAlgorithm.SeparationSet[][] iCSSearchAlgorithm_SeparationSetArray0 = new ICSSearchAlgorithm.SeparationSet[2][8];
      ICSSearchAlgorithm.SeparationSet[] iCSSearchAlgorithm_SeparationSetArray1 = new ICSSearchAlgorithm.SeparationSet[4];
      int int0 = (-173);
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.existsSepSet((-173), (-173), (-709), booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -709
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      iCSSearchAlgorithm0.listOptions();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
      
      Attribute attribute0 = new Attribute("W&?*B.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList1 = new ArrayList<Attribute>();
      ArrayList<Attribute> arrayList2 = new ArrayList<Attribute>(arrayList1);
      Instances instances0 = new Instances("integer", arrayList2, 0);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      arrayList1.add(attribute0);
      iCSSearchAlgorithm0.setMaxCardinality(0);
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      assertEquals(0, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute("W&?fB.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality(0);
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("Classification via Regression: No model built yet.", arrayList0, 1933);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.search((BayesNet) null, instances0);
      boolean[][] booleanArray0 = new boolean[6][4];
      iCSSearchAlgorithm0.existsSepSet(1933, 19, 1, booleanArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Instances instances0 = new Instances("Classification via Regression: No model built yet.", arrayList0, 95);
      BayesNet bayesNet0 = new BayesNet();
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      iCSSearchAlgorithm0.search(bayesNet0, instances0);
      boolean[][] booleanArray0 = new boolean[0][4];
      iCSSearchAlgorithm0.existsSepSet(95, (-1889), 1, booleanArray0);
      assertEquals(2, iCSSearchAlgorithm0.getMaxCardinality());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      Attribute attribute0 = new Attribute(".");
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@end", arrayList0, 4);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.CISearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      ICSSearchAlgorithm.SeparationSet iCSSearchAlgorithm_SeparationSet0 = iCSSearchAlgorithm0.new SeparationSet();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      iCSSearchAlgorithm_SeparationSet0.m_set = intArray0;
      iCSSearchAlgorithm_SeparationSet0.contains((-1833));
      boolean[][] booleanArray0 = new boolean[3][5];
      boolean[] booleanArray1 = new boolean[6];
      booleanArray1[0] = false;
      booleanArray1[1] = false;
      booleanArray1[2] = false;
      iCSSearchAlgorithm_SeparationSet0.getRevision();
      booleanArray1[3] = true;
      booleanArray1[4] = false;
      booleanArray1[5] = false;
      booleanArray0[0] = booleanArray1;
      boolean[] booleanArray2 = new boolean[2];
      booleanArray2[0] = false;
      booleanArray2[1] = true;
      booleanArray0[1] = booleanArray2;
      boolean[] booleanArray3 = new boolean[4];
      booleanArray3[0] = false;
      booleanArray3[1] = false;
      booleanArray3[2] = false;
      booleanArray3[3] = false;
      booleanArray0[2] = booleanArray3;
      // Undeclared exception!
      try { 
        iCSSearchAlgorithm0.calcArcDirections(booleanArray0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute("W&?*2B.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      instances0.setClassIndex(0);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-957));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute("W&?*B.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      iCSSearchAlgorithm0.setMaxCardinality((-957));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute("W&?*B.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      arrayList0.add(attribute0);
      iCSSearchAlgorithm0.setMaxCardinality((-943));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ICSSearchAlgorithm iCSSearchAlgorithm0 = new ICSSearchAlgorithm();
      Attribute attribute0 = new Attribute("W&?*B.okzzxg8");
      ArrayList<Attribute> arrayList0 = new ArrayList<Attribute>();
      arrayList0.add(attribute0);
      Instances instances0 = new Instances("@attribute", arrayList0, 1);
      arrayList0.add(attribute0);
      arrayList0.add(attribute0);
      BayesNet bayesNet0 = iCSSearchAlgorithm0.m_BayesNet;
      arrayList0.add(attribute0);
      iCSSearchAlgorithm0.setMaxCardinality((-943));
      try { 
        iCSSearchAlgorithm0.search((BayesNet) null, instances0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.bayes.net.search.ci.ICSSearchAlgorithm", e);
      }
  }
}
