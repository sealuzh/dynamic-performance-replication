/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 07:21:45 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Button;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.StreamTokenizer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.text.Normalizer;
import java.util.Collection;
import java.util.TreeSet;
import javax.swing.JApplet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "jtPsZig6";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ") ";
      stringArray0[1] = "zU SFap'On!N{yk}KQ~";
      stringArray0[2] = "umd.cs.shop.JSTasks";
      JSJshopVars.slash = 0;
      stringArray0[3] = "";
      JSJshopVars.greaterT = (-2);
      stringArray0[4] = "}C&a?ll5`/";
      jSJshop0.parserFile("zU SFap'On!N{yk}KQ~");
      JSJshop.main(stringArray0);
      // Undeclared exception!
      jSJshop0.getBufferedReader("}C&a?ll5`/", "zU SFap'On!N{yk}KQ~");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      JSJshopVars.whiteSpace = 0;
      jSJshop0.parserFile("* ");
      jSJshop0.prob();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.dom();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-379));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshop.corbaToHicap = true;
      JSJshopVars.exclamation = 1280;
      JSJshopVars.allPlans = true;
      JSJshopVars.colon = 0;
      jSJshop0.getDeleteList();
      jSJshop0.prob();
      jSJshop0.tree();
      jSJshop0.getTree();
      jSJshop0.dom();
      jSJshop0.getDeleteList();
      jSJshop0.getTree();
      String string0 = "dfcme2H.`wRTh";
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(mockFileReader0);
      try { 
        mockFileReader0.mark((-4));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark() not supported
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getSolution();
      JSPlan jSPlan0 = jSJshop0.sol();
      assertNull(jSPlan0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.rightPar = (-455);
      JSJshopVars.astherisk = 0;
      JSJshopVars.interrogation = 0;
      jSJshop0.getDeleteList();
      JSJshopVars.rightBrac = 0;
      jSJshop0.getTree();
      jSJshop0.dom();
      jSJshop0.parserFile("Error 1 in Util.getBufferedReader : ");
      JApplet jApplet0 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "+ ";
      stringArray0[1] = "jtPsZig6";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "jtPsZig6";
      JSJshop.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = (-1531);
      JSJshop.corbaToHicap = true;
      JSJshopVars.percent = (-1531);
      jSJshop0.getSolution();
      jSJshop0.getDeleteList();
      jSJshop0.getSolution();
      jSJshop0.sol();
      jSJshop0.getDeleteList();
      JSJshopVars.percent = (-1531);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "*NO* SOLUTION FOUND";
      stringArray0[1] = "JSPredicateForm";
      stringArray0[2] = "{m_";
      JSJshop.main(stringArray0);
      String string0 = "sl)Cqoo";
      JSTaskAtom jSTaskAtom0 = null;
      try {
        jSTaskAtom0 = new JSTaskAtom(".");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSJshop.main(stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "";
      stringArray1[6] = "@V>mr=8p`7K'+o";
      stringArray1[7] = "one";
      stringArray1[8] = "";
      JSJshop.main(stringArray1);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/V~&X{0]lT+9");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-26);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("V~&X{0]lT+9", "V~&X{0]lT+9");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/{m_");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "+~hcvl*;.gP%");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("{m_", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/um.cs.shopJTaskAtom");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      JSJshop jSJshop0 = new JSJshop("um.cs.shopJTaskAtom", "um.cs.shopJTaskAtom");
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getDeleteList();
      assertNull(jSListLogicalAtoms0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/um.cs.shopJTaskAtom");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("um.cs.shopJTaskAtom", "Ak\"l*wd$r-_TnFUH");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshop jSJshop1 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/one/one");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-69);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      jSJshop0.getBufferedReader("one", "one", (JApplet) null);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/19_shop/(q)r uv}[z^9gcu[a1");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(q)r uv}[z^9gcu[a1");
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      TreeSet<Normalizer.Form> treeSet0 = new TreeSet<Normalizer.Form>();
      jSTaskAtom0.addAll((Collection) treeSet0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("(q)r uv}[z^9gcu[a1", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.flagExit = false;
      jSJshop0.getBufferedReader("one", "one", (JApplet) null);
      JSJshop jSJshop1 = new JSJshop("parserOpsMethsAxs: expected ( or )", "J2s4@zbDex[@t");
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop1.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }
}
