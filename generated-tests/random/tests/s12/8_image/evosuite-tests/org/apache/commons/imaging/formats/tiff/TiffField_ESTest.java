/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 20:58:44 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2145372061, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)78;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1992, (-1654), fieldTypeRational0, 217L, (-148L), byteArray0, byteOrder0, (byte) (-91));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-91), tiffField0.getSortHint());
      assertEquals(1992, tiffField0.getTag());
      assertEquals((-1654), tiffField0.getDirectoryType());
      assertEquals((-148), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32908, " for: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146737216, 2146737216, fieldTypeShort0, 32908, 2146737216, byteArray0, byteOrder0, 32908);
      int int0 = tiffField0.getSortHint();
      assertEquals(32908, int0);
      assertEquals(2146737216, tiffField0.getOffset());
      assertEquals(2146737216, tiffField0.getTag());
      assertEquals(2146737216, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(220, 220, fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, 1291);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(220, tiffField0.getDirectoryType());
      assertEquals(1291, tiffField0.getSortHint());
      assertEquals(220, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1796, "");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2104), 1875, fieldTypeShort0, 1796, 1796, byteArray0, byteOrder0, (-2104));
      byteArray0[1] = (byte) (-108);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1796, tiffField0.getOffset());
      assertEquals(1875, tiffField0.getDirectoryType());
      assertEquals((-2104), tiffField0.getSortHint());
      assertEquals((-2104), tiffField0.getTag());
      assertEquals((-27648), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(983, 983, fieldTypeFloat0, 1L, 983, byteArray0, byteOrder0, (-1651));
      tiffField0.getIntValue();
      assertEquals(983, tiffField0.getDirectoryType());
      assertEquals(983, tiffField0.getTag());
      assertEquals((-1651), tiffField0.getSortHint());
      assertEquals(983, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3835), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3835), 538, fieldTypeShort0, 3540L, 1388L, byteArray0, byteOrder0, 1036);
      tiffField0.getIntArrayValue();
      assertEquals(538, tiffField0.getDirectoryType());
      assertEquals(1036, tiffField0.getSortHint());
      assertEquals(1388, tiffField0.getOffset());
      assertEquals((-3835), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-564), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-564), (-564), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleValue();
      assertEquals((-564), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-564), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(983, 983, fieldTypeFloat0, 1L, 983, byteArray0, byteOrder0, (-1651));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(983, tiffField0.getOffset());
      assertEquals(983, int0);
      assertEquals(983, tiffField0.getTag());
      assertEquals((-1651), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(201, 50, fieldTypeFloat0, 50, 50, byteArray0, (ByteOrder) null, 201);
      tiffField0.getByteArrayValue();
      assertEquals(201, tiffField0.getSortHint());
      assertEquals(201, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(32908, " for: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146737216, 2146737216, fieldTypeShort0, 32908, 2146737216, byteArray0, byteOrder0, 32908);
      tiffField0.getByteArrayValue();
      assertEquals(2146737216, tiffField0.getDirectoryType());
      assertEquals(32908, tiffField0.getSortHint());
      assertEquals(2146737216, tiffField0.getTag());
      assertEquals(2146737216, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1796, "");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1796, 1875, fieldTypeShort0, (-2827L), 1875, byteArray0, byteOrder0, (byte) (-63));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4098, "j,p>h2>%K1MiG0");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4098, 4098, fieldTypeRational0, (-4047L), 828L, byteArray0, byteOrder0, 593);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1984), "(wSt`lth>=#");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-732), (-1984), fieldTypeDouble0.FLOAT, 4L, (byte)9, byteArray0, byteOrder0, (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-732), tiffField0.getTag());
      assertEquals((-1984), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1190, (-1762), fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(1190, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1762), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, (-494L), (-494L), byteArray0, byteOrder0, (byte)86);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1190, (-1762), fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 65535);
      tiffField0.getValue();
      assertEquals((-1762), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1190, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-564), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-564), (-564), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getTagInfo();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-564), tiffField0.getTag());
      assertEquals((-564), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "z@,lOPjD%hg");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2245), (-2245), fieldTypeRational0, 346L, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals((-2245), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2245), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      tiffField0.getBytesLength();
      assertEquals(2200, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals((-581), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145265172), 481, fieldTypeRational0, (-2145265172), 481, byteArray0, byteOrder0, 51022);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1190, (-1762), fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@357fcfd4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(983, 983, fieldTypeFloat0, 1L, 983, byteArray0, byteOrder0, (-1651));
      tiffField0.getIntValueOrArraySum();
      assertEquals(983, tiffField0.getTag());
      assertEquals(983, tiffField0.getOffset());
      assertEquals(983, tiffField0.getDirectoryType());
      assertEquals((-1651), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2010), "(wSt`lth>=#");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2010), (-2010), fieldTypeDouble0, (-12884901880L), (-2737L), byteArray0, byteOrder0, (byte)9);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2010), tiffField0.getTag());
      assertEquals((-2737), tiffField0.getOffset());
      assertEquals((-2010), tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)4, fieldTypeFloat0, 2733L, 1456L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1456, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 4L, (-2147483648L), byteArray0, byteOrder0, (-2695));
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-2695), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(813, (-1494), fieldTypeShort0, 3393L, (-543L), byteArray0, byteOrder0, (byte)81);
      tiffField0.getDoubleArrayValue();
      assertEquals(813, tiffField0.getTag());
      assertEquals((-1494), tiffField0.getDirectoryType());
      assertEquals((-543), tiffField0.getOffset());
      assertEquals(81, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2145265172), 481, fieldTypeRational0, (-2145265172), 481, byteArray0, byteOrder0, 51022);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-2145265172), tiffField0.getTag());
      assertEquals(481, tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getSortHint());
      assertEquals(481, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-564), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-564), (-564), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-564), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-564), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2179, 6, fieldTypeByte0, 6, 6, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6017a60b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2200, tiffField0.getOffset());
      assertEquals((-581), tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(942, 942, fieldTypeShort0, 942, 942, byteArray0, byteOrder0, 1446);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(942, tiffField0.getTag());
      assertEquals(942, tiffField0.getOffset());
      assertEquals(1446, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(942, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1312), ":jTp[XI \"drty");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(37389, 37389, fieldTypeRational0, (byte)6, 1169L, byteArray0, (ByteOrder) null, 0);
      byteArray0[4] = (byte) (-1);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(37389, tiffField0.getDirectoryType());
      assertEquals(37389, tiffField0.getTag());
      assertEquals(1169, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1601), (-1601), fieldTypeFloat0, 1L, (-1601), byteArray0, byteOrder0, (byte)39);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals((-1601), tiffField0.getDirectoryType());
      assertEquals((-1601), tiffField0.getTag());
      assertEquals((-1601), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(201, 50, fieldTypeFloat0, 50, 50, byteArray0, (ByteOrder) null, 201);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1eec898d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1004), fieldTypeAscii0, 0L, 127L, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(127, tiffField0.getOffset());
      assertEquals((-1004), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@5f4b0b75
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      String string0 = tiffField0.getTagName();
      assertEquals(2200, tiffField0.getOffset());
      assertEquals((-581), tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x1)", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1004), fieldTypeAscii0, 0L, 127L, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.getTagName();
      assertEquals("InteroperabilityIndex", string0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1004), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1717986918, "LMK)Uc}OPFA.");
      byte[] byteArray0 = new byte[9];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4410, 4410, fieldTypeFloat0, 2222L, 1717986918, byteArray0, byteOrder0, (byte)95);
      String string0 = tiffField0.toString();
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(4410, tiffField0.getDirectoryType());
      assertEquals("4410 (0x113a: Unknown Tag): 0.0, 0.0 (2222 LMK)Uc}OPFA.)", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2179, 6, fieldTypeByte0, 6, 6, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals("2179 (0x883: Unknown Tag): 0, 0, 0, 0, 0, 0 (6 Byte)", string0);
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 257, fieldTypeDouble0, 256L, 3586L, byteArray0, byteOrder0, 8);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ImageLayer");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(257, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(256L, tiffField0.getCount());
      assertEquals(3586, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      tiffField0.dump();
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(73L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2200, tiffField0.getOffset());
      assertEquals((-581), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1190, 1190, fieldTypeShort0, 1190, 1190, byteArray0, byteOrder0, 1190);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1190L, tiffField0.getCount());
      assertEquals(1190, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1190, tiffField0.getSortHint());
      assertEquals(1190, tiffField0.getOffset());
      assertEquals(1190, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1190, (-1762), fieldTypeShort0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 65535);
      assertEquals(0, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals((-1762), tiffField0.getDirectoryType());
      assertEquals(1190, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146305653, "q(#/1>8JeaM0e}");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3144, 2146305653, fieldTypeAscii0, 3144, 3144, byteArray0, byteOrder0, (-1827));
      tiffField0.toString();
      assertEquals(3144, tiffField0.getTag());
      assertEquals(2146305653, tiffField0.getDirectoryType());
      assertEquals(3144, tiffField0.getOffset());
      assertEquals(3144, tiffField0.getBytesLength());
      assertEquals(3144L, tiffField0.getCount());
      assertEquals((-1827), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(379, 1, fieldTypeByte0, 1, (-4L), byteArray0, byteOrder0, (byte) (-1));
      MockFile mockFile0 = new MockFile("+@", "+@");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "<a>+=m,(r,JSa7");
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(78L, mockFile0.length());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(379, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4098, "j,p>h2>%K1MiG0");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4098, 4098, fieldTypeRational0, (-4047L), 828L, byteArray0, byteOrder0, 593);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4098, tiffField0.getDirectoryType());
      assertEquals(828, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(593, tiffField0.getSortHint());
      assertEquals(4098, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1984), "(wSt`lth>=#");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-732), (-1984), fieldTypeDouble0.FLOAT, 4L, (byte)9, byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)9, (byte)9);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-732), tiffField0.getTag());
      assertNull(string0);
      assertEquals(9, tiffField0.getOffset());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-1984), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1984), "(wSt`lth>=#");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1984), (-1984), fieldTypeDouble0, (-12884901880L), (-2737L), byteArray0, byteOrder0, (byte)9);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2737), tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-1984), tiffField0.getDirectoryType());
      assertEquals((-1984), tiffField0.getTag());
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1945), fieldTypeFloat0, (-1L), (-1L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1945), tiffField0.getDirectoryType());
      assertEquals((-1L), tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(441, 441, fieldTypeShort0, 441, 0L, byteArray0, byteOrder0, (-220));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-220), tiffField0.getSortHint());
      assertEquals(0L, tiffElement0.offset);
      assertEquals(441, tiffField0.getTag());
      assertEquals(441, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1004), fieldTypeAscii0, 0L, 127L, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1004), int0);
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeLong0, 73, 2200L, byteArray0, byteOrder0, (-581));
      int int0 = tiffField0.getSortHint();
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2200, tiffField0.getOffset());
      assertEquals((-581), int0);
      assertEquals(292, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(441, 441, fieldTypeShort0, 441, 0L, byteArray0, byteOrder0, (-220));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-220), tiffField0.getSortHint());
      assertEquals(882, tiffField0.getBytesLength());
      assertEquals(441, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("441 (0x1b9: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1004), fieldTypeAscii0, 0L, 127L, byteArray0, byteOrder0, 3);
      tiffField0.dump();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1004), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-564), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-564), (-564), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)50);
      tiffField0.getByteOrder();
      assertEquals((-564), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-564), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-564), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-564), (-564), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", string0);
      assertEquals((-564), tiffField0.getTag());
      assertEquals((-564), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getOffset());
  }
}
