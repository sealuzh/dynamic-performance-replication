/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 09:54:42 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[9][6];
      // Undeclared exception!
      charClass0.appendTableWithSign(intArray0, (-1758));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][0];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-4162));
      String string0 = charClass1.toString();
      assertEquals("[0x0-0x10ffff]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = (-552);
      intArray0[2] = 68099;
      intArray0[3] = 99;
      intArray0[4] = 0;
      intArray0[5] = 292;
      intArray0[6] = 295;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(32, (-832));
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 99;
      intArray2[1] = 32;
      intArray2[2] = (-832);
      intArray2[3] = 295;
      intArray2[4] = 0;
      intArray2[5] = (-832);
      intArray2[6] = 99;
      intArray1[1] = intArray2;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      charClass2.appendTable(intArray1);
      assertArrayEquals(new int[] {0, (-552), 68099, 99, 0, 292, 295}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[1] = (-292);
      int[][] intArray1 = new int[3][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 813);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[2];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, 1966);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][1];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      CharClass charClass2 = charClass1.appendTable(intArray0);
      // Undeclared exception!
      try { 
        charClass2.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(888, 247);
      int[][] intArray0 = new int[8][1];
      String string0 = charClass1.toString();
      assertEquals("[0x378]", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 65;
      intArray0[3] = 4456;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      assertArrayEquals(new int[] {0, 4456, 1, 65}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 944;
      intArray0[1] = 2;
      intArray0[2] = 3402;
      intArray0[3] = 2626;
      intArray0[4] = (-2178);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toArray();
      charClass0.cleanClass();
      String string0 = charClass0.toString();
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      int int0 = (-300);
      CharClass.charClassToString(intArray0, (-300));
      charClass0.cleanClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      int int1 = 91;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 3027;
      intArray0[0] = 3027;
      intArray0[1] = 120050;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendFoldedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[9];
      intArray0[0] = 814;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = (-2020);
      intArray0[4] = 0;
      intArray0[5] = 66640;
      intArray0[6] = 0;
      intArray0[7] = 130;
      intArray0[8] = 0;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[1] = (-3100);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, 1966);
      assertArrayEquals(new int[] {(-1), 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      int[] intArray0 = new int[1];
      intArray0[0] = 2848;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 2848);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 1;
      CharClass charClass1 = charClass0.appendRange(1, 1);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      charClass1.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendLiteral((-311), 0);
      int[][] intArray1 = new int[7][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      // Undeclared exception!
      try { 
        charClass3.appendTableWithSign(intArray1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      charClass1.toString();
      int[][] intArray0 = new int[8][0];
      int[] intArray1 = new int[9];
      intArray1[0] = 0;
      intArray1[1] = 1315;
      intArray1[2] = (-1654);
      intArray1[3] = 2935;
      intArray1[4] = 42646;
      intArray1[5] = 695;
      intArray1[6] = 2658;
      intArray1[7] = (-3543);
      intArray1[8] = 93;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 2935;
      intArray2[1] = 2658;
      intArray2[2] = 0;
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = (-1654);
      intArray2[6] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 0;
      intArray3[1] = 2935;
      intArray3[2] = 42646;
      intArray3[3] = 42646;
      intArray3[4] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 2935;
      intArray4[1] = 2658;
      intArray4[2] = 695;
      intArray4[3] = 2658;
      intArray4[4] = 2658;
      intArray4[5] = 1315;
      intArray4[6] = 695;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[1];
      intArray5[0] = 2658;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[8];
      intArray6[0] = 0;
      intArray6[1] = 1315;
      intArray6[2] = 2658;
      intArray6[3] = 2935;
      intArray6[4] = 1315;
      intArray6[5] = (-3543);
      intArray6[6] = 0;
      intArray6[7] = 93;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[4];
      intArray7[0] = 2935;
      intArray7[1] = 1315;
      intArray7[2] = 0;
      intArray7[3] = 2658;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[4];
      intArray8[0] = 93;
      intArray8[1] = 2935;
      intArray8[2] = (-3543);
      intArray8[3] = (-2);
      intArray0[7] = intArray8;
      charClass1.appendTableWithSign(intArray0, 393);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 13008;
      intArray0[1] = (-733);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[3][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass2.appendTable(intArray1);
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = (-3021);
      intArray0[5] = 0;
      intArray0[6] = (-4140);
      intArray0[7] = 1503;
      CharClass charClass3 = charClass0.appendClass(intArray0);
      charClass3.appendRange(0, (-3021));
      String string0 = charClass3.toString();
      assertEquals("[0x32d0-0xfffffd23 0x0 0x32d0-0xfffffd23 0x32d0-0xfffffd23 0xffffefd4-0x5df]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 66640;
      intArray0[1] = (-1760);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      int[][] intArray1 = new int[5][2];
      charClass1.negateClass();
      intArray1[0] = intArray0;
      charClass1.appendClass(intArray0);
      charClass2.appendNegatedClass(intArray0);
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-292);
      intArray0[2] = 4097;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1007;
      intArray0[6] = 8116;
      intArray0[7] = 8400;
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass3.appendTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 2589;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 91;
      intArray1[5] = 3686;
      intArray1[6] = (-1765);
      intArray1[7] = 0;
      intArray1[8] = (-3675);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = 3686;
      intArray2[1] = (-1765);
      intArray2[2] = 2589;
      intArray2[3] = (-3675);
      intArray2[4] = 91;
      intArray2[5] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[1];
      intArray6[0] = 1;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 1;
      intArray7[1] = 1;
      intArray7[2] = 91;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[1];
      intArray8[0] = 2589;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[5];
      intArray9[0] = 2033;
      intArray9[1] = (-3675);
      intArray9[2] = 91;
      intArray9[3] = 0;
      intArray9[4] = 0;
      intArray0[8] = intArray9;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-3675));
      int int0 = 0;
      int int1 = 0;
      CharClass charClass2 = charClass1.appendFoldedRange(int0, int1);
      CharClass charClass3 = charClass2.appendTable(intArray0);
      int int2 = 1810;
      CharClass charClass4 = charClass3.appendLiteral(intArray1[4], int2);
      charClass4.toString();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1114111;
      intArray0[1] = 0;
      intArray0[2] = 69825;
      intArray0[3] = 0;
      intArray0[4] = 262;
      intArray0[5] = 0;
      intArray0[6] = (-1468);
      intArray0[7] = (-648);
      intArray0[8] = 0;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[0][9];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendFoldedRange(0, 0);
      CharClass charClass3 = charClass1.negateClass();
      CharClass charClass4 = charClass3.negateClass();
      CharClass charClass5 = charClass2.appendLiteral((-648), (-654));
      charClass5.appendFoldedRange(0, 262);
      charClass1.toArray();
      charClass4.appendLiteral(2828, 258);
      String string0 = charClass2.toString();
      assertEquals("[0x0-0x10ffff 0xfffffd78]", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = (-552);
      intArray0[2] = 68099;
      intArray0[3] = 99;
      CharClass charClass0 = new CharClass(intArray0);
      int int0 = (-2636);
      CharClass charClass1 = charClass0.appendRange(4, (-2636));
      CharClass charClass2 = charClass1.cleanClass();
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass2.appendTable(intArray1);
      int int1 = 32;
      CharClass charClass3 = charClass1.appendLiteral(int1, int0);
      int int2 = 0;
      CharClass.charClassToString(intArray0, int2);
      charClass3.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][6];
      int[] intArray1 = new int[5];
      intArray1[0] = 1;
      intArray1[1] = 1818;
      intArray1[2] = 1;
      intArray1[3] = (-7);
      intArray1[4] = (-864);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[1] = (-7);
      intArray2[2] = (-864);
      intArray2[3] = 1;
      intArray2[4] = 1;
      intArray2[5] = (-7);
      intArray0[1] = intArray2;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-1249));
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      CharClass charClass1 = charClass0.appendFoldedRange((-1645), 373);
      charClass1.toString();
      charClass1.appendFoldedRange(373, 8);
      int[] intArray1 = charClass1.toArray();
      CharClass charClass2 = charClass1.appendClassWithSign(intArray1, 2353);
      int[][] intArray2 = new int[3][2];
      intArray2[0] = intArray0;
      intArray2[1] = intArray0;
      intArray2[2] = intArray1;
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray2, 8401);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[9][6];
      int[] intArray1 = new int[9];
      intArray1[0] = 1;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = 1;
      intArray1[4] = 91;
      intArray1[5] = 3686;
      int int0 = (-1765);
      intArray1[6] = (-1765);
      intArray1[7] = 0;
      intArray1[8] = (-3675);
      intArray0[0] = intArray1;
      CharClass charClass1 = new CharClass();
      int[][] intArray2 = new int[4][7];
      intArray2[0] = intArray1;
      intArray2[1] = intArray1;
      intArray2[2] = intArray1;
      intArray2[3] = intArray1;
      charClass1.appendNegatedTable(intArray2);
      charClass1.appendNegatedTable(intArray0);
      CharClass charClass2 = charClass0.appendFoldedRange(intArray1[1], intArray1[5]);
      charClass1.cleanClass();
      int int1 = 2224;
      CharClass charClass3 = charClass2.appendLiteral(int0, int1);
      CharClass charClass4 = charClass2.appendClassWithSign(intArray1, intArray1[8]);
      charClass4.appendTableWithSign(intArray0, intArray1[4]);
      charClass0.negateClass();
      int int2 = 1079;
      charClass3.appendTable(intArray0);
      charClass0.appendFoldedRange(int2, int2);
      int[] intArray3 = charClass3.toArray();
      charClass1.appendClass(intArray3);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 12705;
      intArray0[1] = (-6650);
      intArray0[2] = (-1);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-6650));
      charClass0.appendLiteral((-510), (-2293));
      int[][] intArray1 = new int[2][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass2.appendTableWithSign(intArray1, (-6649));
      String string0 = charClass0.toString();
      assertArrayEquals(new int[] {12705, (-6650), (-6649), 1114111}, intArray0);
      assertEquals("[0x31a1-0xffffe606 0xffffe607-0x10ffff]", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 1046;
      intArray0[1] = 66659;
      int int0 = 1114111;
      intArray0[2] = 1114111;
      intArray0[3] = (-10);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass0.appendNegatedTable(intArray1);
      charClass2.appendNegatedTable(intArray1);
      // Undeclared exception!
      charClass1.appendFoldedRange((-10), 2633);
  }
}
