/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 08:02:29 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.OutputStream;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.error.StandardException;
import org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.Driver;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.Database;
import org.h2.engine.Session;
import org.h2.expression.Expression;
import org.h2.expression.Function;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.value.ValueResultSet;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.hsqldb.rowio.RowOutputBinary;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGPooledConnection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "QUOTED_NAME", "", "");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.existsEnvironment("2PYY+v}n.$\"sg");
      DBUtil.checkReadOnly("setNull", false);
      DBUtil.assertAllDbResourcesClosed(false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "{f|LYMbbk//^`'ng=E\"";
      DBUtil.existsEnvironment("{f|LYMbbk//^`'ng=E\"");
      // Undeclared exception!
      try { 
        DBUtil.connect("{f|LYMbbk//^`'ng=E\"", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '{f|LYMbbk//^`'ng=E\".env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      String string0 = "k}*@/5. sC7mPF";
      String string1 = ", ";
      boolean boolean0 = true;
      try { 
        DBUtil.connect("k}*@/5. sC7mPF", ", ", "k}*@/5. sC7mPF", "k}*@/5. sC7mPF", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting k}*@/5. sC7mPF failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("h]J", "h]J", "Mpyl7RS1:'r6(ac>ec", "");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting h]J failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.resetMonitors();
      Driver driver0 = Driver.load();
      Driver.load();
      String string0 = "";
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.getProperties();
      driver0.connect("", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "JqfjB u'0T:S#f[";
      DBUtil.escape("JqfjB u'0T:S#f[");
      String string1 = null;
      HsqlProperties hsqlProperties0 = new HsqlProperties((String) null);
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection(hsqlProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.Trace", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("*/", dBSchema0);
      dBPackage0.setSubObjectName("");
      dBPackage0.setOwner(dBSchema0);
      dBPackage0.isIdentical(dBCatalog0);
      dBSchema0.getSequences(true);
      dBCatalog0.getSchemas();
      dBPackage0.setObjectId((String) null);
      dBSchema0.addPackage(dBPackage0);
      dBSchema0.getTables();
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.query("yLwp?1|M_6BC0_{iJQ", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.query("EUC_TW", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.available((String) null, "0IbLBl%tC", "Mpyl7RS1:'r6(ac>ec", "");
      String string0 = "b~{*unYd%$xev";
      DBCheckConstraint dBCheckConstraint0 = null;
      try {
        dBCheckConstraint0 = new DBCheckConstraint("Mpyl7RS1:'r6(ac>ec", true, "FIELD_NAME", "b~{*unYd%$xev");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error parsing SQL
         //
         verifyException("org.databene.jdbacl.sql.SQLParserUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("*/", dBSchema0);
      dBPackage0.setSubObjectName("");
      dBPackage0.setOwner(dBSchema0);
      dBPackage0.isIdentical(dBCatalog0);
      dBSchema0.getSequences(true);
      dBCatalog0.getSchemas();
      dBPackage0.setObjectId((String) null);
      dBSchema0.addPackage(dBPackage0);
      dBSchema0.getTables();
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "LN", true, 0, 1032, (-2331));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: LN
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("*/", dBSchema0);
      dBPackage0.setSubObjectName("");
      dBPackage0.setOwner(dBSchema0);
      dBPackage0.isIdentical(dBCatalog0);
      dBSchema0.getSequences(true);
      DBSequence dBSequence0 = new DBSequence("fiG%N#J?WSEy'", "*/", "^T{)r}Avb5 bz");
      dBSchema0.addSequence(dBSequence0);
      dBCatalog0.getSchemas();
      dBPackage0.setObjectId((String) null);
      dBSchema0.addPackage(dBPackage0);
      dBSchema0.getTables();
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.resetMonitors();
      Level level0 = Level.error;
      ErrorHandler.setDefaultLevel(level0);
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("yLwp?1|M_6BC0_{iJQ", (String) null, 'o', (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: yLwp?1|M_6BC0_{iJQ
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "\"6|UN";
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("\"6|UN", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "G31=`[GyV";
      boolean boolean0 = false;
      String string1 = "\"6|UN";
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("\"6|UN", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      boolean boolean0 = true;
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      String string0 = "yLwp?1|M_6BC0_{iJQ";
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("yLwp?1|M_6BC0_{iJQ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("Tb#SHRxAqM*k w", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      String string0 = "oNL3[";
      ErrorHandler errorHandler0 = new ErrorHandler("oNL3[");
      try { 
        DBUtil.runScript("", "/tx_Y90Ke", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("7HamCdD", "7HamCdD", "", "", "7HamCdD", "Y");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 7HamCdD failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.existsEnvironment("");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "QM{)=jfq!UJ;sKlJi", "XSDA3.S", false, false, false, false, ",R}`G9hNGBJX[k", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 13
         // ,R}`G9hNGBJX[k
         //              ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.close((Connection) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      DBUtil.assertAllDbResourcesClosed(false);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.existsEnvironment("");
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.getOpenConnectionCount();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("--Th", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = " failed: ";
      DBUtil.existsEnvironment(" failed: ");
      DBUtil.getOpenPreparedStatementCount();
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.countRows("m]U&y]v6@", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBUtil.createLoggingStatementHandler((Statement) null, true);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "m`^e._6cEi.E&1~KCh";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "Protocol not supported, abandoning connection.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 statement(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Class<PGPooledConnection> class0 = PGPooledConnection.class;
      Connection connection0 = null;
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((Connection) null);
      String string0 = "There are unclosed database resources: ";
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("There are unclosed database resources: ", 'y', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
