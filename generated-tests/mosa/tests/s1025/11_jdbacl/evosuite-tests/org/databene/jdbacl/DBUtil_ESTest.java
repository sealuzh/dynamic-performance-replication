/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 16:17:01 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.PrintStream;
import java.io.Reader;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Locale;
import java.util.Map;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.services.loader.GeneratedMethod;
import org.apache.derby.iapi.store.access.Qualifier;
import org.apache.derby.impl.services.monitor.FileMonitor;
import org.apache.derby.impl.services.reflect.ReflectClassesJava2;
import org.apache.derby.impl.services.reflect.ReflectGeneratedClass;
import org.apache.derby.impl.sql.execute.BaseActivation;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.sql.execute.GenericQualifier;
import org.apache.derby.impl.sql.execute.GenericScanQualifier;
import org.apache.derby.impl.store.access.UTFQualifier;
import org.databene.commons.ErrorHandler;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainerSupport;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jca.FBLocalTransaction;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBStatement;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.expression.Parameter;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.SimpleResultSet;
import org.junit.runner.RunWith;
import org.postgresql.jdbc4.Jdbc4Connection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("]^");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "]^";
      stringArray0[1] = "]^";
      stringArray0[2] = "]^";
      stringArray0[3] = "]^";
      stringArray0[4] = "]^";
      stringArray0[5] = "]^";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "]^", false, stringArray0);
      DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      GDSHelper gDSHelper0 = null;
      int int0 = (-500);
      int int1 = 2316;
      FBManagedConnection fBManagedConnection0 = null;
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertTrue(simpleResultSet0.isClosed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.available("F]?L", ")\">'sHTFD-z~ -o&", "F]?L", "F]?L");
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData(")\">'sHTFD-z~ -o&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition ')\">'sHTFD-z~ -o&.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DBUtil.escape("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "org.apache.derby.impl.sql.execute.AlterTableConstantAction", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.resetMonitors();
      String string0 = "EkZu";
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("EkZu");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'EkZu.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "?]L3c#`^H-xqW<~9+", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: ?]L3c#`^H-xqW<~9+
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "F]?L");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      DBUtil.existsEnvironment(")\">'s+<HTFD-zS~ -o&");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcConnectionPool.create((ConnectionPoolDataSource) jdbcDataSource0);
      assertEquals(0, jdbcDataSource0.getTraceId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.connect("--", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '--.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      try { 
        DBUtil.getMetaData((Connection) null, "", "org.databene.JDBC", false, false, true, false, " NOWAIT", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("s);oCYXB=2EEh&[nA", "^!E&Y)tmo&}", "", "", "s);oCYXB=2EEh&[nA", "");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ^!E&Y)tmo&} failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "42XA6", "42XA6", "42XA6");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "1]~hLJez~;~P!@";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("1]~hLJez~;~P!@", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = 'M';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 1007);
      charArrayReader0.read(charArray0);
      ResultSet resultSet0 = csv0.read((Reader) charArrayReader0, (String[]) null);
      Object[] objectArray0 = DBUtil.parseResultRow(resultSet0);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.countRows((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      Map<MockThaiBuddhistDate, Long> map0 = null;
      fBArray0.getResultSet((Map) null);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = ")\">'sHTFD-z~ -o&";
      DBUtil.available("F]?L", ")\">'sHTFD-z~ -o&", "F]?L", "");
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      DBUtil.dependencyOrderedTables(tableContainerSupport0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation0.getCurrentConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "%iR&8^W4=]~6'v");
      System.setCurrentTimeMillis(0L);
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("%iR&8^W4=]~6'v", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
