/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:31:34 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-55);
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)29;
      char[] charArray0 = new char[1];
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)29, charArray0);
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte)29;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)29, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 3428, (byte)1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3428
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      int int0 = IOUtils.decodeUTF8(byteArray0, 11, 11, iOUtils0.ASCII_CHARS);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-12);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte)0;
      byteArray0[8] = (byte)0;
      char[] charArray0 = new char[3];
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)44, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, (byte)0, 18, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte) (-84);
      byteArray0[5] = (byte) (-84);
      char[] charArray0 = new char[7];
      charArray0[3] = '#';
      charArray0[5] = '#';
      charArray0[6] = '=';
      IOUtils.decodeUTF8(byteArray0, (byte)0, 999999971, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("}6UIJ3o0$TdPOwrU9", (int) (byte) (-84), (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((byte)19, (int) (byte)19, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.CA, (byte)30, (byte)30, iOUtils0.specicalFlags_singleQuotes);
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u!6o'&Ay4euw9o");
      String string0 = IOUtils.readAll(stringReader0);
      assertEquals("u!6o'&Ay4euw9o", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.encode("fastjson.compatibleWithJavaBean");
      IOUtils.getChars((-198L), 11, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("`4NJFt0:w", 0, 2);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.stringSize((-50L));
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", 1, 1);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder", 7, 7);
      assertArrayEquals(new byte[] {(byte)109, (byte) (-90), (byte) (-38), (byte) (-3), (byte) (-10)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("&K");
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("&K");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = IOUtils.stringSize((-50L));
      assertEquals(1, int0);
      
      char[] charArray0 = new char[6];
      IOUtils.getChars(1, 1, charArray0);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam(".JMsXw");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("i8|,J");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils.getStringProperty("UTF-8");
      int int0 = IOUtils.stringSize(1145);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      byte[] byteArray1 = IOUtils.decodeBase64(charArray0, 0, 0);
      assertArrayEquals(new byte[] {}, byteArray1);
      
      byte[] byteArray2 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, 192, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils.getStringProperty("z7-,");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.firstIdentifier('\\');
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.encode("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 7, 7);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 11, 11);
      assertArrayEquals(new byte[] {(byte) (-9), (byte) (-35), (byte)0}, byteArray0);
      
      byte[] byteArray1 = IOUtils.decodeBase64("fastjson.properties");
      int int0 = IOUtils.decodeUTF8(byteArray1, 11, 11, iOUtils0.ASCII_CHARS);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("}?");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-3427), (-3427), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3428
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(192);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      IOUtils.close(pushbackInputStream0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = IOUtils.stringSize(3398L);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-55);
      byteArray0[3] = (byte)0;
      byteArray0[6] = (byte) (-6);
      char[] charArray0 = new char[1];
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte) (-6), charArray0);
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      byte[] byteArray1 = IOUtils.decodeBase64("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.CA, (byte)30, (byte)30, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOUtils.decodeBase64("]jT%=&");
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64(",:NJFt:w", 0, 2);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
      assertEquals(0, charBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils.firstIdentifier('r');
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(100, 2, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("com.alibaba.fastjson.JSONException");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      CharBuffer charBuffer0 = uTF8Decoder1.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.getChars((byte) (-1), 2, iOUtils0.DIGITS);
      int int1 = IOUtils.encodeUTF8(iOUtils0.DIGITS, 2, (-2147155736), iOUtils0.specicalFlags_doubleQuotes);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.isValidJsonpQueryParam("-yN~f8*|CKv");
      IOUtils.getChars(10000L, 76, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.encode("faVstjsoQ.proper_ies");
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 11, 11);
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.properties");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.CA, (byte)28, (byte)28, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.encode("faVstjsoQ.proper_ies");
      IOUtils.getChars((-416), 9, iOUtils0.DIGITS);
      Charset.defaultCharset();
      boolean boolean0 = IOUtils.firstIdentifier('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(6~+KbDWx%BBK");
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars(8257536, 8257536, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8257535
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)109;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)127;
      byteArray0[8] = (byte) (-32);
      char[] charArray0 = new char[5];
      charArray0[0] = 'O';
      charArray0[1] = '<';
      charArray0[3] = 'Z';
      charArray0[4] = '#';
      IOUtils.decodeUTF8(byteArray0, 2, (byte)2, charArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.readAll((Reader) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-12);
      char[] charArray0 = new char[7];
      IOUtils.decodeUTF8(byteArray0, (byte)0, 999999999, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-49), (-303), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -304
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)71;
      byteArray0[5] = (byte) (-67);
      byteArray0[8] = (byte)0;
      char[] charArray0 = new char[3];
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)71, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte byte0 = (byte) (-55);
      byteArray0[0] = (byte) (-55);
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[6] = (byte)1;
      char[] charArray0 = new char[2];
      charArray0[1] = '*';
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)1, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (int) (byte)1, 362);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)71;
      byteArray0[5] = (byte) (-67);
      byteArray0[8] = (byte)0;
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)71, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-32);
      byteArray0[7] = (byte)0;
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, (byte)0, 44, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (int) (byte) (-32), 30);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -32
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.isIdent('3');
      IOUtils.isValidJsonpQueryParam((String) null);
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      charArray0[1] = '3';
      // Undeclared exception!
      try { 
        IOUtils.getChars(1000000000000L, 13, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Charset.defaultCharset();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = IOUtils.decodeBase64(";Z9=TIf~", 2, 2);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'W';
      charArray0[1] = 'y';
      charArray0[2] = '(';
      charArray0[3] = '{';
      charArray0[4] = 'M';
      charArray0[5] = '=';
      charArray0[6] = 'y';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 3, 3);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException", 1, 1);
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = '=';
      charArray0[1] = '=';
      IOUtils.decodeBase64("com.alibaba.fastjson.JSONException");
      int int1 = 1933;
      char[] charArray1 = new char[8];
      charArray1[0] = '?';
      charArray1[1] = '=';
      charArray1[2] = '=';
      charArray1[4] = '?';
      charArray1[6] = 'r';
      IOUtils.encodeUTF8(charArray1, 2048, (-527), byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray1, 0, 6);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[7];
      charArray0[0] = '\u0082';
      charArray0[1] = '\u0082';
      charArray0[2] = '\u0082';
      charArray0[3] = '\u0082';
      charArray0[4] = '\u0082';
      charArray0[5] = '\u0082';
      charArray0[6] = '\u0082';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 60, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      byteArray0[4] = (byte) (-84);
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte) (-84);
      char[] charArray0 = new char[6];
      charArray0[3] = '#';
      charArray0[5] = '#';
      IOUtils.decodeUTF8(byteArray0, (byte)0, 999999971, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("}6UIJ3o0$TdPOwrU9", (int) (byte)0, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte) (-124);
      char[] charArray0 = new char[7];
      charArray0[3] = '#';
      charArray0[5] = '#';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, 999999931, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.replaceChars, 1, 82);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, 1784, 34, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1784
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)2;
      byteArray0[5] = (byte)0;
      byteArray0[8] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!+$b]F~7gb-^x>");
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, 4, charArray0);
      assertEquals((-1), int0);
      
      IOUtils.encodeUTF8(charArray0, (-123), (-1), byteArray0);
      byte[] byteArray1 = IOUtils.decodeBase64("SG<r e7H");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-21), (byte) (-3), (byte) (-18), (byte) (-57)}, byteArray1);
      
      byte[] byteArray2 = IOUtils.specicalFlags_singleQuotes;
      boolean boolean0 = IOUtils.firstIdentifier('&');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)4;
      byteArray0[5] = (byte)109;
      byteArray0[7] = (byte)54;
      byteArray0[0] = (byte) (-64);
      char[] charArray0 = new char[8];
      charArray0[0] = 'O';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      IOUtils.decodeUTF8(byteArray0, 2, (byte)4, charArray0);
      int int0 = ObjectStreamConstants.baseWireHandle;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int2 = ObjectStreamConstants.baseWireHandle;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (-122299), (byte)109, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -122299
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
