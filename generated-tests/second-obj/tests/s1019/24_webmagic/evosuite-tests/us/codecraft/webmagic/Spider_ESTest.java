/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:15:37 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.ResultItems;
import us.codecraft.webmagic.Spider;
import us.codecraft.webmagic.SpiderListener;
import us.codecraft.webmagic.downloader.Downloader;
import us.codecraft.webmagic.downloader.PhantomJSDownloader;
import us.codecraft.webmagic.monitor.SpiderMonitor;
import us.codecraft.webmagic.pipeline.CollectorPipeline;
import us.codecraft.webmagic.pipeline.ConsolePipeline;
import us.codecraft.webmagic.pipeline.FilePipeline;
import us.codecraft.webmagic.pipeline.JsonFilePipeline;
import us.codecraft.webmagic.pipeline.MultiPagePipeline;
import us.codecraft.webmagic.pipeline.Pipeline;
import us.codecraft.webmagic.pipeline.ResultItemsCollectorPipeline;
import us.codecraft.webmagic.processor.PageProcessor;
import us.codecraft.webmagic.processor.SimplePageProcessor;
import us.codecraft.webmagic.scheduler.DuplicateRemovedScheduler;
import us.codecraft.webmagic.scheduler.FileCacheQueueScheduler;
import us.codecraft.webmagic.scheduler.PriorityScheduler;
import us.codecraft.webmagic.scheduler.QueueScheduler;
import us.codecraft.webmagic.scheduler.component.HashSetDuplicateRemover;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.ReplaceSelector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Spider_ESTest extends Spider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("us.codecraft.webmagic.Spider");
      Spider spider0 = Spider.create(simplePageProcessor0);
      spider0.checkIfRunning();
      // Undeclared exception!
      try { 
        spider0.get("us.codecraft.webmagic.Spider");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(0, threadFactory0, threadPoolExecutor_DiscardPolicy0);
      // Undeclared exception!
      try { 
        spider0.thread((ExecutorService) scheduledThreadPoolExecutor0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // threadNum should be more than one!
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("get page: ");
      Spider spider0 = new Spider(simplePageProcessor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadFactory0);
      Spider spider1 = spider0.clearPipeline();
      // Undeclared exception!
      try { 
        spider1.thread((-1105));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // threadNum should be more than one!
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("z&");
      Spider spider0 = new Spider(simplePageProcessor0);
      ConsolePipeline consolePipeline0 = new ConsolePipeline();
      Spider spider1 = spider0.addPipeline(consolePipeline0);
      Spider spider2 = spider1.setExitWhenComplete(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "z&";
      // Undeclared exception!
      try { 
        spider2.addUrl(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("Y~TR0LTYY");
      Spider spider0 = Spider.create(simplePageProcessor0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        spider0.getAll((Collection<String>) linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/protocol/HttpContext
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("o_db");
      Spider spider0 = Spider.create(simplePageProcessor0);
      FilePipeline filePipeline0 = new FilePipeline();
      Spider spider1 = spider0.pipeline(filePipeline0);
      // Undeclared exception!
      try { 
        spider1.thread((-3285));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // threadNum should be more than one!
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("", "");
      Spider spider1 = spider0.downloader(phantomJSDownloader0);
      spider1.getSite();
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      Spider spider2 = spider1.thread((ExecutorService) forkJoinPool0, 4134);
      assertTrue(spider2.isExitWhenComplete());
      assertEquals(0L, spider2.getPageCount());
      assertTrue(spider2.isSpawnUrl());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      Spider spider1 = spider0.setPipelines((List<Pipeline>) null);
      Spider spider2 = spider1.setUUID("");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        spider2.addUrl(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Spider.Status spider_Status0 = Spider.Status.Init;
      spider_Status0.getValue();
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("us.codecraft.webmagic.Spider");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("us.codecraft.webmagic.Spider");
      assertTrue(spider1.isExitWhenComplete());
      
      Spider spider2 = spider1.setExitWhenComplete(false);
      FilePipeline filePipeline0 = new FilePipeline();
      spider2.addPipeline(filePipeline0);
      assertFalse(spider1.isExitWhenComplete());
      assertTrue(spider0.isSpawnUrl());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      Spider spider2 = spider1.setExitWhenComplete(true);
      int int0 = 1275;
      spider2.thread(1275);
      PhantomJSDownloader phantomJSDownloader0 = null;
      try {
        phantomJSDownloader0 = new PhantomJSDownloader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("rj^q-|Ad9<at");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ForkJoinTask.getPool();
      Spider spider1 = spider0.setExecutorService((ExecutorService) null);
      MultiPagePipeline multiPagePipeline0 = new MultiPagePipeline();
      Spider spider2 = spider1.addPipeline(multiPagePipeline0);
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("W5>j%", "W5>j%");
      Spider spider3 = spider2.downloader(phantomJSDownloader0);
      Spider spider4 = spider3.setSpiderListeners((List<SpiderListener>) null);
      // Undeclared exception!
      try { 
        spider4.addUrl((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      spider1.getStatus();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("");
      Spider spider2 = spider0.setScheduler(fileCacheQueueScheduler0);
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      Page page0 = new Page();
      page0.setRawText((String) null);
      // Undeclared exception!
      try { 
        spider2.extractAndAddRequests(page0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("n#\"^sjVVFb@(hO10S`");
      Spider spider0 = Spider.create(simplePageProcessor0);
      LinkedList<Request> linkedList0 = new LinkedList<Request>();
      Spider spider1 = spider0.startRequest(linkedList0);
      JsonFilePipeline jsonFilePipeline0 = new JsonFilePipeline();
      Spider spider2 = spider1.pipeline(jsonFilePipeline0);
      Spider spider3 = spider2.setUUID("WV`Hd!iCO}R:");
      assertTrue(spider3.isSpawnUrl());
      assertEquals(0L, spider3.getPageCount());
      assertTrue(spider3.isExitWhenComplete());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      spider0.setUUID("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        spider0.startUrls((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("get page: ");
      Spider spider0 = new Spider(simplePageProcessor0);
      spider0.getUUID();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2, threadFactory0);
      // Undeclared exception!
      try { 
        spider0.get("BE?`\rBtap:2#('8u7)");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("QL@w9,;E!i}|OR b");
      Spider spider0 = new Spider(simplePageProcessor0);
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("QL@w9,;E!i}|OR b");
      Spider spider1 = spider0.setScheduler(fileCacheQueueScheduler0);
      Spider spider2 = spider1.clearPipeline();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "QL@w9,;E!i}|OR b";
      // Undeclared exception!
      try { 
        spider2.addUrl(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("process request ");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ResultItemsCollectorPipeline resultItemsCollectorPipeline0 = new ResultItemsCollectorPipeline();
      MockThread.getDefaultUncaughtExceptionHandler();
      Page page0 = new Page();
      page0.setRawText("process request ");
      spider0.getPageCount();
      spider0.getSpiderListeners();
      spider0.isSpawnUrl();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("get page: ");
      Spider spider0 = new Spider(simplePageProcessor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2, threadFactory0);
      spider0.thread((ExecutorService) scheduledThreadPoolExecutor0, 3);
      spider0.getThreadAlive();
      Page page0 = Page.fail();
      page0.getHeaders();
      page0.setHeaders((Map<String, List<String>>) null);
      // Undeclared exception!
      try { 
        spider0.extractAndAddRequests(page0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("process request ");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ResultItemsCollectorPipeline resultItemsCollectorPipeline0 = new ResultItemsCollectorPipeline();
      Page page0 = new Page();
      ResultItems resultItems0 = page0.getResultItems();
      ResultItems resultItems1 = resultItems0.setSkip(false);
      resultItemsCollectorPipeline0.process(resultItems1, spider0);
      spider0.pipeline(resultItemsCollectorPipeline0);
      spider0.runAsync();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("BLhz nqKCbV=,)i");
      Spider spider0 = new Spider(simplePageProcessor0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("BLhz nqKCbV=,)i");
      Spider spider1 = spider0.setScheduler(fileCacheQueueScheduler0);
      Spider spider2 = spider1.clearPipeline();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "BLhz nqKCbV=,)i";
      spider1.start();
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("/C!FMv,(WzxsOF(VpI", "Cwa~~\"M`1`W+gjt");
      PhantomJSDownloader phantomJSDownloader1 = phantomJSDownloader0.setRetryNum(2);
      spider2.setDownloader(phantomJSDownloader1);
      // Undeclared exception!
      try { 
        spider2.addUrl(stringArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      PriorityScheduler priorityScheduler0 = new PriorityScheduler();
      Spider spider1 = spider0.scheduler(priorityScheduler0);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      Spider spider2 = spider1.thread((ExecutorService) forkJoinPool0, 5);
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("}G7@SS|/umL9/K>", "}G7@SS|/umL9/K>");
      Spider spider3 = spider2.downloader(phantomJSDownloader0);
      Request[] requestArray0 = new Request[1];
      Request request0 = new Request("}G7@SS|/umL9/K>");
      requestArray0[0] = request0;
      // Undeclared exception!
      try { 
        spider3.addRequest(requestArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("us.codecraft.webmagic.Spider");
      Spider spider0 = Spider.create(simplePageProcessor0);
      Page page0 = new Page();
      page0.setDownloadSuccess(true);
      page0.setRawText("us.codecraft.webmagic.scheduler.RedisScheduler");
      MockPrintStream mockPrintStream0 = new MockPrintStream("us.codecraft.webmagic.scheduler.RedisScheduler");
      MultiPagePipeline multiPagePipeline0 = new MultiPagePipeline();
      Spider spider1 = spider0.addPipeline(multiPagePipeline0);
      // Undeclared exception!
      try { 
        spider1.extractAndAddRequests(page0, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("process request ");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ResultItemsCollectorPipeline resultItemsCollectorPipeline0 = new ResultItemsCollectorPipeline();
      MockThread.getDefaultUncaughtExceptionHandler();
      Page page0 = new Page();
      spider0.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("process request ");
      // Undeclared exception!
      try { 
        spider0.get("/");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("");
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(503, threadFactory0);
      spider0.thread((ExecutorService) scheduledThreadPoolExecutor0, 125);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      spider0.getPageCount();
      spider1.stop();
      // Undeclared exception!
      try { 
        spider0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/protocol/HttpContext
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      PriorityScheduler priorityScheduler0 = new PriorityScheduler();
      Spider spider1 = spider0.scheduler(priorityScheduler0);
      ForkJoinPool forkJoinPool0 = new ForkJoinPool();
      Spider spider2 = spider1.thread((ExecutorService) forkJoinPool0, 5);
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("}G7@SS|/umL9/K>", "}G7@SS|/umL9/K>");
      Spider spider3 = spider2.downloader(phantomJSDownloader0);
      Request[] requestArray0 = new Request[1];
      // Undeclared exception!
      try { 
        spider3.addRequest(requestArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.scheduler.DuplicateRemovedScheduler", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Spider.Status.values();
      String string0 = "k|";
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("k|");
      Spider spider0 = Spider.create(simplePageProcessor0);
      Spider spider1 = spider0.setSpawnUrl(true);
      Request[] requestArray0 = new Request[0];
      Spider spider2 = spider1.addRequest(requestArray0);
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("k|");
      HashSetDuplicateRemover hashSetDuplicateRemover0 = new HashSetDuplicateRemover();
      DuplicateRemovedScheduler duplicateRemovedScheduler0 = fileCacheQueueScheduler0.setDuplicateRemover(hashSetDuplicateRemover0);
      Spider spider3 = spider2.scheduler(duplicateRemovedScheduler0);
      spider3.setExitWhenComplete(true);
      PhantomJSDownloader phantomJSDownloader0 = null;
      try {
        phantomJSDownloader0 = new PhantomJSDownloader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("kk/F/cS");
      Spider spider0 = new Spider(simplePageProcessor0);
      QueueScheduler queueScheduler0 = new QueueScheduler();
      Spider spider1 = spider0.scheduler(queueScheduler0);
      Charset.defaultCharset();
      HashSetDuplicateRemover hashSetDuplicateRemover0 = new HashSetDuplicateRemover();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("kk/F/cS");
      FileCacheQueueScheduler fileCacheQueueScheduler1 = new FileCacheQueueScheduler("kk/F/cS");
      QueueScheduler queueScheduler1 = new QueueScheduler();
      Spider spider2 = spider1.setScheduler(queueScheduler0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      spider2.isExitWhenComplete();
      linkedList0.add("1");
      // Undeclared exception!
      try { 
        spider1.getAll((Collection<String>) linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("process request ");
      Spider spider0 = Spider.create(simplePageProcessor0);
      ResultItemsCollectorPipeline resultItemsCollectorPipeline0 = new ResultItemsCollectorPipeline();
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      Page page0 = new Page();
      page0.setRawText("process request ");
      spider0.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("application/x-www-form-urlencoded");
      ResultItems resultItems0 = page0.getResultItems();
      spider0.getStartTime();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        filePipeline0.process(resultItems0, spider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.pipeline.FilePipeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = Spider.create(simplePageProcessor0);
      PriorityScheduler priorityScheduler0 = new PriorityScheduler();
      Spider spider1 = spider0.scheduler(priorityScheduler0);
      LinkedBlockingQueue<Runnable> linkedBlockingQueue0 = new LinkedBlockingQueue<Runnable>(5);
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      spider1.getThreadAlive();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page page0 = Page.fail();
      page0.setRawText("");
      page0.setRawText("");
      spider1.extractAndAddRequests(page0, false);
      FilePipeline filePipeline0 = null;
      try {
        filePipeline0 = new FilePipeline((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.utils.FilePersistentBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Spider.Status.fromValue(275);
      Spider spider0 = null;
      try {
        spider0 = new Spider((PageProcessor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("");
      Spider spider2 = spider0.setScheduler(fileCacheQueueScheduler0);
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      Page page0 = new Page();
      Page page1 = new Page();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page page2 = Page.fail();
      page1.setRawText("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      page2.setRawText("VIQUg0^Sg.,}w?");
      spider2.extractAndAddRequests(page0, false);
      spider1.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("");
      spider1.getUUID();
      spider0.sleep(0);
      // Undeclared exception!
      try { 
        spider2.get("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MockThread.getDefaultUncaughtExceptionHandler();
      Page page0 = Page.fail();
      page0.setDownloadSuccess(false);
      page0.setDownloadSuccess(false);
      Page page1 = page0.setSkip(false);
      page0.setRawText("");
      page1.setRawText("VIQUg0^Sg.,}w?");
      spider1.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("Copyright");
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("VIQUg0^Sg.,}w?", "/");
      Spider spider2 = spider0.downloader(phantomJSDownloader0);
      LinkedList<Pipeline> linkedList0 = new LinkedList<Pipeline>();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        spider2.test(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.downloader.PhantomJSDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      Page page0 = Page.fail();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page.fail();
      page0.setRawText("");
      spider1.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("");
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("VIQUg0^Sg.,}w?", "/");
      Spider spider2 = spider0.downloader(phantomJSDownloader0);
      Spider spider3 = spider2.setSpawnUrl(false);
      LinkedList<Pipeline> linkedList0 = new LinkedList<Pipeline>();
      Spider spider4 = spider3.setPipelines(linkedList0);
      spider4.initComponent();
      Locale locale0 = new Locale("VIQUg0^Sg.,}w?", "");
      locale0.getUnicodeLocaleAttributes();
      spider4.getSpiderListeners();
      spider2.thread(3637);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        spider2.test(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.downloader.PhantomJSDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("get page: ");
      Spider spider0 = new Spider(simplePageProcessor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2, threadFactory0);
      Spider spider1 = spider0.thread((ExecutorService) scheduledThreadPoolExecutor0, 3);
      spider1.setEmptySleepTime((-724));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page page0 = Page.fail();
      page0.setSkip(false);
      spider0.getPageCount();
      spider0.stop();
      // Undeclared exception!
      try { 
        spider0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/http/protocol/HttpContext
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("us.codecraft.webmagic.Spider");
      Spider spider0 = Spider.create(simplePageProcessor0);
      // Undeclared exception!
      try { 
        spider0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Spider", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "get page: ";
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("get page: ");
      Spider spider0 = new Spider(simplePageProcessor0);
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      SpiderMonitor spiderMonitor0 = SpiderMonitor.instance();
      SpiderMonitor.MonitorSpiderListener spiderMonitor_MonitorSpiderListener0 = spiderMonitor0.new MonitorSpiderListener();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Spider spider1 = spider0.startUrls(linkedList0);
      int int0 = 1767;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page page0 = new Page();
      page0.setRawText("BE?`\rBtap:2#('8u7)");
      String string1 = null;
      // Undeclared exception!
      try { 
        spider1.get("us.codecraft.webmagic.Spider$Status");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.utils.UrlUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      Page page0 = Page.fail();
      page0.setDownloadSuccess(false);
      Page page1 = new Page();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("'GL&-cI$mraQK!");
      Spider spider1 = spider0.scheduler(fileCacheQueueScheduler0);
      String[] stringArray0 = new String[0];
      Spider spider2 = spider1.addUrl(stringArray0);
      spider2.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("*");
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("", "");
      spider1.downloader(phantomJSDownloader0);
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      spider0.getSpiderListeners();
      spider2.test(stringArray0);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      ThreadPoolExecutor threadPoolExecutor0 = null;
      try {
        threadPoolExecutor0 = new ThreadPoolExecutor(1, 3637, 1, timeUnit0, (BlockingQueue<Runnable>) null, threadPoolExecutor_DiscardPolicy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(2);
      Page page0 = new Page();
      Page page1 = Page.fail();
      page0.setRawText("");
      page1.setRawText("y^W-U9$#NM~(]$W&t");
      spider1.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("");
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("", "");
      Spider spider2 = spider0.downloader(phantomJSDownloader0);
      Spider spider3 = spider2.setSpawnUrl(true);
      Spider spider4 = spider3.clearPipeline();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LinkedList<Pipeline> linkedList0 = new LinkedList<Pipeline>();
      spider4.initComponent();
      spider4.downloader = (Downloader) phantomJSDownloader0;
      Locale locale0 = Locale.UK;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Spider is already running!");
      List<Request> list0 = spider1.getAll((Collection<String>) set0);
      Spider spider5 = spider4.startRequest(list0);
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("");
      HashSetDuplicateRemover hashSetDuplicateRemover0 = new HashSetDuplicateRemover();
      DuplicateRemovedScheduler duplicateRemovedScheduler0 = fileCacheQueueScheduler0.setDuplicateRemover(hashSetDuplicateRemover0);
      spider3.scheduler(duplicateRemovedScheduler0);
      spider2.getSpiderListeners();
      spider5.start();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.clearPipeline();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("");
      Spider spider2 = spider0.setScheduler(fileCacheQueueScheduler0);
      MockThread.getDefaultUncaughtExceptionHandler();
      Integer integer0 = new Integer(3637);
      spider1.getThreadAlive();
      Page.fail();
      Page page0 = new Page();
      page0.toString();
      Spider spider3 = spider0.setUUID("Page{request=null, resultItems=ResultItems{fields={}, request=null, skip=false}, html=null, json=null, rawText='null', url=null, headers=null, statusCode=200, downloadSuccess=true, targetRequests=[], charset='null', bytes=null}");
      spider3.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline();
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("omit-xml-declaration", "/");
      Spider spider4 = spider2.downloader(phantomJSDownloader0);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      LinkedTransferQueue<Runnable> linkedTransferQueue0 = new LinkedTransferQueue<Runnable>();
      ThreadPoolExecutor threadPoolExecutor0 = new ThreadPoolExecutor(3637, 3637, 0, timeUnit0, linkedTransferQueue0);
      spider4.executorService = (ExecutorService) threadPoolExecutor0;
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Page{request=null, resultItems=ResultItems{fields={}, request=null, skip=false}, html=null, json=null, rawText='null', url=null, headers=null, statusCode=200, downloadSuccess=true, targetRequests=[], charset='null', bytes=null}";
      // Undeclared exception!
      try { 
        spider3.test(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.downloader.PhantomJSDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("BLhz nqKCbV=,)i");
      Spider spider0 = new Spider(simplePageProcessor0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileCacheQueueScheduler fileCacheQueueScheduler0 = new FileCacheQueueScheduler("BLhz nqKCbV=,)i");
      Spider spider1 = spider0.setScheduler(fileCacheQueueScheduler0);
      Spider spider2 = spider1.clearPipeline();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "BLhz nqKCbV=,)i";
      spider1.start();
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("/C!FMv,(WzxsOF(VpI", "Cwa~~\"M`1`W+gjt");
      PhantomJSDownloader phantomJSDownloader1 = phantomJSDownloader0.setRetryNum(2);
      Spider spider3 = spider2.setDownloader(phantomJSDownloader1);
      spider3.getPageCount();
      // Undeclared exception!
      try { 
        spider1.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.scheduler.FileCacheQueueScheduler", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("");
      Spider spider0 = new Spider(simplePageProcessor0);
      Spider spider1 = spider0.setUUID("");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MockThread.getDefaultUncaughtExceptionHandler();
      Page page0 = Page.fail();
      page0.setDownloadSuccess(false);
      page0.setDownloadSuccess(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Page page1 = Page.fail();
      page0.setRawText("");
      Page page2 = page1.setRawText("VIQUg0^Sg.,}w?");
      spider1.getPageCount();
      FilePipeline filePipeline0 = new FilePipeline("");
      PhantomJSDownloader phantomJSDownloader0 = new PhantomJSDownloader("VIQUg0^Sg.,}w?", "/");
      Spider spider2 = spider0.downloader(phantomJSDownloader0);
      spider2.setSpawnUrl(false);
      LinkedList<Pipeline> linkedList0 = new LinkedList<Pipeline>();
      page2.setDownloadSuccess(false);
      spider2.extractAndAddRequests(page1, false);
      spider1.run();
      spider1.getThreadAlive();
      spider1.getCollectorPipeline();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/24_webmagic/us.codecraft.webmagic.scheduler.RedisScheduler");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")");
      SimplePageProcessor simplePageProcessor0 = new SimplePageProcessor("us.codecraft.webmagic.Spider");
      Spider spider0 = Spider.create(simplePageProcessor0);
      Page page0 = new Page();
      MockPrintStream mockPrintStream0 = new MockPrintStream("us.codecraft.webmagic.scheduler.RedisScheduler");
      MultiPagePipeline multiPagePipeline0 = new MultiPagePipeline();
      Spider spider1 = spider0.addPipeline(multiPagePipeline0);
      QueueScheduler queueScheduler0 = new QueueScheduler();
      queueScheduler0.poll(spider0);
      spider1.getScheduler();
      ReplaceSelector replaceSelector0 = new ReplaceSelector("8", "us.codecraft.webmagic.scheduler.RedisScheduler");
      // Undeclared exception!
      try { 
        replaceSelector0.selectList("T-");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.ReplaceSelector", e);
      }
  }
}
