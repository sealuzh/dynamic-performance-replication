/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 20:11:59 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-119);
      byteArray0[2] = (byte) (-115);
      byteArray0[3] = (byte)0;
      int int0 = 0;
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, 0, (byte)0, false);
      T4AndT6Compression.decompressT4_2D(byteArray1, (byte)0, (byte)0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte) (-119), false);
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-119);
      byteArray3[1] = (byte) (-119);
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte)22;
      byteArray3[5] = (byte)15;
      byteArray3[6] = (byte) (-119);
      byte[] byteArray4 = T4AndT6Compression.compressModifiedHuffman(byteArray3, (-285), 0);
      T4AndT6Compression.compressT6(byteArray4, 0, (byte)15);
      T4AndT6Compression.compressT6(byteArray2, 0, 2);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray2, 233, 582, false, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      T4AndT6Compression.compressT6(byteArray0, 0, 1);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)42;
      byteArray1[1] = (byte)42;
      byteArray1[3] = (byte)16;
      byteArray1[4] = (byte)21;
      byteArray1[6] = (byte)13;
      byteArray1[7] = (byte)53;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte)21, (byte)13, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, 2, (-478));
      try { 
        T4AndT6Compression.compressT6(byteArray1, 41, 41);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1270), (-3));
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 2298, (-3));
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-3973), (-3973));
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-3973), 1, false);
      assertArrayEquals(new byte[] {(byte)0, (byte)19, (byte)80, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)1, (byte)1);
      assertArrayEquals(new byte[] {(byte)28}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 2588, 46);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1487), (-1487));
      byte[] byteArray2 = T4AndT6Compression.decompressT4_2D(byteArray1, 352, (-1487), false);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-703), (-703), true);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 1424, 1424, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)117;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)117, (byte)117, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, 1850);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1850, 1792, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)100;
      byteArray0[0] = (byte)100;
      byte byte1 = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte)125;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 20, (byte)38, true, 20);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 14, 14, true, (byte)111);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (-4), (-4));
      T4AndT6Compression.compressT6(byteArray1, 2518, (-4));
      int int0 = 1;
      int int1 = 43;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 1, 43, false, 2518);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = (-2459);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)1, 76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-97);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)58;
      int int0 = 0;
      int int1 = (-357);
      T4AndT6Compression.decompressT4_2D(byteArray0, 0, (-357), false);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, 1536);
      int int2 = (-465);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (-465), (-465), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)1;
      byteArray0[5] = (byte)69;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)1, true);
      int int0 = 1625;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 643, 1625, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-112);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 15, 8);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 21, 2421, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)50;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)50, (byte)50, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-60);
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)62;
      int int0 = 1242;
      int int1 = 81;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1242, 81);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1242
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1123), (-1123), true);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 17;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)1;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)1, (byte)60);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-1), (byte)0, false);
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, 1792);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte) (-1), 1229, false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)2;
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, (-327));
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 2774, (-971));
      assertNotSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)4;
      byteArray0[0] = (byte)4;
      byte byte1 = (byte)111;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)22;
      int int0 = 49;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 14, 14, false, 3373);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)8, (byte)8);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-39);
      byteArray0[0] = (byte) (-39);
      byte byte1 = (byte)35;
      byteArray0[1] = (byte)35;
      byte byte2 = (byte)13;
      byte byte3 = (byte)64;
      byte byte4 = (byte)24;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)64, 15);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      int int0 = (-1195);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1195), (-1195), false);
      int int1 = 2;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2, 2, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte byte0 = (byte) (-25);
      int int0 = 3;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-25), 3, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2, 3, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 3;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-25), 3, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2, 3, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)12;
      byteArray0[3] = (byte)12;
      byte byte1 = (byte)111;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)22;
      int int0 = 49;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 14, 14, false, 3373);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)96;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)44;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)34;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)43;
      byteArray0[8] = (byte)116;
      T4AndT6Compression.decompressT6(byteArray0, 693, (-1670));
      T4AndT6Compression.compressT6(byteArray0, 0, (byte)96);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 10, 2257);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = 67;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 67, 67);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 101, 101);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-1), (byte)0, false);
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, true, 1792);
      int int0 = 72;
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1600, 693);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 475, (-2));
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-2), 475, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-1), (byte)0, false);
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, true, 1792);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, 72, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-1068), 88, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-33);
      byteArray0[1] = (byte)2;
      int int0 = 3;
      T4AndT6Compression.compressT6(byteArray0, 3, (byte)2);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (-3927), (byte)2, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)2;
      T4AndT6Compression.compressT6(byteArray0, 3, (byte)2);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-26);
      byteArray1[1] = (byte)2;
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte)2;
      byteArray1[4] = (byte)2;
      byteArray1[5] = (byte)25;
      byteArray1[6] = (byte) (-26);
      byteArray1[7] = (byte)2;
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (-1392), (byte) (-26), true, (byte)2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)124;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 14, 14, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)2, (byte)2);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, (byte)2, (byte)2, true, (byte)2);
      T4AndT6Compression.decompressT4_2D(byteArray2, (byte)2, (byte)2, true);
      T4AndT6Compression.decompressT4_2D(byteArray2, (byte)2, (byte)2, true);
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 2560, 54);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)2;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, (byte)2);
      int int0 = 2360;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2360, 2360, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)2, (byte)2);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, (byte)2, (byte)2, false, (byte)2);
      byte[] byteArray3 = T4AndT6Compression.decompressT4_2D(byteArray2, (byte)2, (byte)2, false);
      assertArrayEquals(new byte[] {(byte) (-64), (byte)0}, byteArray3);
      assertArrayEquals(new byte[] {(byte) (-64), (byte)4, (byte)0, (byte)64}, byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)25, (byte) (-82), (byte)0, (byte)32, (byte) (-64), (byte)4}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)2, (byte)2, true);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)2, (byte)2, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      int int0 = 143;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 143, 143);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-53);
      byteArray0[7] = (byte) (-116);
      byteArray0[8] = (byte)0;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 63, 3069, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte)124;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte) (-42);
      byteArray0[7] = (byte)3;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)11, 2337, false, (byte) (-21));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, true, (-3));
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)2, 1618, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
