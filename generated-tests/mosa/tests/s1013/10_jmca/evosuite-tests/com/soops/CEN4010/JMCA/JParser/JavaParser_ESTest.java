/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:29:14 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.JavaParserTreeConstants;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectInputStream;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParser_ESTest extends JavaParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Q:`G-2VvqEz");
      try { 
        javaParser0.DefaultValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      try { 
        javaParser0.MethodDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.PrimitiveType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.TypeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(3032);
      JavaParser.ModifierSet.removeModifier(1, 128);
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = null;
      try {
        bufferedReader0 = new BufferedReader(stringReader0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("!D#u~pyF");
      try { 
        javaParser0.MemberSelector();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(373);
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser1.WildcardBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.AnnotationTypeMemberDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SystemInUtil.addInputLine("qHRAVW8vtp*<un,g=+");
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.VariableInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 12.  Encountered: <
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      int int0 = 2800;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.PostfixExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("</");
      try { 
        javaParser0.FormalParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 715);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      javaParser0.getNextToken();
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = javaParser_ModifierSet0.isSynchronized((-4020));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("F>;M");
      javaParser0.enable_tracing();
      try { 
        javaParser0.ContinueStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "#";
      JavaParser.main(stringArray0);
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.Type();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic(0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2370);
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0, charsetDecoder0);
      JavaParser javaParser0 = new JavaParser(inputStreamReader0);
      try { 
        javaParser0.NullLiteral();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("\"=6tdPlsY |LvV?");
      try { 
        javaParser0.Initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("G:i]t%V");
      try { 
        javaParser0.Block();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("{2*j.");
      javaParser0.Modifiers();
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.TryStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.MemberValuePairs();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp((-1433));
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 16, 107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("{<l`N;EG");
      try { 
        javaParser0.TypeParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 61, (-134));
      byteArrayInputStream0.markSupported();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.mark(655);
      try { 
        javaParser0.SingleMemberAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "\"\\t\"";
      JavaParser javaParser0 = new JavaParser("\"\t\"");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0, charsetDecoder0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, Integer.MAX_VALUE, Integer.MAX_VALUE, 4096);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      javaParser0.ReInit(javaParserTokenManager0);
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 2147483647, column 2147483646.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isTransient((-674));
      PipedReader pipedReader0 = new PipedReader(512);
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      try { 
        pipedReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("ReferenceType");
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        javaParser0.Literal();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("F>;M");
      try { 
        javaParser0.FieldDeclaration(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      Token token0 = javaParser0.getNextToken();
      assertEquals(2, token0.endColumn);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "\"1`'L0=\\(;e";
      JavaParser javaParser0 = new JavaParser("\"1`'L0=(;e");
      try { 
        javaParser0.PostfixExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.SynchronizedStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.ReturnStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = JavaParserTreeConstants.JJTTYPEBOUND;
      PipedReader pipedReader0 = new PipedReader(13);
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      try { 
        javaParser0.NormalAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2269), 53);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(dataInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.NormalAnnotation();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      try { 
        javaParser0.LabeledStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.RSIGNEDSHIFT();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(2206);
      JavaParser javaParser0 = new JavaParser("/D <{mN");
      try { 
        javaParser0.PreDecrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.PrimarySuffix();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SystemInUtil.addInputLine("x");
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SystemInUtil.addInputLine("4tlx2=A /+");
      SystemInUtil.addInputLine("4tlx2=A /+");
      JavaParser javaParser0 = new JavaParser("$8}Q09@#~~@0=SH");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.Initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: tlx2
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      javaParser0.Modifiers();
      try { 
        javaParser0.SwitchStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("=;E1u");
      try { 
        javaParser0.ExtendsList(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("F>;M");
      try { 
        javaParser0.ClassOrInterfaceBody(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 712);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      JavaParser javaParser1 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.AssignmentOperator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.CastExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      int int0 = JavaParserTreeConstants.JJTTYPEBOUND;
      JavaParser javaParser1 = new JavaParser("#");
      try { 
        javaParser1.LabeledStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte)59;
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(1L);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)59, 90);
      javaCharStream0.backup((byte)52);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Q:`G-2VvqEz");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser0.PreDecrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.VariableDeclarator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Y%(`Z;D{F1SI;^&4");
      try { 
        javaParser0.VariableInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "^2";
      JavaParser javaParser0 = new JavaParser("^2");
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(403);
      JavaParser javaParser0 = new JavaParser(pipedReader0);
      try { 
        javaParser0.ArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isAbstract(14);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 64, 55);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      JavaParser javaParser1 = new JavaParser(byteArrayInputStream0);
      assertFalse(javaParser1.lookingAhead);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.MemberValuePairs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPublic(1);
      JavaParser javaParser0 = new JavaParser("xNDdv]!$");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1680);
      JavaParser javaParser1 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.BooleanLiteral();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^2");
      try { 
        javaParser0.TypeBound();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser1 = new JavaParser("ROg2|s");
      // Undeclared exception!
      try { 
        javaParser0.ExtendsList(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(373);
      PipedInputStream pipedInputStream0 = new PipedInputStream(373);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      javaParser0.ReInit((InputStream) pipedInputStream0);
      try { 
        javaParser0.TypeArgument();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte) (-69);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-69), 84);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ReturnStatement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      // Undeclared exception!
      try { 
        javaParser0.AssertStatement();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Reader reader0 = null;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.AssertStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.PackageDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      int int0 = 103;
      javaParser_ModifierSet0.isFinal(103);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.Literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(3042);
      JavaParser javaParser0 = new JavaParser("A class cannot extend more than one other class");
      JavaParser javaParser1 = new JavaParser("");
      try { 
        javaParser1.PreIncrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      int int0 = JavaParserTreeConstants.JJTTYPEBOUND;
      try { 
        javaParser0.WildcardBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      try { 
        javaParser0.FormalParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      JavaParser javaParser1 = new JavaParser("z[<*n+_6]x8");
      try { 
        javaParser0.ReferenceType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.VariableDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SystemInUtil.addInputLine("e28880V'yaNia]yQ");
      JavaParser javaParser0 = new JavaParser("94Fq");
      // Undeclared exception!
      try { 
        javaParser0.LocalVariableDeclaration();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: \"a\" (97), after : \"\\'y\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Q:`G-2VvqEz");
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParser javaParser1 = new JavaParser("Z<z~e*1)~cLc");
      try { 
        javaParser1.LocalVariableDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte) (-1);
      byteArray0[4] = (byte) (-74);
      byteArray0[5] = (byte)83;
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)83);
      JavaParser javaParser0 = new JavaParser((com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager) null);
      // Undeclared exception!
      try { 
        javaParser0.ConditionalExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.VariableDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 3.  Encountered: <
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isFinal(3010);
      StringReader stringReader0 = new StringReader("A class cannot extend more than one other class");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 32);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser.main(javaParserTokenManager0.lexStateNames);
      JavaParser javaParser1 = new JavaParser("");
      javaParser0.VariableDeclaratorId();
      JavaParser javaParser2 = new JavaParser(javaParser1.token_source);
      try { 
        javaParser2.ContinueStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ClassOrInterfaceDeclaration((-820));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      charset0.newDecoder();
      JavaParser javaParser0 = new JavaParser("F&>\"g)JFMbCB?");
      try { 
        javaParser0.ForStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.ForStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.PreDecrementExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("$");
      try { 
        javaParser0.ThrowStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      try { 
        javaParser0.Statement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("$k3`d");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      // Undeclared exception!
      try { 
        javaParser0.MemberValuePairs();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isNative((-1891));
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      try { 
        javaParser0.EmptyStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0, charsetDecoder0);
      JavaParser javaParser0 = new JavaParser(inputStreamReader0);
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      boolean boolean0 = JavaCharStream.staticFlag;
      PipedReader pipedReader0 = new PipedReader(512);
      JavaParser javaParser0 = new JavaParser("?nogg.sunDfj44J");
      javaParser0.CompilationUnit();
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      try { 
        javaParser0.SwitchLabel();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isTransient((-662));
      PipedReader pipedReader0 = new PipedReader(512);
      JavaParser javaParser0 = new JavaParser("?nogg.sunDfj44J");
      javaParser0.CompilationUnit();
      JavaParser.ModifierSet javaParser_ModifierSet1 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isProtected(16);
      javaParser0.Modifiers();
      try { 
        javaParser0.InstanceOfExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedReader pipedReader0 = new PipedReader();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2223), (-2223));
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceDeclaration(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStrictfp(1303);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 1896, 512);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-42), 655);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte) (-69);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-69), 84);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.ClassOrInterfaceType();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte)119;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)119, 84);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      try { 
        javaParser0.ClassOrInterfaceType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.EnumBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      JavaParser.ModifierSet.removeModifier(84, 647);
      Reader reader0 = null;
      JavaParser javaParser1 = new JavaParser((Reader) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      JavaParser javaParser2 = new JavaParser(javaParser1.token_source);
      // Undeclared exception!
      try { 
        javaParser1.AllocationExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SystemInUtil.addInputLine("ilQf+aRHN");
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      int int0 = 92;
      javaParser_ModifierSet0.isNative(92);
      char[] charArray0 = new char[4];
      charArray0[0] = ')';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      CharArrayReader charArrayReader0 = null;
      try {
        charArrayReader0 = new CharArrayReader(charArray0, 16, 2453);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      int int0 = 84;
      JavaParser.ModifierSet.removeModifier(84, 647);
      JavaParser javaParser1 = new JavaParser((Reader) null);
      JavaParser javaParser2 = new JavaParser((Reader) null);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParser javaParser3 = new JavaParser("");
      // Undeclared exception!
      try { 
        javaParser2.LocalVariableDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("Q:`G-2VvqEz");
      JavaParser javaParser1 = new JavaParser("Q:`G-2VvqEz");
      try { 
        javaParser1.BreakStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      JavaParser javaParser1 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser1.VariableInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "";
      JavaParser javaParser0 = new JavaParser("");
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isProtected(91);
      javaParser0.Modifiers();
      try { 
        javaParser0.InstanceOfExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      int int0 = JavaParserTreeConstants.JJTTYPEBOUND;
      JavaParser javaParser1 = new JavaParser("#");
      try { 
        javaParser1.ArrayDimsAndInits();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)11;
      byte byte0 = (byte)126;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)111;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[6] = (byte) (-118);
      byteArray0[7] = (byte) (-82);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaParser javaParser0 = new JavaParser((com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager) null);
      // Undeclared exception!
      try { 
        javaParser0.LabeledStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.Arguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      try { 
        javaParser0.NameList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaParser javaParser0 = new JavaParser("hJzfppD[");
      try { 
        javaParser0.ResultType();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(373);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isAbstract((-1705));
      PipedInputStream pipedInputStream0 = new PipedInputStream(110);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1027);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      try { 
        javaParser0.ArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 715);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      try { 
        javaParser0.Arguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-38);
      String string0 = "q+Oitk6uS";
      StringReader stringReader0 = new StringReader("q+Oitk6uS");
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0);
      JavaParser javaParser0 = new JavaParser(pushbackReader0);
      javaParser0.RelationalExpression();
      try { 
        javaParser0.TypeArguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 9.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.TypeArguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)22);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      // Undeclared exception!
      try { 
        javaParser1.ArrayInitializer();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("RXZI/**?d|+K}N:JtC`");
      stringReader0.read();
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.Block();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isSynchronized(63);
      try { 
        javaParser0.EnumConstant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.Statement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isTransient((-875));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 128, 99);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)71);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser0.Arguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)22);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      // Undeclared exception!
      try { 
        javaParser0.WildcardBounds();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.ImplementsList(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("</");
      try { 
        javaParser0.AnnotationTypeBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser.main(stringArray0);
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      javaParser0.lookingAhead = true;
      javaParser0.Type();
      try { 
        javaParser0.ContinueStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!DIJ%DCp9");
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      try { 
        javaParser0.ExplicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      String string0 = "com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.disable_tracing();
      try { 
        javaParser0.VariableDeclaratorId();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 3.  Encountered: <
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("^[2");
      try { 
        javaParser0.DoStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedReader pipedReader0 = new PipedReader();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2223), (-2223));
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      int int0 = 2585;
      try { 
        javaParser0.CastLookahead();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaParser.ModifierSet.removeModifier(1200, 1200);
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isStatic(7);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "8Ft4k";
      JavaParser.main(stringArray0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-172));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.JavaParser$LookaheadSuccess");
      javaParser0.ArgumentList();
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)22);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.FormalParameter();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("\"=6tdPlsY |LvV?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"interface\"");
      JavaParser javaParser1 = new JavaParser("NormalAnnotation");
      try { 
        javaParser1.ExplicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.StatementExpressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SystemInUtil.addInputLine("HF?3Gb7'!ksl&f");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JavaParser javaParser0 = new JavaParser("<IDENTIFIER>");
      try { 
        javaParser0.ExplicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: HF
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      char[] charArray0 = new char[9];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      JavaParser javaParser1 = new JavaParser(pushbackReader0);
      // Undeclared exception!
      try { 
        javaParser1.Literal();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(373);
      Charset charset0 = Charset.defaultCharset();
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      InputStreamReader inputStreamReader0 = new InputStreamReader(dataInputStream0, charsetDecoder0);
      JavaParser javaParser0 = new JavaParser(inputStreamReader0);
      // Undeclared exception!
      try { 
        javaParser0.ForInit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      char[] charArray0 = new char[6];
      charArray0[0] = ',';
      charArray0[1] = '}';
      charArray0[2] = ',';
      charArray0[3] = '{';
      charArray0[4] = '|';
      charArray0[5] = '0';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      try { 
        javaParser0.AssertStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: ,
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("yp*8o'@\"7M");
      try { 
        javaParser0.ForUpdate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)22);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2223), 43);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.Annotation();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("*");
      try { 
        javaParser0.ImportDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      try { 
        javaParser0.RUNSIGNEDSHIFT();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaParser.ModifierSet javaParser_ModifierSet0 = new JavaParser.ModifierSet();
      javaParser_ModifierSet0.isPrivate(35);
      JavaParser javaParser0 = new JavaParser("#");
      Token token0 = javaParser0.getNextToken();
      assertEquals(1, token0.beginLine);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-65);
      byteArray0[0] = (byte)111;
      SystemInUtil.addInputLine("{<l`N;EG");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{<l`N;EG");
      JavaParser javaParser0 = new JavaParser("{<l`N;EG");
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: {
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser javaParser0 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.MethodDeclaration(96);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 715);
      sequenceInputStream0.available();
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaParser0.BlockStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      SystemInUtil.addInputLine("4tlx2=A /+");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?j");
      JavaParser javaParser0 = new JavaParser("4tlx2=A /+");
      javaParser0.ArgumentList();
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 11.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#");
      try { 
        javaParser0.MemberValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "An interface cannot implement other interfaces");
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      token_GTToken0.endColumn = (-58);
      javaParser0.token = null;
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      javaParser1.lookingAhead = true;
      // Undeclared exception!
      try { 
        javaParser1.MethodDeclarator();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "An interface cannot implement other interfaces");
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      token_GTToken0.endColumn = 0;
      javaParser0.token = null;
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'E';
      SystemInUtil.addInputLine("\"package\"");
      JavaParser javaParser0 = new JavaParser("Error: Ignoring invalid lexical state : ");
      javaParser0.ArgumentList();
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 10.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      charArray0[1] = '{';
      charArray0[2] = 'o';
      charArray0[3] = 'G';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0);
      JavaParser javaParser0 = new JavaParser(lineNumberReader0);
      // Undeclared exception!
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"\\\\\" (92), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.IfStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.AnnotationTypeDeclaration(2585);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser.main(stringArray0);
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      javaParser0.VariableInitializer();
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: [
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager javaParserTokenManager0 = new com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.ThrowStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      // Undeclared exception!
      try { 
        javaParser0.MemberValueArrayInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("*");
      SystemInUtil.addInputLine(")anEU.c0,ff\"P`_,E");
      JavaParser javaParser1 = new JavaParser("com.soops.CEN4010.JMCA.JParser.navvParser$LookaheadSucyess");
      try { 
        javaParser1.VariableInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("Ks$#q");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = '7';
      charArray0[1] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      javaParser0.VariableInitializer();
      try { 
        javaParser0.EnumConstant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte)119;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser1 = new JavaParser(byteArrayInputStream0);
      javaParser1.VariableInitializer();
      try { 
        javaParser1.FormalParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      SystemInUtil.addInputLine("4tlx2=A /+");
      JavaParser javaParser0 = new JavaParser("X?2");
      javaParser0.StatementExpressionList();
      try { 
        javaParser0.ArgumentList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 11.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      SystemInUtil.addInputLine("qHRAVW8vtp*<un,g=+");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      SystemInUtil.addInputLine("qHRAVW8vtp*<un,g=+");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "k[Srl]uH");
      JavaParser javaParser0 = new JavaParser("qHRAVW8vtp*<un,g=+");
      try { 
        javaParser0.ExplicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: qHRAVW8vtp
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String[] stringArray0 = new String[1];
      SystemInUtil.addInputLine("z[<*n+_6]x8");
      stringArray0[0] = "z[<*n+_6]x8";
      JavaParser.main(stringArray0);
      JavaParser javaParser0 = new JavaParser("z[<*n+_6]x8");
      try { 
        javaParser0.WhileStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: z
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k4~>rU");
      SystemInUtil.addInputLine("<1s6_ pd:UndE>Y5TS");
      JavaParser javaParser0 = new JavaParser((String) null);
      try { 
        javaParser0.VariableInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 1.  Encountered: <
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("Ks$#q");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[3];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = 'w';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      javaParser0.VariableInitializer();
      javaParser0.EnumConstant();
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 3.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("Ks$#q");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = '7';
      charArray0[1] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.markSupported();
      JavaParser javaParser0 = new JavaParser(charArrayReader0);
      JavaParser javaParser1 = new JavaParser("_6d");
      // Undeclared exception!
      try { 
        javaParser1.EnumConstant();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
