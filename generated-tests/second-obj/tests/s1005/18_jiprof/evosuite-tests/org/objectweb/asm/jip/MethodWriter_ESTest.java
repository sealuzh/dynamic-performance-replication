/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:05:05 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3721);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-90), "L", "", (String) null, (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(114);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "z/}.ktb|EJ~:jc-F", "UAIFwK4*J>", "z/}.ktb|EJ~:jc-F", stringArray0, false, false);
      Label label0 = new Label();
      label0.info = (Object) methodWriter0;
      methodWriter0.visitLocalVariable("LocalVariableTypeTable", "", "LocalVariableTypeTable", label0, label0, (-544));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Siature", "Siature", "RZK", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("java/lang/Throwable", 2);
      methodWriter0.visitCode();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(262144);
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777228, "double", "}(~", "RuntimeVisibleParameterAnnotations", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1838, "8\"'T$U", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      boolean boolean0 = ClassReader.ANNOTATIONS;
      String[] stringArray0 = new String[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[0] = "\"n";
      stringArray0[1] = "\"n";
      stringArray0[2] = "\"n";
      stringArray0[3] = "\"n";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringArray0[4] = "\"n";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"n", "\"n", "\"n", stringArray0, false, false);
      methodWriter0.visitIincInsn((-1), 1);
      methodWriter0.visitCode();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1), "\"n", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-21);
      byteArray0[2] = (byte)107;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Q~D", "$)@Q.", "Q~D", stringArray0, false, false);
      methodWriter0.visitVarInsn(0, 0);
      methodWriter0.visitIincInsn((byte)107, (byte)107);
      methodWriter0.visitTypeInsn(2, "SourceFile");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      String[] stringArray0 = new String[2];
      classWriter0.visitSource("$)@QU", "SIvm/1482Y>");
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "SIvm/1482Y>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "$)@QU", "$)@QU", "sD2XK{&", stringArray0, true, false);
      methodWriter0.visitFrame(1, 1, stringArray0, 22, stringArray0);
      int int0 = 101;
      methodWriter0.visitIincInsn(1739, 101);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(101, "N;V9OV,A4", "m.B)l]67", "Synthetic");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-19));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, true);
      Attribute attribute0 = new Attribute("");
      methodWriter0.visitAttribute(attribute0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)93);
      classWriter0.newLong((byte)93);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "void";
      stringArray0[1] = "tb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "void", "$)YQd.", "void", stringArray0, true, true);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassWriter classWriter1 = new ClassWriter(1);
      Label label0 = new Label();
      int int0 = Frame.LONG;
      methodWriter0.visitInsn(16);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber((-1064), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1449);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "n*YCI='e)C4K";
      stringArray0[1] = "n*YCI='e)C4K";
      stringArray0[2] = "fR,6o]Ev(Dr&Pji";
      stringArray0[3] = "fR,6o]Ev(Dr&Pji";
      stringArray0[4] = "n*YCI='e)C4K";
      stringArray0[5] = "fR,6o]Ev(Dr&Pji";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "fR,6o]Ev(Dr&Pji", "fR,6o]Ev(Dr&Pji", "n*YCI='e)C4K", stringArray0, false, false);
      methodWriter0.visitIincInsn(1, (-1235));
      methodWriter0.visitMethodInsn(552, "BmWMM-820TY}W:", "-%#\"8]bde$17BG}X2?|", "L(I-$fJhjdK.MAN&/9");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-19));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntiaeInvisvblVAnnotatio<s", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("A");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFrame(2, 1, (Object[]) null, 196, (Object[]) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      methodWriter0.visitInsn((-19));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-33));
      String[] stringArray0 = new String[16];
      classWriter0.visitField(495, "*^k:kz)KE\"Z", ":sk62Ut#8j7}m-Uh/", "P,:2/d;SwFN4Mm84", "*^k:kz)KE\"Z");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-33), "P,:2/d;SwFN4Mm84", "*^k:kz)KE\"Z", "*^k:kz)KE\"Z", (String[]) null, true, false);
      methodWriter0.visitFrame((-33), 2, (Object[]) null, 38, stringArray0);
      Integer integer0 = new Integer(495);
      methodWriter0.visitLdcInsn(integer0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "|!(";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "|!(";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "|!(", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-545), "g", "Ljava/lang/Synthetic;", "g", stringArray0, false, false);
      methodWriter1.visitAnnotationDefault();
      // Undeclared exception!
      try { 
        methodWriter1.visitLocalVariable(" zARe]z", " zARe]z", "", (Label) null, (Label) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 131072;
      intArray0[1] = (-402);
      int[] intArray1 = new int[9];
      intArray1[0] = 131072;
      intArray1[1] = (-402);
      intArray1[2] = (-402);
      intArray1[3] = 131072;
      intArray1[4] = 131072;
      intArray1[5] = (-402);
      intArray1[6] = 131072;
      intArray1[7] = (-402);
      intArray1[8] = (-402);
      MethodWriter.getNewOffset(intArray0, intArray1, 128, 131072);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset(intArray1, intArray0, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newField("A", "A", "Ru[timeVisibleParameterAnnotations");
      String[] stringArray0 = new String[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[0] = "Signature";
      classWriter0.newInteger((-9));
      String[] stringArray1 = new String[1];
      stringArray1[0] = "O/6e=aQb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "O/6e=aQb", stringArray1, false, false);
      methodWriter0.visitVarInsn(0, (-1623));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = Type.DOUBLE;
      String[] stringArray0 = new String[0];
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteVector0.putInt((-18));
      byteVector0.putShort(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "$)@Q.", "$)@Q.", "/.>+~<[MlBU ", stringArray0, true, true);
      methodWriter0.visitInsn(8);
      methodWriter0.visitFrame(1, (-18), stringArray0, 8, stringArray0);
      methodWriter0.visitVarInsn((byte)107, 1);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      String[] stringArray0 = new String[9];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^k:kz)KE\"Z", "P,:2/d;SwFN4Mm84", (String[]) null, true, true);
      classWriter0.visitField(4, "*^k:kz)KE\"Z", "*^k:kz)KE\"Z", "*^k:kz)KE\"Z", (Object) null);
      methodWriter0.visitFrame((-19), 2, (Object[]) null, 38, stringArray0);
      methodWriter0.visitFrame(2, 1, (Object[]) null, (-19), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-18));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "<init>";
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1224736776, "<init>", "$)@Q.", "$)@Q.", stringArray0, true, true);
      methodWriter0.visitFrame(1224736776, (byte)79, stringArray0, 1224736776, stringArray0);
      methodWriter0.visitMaxs(1, 2);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      byte[] byteArray0 = new byte[3];
      int int0 = Type.LONG;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "W)@U";
      stringArray0[1] = "W)@U";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 22, "W)@U", "W)@U", "org.objectweb.asm.jip.Label", stringArray0, true, true);
      int[] intArray0 = new int[9];
      intArray0[0] = 7;
      Label label0 = new Label();
      classWriter0.visit(22, 22, "/omYGnezvx\"2oMGbf/{+", "Exceptions", (String) null, stringArray0);
      methodWriter0.visitMaxs(2147, 1);
      int int1 = (-2709);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-2709), (String) null, (String) null, "/omYGnezvx\"2oMGbf/{+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      classWriter0.newNameTypeItem("*^:k_)|E\"Z", "*^:k_)|E\"Z");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "*^:k_)|E\"Z", (String[]) null, true, false);
      methodWriter0.signature = "*^:k_)|E\"Z";
      classWriter0.visitOuterClass("*^:k_)|E\"Z", "*^:k_)|E\"Z", "PW,:2/d;SwFN4Mm84");
      Attribute attribute0 = new Attribute("pM+2Y%j]PksXIH");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFrame(2, 2, (Object[]) null, 196, (Object[]) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitIincInsn((-19), 196);
      methodWriter0.visitMethodInsn(2, "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "*^:k_)|E\"Z");
      methodWriter1.visitIincInsn((-1), 1);
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn(1930, (-19));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1930
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitOuterClass("P,v:2/8;SN4Mm~4", "jN}@v", "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "2B`";
      stringArray0[1] = "g";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[2] = "";
      stringArray0[3] = "2B`";
      stringArray0[4] = "";
      stringArray0[5] = "Q~D";
      stringArray0[6] = "2B`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "Q~D", "", "Q~D", stringArray0, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g");
      Label label0 = new Label();
      label0.outputStackMax = 2;
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitLineNumber(1, label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-19));
      String[] stringArray0 = new String[9];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^k:kz)KE\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      methodWriter0.visitFrame((-19), 2, (Object[]) null, 38, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 1, (Object[]) null, 196, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(147);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?t1YmPeY;EnGnnj";
      stringArray0[1] = "?t1YmPeY;EnGnnj";
      stringArray0[2] = "?t1YmPeY;EnGnnj";
      stringArray0[3] = "?t1YmPeY;EnGnnj";
      stringArray0[4] = "?t1YmPeY;EnGnnj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("?t1YmPeY;EnGnnj", 0);
      methodWriter0.visitMethodInsn(220, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "void", "?t1YmPeY;EnGnnj");
      methodWriter0.visitMaxs(0, 19);
      methodWriter0.visitAnnotation("?t1YmPeY;EnGnnj", false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)79);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "tb";
      stringArray0[1] = "tb";
      stringArray0[2] = "$)YQd.";
      stringArray0[3] = "tb";
      stringArray0[4] = "tb";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte)79, "tb", "$)YQd.", "$)YQd.", stringArray0, true, true);
      classWriter0.firstMethod.visitMaxs(2, 2);
      ClassWriter classWriter1 = new ClassWriter(1);
      Edge edge0 = new Edge();
      classWriter0.newLong(1);
      classWriter0.firstMethod.visitMaxs(1, 1);
      MethodWriter methodWriter2 = classWriter1.firstMethod;
      assertNull(methodWriter2);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-96);
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte)0;
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$)@Q.";
      stringArray0[1] = "tb";
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "tb";
      stringArray0[4] = "tb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1224736769, "tb", "$)@Q.", "$)@Q.", stringArray0, true, true);
      classWriter0.thisName = "$)@Q.";
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)0;
      methodWriter0.visitMaxs((byte)0, 2);
      methodWriter0.visitMaxs(1, (-2524));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "SZfyr-aE|'VV.zoJPS8", "*^:k_)|E\"Z", "*^:k_)|E\"Z", stringArray0, false, false);
      methodWriter0.visitTypeInsn(248, "jN}@v");
      methodWriter0.visitFrame(998, (-2013884533), stringArray0, 2260, stringArray0);
      methodWriter0.visitVarInsn((-1), (-1131));
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      boolean boolean0 = ClassReader.ANNOTATIONS;
      String[] stringArray0 = new String[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[0] = "\"n";
      stringArray0[1] = "\"n";
      stringArray0[2] = "\"n";
      stringArray0[3] = "\"n";
      stringArray0[4] = "\"n";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "\"n", "\"n", "\"n", stringArray0, false, false);
      methodWriter0.visitIntInsn(2, (-2));
      methodWriter0.visitFrame((-2), 2, stringArray0, (-2), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2), "\"n", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "^z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "^z", "LoalVariableT=dale", "^z", stringArray0, false, false);
      methodWriter0.exceptionCount = 2;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.visitSource("", "^z");
      methodWriter0.visitFrame((-1), 1, stringArray0, 1, stringArray0);
      int int0 = Frame.BASE_VALUE;
      ClassWriter classWriter1 = new ClassWriter(1);
      Edge edge0 = new Edge();
      methodWriter0.visitInsn(1);
      methodWriter0.visitVarInsn(1, 158);
      methodWriter0.visitAnnotation("^z", true);
      methodWriter0.visitTypeInsn(1, "^z");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<init>";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "<init>", "", "Exceptions", stringArray0, false, false);
      methodWriter0.visitFieldInsn(16777216, "Exceptions", "tJ.*hYd#)^j5Q\"b", "");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitOuterClass("P,v:2/8;SN4Mm~4", "jN}@v", "");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "2B`";
      stringArray0[1] = "g";
      stringArray0[2] = "";
      stringArray0[3] = "2B`";
      stringArray0[4] = "";
      stringArray0[5] = "Q~D";
      stringArray0[6] = "2B`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, "Q~D", "", "Q~D", stringArray0, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g");
      Label label0 = new Label();
      label0.outputStackMax = 2;
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitTableSwitchInsn(2, 16777216, label0, labelArray0);
      methodWriter0.visitCode();
      methodWriter0.visitMaxs(8, 8);
      methodWriter0.visitIincInsn(1, (-1953));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(8, 0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "A";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "A";
      classWriter0.visitOuterClass("A", "A", "A");
      stringArray0[2] = "A";
      stringArray0[3] = "A";
      stringArray0[4] = "A";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "A", "A", "A", stringArray0, false, false);
      methodWriter0.classReaderOffset = 1;
      methodWriter0.visitMultiANewArrayInsn("n{/}~X4-m", 1);
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitAnnotation("A", false);
      Edge edge0 = new Edge();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Label label0 = new Label();
      methodWriter0.visitIntInsn(1, 2);
      label0.position = 1;
      int[] intArray0 = new int[3];
      intArray0[0] = 1;
      intArray0[1] = (-3470);
      intArray0[2] = 1;
      Label[] labelArray0 = new Label[0];
      classWriter0.firstMethod.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitVarInsn(1, 1);
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitParameterAnnotation((-3470), "A", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "|)QU";
      stringArray0[1] = "|)QU";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|)QU", "|)QU", "|)QU", stringArray0, true, true);
      methodWriter0.visitFrame(1, 1, stringArray0, 22, stringArray0);
      methodWriter0.visitIincInsn(101, 101);
      methodWriter0.visitMethodInsn(101, "N;V9OV,A4", "m.B)l]67", "|)QU");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5aee110f
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(147);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "?t1YmPeY;EnGnnj";
      stringArray0[1] = "?t1YmPeY;EnGnnj";
      stringArray0[2] = "?t1YmPeY;EnGnnj";
      stringArray0[3] = "?t1YmPeY;EnGnnj";
      stringArray0[4] = "?t1YmPeY;EnGnnj";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("?t1YmPeY;EnGnnj", 0);
      methodWriter0.visitMethodInsn(220, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj");
      Item item0 = classWriter0.newFloat(220);
      methodWriter0.visitIincInsn(2, (-116));
      classWriter0.toByteArray();
      methodWriter0.visitFieldInsn(147, "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj", "?t1YmPeY;EnGnnj");
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.Item@e
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)79);
      Item item0 = classWriter0.key3;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "$)@Q.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1266), "2B`", "$)@Q.", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.getSize();
      Frame frame0 = new Frame();
      methodWriter0.visitAnnotationDefault();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "q!^b^?9.8L", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)79);
      Item item0 = classWriter0.key3;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "$)@Q.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1266), "2B`", "$)@Q.", "org.objectweb.asm.jip.Edge", stringArray0, false, false);
      methodWriter0.getSize();
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(2670, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-140));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Tg5)O";
      stringArray0[1] = "StackMap";
      stringArray0[2] = "{!U[{Jz+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "UOh2;Aey_.NQazEk_", "UOh2;Aey_.NQazEk_", "StackMap", stringArray0, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitInsn(15);
      methodWriter0.visitTypeInsn((-140), "Tg5)O");
      methodWriter0.visitMultiANewArrayInsn("O", 15);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@w8", "W)@w8", "J2Xl{", stringArray0, true, true);
      methodWriter0.visitIntInsn(1, 2);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      stringArray0[0] = "z8j3%p-j1[)]r.S";
      int int0 = Frame.LONG;
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-21);
      byteArray0[2] = (byte)107;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-466), "Q~D", "$)@Q.", "Q~D", stringArray0, true, false);
      methodWriter0.visitVarInsn(0, 0);
      methodWriter0.visitIincInsn((-466), (byte)107);
      methodWriter0.visitMultiANewArrayInsn("*X`", 0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)93);
      classWriter0.addUninitializedType("tb", (byte)93);
      classWriter0.newLong((byte)93);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "void";
      stringArray0[1] = "tb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "void", "$)YQd.", "void", stringArray0, true, false);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassWriter classWriter1 = new ClassWriter(1);
      Label label0 = new Label();
      classWriter0.newDouble(2);
      methodWriter0.visitJumpInsn((byte)93, label0);
      methodWriter0.visitMaxs(267, 59);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Type.BOOLEAN;
      ClassWriter classWriter0 = new ClassWriter(101);
      classWriter0.visitAnnotation("", false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 101, "", "$W)@QU", "N}", (String[]) null, false, false);
      methodWriter0.visitIntInsn(3, 2);
      Label label0 = new Label();
      label0.status = 1;
      methodWriter0.visitLabel(label0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "N}");
      methodWriter0.visitJumpInsn(1, label0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = classWriter0.pool;
      assertFalse(byteVector2.equals((Object)byteVector0));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "A";
      stringArray0[1] = "A";
      classWriter0.visitOuterClass("A", "2<`", "P,v:2/8;SN4Mm~4");
      stringArray0[2] = "A";
      stringArray0[3] = "A";
      stringArray0[4] = "A";
      classWriter0.thisName = "jN}@v";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "A", "A", "A", stringArray0, false, false);
      methodWriter0.classReaderOffset = 1;
      methodWriter0.visitTypeInsn(25165824, "2<`");
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      String[] stringArray0 = new String[5];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringArray0[2] = "x8sl1S";
      methodWriter0.getSize();
      int int0 = Frame.FLOAT;
      methodWriter0.visitFieldInsn(16777218, "PW,:2/d;SwFN4Mm84", "V*09~h", "LocalVariableTypeTable");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(104);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "C6A";
      stringArray0[1] = "g";
      stringArray0[2] = ">J5WspZ_h";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "double", ">J5WspZ_h", "C6A", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitInsn(666);
      Integer integer0 = new Integer((-2125));
      methodWriter0.visitLdcInsn("Q~D");
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[2];
      classWriter0.visitSource("|)QU", "|)QU");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      stringArray0[0] = "|)QU";
      stringArray0[1] = "|)QU";
      int[] intArray0 = new int[0];
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {}, intArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3734, "$)YQq.", "|)QU", "RuntimeVisibleAnnotations", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs(22, 22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Q~v";
      stringArray0[1] = "Q~v";
      stringArray0[2] = "Q~v";
      stringArray0[3] = "*^:k_)|E\"Z";
      stringArray0[4] = "CI6A";
      stringArray0[5] = "CI6A";
      stringArray0[6] = "CI6A";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Q~v", "*^:k_)|E\"Z", "Q~v", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("CI6A");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(24117248, "jN}@v");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(0, 0, stringArray0, (-2013884533), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit(24117248, 24117248, "Q~v", "LocalVariableTypeTable", "Q~v", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      Label label0 = null;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1495, stringArray0, 68, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      classWriter0.visitSource("|)QU", "SIvm/1482Y>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[0] = "Qythetic";
      stringArray0[1] = "SIvm/1482Y>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|)QU", "|)QU", "|)QU", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1, 1, stringArray0, 22, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(1739, 101);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(101, "N;V9OV,A4", "m.B)l]67", "Qythetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(101, 101);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("N;V9OV,A4", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitFrame((-2897), 1216, stringArray0, 101, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-18));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "tb";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "{!U[{Jz+";
      stringArray0[4] = "{!U[{Jz+";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte) (-18), "tb", "$)@Q.", "$)@Q.", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      classWriter0.thisName = "$)@Q.";
      methodWriter1.visitMaxs(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMethodInsn((-2133), "tb", "~Ko@84V", "$)@Q.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter1.visitVarInsn(23, 2569);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.firstMethod.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(77, int0);
      
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitInsn((byte) (-18));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-8));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$)jQq.";
      stringArray0[1] = "\tb";
      stringArray0[2] = "$)jQq.";
      stringArray0[3] = "\tb";
      stringArray0[4] = "\tb";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-8), "\tb", "$)jQq.", "$)jQq.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(2, "F]#OXFBz;z7y#4S{]");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "\tb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitMaxs(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean0);
      
      byteArray0[0] = (byte) (-21);
      byteArray0[2] = (byte)107;
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-466), "Q~D", "$)@Q.", "Q~D", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-466), (byte)107);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "SourceFile");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@w8", "W)@w8", "J2Xl{", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1250, 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@w8", "W)@w8", "J2Xl{", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "J2Xl{";
      label0.info = (Object) 1;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      methodWriter0.visitFieldInsn(2, "xK`:5Q[ C!uy6Kii", "Ljava/lang/Synthetic;", "zIFMVo|J kh20");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PW,:2/d;SwFN4Mm84");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Item item0 = classWriter0.newFieldItem("*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", "$)@Q.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean2 = ClassReader.WRITER;
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("*^:k_)|E\"Z", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(40, int0);
      
      int int1 = Frame.FLOAT;
      assertFalse(int1 == int0);
      assertEquals(16777218, int1);
      
      methodWriter0.visitFieldInsn(16777218, "PW,:2/d;SwFN4Mm84", "V*09~h", "Loc6lVa4abeTypeTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-19), "PW,:2/d;SwFN4Mm84", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)92);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      classWriter0.firstMethod = null;
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "tb";
      stringArray0[1] = "tb";
      stringArray0[2] = "$)YQq";
      stringArray0[3] = "$)YQq";
      stringArray0[4] = "$)YQq";
      int int0 = classWriter0.newUTF8("Code");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte)92, "tb", "$)YQq", "$)YQq", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitFrame((byte)92, (byte)92, stringArray0, (byte)92, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitTypeInsn(2, "tb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter1);
      
      methodWriter1.visitIincInsn(188, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitFrame(188, 1, stringArray0, (-240410960), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter1);
      
      classWriter0.visit(16777216, 16777216, "Code", "$)YQq", "tb", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMaxs(157, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitMethodInsn(1828, "Code", "l*4qTSQ8[x]F)/7", "Synthetic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte)0;
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "double";
      stringArray0[1] = "double";
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean0);
      
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "double";
      stringArray0[4] = "double";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)0, "double", "$)@Q.", "$)@Q.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray1);
      assertNotSame(byteArray1, byteArray0);
      
      methodWriter0.visitFrame(1, (byte)0, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.LONG;
      assertEquals(16777220, int0);
      
      methodWriter0.visitInsn((byte)99);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newNameTypeItem("double", "double");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, (-1491));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.thisName = "PW,:2/d;SwFN4Mm84";
      Item item0 = classWriter0.newFieldItem("F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", "PW,:2/d;SwFN4Mm84");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-30), "PW,:2/d;SwFN4Mm84", "F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Item item1 = classWriter0.newInteger(22);
      assertFalse(item1.equals((Object)item0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "En\"gDit_l`");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(28, int0);
      
      methodWriter0.visitFieldInsn(1, "PW,:2/d;SwFN4Mm84", "PW,:2/d;SwFN4Mm84", "Loc6lVa4abeTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y[ >Ae?>hHE% NcT+)");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = ClassReader.RESIZE;
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("F!R)j", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitLdcInsn("F<:F+^)|E\"Z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)107;
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-466), "Q~D", "$)@Q.", "Ljava/lang/Synthetic;", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(28, int1);
      
      methodWriter0.visitMaxs(1, (-466));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMethodInsn((-209), "<init>", "<init>", "$)@Q.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-111);
      byteArray0[6] = (byte)4;
      byteArray0[2] = (byte)121;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.version = (-621);
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-466), "Q~D", "$)@Q.", "Ljava/lang/Synthetic;", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(22, int1);
      
      methodWriter0.visitMaxs(1, (-466));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn((-466), 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "mXHgB)?W_3I_368g4u";
      int int2 = classWriter0.newNameType("mXHgB)?W_3I_368g4u", "Ljava/lang/Synthetic;");
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(7, int2);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2f48209b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte) (-86);
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 652, "$W)@QU", "$W)@QU", "sD2XK{&", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[4];
      intArray0[0] = 652;
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(22, 1999);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn("");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn((byte) (-86), "sD2XK{&");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3721);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-90), "L", "", (String) null, (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitVarInsn(3721, 24);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2683);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putUTF8("org.objectweb.asm.jip.Frame");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.put(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-8), "java/lang/Throwable", "*^:@__)|\"C", "!aK`'qy UxB:o8?", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.thisName = "U)FmfD.";
      classWriter0.visitOuterClass("*^:@__)|\"C", "!aK`'qy UxB:o8?", "U)FmfD.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = (-8);
      methodWriter1.classReaderOffset = 2;
      methodWriter1.visitTypeInsn(1, "W)@U");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(615);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFieldInsn((-8), "*^:@__)|\"C", "!aK`'qy UxB:o8?", "jN}.v");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector2 = new ByteVector();
      assertFalse(byteVector2.equals((Object)byteVector1));
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertNotNull(byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Q~v";
      stringArray0[1] = "";
      stringArray0[2] = "Q~v";
      stringArray0[3] = "*^:k_)|E\"Z";
      stringArray0[4] = "CI6A";
      stringArray0[5] = "CI6A";
      stringArray0[6] = "CI6A";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "Q~v", "*^:k_)|E\"Z", "Q~v", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("CI6A");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(24117248, "jN}@v");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn((-1491), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 0, stringArray0, 14, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)92);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      classWriter0.firstMethod = null;
      boolean boolean0 = ClassReader.ANNOTATIONS;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "tb";
      stringArray0[1] = "tb";
      stringArray0[2] = "$)YQq";
      stringArray0[3] = "tb";
      stringArray0[4] = "tb";
      int int0 = classWriter0.newUTF8("Code");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      classWriter0.visitOuterClass("tb", "Code", "LineNumberTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (byte)92, "tb", "$)YQq", "$)YQq", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      methodWriter1.visitFrame((byte)92, (byte)92, stringArray0, (byte)92, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitMaxs(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter1.visitVarInsn(23, 23);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean4 = ClassReader.RESIZE;
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation("<init>", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      ByteVector byteVector0 = new ByteVector(247);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(2390);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter1.put(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 247;
      intArray0[2] = 247;
      intArray0[3] = (-1541);
      intArray0[4] = (int) (byte)92;
      intArray0[5] = 23;
      intArray0[6] = 1;
      int int1 = MethodWriter.getNewOffset(intArray0, intArray0, 247, 1);
      assertFalse(int1 == int0);
      assertArrayEquals(new int[] {1, 247, 247, (-1541), 92, 23, 1}, intArray0);
      assertEquals((-855), int1);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[5] = (byte) (-64);
      int int0 = Frame.BASE_VALUE;
      assertEquals(1048575, int0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "{!U[{Jz+";
      stringArray0[2] = "$).";
      stringArray0[3] = "{!U[{Jz+";
      int int1 = classWriter0.newMethod("{!U[{Jz+", "{!U[{Jz+", "&A]AT{", true);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(5, int1);
      
      stringArray0[4] = "$).";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-64), "{!U[{Jz+", "$).", "$).", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("BX-WeWk'kh;N", (byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(799, (byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitMaxs(2, 127);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(16777219, "Z_vw", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16777219
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.version = 185;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ljava/lang/Synthetic;");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisib}eParameterAnnotations";
      stringArray0[1] = "RuntimeVisib}eParameterAnnotations";
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisib}eParameterAnnotations");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      classWriter0.visitSource("RuntimeVisib}eParameterAnnotations", "Ljava/lang/Synthetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1920, "Synthetic", "Synthetc", "RuntimeVisib}eParameterAnnotations", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(5, (-2038), stringArray0, 3275, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(32767, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(55, int0);
      
      Integer integer0 = new Integer(1777);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(1777, (int)integer0);
      
      methodWriter0.visitMaxs(303, 3275);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(170);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "PW,:2/d;SwFN4Mm84";
      stringArray0[1] = "PW,:2/d;SwFN4Mm84";
      stringArray0[2] = "PW,:2/d;SwFN4Mm84";
      stringArray0[3] = "PW,:2/d;SwFN4Mm84";
      stringArray0[4] = "PW,:2/d;SwFN4Mm84";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "PW,:2/d;SwFN4Mm84", "PW,:2/d;SwFN4Mm84", "PW,:2/d;SwFN4Mm84", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("PW,:2/d;SwFN4Mm84", 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(170, 2, stringArray0, 1211, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(0, 19);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      classWriter0.firstMethod = methodWriter0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      ByteVector byteVector0 = new ByteVector(552);
      assertNotNull(byteVector0);
      
      classWriter0.firstMethod.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[2] = (byte) (-64);
      byteArray0[5] = (byte) (-64);
      int int0 = Frame.BASE_VALUE;
      assertEquals(1048575, int0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "{!U[{Jz+";
      stringArray0[2] = "{!U[{Jz+";
      stringArray0[3] = "{!U[{Jz+";
      stringArray0[4] = "{!U[{Jz+";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-64), "{!U[{Jz+", "$).", "$).", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.threshold = (int) (byte) (-64);
      methodWriter0.visitMultiANewArrayInsn("BX-WeWk'kh;N", (byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(799, (byte) (-64));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(93, 93);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitMaxs(3196, 147);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 147, (byte) (-64));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 155
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("o", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "o";
      stringArray0[1] = "sD2XK{&";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 652, "$W)@QU", "$W)@QU", "sD2XK{&", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[7];
      intArray0[3] = 2;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(0, 22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-R7M+O[`5\"y");
      assertFalse(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(2109);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Jl^e_g5B", "float", "Signature", (String[]) null, false, false);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newNameTypeItem("$)@Q.", "*^:k_)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "_&-", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.signature = "x8sl1S";
      classWriter0.visitOuterClass("*^:k_)|E\"Z", "x8sl1S", "V*09~h");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("pM+2Y%j]PksXIH");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("2z*EPF6tELAXs ", (-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn((-19), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMethodInsn(15, "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "$)@Q.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn(1930, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1930
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisib}eParameterAnnotations");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisib}eParameterAnnotations";
      stringArray0[1] = "RuntimeVisib}eParameterAnnotations";
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisib}eParameterAnnotations");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      classWriter0.visitSource("RuntimeVisib}eParameterAnnotations", "RuntimeVisib}eParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "Synthetic", "Syn}thetc", "RuntimeVisib}eParameterAnnotations", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitFrame(5, (-2038), stringArray0, 3282, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitLineNumber(32767, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitVarInsn(32767, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.SHORT;
      assertEquals(16777228, int0);
      
      Integer integer0 = new Integer((-2342));
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals((-2342), (int)integer0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      int int1 = methodWriter1.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(67, int1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn(57, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@w8", "W)@w8", "J2Xl{", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.successor;
      assertNull(label2);
      
      Label label3 = label0.getFirst();
      assertFalse(label0.equals((Object)label1));
      assertFalse(label3.equals((Object)label1));
      assertNotNull(label3);
      assertNotSame(label0, label1);
      assertSame(label0, label3);
      assertSame(label3, label0);
      assertNotSame(label3, label1);
      
      String string0 = label1.toString();
      assertFalse(label1.equals((Object)label3));
      assertFalse(label1.equals((Object)label0));
      assertNotNull(string0);
      assertNotSame(label1, label3);
      assertNotSame(label1, label0);
      assertEquals("L18", string0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitTableSwitchInsn(1259, 1, label0, labelArray0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertSame(label0, label3);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[0] = "*^:k_)|E\"Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*^:k_)|E\"Z", "x8sl1S", "V*09~h");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("P,:2/d;SwFN4Mm84");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitMultiANewArrayInsn("2z*EPF6tELA&Xs ", (-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn(9, 196);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMethodInsn((-19), "*^:k_)|E\"Z", "*^:k_)|E\"Z", "U)F@QH.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(55, 1443168256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitLineNumber(55, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter1.visitTableSwitchInsn((-19), 196, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-18));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("{!U[{Jz+", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "<init>";
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1224736776, "<init>", "$)@Q.", "$)@Q.", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1224736776, (byte)79, stringArray0, 1224736776, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("{!U[{Jz+", "<init>", "$)@Q.", label0, label0, 1224736776);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("<init>");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      methodWriter0.visitMaxs(1, 2);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-8));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "\tb";
      stringArray0[1] = "\tb";
      stringArray0[2] = "$)jQq.";
      stringArray0[3] = "$)jQq.";
      stringArray0[4] = "$)jQq.";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-8), "\tb", "$)jQq.", "$)jQq.", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "\tb");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitMaxs(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "CI6A";
      stringArray0[1] = "";
      stringArray0[2] = "CI6A";
      stringArray0[3] = "*^:k_)|E\"Z";
      stringArray0[4] = "CI6A";
      stringArray0[5] = "CI6A";
      stringArray0[6] = "CI6A";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "CI6A", "*^:k_)|E\"Z", "CI6A", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("CI6A");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(24117248, "jN}@v");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn((-1491), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(0, 0, stringArray0, (-2013884533), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visit((-2013884533), 7, "CI6A", "*^:k_)|E\"Z", "/omYGnezvx\"2oMGbf/{+", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, (-300));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(186, "omYGnezvx\"2oMGbf/{+", "StackMap", "CI6A");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      ClassWriter classWriter0 = new ClassWriter(101);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 6, "", "$W)@QU", "N}", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(3, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(7, (-2495));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "N}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt((-620));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "N}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("P,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "z0( '", label0, label0, (-538));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "($Ic(os+oG*Hp>p";
      // Undeclared exception!
      try { 
        classWriter0.visit(17, 17, "Jk$_PWnoe{ts", "RsdG[u", "z0( '", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      ClassWriter classWriter0 = new ClassWriter(101);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "$W)@QU", "N}", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(3, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(7, (-2495));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "N}");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt((-620));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitLocalVariable("", "N}", "N}", label0, label0, (-98));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("N}", "SourceFile", "N}", label0, label0, (-1617543182));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "_&-", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*^:k_)|E\"Z", "x8sl1S", "V*09~h");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("pM+2Y%j]PksXIH");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("2z*EPF6tELAXs ", (-19));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 2, (Object[]) null, 2, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn((-19), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(15, "PW,:2/d;SwFN4Mm84", "*^:k_)|E\"Z", "$)@Q.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(191);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFieldInsn(168, "_&-", "java/lang/Throwable", "2z*EPF6tELAXs ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = (-19);
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:M/d;SwFN4Mm84", "*^:k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(2022, (-18));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-19), 2, (Object[]) null, 38, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("A");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber((-2013884532), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(186, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[8];
      Label label1 = label0.successor;
      assertNull(label1);
      
      labelArray0[0] = null;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = null;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(1745, 6, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte) (-18));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("{!U[{Jz+", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "{!U[{Jz+", "{!U[{Jz+", "java/lang/Object", (Object) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(fieldWriter0);
      
      classWriter0.lastField = fieldWriter0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "<init>";
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "<init>";
      stringArray0[4] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1224736769, "<init>", "$)@Q.", "$)@Q.", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1224736769, (byte)79, stringArray0, 1224736769, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      label0.successors = null;
      Edge edge2 = new Edge();
      assertFalse(edge2.equals((Object)edge0));
      assertNotNull(edge2);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeVisibleAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt((-1128));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putInt(21);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      
      Integer integer0 = new Integer(1224736769);
      assertNotNull(integer0);
      assertEquals(1224736769, (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)92);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$)YQd.";
      stringArray0[1] = "tb";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "$)YQd.", "$)YQd.", "$)YQd.", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newDouble(2);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter1.visitJumpInsn((byte)92, label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(251, 59);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      stringArray0[0] = "*^:@k_)|E\"Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-19), "P,:2/d;SwFN4Mm84", "*^:@k_)|E\"Z", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*^:@k_)|E\"Z", "P,:2/d;SwFN4Mm84", "U)F@QH.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("P,:2/d;SwFN4Mm84");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitMultiANewArrayInsn("U)F@QH.", (-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFieldInsn(55, "Q~D", "*^:@k_)|E\"Z", "U)F@QH.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotation(" tVT", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn(9, 196);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(196, 55);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotationDefault();
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[0];
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.thisName = "$)@Q.";
      classWriter0.visitOuterClass("RuntimeInvisible?nnotaions", "En\"gDit_l`", "$)@Q.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", "$)@Q.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-30), "PW,:2/d;SwFN4Mm84", "F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item1 = classWriter0.newInteger(22);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "En\"gDit_l`");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(28, int0);
      
      methodWriter0.visitFieldInsn(1, "PW,:2/d;SwFN4Mm84", "$)@Q.", "Loc6lVa4abeTypeTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("$)@Q.", 1547);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y[ >Ae?>hHE% NcT+)");
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      boolean boolean3 = ClassReader.RESIZE;
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("F!R)j", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte(1547);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)99;
      byteArray0[1] = (byte)62;
      ClassWriter classWriter0 = new ClassWriter((byte)62);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "$)@Q.";
      stringArray0[1] = "double";
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte)99, (byte)62, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean0);
      
      int int0 = Frame.TOP_IF_LONG_OR_DOUBLE;
      assertEquals(8388608, int0);
      
      stringArray0[2] = "$)@Q.";
      stringArray0[3] = "double";
      stringArray0[4] = "double";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte)0, "double", "$)@Q.", "$)@Q.", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitFrame(1, (byte)62, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int1 = classWriter0.newConst("double");
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(5, int1);
      
      methodWriter0.visitInsn((byte)99);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      edge0.successor = label0;
      int int2 = methodWriter0.getSize();
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(53, int2);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = edge0.successor;
      methodWriter0.visitTableSwitchInsn(5, 8388608, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "q!^b^?9.8L";
      Attribute attribute0 = new Attribute("q!^b^?9.8L");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0pi1m(dN!q]";
      Item item0 = classWriter0.newFloat(45);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[1] = "0pi1m(dN!q]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@8", "W)@8", "J25Xl{", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(45, "0pi1m(dN!q]");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitLocalVariable("0pi1m(dN!q]", "J25Xl{", "long", label1, label0, 187);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      methodWriter0.visitMaxs(2, 39);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(24117248, 2, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(87, int0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*^:@__)|\"C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-8), "java/lang/Throwable", "*^:@__)|\"C", "RuntimeInvisibleAnnotations", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newMethodItem("\tb", "*^:@__)|\"C", "\tb", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classWriter0.visitOuterClass("*^:@__)|\"C", "x8sl1S", "U)FmfH.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMaxs(12, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 12, stringArray0, 2, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*3:@k)|E\"Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5), "M_ !L", "*3:@k)|E\"Z", "CR IqD9yW/eq6", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*3:@k)|E\"Z", "M_ !L", "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(158, "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitTypeInsn(34, "- acUi/+`{L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "M_ !L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      methodWriter2.visitMaxs(2, 34);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      methodWriter2.visitVarInsn(168, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*3:@k)|E\"Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5), "`_ L", "*3:@k)|E\"Z", "CR IqD9yW/eq6", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*3:@k)|E\"Z", "`_ L", "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(169, "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = 55;
      methodWriter1.visitIincInsn((-5), 196);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.exceptionCount = 4750;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitJumpInsn(169, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      label0.inputStackTop = (-1786);
      int[] intArray0 = new int[3];
      intArray0[2] = 4750;
      intArray0[1] = 2;
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitMaxs(13, 169);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(13, "*3:@k)|E\"Z", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*3:@k)|E\"Z";
      Item item0 = classWriter0.newInteger(66);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5), "M_ !L", "*3:@k)|E\"Z", "CR IqD9yW/eq6", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(2, "*3:@k)|E\"Z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(611);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(1L, 1);
      Item item1 = classWriter1.newDouble(9);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertNotSame(classWriter1, classWriter0);
      assertNotSame(item1, item0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2028477748), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2028477748
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "*3:@k)|E\"Z";
      Item item0 = classWriter0.newInteger(66);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      boolean boolean2 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5), "M_ !L", "*3:@k)|E\"Z", "CR IqD9yW/eq6", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(66);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(66, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2768, 2768);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "I%6A";
      stringArray0[1] = "";
      stringArray0[2] = "I%6A";
      stringArray0[3] = "*^:k_)|E\"Z";
      stringArray0[4] = "I%6A";
      stringArray0[5] = "I%6A";
      stringArray0[6] = "I%6A";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "I%6A", "*^:k_)|E\"Z", "I%6A", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("I%6A");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(24117248, "jN}@v");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((-1491), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(0, 0, stringArray0, (-2013884533), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visit((-2013884533), 7, "I%6A", "*^:k_)|E\"Z", "/omYGnezvx\"2oMGbf/{+", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 7;
      intArray0[1] = (-1491);
      intArray0[2] = 2;
      intArray0[3] = 24117248;
      intArray0[4] = 186;
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {7, (-1491), 2, 24117248, 186}, intArray0);
      
      ByteVector byteVector0 = new ByteVector(141);
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 57;
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) intArray0;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {57}, intArray0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {57}, intArray0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-95);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 9, 2234);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "^z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "^z", "LoalVariableT=dale", "^z", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 2;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.visitSource("Rq`yVp=RGH", "^z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-1), 1, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BASE_VALUE;
      assertEquals(1048575, int0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitInsn(1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      methodWriter0.visitVarInsn(1, 158);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("^z", false);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter0, classWriter1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((byte) (-64));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = classWriter0.newNameType("$).", "$).");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, int0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "{!U[{Jz+";
      stringArray0[1] = "4Tf'E8R1~*";
      stringArray0[2] = "$).";
      stringArray0[3] = "4Tf'E8R1~*";
      stringArray0[4] = "$).";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-64), "4Tf'E8R1~*", "$).", "$).", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("$).");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[8];
      classWriter0.firstMethod.exceptions = intArray0;
      int int1 = Frame.LONG;
      assertFalse(int1 == int0);
      assertEquals(16777220, int1);
      
      methodWriter0.visitInsn(188);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "*3:@k)|E\"Z";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "*3:@k)|E\"Z";
      String string1 = "CR IqD9yW/eq6";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-5), "`_ L", "*3:@k)|E\"Z", "CR IqD9yW/eq6", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("*3:@k)|E\"Z", "`_ L", "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(169, "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = 55;
      methodWriter1.visitIincInsn((-5), 196);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitMultiANewArrayInsn("*3:@k)|E\"Z", 54);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.exceptionCount = 4750;
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = classWriter0.newClass("CR IqD9yW/eq6");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitVarInsn(169, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitIincInsn(6, 370);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)79);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNull(methodWriter0);
      
      classWriter0.firstMethod = null;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "tb";
      stringArray0[1] = "tb";
      stringArray0[2] = "d7[|i3";
      stringArray0[3] = "tb";
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "d7[|i3", "d7[|i3", "W)@w8", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitIntInsn(17, (byte)79);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.firstMethod.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(classWriter0.firstMethod, methodWriter1);
      assertSame(classWriter0.firstMethod, methodWriter2);
      
      int int0 = Frame.LONG;
      assertEquals(16777220, int0);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      
      methodWriter3.visitInsn(2207);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)41;
      byteArray0[5] = (byte) (-29);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte)49, (byte) (-23), (byte) (-23), (byte)33, (byte)81, (byte) (-29), (byte)0}, byteArray0);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-4));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalVariableT=dable";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "C", "LocalVariableT=dable", "C", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = (int) (byte) (-29);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "LocalVariableT=dable", "LocalVariableT=dable", "LocalVariableT=dable", (Object) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(fieldWriter0);
      
      FieldWriter fieldWriter1 = fieldWriter0.next;
      assertNull(fieldWriter1);
      
      classWriter0.lastField = null;
      methodWriter0.visitFrame(4, 1, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("CTNyZF`]Zey;x", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-2241), (byte) (-33));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2241
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = new byte[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      byteArray0[0] = (byte)74;
      Item item0 = classWriter0.newLong((byte)74);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "W)@U";
      stringArray0[1] = "W)@U";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 611, "W)@U", "W)@U", "org.objectweb.asm.jip.Label", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertNotNull(label2);
      
      methodWriter0.visitTypeInsn(2, "org.objectweb.asm.jip.Label");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label1, label1, label2, "W)@U");
      assertFalse(label0.equals((Object)label2));
      assertFalse(label1.equals((Object)label2));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label2);
      assertSame(label0, label1);
      assertNotSame(label1, label2);
      assertSame(label1, label0);
      assertNotSame(label2, label0);
      assertNotSame(label2, label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "i1m(dN!q]";
      Item item0 = classWriter0.newFloat(45);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      stringArray0[1] = "i1m(dN!q]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@8", "W)@8", "J25Xl{", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      stringArray0[0] = "J25Xl{";
      methodWriter0.visitTypeInsn(45, "i1m(dN!q]");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitLocalVariable("i1m(dN!q]", "J25Xl{", "long", label1, label0, 187);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-3241), 8388608);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      Item item0 = classWriter0.newLong((-758L));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      int int0 = Type.LONG;
      assertEquals(7, int0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "H`<ZjF*mG";
      stringArray0[1] = "*3:@k)|E\"Z";
      stringArray0[2] = "W)@U";
      stringArray0[3] = "M_ !L";
      stringArray0[4] = "H`<ZjF*mG";
      stringArray0[5] = "H`<ZjF*mG";
      stringArray0[6] = "H`<ZjF*mG";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "*3:@k)|E\"Z", "*3:@k)|E\"Z", "H`<ZjF*mG", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      methodWriter0.visitTypeInsn((-5), "*3:@k)|E\"Z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label2, label0, label2, "H`<ZjF*mG");
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label0.equals((Object)label2));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      assertSame(label0, label1);
      assertNotSame(label0, label2);
      
      methodWriter0.visitLabel(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(184, (-226));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*^:@__)|\"C";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-8), "java/lang/Throwable", "*^:@__)|\"C", "!aK`'qy UxB:o8?", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.thisName = "U)FmfD.";
      classWriter0.visitOuterClass("*^:@__)|\"C", "x8sl1S", "U)FmfD.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderOffset = (-8);
      methodWriter1.classReaderOffset = 2;
      methodWriter1.visitTypeInsn(1, "W)@U");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitTypeInsn((-8), "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitTryCatchBlock(label0, label1, label1, "java/lang/Throwable");
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter0.visitLabel(label0);
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label0, label1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(1042, 184);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0pi1m(dN!q]";
      Item item0 = classWriter0.newFloat(45);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      stringArray0[1] = "0pi1m(dN!q]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "W)@8", "W)@8", "J25Xl{", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[0] = "J25Xl{";
      methodWriter0.visitTypeInsn(45, "0pi1m(dN!q]");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitLocalVariable("J25Xl{", "0pi1m(dN!q]", "Ao9KO <7%>8GxX-^TES", label0, label1, 74);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIincInsn(45, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      short short0 = MethodWriter.readShort(byteArray0, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals((short) (-326), short0);
      
      methodWriter1.visitLdcInsn("eC)itD:,/!l");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = MethodWriter.readUnsignedShort(byteArray0, 57);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(8252, int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter((byte) (-8));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newNameType("3pe%\"v.=RMC^t;FtQ", "3pe%\"v.=RMC^t;FtQ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, int0);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("3pe%\"v.=RMC^t;FtQ", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "3pe%\"v.=RMC^t;FtQ";
      stringArray0[1] = "3pe%\"v.=RMC^t;FtQ";
      stringArray0[2] = "$)@QU";
      stringArray0[3] = "3pe%\"v.=RMC^t;FtQ";
      stringArray0[4] = "3pe%\"v.=RMC^t;FtQ";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "3pe%\"v.=RMC^t;FtQ", "$)@QU", "$)@QU", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Item item0 = classWriter0.newFieldItem("$)@QU", "3pe%\"v.=RMC^t;FtQ", "$)@QU");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      classWriter0.lastMethod = methodWriter0;
      label0.addToSubroutine(0L, 1);
      String string0 = "iC?fmpDh5Z#|%,XjkH";
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("iC?fmpDh5Z#|%,XjkH", (String) null, (String) null, label0, label0, (-19));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      classWriter0.thisName = "0I*Fk6@/wV";
      classWriter0.thisName = "$)@Q.";
      classWriter0.visitOuterClass("RuntimeInvisible?nnotaions", "En\"gDit_l`", "[!4[p8DIP`Oi=y");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newFieldItem("F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", "$)@Q.");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-30), "PW,:2/d;SwFN4Mm84", "F<:F+^)|E\"Z", "RuntimeInvisible?nnotaions", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Item item1 = classWriter0.newInteger(22);
      assertFalse(item1.equals((Object)item0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "En\"gDit_l`");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(28, int0);
      
      methodWriter0.visitFieldInsn(1, "PW,:2/d;SwFN4Mm84", "$)@Q.", "Loc6lVa4abeTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("[!4[p8DIP`Oi=y", 1547);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y[ >Ae?>hHE% NcT+)");
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      boolean boolean3 = ClassReader.RESIZE;
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotation("F!R)j", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      
      methodWriter0.visitMaxs(1547, 168);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIincInsn(1547, 64);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(77, int1);
  }
}
