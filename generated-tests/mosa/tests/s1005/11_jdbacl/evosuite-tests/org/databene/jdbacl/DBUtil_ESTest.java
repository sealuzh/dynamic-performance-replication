/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:17:49 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.impl.services.monitor.FileMonitor;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.h2.command.Command;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.Session;
import org.h2.engine.SessionRemote;
import org.h2.jdbc.JdbcConnection;
import org.h2.schema.Schema;
import org.h2.table.MetaTable;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("table", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) proxy0, "7bc -O.vkJzO`E+f", "", true, false, false, true, "7bc -O.vkJzO`E+f", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = DBUtil.available("2/8;SN4Mm~", "2/8;SN4Mm~", "2/8;SN4Mm~", "2/8;SN4Mm~");
      DBUtil.resetMonitors();
      boolean boolean1 = DBUtil.existsEnvironment("2/8;SN4Mm~");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      DBUtil.available("ZmiITmr|>Bv;U#", "ZmiITmr|>Bv;U#", "ZmiITmr|>Bv;U#", "}gmP/'tVC9v'!");
      DBUtil.resetMonitors();
      String string0 = "' found";
      // Undeclared exception!
      try { 
        DBUtil.connect((String) null, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      String string0 = null;
      boolean boolean0 = false;
      try { 
        DBUtil.connect((String) null, (String) null, (String) null, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("--");
      DBUtil.dependencyOrderedTables(tableContainer0);
      CreateTableData createTableData0 = new CreateTableData();
      Schema schema0 = createTableData0.schema;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("!|[Md.jLhW");
      String[] stringArray0 = new String[3];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "]HNdy$)SZHH7,s<9}P;";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil.close((Statement) null);
      ConstraintDefinitionNode constraintDefinitionNode0 = new ConstraintDefinitionNode();
      String string0 = "*u2uEq\\H]UariJDwc1";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("*u2uEqH]UariJDwc1", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: *u2uEqH]UariJDwc1
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = " block: ";
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      InsertNode insertNode0 = new InsertNode();
      jdbcDriver0.connect(" block: ", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.query(" block: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = "X?-hNk D";
      String string1 = "C/C8?J;7\"D()fq";
      Level level0 = Level.info;
      ErrorHandler errorHandler0 = new ErrorHandler("T", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("C/C8?J;7\"D()fq", "T", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: C/C8?J;7\"D()fq
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = null;
      String string0 = "f x| -liYf?b";
      // Undeclared exception!
      try { 
        DBUtil.countRows("f x| -liYf?b", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.resetMonitors();
      TableContainer tableContainer0 = new TableContainer("--");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("--", "--", "--", "--");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting -- failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = " block: ";
      String string1 = "ex";
      String string2 = "getHashTableResultSet";
      ConnectionInfo connectionInfo0 = new ConnectionInfo("getHashTableResultSet");
      ErrorHandler errorHandler0 = new ErrorHandler(" block: ");
      errorHandler0.setLoggingStackTrace(false);
      // Undeclared exception!
      try { 
        DBUtil.runScript(" block: ", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.existsEnvironment("43X77.U");
      Connection connection0 = null;
      ErrorHandler errorHandler0 = new ErrorHandler("");
      // Undeclared exception!
      try { 
        DBUtil.runScript("43X77.U", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBUtil.escape("--block:");
      Session session0 = new Session();
      // Undeclared exception!
      try { 
        session0.getLogId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.engine.Session", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "--";
      ErrorHandler errorHandler0 = new ErrorHandler("--");
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      Connection connection0 = null;
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--", (Connection) null, true, errorHandler0);
      String string1 = "bl";
      // Undeclared exception!
      try { 
        DBUtil.runScript("bl", (Connection) null, (boolean) dBExecutionResult0.changedStructure, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-4592L));
      DBUtil.getOpenConnectionCount();
      DBUtil.close((Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("serverName", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: serverName
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "X0Y66.S";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.assertAllDbResourcesClosed(false);
      Connection connection0 = null;
      long long0 = MetaTable.ROW_COUNT_APPROXIMATION;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "X0Y66.S", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBUtil.existsEnvironment("");
      ErrorHandler errorHandler0 = new ErrorHandler("");
      DBUtil.runScript("", (Connection) null, false, errorHandler0);
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "", false, 0, 5, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      FileMonitor fileMonitor0 = new FileMonitor();
      fileMonitor0.getApplicationProperties();
      fKConstraintDefinitionNode0.getProperties();
      DBUtil.available("", "?-43X77.U", "", "--bl");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("Y_LZg", (String) null, "", "IF", "Y_LZg", "Y&$}5)&");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBUtil.available("2/8;SN4Mm~", "2/8;SN4Mm~", "2/8;SN4Mm~", "2/8;SN4Mm~");
      TableContainer tableContainer0 = new TableContainer("gf<W%0&QLj;Mk'");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "z", "4=<#>.4gD/:W\",l", "gf<W%0&QLj;Mk'");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
