/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 15:00:52 GMT 2019
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.nio.charset.Charset;
import okio.Buffer;
import okio.ByteString;
import okio.HashingSink;
import okio.RealBufferedSource;
import okio.Segment;
import okio.SegmentedByteString;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SegmentedByteString_ESTest extends SegmentedByteString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("N];");
      buffer1.size = 3482L;
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 553);
      segmentedByteString0.hashCode();
      assertEquals(553, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      segmentedByteString0.hashCode();
      segmentedByteString0.hashCode();
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      byte[] byteArray0 = new byte[3];
      ByteString byteString0 = ByteString.of(byteArray0);
      boolean boolean0 = segmentedByteString0.equals(byteString0);
      assertFalse(boolean0);
      assertEquals(274, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      // Undeclared exception!
      try { 
        segmentedByteString0.getByte(255);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1499
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 1);
      String string0 = segmentedByteString0.utf8();
      assertEquals("X", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      String string0 = segmentedByteString0.toString();
      assertEquals("[text=X^TS(@OIYj(}z;NU}]", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@O)Yj(};NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 1);
      segmentedByteString0.toAsciiLowercase();
      assertEquals(1, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 6);
      segmentedByteString0.substring(6, 6);
      assertEquals(6, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("xb4;`U5x*?a*;_N");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 16);
      assertEquals(16, segmentedByteString0.size());
      
      ByteString byteString0 = segmentedByteString0.substring(0, 16);
      assertEquals(16, byteString0.size());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      ByteString byteString0 = segmentedByteString0.substring(2);
      assertEquals(15, byteString0.size());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      Charset charset0 = Charset.defaultCharset();
      String string0 = segmentedByteString0.string(charset0);
      assertEquals("X^TS(@OIYj(}z;NU}", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      int int0 = segmentedByteString0.size();
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      segmentedByteString0.sha256();
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      boolean boolean0 = segmentedByteString0.rangeEquals(31, (ByteString) null, 274, (-1754));
      assertTrue(boolean0);
      assertEquals(274, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      byte[] byteArray0 = new byte[0];
      int int0 = segmentedByteString0.lastIndexOf(byteArray0, 0);
      assertEquals(17, segmentedByteString0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      byte[] byteArray0 = new byte[0];
      int int0 = segmentedByteString0.lastIndexOf(byteArray0, 17);
      assertEquals(17, segmentedByteString0.size());
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      byte[] byteArray0 = segmentedByteString0.internalArray();
      assertEquals(17, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OI|j((z;!U}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 1);
      byte[] byteArray0 = new byte[0];
      int int0 = segmentedByteString0.indexOf(byteArray0, 1);
      assertEquals(1, int0);
      assertEquals(1, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 1);
      byte[] byteArray0 = new byte[7];
      segmentedByteString0.indexOf(byteArray0, 704);
      assertEquals(1, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 1);
      segmentedByteString0.hmacSha256(segmentedByteString0);
      assertEquals(1, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeIntLe(2);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 2);
      String string0 = segmentedByteString0.hex();
      assertEquals("0200", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OI|j((z;!U}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      byte byte0 = segmentedByteString0.getByte(15);
      assertEquals((byte)85, byte0);
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(2);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 2);
      String string0 = segmentedByteString0.base64();
      assertEquals("AgA=", string0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      segmentedByteString0.write(buffer0);
      assertEquals(0L, buffer0.size());
      assertTrue(buffer0.exhausted());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 255;
      segment0.prev = buffer0.head;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 255);
      // Undeclared exception!
      try { 
        segmentedByteString0.write(buffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring((int) (byte)76, (-3400));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        segmentedByteString0.string(charset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals(76, byteArray0, (int) (byte)68, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals(1912, byteArray0, 1912, 1912);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals(0, byteArray0, 53, (int) (byte) (-93));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      byte[] byteArray0 = new byte[5];
      boolean boolean0 = segmentedByteString0.rangeEquals((-1754), byteArray0, (int) (byte)104, (int) (byte)100);
      assertEquals(274, segmentedByteString0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      ByteString byteString0 = ByteString.EMPTY;
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals(0, byteString0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 255;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 255);
      boolean boolean0 = segmentedByteString0.rangeEquals((-231), (ByteString) segmentedByteString0, (-3739), (-1754));
      assertFalse(boolean0);
      assertEquals(255, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        segmentedByteString0.lastIndexOf(byteArray0, (-32));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        segmentedByteString0.indexOf(byteArray0, 3490);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OI}|j((z;!U}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      byte[] byteArray0 = new byte[0];
      int int0 = segmentedByteString0.indexOf(byteArray0, (-1612));
      assertEquals(0, int0);
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      segmentedByteString0.hmacSha1(segmentedByteString0);
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.getByte((-157));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      boolean boolean0 = segmentedByteString0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.write((Buffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("gFxb4;`U5x*?a*;_N");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 16);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        segmentedByteString0.write(filterOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1992);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        segmentedByteString0.write(byteArrayOutputStream0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 255;
      segment0.pos = (-1726);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 255);
      MockPrintStream mockPrintStream0 = new MockPrintStream("c");
      // Undeclared exception!
      try { 
        segmentedByteString0.write(mockPrintStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1726
         //
         verifyException("org.evosuite.runtime.vfs.VFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(7);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 7);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        segmentedByteString0.write(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.toAsciiUppercase();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring(2419, 17);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring((-1398));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // beginIndex < 0
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.string((Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // charset == null
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.size();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.sha1();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals((int) (byte)104, (byte[]) null, 0, (int) (byte)25);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      // Undeclared exception!
      try { 
        segmentedByteString0.rangeEquals(31, (ByteString) null, (-155), 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("@X^TS(@OI}|j((z;!U}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.lastIndexOf((byte[]) null, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.indexOf((byte[]) null, 17);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.indexOf((byte[]) null, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^S(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha256((ByteString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      ByteString byteString0 = segmentedByteString0.substring(17);
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha256(byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha1((ByteString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(7);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 7);
      ByteString byteString0 = ByteString.EMPTY;
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha1(byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 255;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 255);
      // Undeclared exception!
      try { 
        segmentedByteString0.hashCode();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1754
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.getByte(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(2);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 2);
      // Undeclared exception!
      try { 
        segmentedByteString0.getByte(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=2 offset=2 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.base64Url();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = buffer0.writableSegment(877);
      buffer0.size = (long) 877;
      segment0.pos = 877;
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 877);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SegmentedByteString segmentedByteString0 = null;
      try {
        segmentedByteString0 = new SegmentedByteString((Buffer) null, 2048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = null;
      try {
        segmentedByteString0 = new SegmentedByteString(buffer0, 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=14
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        segmentedByteString0.endsWith(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = segmentedByteString0.rangeEquals(2, byteArray0, (int) (byte)104, (-115));
      assertTrue(boolean0);
      assertEquals(274, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      segmentedByteString0.hashCode();
      segmentedByteString0.hashCode();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 1);
      SegmentedByteString segmentedByteString1 = new SegmentedByteString(buffer1, 1);
      boolean boolean0 = segmentedByteString0.equals(segmentedByteString1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      SegmentedByteString segmentedByteString1 = new SegmentedByteString(buffer0, 274);
      boolean boolean0 = segmentedByteString1.equals(segmentedByteString0);
      assertFalse(boolean0);
      assertEquals(274, segmentedByteString1.size());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("gFxb4;`U5x`?a*;$%");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 7);
      HashingSink hashingSink0 = HashingSink.hmacSha512(buffer0, segmentedByteString0);
      ByteString byteString0 = hashingSink0.hash();
      boolean boolean0 = segmentedByteString0.equals(byteString0);
      assertFalse(boolean0);
      assertEquals(7, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      SegmentedByteString segmentedByteString1 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.equals(segmentedByteString1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      boolean boolean0 = segmentedByteString0.equals(segmentedByteString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      Object object0 = new Object();
      segmentedByteString0.equals(object0);
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      byte[] byteArray0 = new byte[5];
      segmentedByteString0.rangeEquals(31, byteArray0, (int) (byte)104, (int) (byte)100);
      assertEquals(274, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@O)Yj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 1);
      byte[] byteArray0 = segmentedByteString0.toByteArray();
      boolean boolean0 = segmentedByteString0.rangeEquals(1, byteArray0, (-5096), (-2542));
      assertEquals(1, segmentedByteString0.size());
      assertArrayEquals(new byte[] {(byte)88}, byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("gFxb4;`U5x*?a*;_N");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 16);
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = segmentedByteString0.rangeEquals(16, byteArray0, 16, 16);
      assertEquals(16, segmentedByteString0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@O)Yj(};NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 1);
      boolean boolean0 = segmentedByteString0.startsWith((ByteString) segmentedByteString0);
      assertTrue(boolean0);
      assertEquals(1, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      boolean boolean0 = segmentedByteString0.rangeEquals(2, (ByteString) segmentedByteString0, (int) (byte)104, 274);
      assertEquals(274, segmentedByteString0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      boolean boolean0 = segmentedByteString0.rangeEquals(31, (ByteString) segmentedByteString0, (-1754), 31);
      assertFalse(boolean0);
      assertEquals(274, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLongLe(7);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 7);
      ByteString byteString0 = segmentedByteString0.md5();
      segmentedByteString0.endsWith(byteString0);
      assertEquals(7, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer1.writeUtf8("x!4;`U5xl?a*;_N");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 16);
      segmentedByteString0.write(buffer0);
      assertFalse(buffer0.exhausted());
      assertTrue(buffer0.equals((Object)buffer2));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLongLe(2);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 2);
      segmentedByteString0.write(byteArrayOutputStream0);
      assertEquals("\u0002\u0000", byteArrayOutputStream0.toString());
      assertEquals(2, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(realBufferedSource0.buffer, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.write((OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("!v{&zF?cBg#@pl!=");
      buffer1.size = (long) 102;
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 102);
      buffer1.write((ByteString) segmentedByteString0);
      long long0 = buffer1.indexOf((ByteString) segmentedByteString0, 1L);
      assertEquals(204L, buffer1.completeSegmentByteCount());
      assertEquals(16L, long0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 255;
      SegmentedByteString segmentedByteString0 = null;
      try {
        segmentedByteString0 = new SegmentedByteString(buffer0, 255);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // s.limit == s.pos
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("!v{&zF?cBg#@pl!=");
      buffer1.size = (long) 102;
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 102);
      byte[] byteArray0 = new byte[6];
      boolean boolean0 = segmentedByteString0.endsWith(byteArray0);
      assertFalse(boolean0);
      assertEquals(102, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(realBufferedSource0.buffer, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.toAsciiLowercase();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = ByteString.encodeUtf8("CLfvMdS>U&6");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, (byte)0);
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha256(byteString0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(realBufferedSource0.buffer, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.hmacSha1((ByteString) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 17);
      ByteString byteString0 = segmentedByteString0.toAsciiUppercase();
      assertEquals(17, byteString0.size());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(realBufferedSource0.buffer, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.hex();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      segmentedByteString0.sha1();
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.asByteBuffer();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(realBufferedSource0.buffer, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.base64();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.sha256();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.md5();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.internalArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 0);
      // Undeclared exception!
      try { 
        segmentedByteString0.substring((-2043), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.SegmentedByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      byte[] byteArray0 = new byte[1];
      segmentedByteString0.lastIndexOf(byteArray0, (-1726));
      assertEquals(17, segmentedByteString0.size());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      buffer0.size = (long) 274;
      segment0.pos = (-1754);
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer0, 274);
      // Undeclared exception!
      try { 
        segmentedByteString0.utf8();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("X^TS(@OIYj(}z;NU}i");
      SegmentedByteString segmentedByteString0 = new SegmentedByteString(buffer1, 17);
      String string0 = segmentedByteString0.base64Url();
      assertEquals(17, segmentedByteString0.size());
      assertEquals("WF5UUyhAT0lZaih9ejtOVX0=", string0);
  }
}
