/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:34:20 GMT 2018
 */

package org.freehep.math.minuit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.freehep.math.minuit.FCNBase;
import org.freehep.math.minuit.MnCross;
import org.freehep.math.minuit.MnFunctionCross;
import org.freehep.math.minuit.MnStrategy;
import org.freehep.math.minuit.MnUserParameterState;
import org.freehep.math.minuit.MnUserParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MnFunctionCross_ESTest extends MnFunctionCross_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 813.482, 813.482).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = 0.1;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnUserParameters mnUserParameters0 = new MnUserParameters();
      MnUserParameterState mnUserParameterState1 = new MnUserParameterState(mnUserParameters0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState1, (-1161.3457703255285), mnStrategy0, (-1.0));
      mnStrategy0.setHessianNCycles((-406));
      int[] intArray0 = new int[0];
      mnStrategy0.setLowStrategy();
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 760.3988, (-406));
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(55.81685521761064, 55.81685521761064, 55.81685521761064, 55.81685521761064, 1603.9492152708249).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 55.81685521761064;
      doubleArray0[3] = 55.81685521761064;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setGradientTolerance(100.0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 55.81685521761064, mnStrategy0, 55.81685521761064);
      mnStrategy0.setMediumStrategy();
      int[] intArray0 = new int[4];
      mnStrategy0.setHessianStepTolerance(55.81685521761064);
      mnStrategy0.setHessianStepTolerance(0.1);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 55.81685521761064, 1607);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(57.74093082294753, 813.482, 813.482, 3933.716372333353, 1603.9492152708249).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 1603.9492152708249;
      doubleArray0[3] = (-1.387054169722958E9);
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setGradientTolerance(100.0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 313.57365127657783, mnStrategy0, (-1.387054169722958E9));
      int[] intArray0 = new int[4];
      mnStrategy0.setHessianStepTolerance(313.57365127657783);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1699);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(1.0E-4, (-1.0), (-1.0), 1.0E-4, (-1.0)).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 312.648649323;
      doubleArray0[1] = 312.648649323;
      doubleArray0[2] = (-1408.153);
      doubleArray0[3] = 1055.0;
      doubleArray0[5] = (-1.0);
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnUserParameterState mnUserParameterState1 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.0, mnStrategy0, 1.0E-35);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 1055.0, (-3912));
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-1408.153), 571);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 813.482, 813.482, 3933.716372333353, 1.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[6];
      doubleArray0[3] = 0.1;
      doubleArray0[2] = 813.482;
      doubleArray0[3] = 1055.0;
      doubleArray0[4] = 359.26;
      doubleArray0[5] = 10.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 312.648649323, mnStrategy0, 1055.0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1706);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2.2, 2.2, 2.2, 2.2, 10.000000000000002).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 0.1;
      doubleArray0[3] = 2.2;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setGradientTolerance(100.0);
      mnStrategy0.setGradientStepTolerance(2.0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.2, mnStrategy0, 2.2);
      mnUserParameterState0.clone();
      mnStrategy0.setMediumStrategy();
      int[] intArray0 = new int[4];
      mnStrategy0.setHessianStepTolerance(2.2);
      mnStrategy0.setHighStrategy();
      mnStrategy0.setHessianStepTolerance(0.1);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1654);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 10.000000000000002, 1654);
      MnCross mnCross1 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, (-1283));
      assertNotSame(mnCross1, mnCross0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 471.0;
      doubleArray0[6] = 10.247194248911736;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, (-0.4620964102776623));
      MnStrategy mnStrategy0 = new MnStrategy();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      double[] doubleArray2 = new double[7];
      doubleArray2[1] = (-0.4620964102776623);
      mnStrategy0.setHessianGradientNCycles(1);
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase0).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 3496, mnStrategy0, 2258.578);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray1, doubleArray2, (-21.5211507968544), 3496);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(57.74093082294753, 813.482, 813.482, 3956.2673188739536, 0.5).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 813.482;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setLowStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 57.74093082294753, mnStrategy0, 0.0);
      int[] intArray0 = new int[4];
      mnStrategy0.setHessianStepTolerance(3956.2673188739536);
      int int0 = 1677;
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 3956.2673188739536, 1677);
      // Undeclared exception!
      try { 
        mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.5, 1677);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.freehep.math.minuit.MnFunctionCross", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2367.4891036309336, 2367.4891036309336, 2367.4891036309336, 3933.716372333353, 3933.716372333353).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 297.7025805095521;
      doubleArray0[3] = (-1408.153);
      doubleArray0[3] = 2367.4891036309336;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      int[] intArray0 = new int[0];
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 3933.716372333353, mnStrategy0, 8.881784197001252E-16);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 2195, 1706);
      MnCross mnCross1 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-303.33259043), 1384);
      assertNotSame(mnCross1, mnCross0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 813.482, 813.482, 3933.716372333353, 1585.1840802519).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[6];
      doubleArray0[1] = 0.1;
      doubleArray0[2] = (-1408.153);
      doubleArray0[3] = 760.3988;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 312.648649323, mnStrategy0, 760.3988);
      int[] intArray0 = new int[0];
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 903.67, (-1486));
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-1486), 1706);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.5, 0.5, 277.0, 277.0, 277.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 100.0;
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 483.648201623;
      doubleArray0[6] = 0.5;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      mnUserParameterState0.setUpperLimit(1, (-0.5));
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 483.648201623, mnStrategy0, 4195.03538791204);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      mnUserParameterState0.setLimits(1, 826.3779859429928, 1930.810103210104);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-5730.986252550285), 1);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.0, 1);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 1, 15);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 1;
      doubleArray1[1] = (-0.5);
      doubleArray1[2] = (-0.5);
      doubleArray1[3] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = 0.0;
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, 0.0, (-2137432174));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 760.3988, 760.3988, 3933.716372333353, 1585.1840802519).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[6];
      doubleArray0[2] = (-1409.1173338733747);
      doubleArray0[3] = 1055.0;
      doubleArray0[5] = 10.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 312.648649323, mnStrategy0, 1055.0);
      int[] intArray0 = new int[0];
      mnStrategy0.setMediumStrategy();
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1706);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 813.482, 813.482, 3948.88751452213, 1585.1840802519).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 0.1;
      doubleArray0[4] = (-1408.153);
      doubleArray0[3] = 760.3988;
      doubleArray0[5] = 10.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 312.648649323, mnStrategy0, 760.3988);
      int[] intArray0 = new int[1];
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1706);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = 760.3988;
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(760.3988, 760.3988, 760.3988, 3933.716372333353, 760.3988).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = 0.1;
      doubleArray0[3] = 1055.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 312.648649323, mnStrategy0, 1055.0);
      int[] intArray0 = new int[0];
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1706);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(55.81685521761064, 813.482, 813.482, 3949.442969288598, 1603.9492152708249).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 813.482;
      doubleArray0[3] = 55.81685521761064;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setGradientTolerance(100.0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 55.81685521761064, mnStrategy0, 55.81685521761064);
      mnStrategy0.setMediumStrategy();
      int[] intArray0 = new int[4];
      mnStrategy0.setHessianStepTolerance(3949.442969288598);
      mnStrategy0.setHessianStepTolerance((-4321.796741468));
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 813.482, (-2126213181));
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1677);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2367.7140045740307, 2367.7140045740307, 2367.7140045740307, 3933.716372333353, 3933.716372333353).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = 2367.7140045740307;
      doubleArray0[3] = 2367.7140045740307;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 3933.716372333353, mnStrategy0, 2367.7140045740307);
      mnUserParameterState0.setPrecision(2367.7140045740307);
      int[] intArray0 = new int[0];
      mnStrategy0.setMediumStrategy();
      mnStrategy0.setHessianNCycles((-406));
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1723);
      // Undeclared exception!
      try { 
        mnUserParameterState0.setLowerLimit(1723, (-70.553));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1723, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2367.4891036309336, 2367.4891036309336, 2367.4891036309336, 3933.096254431383, 3933.096254431383).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2367.4891036309336;
      doubleArray0[3] = 2367.4891036309336;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 297.7025805095521, mnStrategy0, 2367.4891036309336);
      int[] intArray0 = new int[1];
      mnStrategy0.setHessianG2Tolerance((-303.33259043));
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 680);
      int int0 = 3496;
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 17.6, (-1));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(55.81685521761064, 55.81685521761064, 55.81685521761064, 55.81685521761064, 1603.9492152708249).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[4];
      doubleArray0[2] = 55.81685521761064;
      doubleArray0[3] = 55.81685521761064;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      MnStrategy mnStrategy0 = new MnStrategy();
      mnStrategy0.setGradientTolerance(100.0);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 55.81685521761064, mnStrategy0, 55.81685521761064);
      mnStrategy0.setMediumStrategy();
      int[] intArray0 = new int[1];
      mnStrategy0.setHessianStepTolerance(55.81685521761064);
      mnStrategy0.setHessianStepTolerance(0.1);
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1677);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-897067.9615686635), (-897067.9615686635), 277.0, 277.0, 277.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 115.381692790539;
      doubleArray0[1] = 277.0;
      doubleArray0[3] = (-897067.9615686635);
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 0.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, 0.0);
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.0, mnStrategy0, 100.0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      mnFunctionCross0.cross(intArray0, doubleArray1, doubleArray1, 4.0E-7, 1);
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, (-897067.9615686635), 3496);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-897067.9615686635), (-897067.9615686635), 277.0, 277.0, 277.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = 115.381692790539;
      doubleArray0[1] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 470.5982980952092;
      doubleArray0[6] = (-897067.9615686635);
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, (-0.4620964102776623));
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 470.5982980952092, mnStrategy0, 4195.03538791204);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[5] = 1;
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, (-897067.9615686635), 3496);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 1, 1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-897067.9615686635), (-897067.9615686635), 277.0, 277.0, 277.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[7];
      doubleArray0[1] = 115.381692790539;
      doubleArray0[1] = 277.0;
      doubleArray0[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 0.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, 0.0);
      MnStrategy mnStrategy0 = new MnStrategy(1);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.0, mnStrategy0, 100.0);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 1;
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, (-897067.9615686635), 3496);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = 115.381692790539;
      doubleArray0[5] = 115.381692790539;
      doubleArray0[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 471.0;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, (-0.4620964102776623));
      MnStrategy mnStrategy0 = new MnStrategy();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      double[] doubleArray2 = new double[7];
      doubleArray2[1] = (-0.4620964102776623);
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, 0.014508258020553723, (-9.355236855932456E22), 760.3988, 2137.929122035).when(fCNBase0).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 1, mnStrategy0, 1);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, (-0.4620964102776623), 255);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray2, 1000.0, 100);
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray1, doubleArray0, (-4742.563), 2126200361);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[4] = 110.41753879304495;
      doubleArray0[3] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 10.247194248911736;
      doubleArray0[6] = 10.247194248911736;
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(doubleArray0, doubleArray0);
      double[] doubleArray1 = mnUserParameterState0.params();
      mnUserParameterState0.setUpperLimit(1, (-0.4620964102776623));
      MnStrategy mnStrategy0 = new MnStrategy();
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      double[] doubleArray2 = new double[7];
      doubleArray2[1] = (-0.4620964102776623);
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(1.0, 0.014508258020553723, (-9.355236855932456E22), 760.3988, 2137.929122035).when(fCNBase0).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 1, mnStrategy0, 1);
      mnFunctionCross0.cross(intArray0, doubleArray2, doubleArray2, 112.059285, 10);
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray2, 1000.0, 100);
      mnUserParameterState0.setPrecision((-166.39));
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray1, doubleArray0, (-4742.563), 2126200400);
  }
}
