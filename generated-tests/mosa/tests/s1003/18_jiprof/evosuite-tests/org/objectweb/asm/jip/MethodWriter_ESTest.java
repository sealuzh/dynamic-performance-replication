/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:16:58 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassAdapter;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 321, "Y#%@vp[S-", "", "", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(1448);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      int int0 = methodWriter0.getSize();
      assertEquals(49, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      int int0 = methodWriter0.getSize();
      assertEquals(65, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 3564);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3564
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-104);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-104), (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -104
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      classReader0.accept((ClassVisitor) classWriter0, 2584);
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(classReader0.b, (-1319));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1319
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      ClassWriter classWriter1 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2123, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.getSize();
      classReader0.getClassName();
      classWriter0.toByteArray();
      methodWriter0.visitFrame(16, (-3088), (Object[]) null, 2, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 4164;
      intArray0[1] = 5;
      intArray0[2] = 64;
      MethodWriter.getNewOffset(intArray0, intArray0, 4164, 5);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      int int0 = new Integer(8);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(2192);
      classReader0.accept((ClassVisitor) classWriter0, (-1720));
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.getSize();
      methodWriter0.visitVarInsn(4, 2192);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classReader0.accept((ClassVisitor) classWriter0, 2123);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Label", false);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Label", true);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(classReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ClassReader@1
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.classReaderLength = 2;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      int[] intArray0 = new int[2];
      intArray0[0] = 2123;
      intArray0[1] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 228);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      boolean boolean0 = ClassReader.SIGNATURES;
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Edge edge1 = label0.successors;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, label0, (Label) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)34);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Label", 1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter1, (-1862012982));
      MethodWriter methodWriter0 = classWriter1.lastMethod;
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Label", 1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(74, 3045, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2123, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.getSize();
      classReader0.getClassName();
      classWriter0.toByteArray();
      methodWriter0.visitFrame(1, (-3057), (Object[]) null, 2, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2, 16, (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      int int0 = Frame.BYTE;
      methodWriter0.visitIincInsn(2, 2327);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2675));
      classReader0.accept((ClassVisitor) classWriter0, 49);
      Label label0 = new Label();
      Label label1 = new Label();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitMultiANewArrayInsn("?KK", 484);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
          classReader0.getClassName();
          ClassWriter classWriter0 = new ClassWriter(2);
          classReader0.accept((ClassVisitor) classWriter0, (-1720));
          MethodWriter methodWriter0 = classWriter0.lastMethod;
          methodWriter0.visitIincInsn(Integer.MAX_VALUE, 2192);
          methodWriter0.visitFieldInsn((-2427), "org.objectweb.asm.jip.Label", "org/objectweb/asm/jip/Label", "DL&x7>/iA");
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.Label";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1164766827));
      classReader0.accept((ClassVisitor) classWriter0, 49);
      Label label0 = new Label();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitFieldInsn(1, "org.objectweb.asm.jip.Label", "toString", "Signature");
      Label label1 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label2 = new Label();
      Label label3 = new Label();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitVarInsn(169, (-2180));
      Label label4 = new Label();
      Label label5 = label3.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-2180), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
          classReader0.getClassName();
          ClassWriter classWriter0 = new ClassWriter(2192);
          classReader0.accept((ClassVisitor) classWriter0, (-1720));
          MethodWriter methodWriter0 = classWriter0.lastMethod;
          methodWriter0.getSize();
          methodWriter0.visitIincInsn(177, (-348));
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(265);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.toByteArray();
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      methodWriter1.visitFieldInsn(2, ".", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Label[] labelArray0 = new Label[1];
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8(".");
      methodWriter0.put(byteVector1);
      labelArray0[0] = label0;
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label0, (int[]) null, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classWriter0.invalidFrames = false;
      classReader0.getClassName();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "U]&,OB";
      classWriter0.newMethod("U]&,OB", "{MeA4", "U]&,OB", false);
      stringArray0[1] = "U]&,OB";
      stringArray0[2] = "";
      stringArray0[3] = "org.objectweb.asm.jip.Label";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 49, "org.objectweb.asm.jip.Label", "U]&,OB", "U]&,OB", stringArray0, false, false);
      methodWriter0.visitVarInsn(8, 1);
      methodWriter0.visitFrame(49, 4, stringArray0, 4, stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter1.put(byteVector0);
      int int0 = Frame.BYTE;
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(54, 4, "\u0001j;7da2fdX)J", "char", "", stringArray0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "", "", "", stringArray0, false, false);
      Frame frame0 = new Frame();
      methodWriter0.visitFrame(1, 1, stringArray0, 1, stringArray0);
      methodWriter0.visitAnnotation("", false);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      Label label1 = new Label();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) label1;
      objectArray0[3] = (Object) label0;
      methodWriter0.visitFrame(4, 4, objectArray0, 1, objectArray0);
      Frame frame0 = new Frame();
      classReader0.accept((ClassVisitor) classWriter0, 4);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(27);
      classReader0.accept((ClassVisitor) classWriter0, 27);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMethodInsn(4, "y]-Ub8~d^mj,l", "org.objectweb.asm.jip.Label", "y]-Ub8~d^mj,l");
      int int0 = Frame.TOP;
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 10);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2123, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.getSize();
      classWriter0.toByteArray();
      methodWriter1.visitFrame(1, (-3088), (Object[]) null, 21, (Object[]) null);
      methodWriter0.visitMultiANewArrayInsn("org.objectweb.asm.jip.Label", 21);
      Label[] labelArray0 = new Label[0];
      methodWriter1.getSize();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      Label label1 = new Label();
      label0.status = 28;
      classWriter0.newMethod("org.objectweb.asm.jip.Label", "ROUj<?W[13O%7?f", "RuntimeInvisibleParameterAnnotations", false);
      Edge edge0 = label1.successors;
      label1.successors = null;
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitMethodInsn(4, "?KK", "org.objectweb.asm.jip.Label", "?KK");
      methodWriter0.visitLocalVariable("3O", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", label0, label1, 2);
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "org.objectweb.asm.jip.Label", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "org.objectweb.asm.jip.Label", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org/objectweb/asm/jip/Label";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1480), "org.objectweb.asm.jip.Label", "org/objectweb/asm/jip/Label", "org/objectweb/asm/jip/Label", stringArray0, false, false);
      classWriter0.visit(4, 4, "org.objectweb.asm.jip.Label", "d=:#cN ", "va^m;|x1rt-bk&#K4", (String[]) null);
      methodWriter0.getSize();
      classReader0.getClassName();
      classWriter0.toByteArray();
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      String[] stringArray0 = classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "org/objectweb/asm/jip/Label";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org/objectweb/asm/jip/Label");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-152), "org/objectweb/asm/jip/Label", "org.objectweb.asm.jip.Label", "org/objectweb/asm/jip/Label", (String[]) null, false, false);
      classWriter0.visit(23, 23, "org/objectweb/asm/jip/Label", ")B}=k2z^", "org/objectweb/asm/jip/Label", stringArray0);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 23);
      methodWriter0.getSize();
      classReader0.getClassName();
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
          ClassWriter classWriter0 = new ClassWriter(2123);
          classReader0.accept((ClassVisitor) classWriter0, 2);
          Label label0 = new Label();
          boolean boolean0 = ClassReader.SIGNATURES;
          Edge edge0 = label0.successors;
          MethodWriter methodWriter0 = classWriter0.lastMethod;
          methodWriter0.visitLocalVariable("4&em,V}m&oC[8jB'TR$", "E2*B>w$Un%m`;", "4&em,V}m&oC[8jB'TR$", label0, label0, 2);
          methodWriter0.getSize();
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2123);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      label0.toString();
      boolean boolean0 = ClassReader.SIGNATURES;
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitLocalVariable("org.objectweb.asm.jip.Label", "E2*B>w$Un%m`;", "org.objectweb.asm.jip.Label", label0, label0, 2);
      int int0 = Frame.TOP;
      methodWriter0.visitLocalVariable("E2*B>w$Un%m`;", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", label0, label0, 769);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classReader0.accept((ClassVisitor) classWriter0, 2123);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitAttribute(attribute0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 2;
      intArray0[5] = 2;
      intArray0[6] = 2123;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, (-2744));
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(4, 1);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      boolean boolean0 = ClassReader.SIGNATURES;
      Edge edge0 = label0.successors;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      int[] intArray0 = new int[6];
      intArray0[0] = 3909;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = 8;
      Label[] labelArray0 = new Label[3];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitFrame(3909, 1, labelArray0, 124, labelArray0);
      Object object0 = label0.info;
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.Label");
      methodWriter0.visitIntInsn(76, 1);
      Attribute attribute0 = new Attribute((String) null);
      methodWriter0.visitAttribute(attribute0);
      Label[] labelArray0 = new Label[3];
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      labelArray0[0] = null;
      Label label1 = edge0.successor;
      labelArray0[1] = null;
      Label label2 = edge0.successor;
      labelArray0[2] = null;
      Label label3 = classReader0.readLabel(1, labelArray0);
      methodWriter0.visitLocalVariable("LG|nkE6#WedjWo!8$", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", label3, label3, (-3037));
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
          ClassWriter classWriter0 = new ClassWriter(2);
          classReader0.accept((ClassVisitor) classWriter0, 2);
          classWriter0.addType("org.objectweb.asm.jip.Label");
          MethodWriter methodWriter0 = classWriter0.lastMethod;
          methodWriter0.visitMethodInsn(187, "6pJ", "6pJ", "y]-Ub8~d^m,l");
          int int0 = Frame.TOP;
          methodWriter0.visitMaxs(268435455, 11);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 51);
      classReader0.accept((ClassVisitor) classWriter0, 64);
      Label label0 = new Label();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitParameterAnnotation(691, "Ljava/lang/Synthetic;", true);
      classReader0.accept((ClassVisitor) classWriter0, 1437);
      Attribute attribute0 = new Attribute("E/4\"D\"b2z1@MA'");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "short";
      stringArray0[1] = "short";
      stringArray0[2] = ",1&MsrMH";
      stringArray0[3] = "short";
      stringArray0[4] = "short";
      stringArray0[5] = "short";
      stringArray0[6] = "org.objectweb.asm.jip.Label";
      stringArray0[7] = "short";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4187, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "short", stringArray0, false, false);
      methodWriter0.getSize();
      classReader0.getClassName();
      classWriter0.toByteArray();
      methodWriter0.visitFrame(156, 156, stringArray0, 4, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4187, (-654), stringArray0, 1, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1164766827));
      classReader0.accept((ClassVisitor) classWriter0, 2123);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitTypeInsn(4, "org.objectweb.asm.jip.Label");
      methodWriter0.visitIntInsn(2, 1);
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitIntInsn(1, 2);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) classWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 4, objectArray0, (-3), objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.ClassWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "6pJ", "6pJ", "y]-Ub8~d^mj,l");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      Label label0 = new Label();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.Label");
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "r1x,hn>KQ4@xO'_Z");
  }
}
