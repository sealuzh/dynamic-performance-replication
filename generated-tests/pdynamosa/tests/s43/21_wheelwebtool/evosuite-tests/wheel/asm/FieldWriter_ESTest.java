/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 07:23:19 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-434));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "k&ap]|3}";
      stringArray0[2] = ",;K1aGK)~YC;";
      stringArray0[3] = "k&ap]|3}";
      stringArray0[4] = ",;K1aGK)~YC;";
      stringArray0[5] = "";
      stringArray0[6] = "--";
      stringArray0[7] = ",;K1aGK)~YC;";
      stringArray0[8] = "--";
      classWriter0.visit((-431), 0, "aSollean", "k&ap]|3}", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), ",;K1aGK)~YC;", "", "--", ",;K1aGK)~YC;");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      classWriter0.index = (-436);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "^[R", "^[R", "", "^[R");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-434));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "k&ap]|3}";
      stringArray0[2] = ",;K1aGK)~YC;";
      stringArray0[3] = "k&ap]|3}";
      stringArray0[4] = ",;K1aGK)~YC;";
      stringArray0[5] = "";
      stringArray0[6] = "--";
      stringArray0[7] = ",;K1aGK)~YC;";
      stringArray0[8] = "--";
      classWriter0.visit((-431), 0, "aSollean", "k&ap]|3}", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), ",;K1aGK)~YC;", "", "--", ",;K1aGK)~YC;");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      classWriter0.index = (-436);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "^[R", "^[R", "", "^[R");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-691), "", "", "[7FDaT`/", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      ByteVector byteVector0 = new ByteVector(312);
      Attribute attribute0 = new Attribute("E");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1708, (String) null, "E", (String) null, fieldWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-5130), "aGj>?[MEe~B(twLQ|N", "<& 4(| t", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@2eb345e
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-435), "aGj>?[MEe~B(twLQ|N", "aGj>?[MEe~B(twLQ|N", "aGj>?[MEe~B(twLQ|N", (Object) null);
      Attribute attribute0 = new Attribute("^[R");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%h8iD1xZ\"|Nd#GJ", "L^Wp%h8iD1xZ\"|Nd#GJ", "E", "E");
      fieldWriter0.visitAnnotation("E", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(147, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-435), "aGj>?[MEe~B(twLQ|N", "aGj>?[MEe~B(twLQ|N", "aGj>?[MEe~B(twLQ|N", (Object) null);
      fieldWriter0.visitAnnotation("aGj>?[MEe~B(twLQ|N", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4188);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4188, "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P");
      ByteVector byteVector0 = new ByteVector(4188);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J");
      Attribute attribute0 = new Attribute("M");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J");
      fieldWriter0.visitAnnotation("L^Wp%^8D1xZ\"|Nd#~J", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 64, "", "\r|Gh1", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4188);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4188, "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P", "RPX]i`x#lzm$0P");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4), "bl~ eag", "bl~ eag", "bl~ eag", "bl~ eag");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "boolean", "boolean", (String) null, "boolean");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "L^Wp%^8D1xZ\"|Nd#~J", "L^Wp%^8D1xZ\"|Nd#~J", "E", "E");
      fieldWriter0.visitEnd();
  }
}
