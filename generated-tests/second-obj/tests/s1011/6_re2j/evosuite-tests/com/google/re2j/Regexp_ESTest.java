/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:01:51 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp.Op.values();
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals("LEFT_PAREN");
      regexp1.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertNotNull(regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
      
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp_Op0);
      assertFalse(boolean0);
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[2] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexp0.subs = regexpArray0;
      regexp_Op0.isPseudo();
      regexp0.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = " f{k&*#B8#u>G3%EY(E";
      regexp0.equals((Object) null);
      regexp1.maxCap();
      String string0 = regexp1.toString();
      assertEquals("^", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("\\b", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op.values();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      regexp_Op0.isPseudo();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.toString();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 11931;
      regexp0.max = 11931;
      String string0 = regexp0.name;
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp0.toString();
      regexp0.op = regexp_Op1;
      regexp0.flags = (-4195);
      int[] intArray0 = new int[8];
      intArray0[0] = (-4195);
      intArray0[1] = (-4195);
      intArray0[4] = 0;
      intArray0[3] = 7830;
      intArray0[4] = (-4195);
      intArray0[5] = (-4195);
      intArray0[6] = 11931;
      intArray0[3] = 11931;
      regexp0.runes = intArray0;
      boolean boolean0 = regexp0.equals(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("u!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.u!
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[11];
      regexp0.min = 15;
      intArray0[0] = (-372);
      intArray0[1] = 15;
      regexp0.equals(regexp_Op0);
      intArray0[2] = 15;
      regexp0.toString();
      regexp0.max = 15;
      intArray0[6] = 97;
      regexp0.max = 15;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("E& w~b`NvR`dGW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.E& w~b`NvR`dGW
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.toString();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertNotNull(regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[3];
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertNotNull(regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 43584;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp0.toString();
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-4195);
      intArray0[5] = 0;
      intArray0[6] = 43584;
      intArray0[7] = 43584;
      regexp0.runes = intArray0;
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("9PU7s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.9PU7s
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      String string0 = regexp1.name;
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp2);
      assertTrue(boolean0);
      
      Regexp.Op.values();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[0] = regexp0;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexp0.toString();
      regexp0.equals("A");
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 9;
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp1.maxCap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op.values();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      boolean boolean1 = regexp_Op1.isPseudo();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-3859);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.toString();
      regexp0.equals("A");
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.CHAR_CLASS;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 9;
      regexp1.equals(regexp0);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      Regexp regexp4 = new Regexp(regexp_Op1);
      regexpArray0[0] = regexp4;
      regexp2.op = regexp_Op1;
      regexp2.subs = regexpArray0;
      regexp1.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Object object0 = new Object();
      Regexp.Op regexp_Op2 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op2);
      Object object1 = new Object();
      boolean boolean0 = regexp1.equals(regexp2);
      Regexp regexp3 = new Regexp(regexp0);
      regexp3.toString();
      regexp0.equals(regexp_Op1);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op regexp_Op3 = Regexp.Op.ANY_CHAR;
      Regexp regexp4 = new Regexp(regexp_Op3);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp3;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp4;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp2;
      Regexp regexp5 = new Regexp(regexp0);
      Object object2 = new Object();
      regexp0.equals(regexp3);
      boolean boolean1 = regexp4.equals(regexp_Op2);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[1] = regexp0;
      regexp0.reinit();
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = 5787;
      intArray0[1] = 6;
      intArray0[2] = 4598;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.flags = 66600;
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp1.name = "^";
      regexp1.flags = 9;
      regexp1.op = regexp_Op1;
      regexp1.maxCap();
      Regexp.Op regexp_Op2 = Regexp.Op.NO_MATCH;
      regexp_Op2.isPseudo();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp1.equals(regexp0.op);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp regexp3 = new Regexp(regexp0);
      Regexp regexp4 = new Regexp(regexp_Op1);
      Regexp regexp5 = new Regexp(regexp4);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp2;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp2;
      Regexp regexp6 = new Regexp(regexp4);
      regexpArray0[4] = regexp6;
      regexpArray0[5] = regexp5;
      regexpArray0[6] = regexp3;
      regexpArray0[7] = regexp0;
      regexp5.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp5.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      regexp1.cap = (-938);
      Object object0 = new Object();
      regexp1.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      Object object0 = new Object();
      regexp0.name = "";
      regexp1.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 256;
      regexp0.toString();
      boolean boolean0 = regexp0.equals(regexp0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexp0.reinit();
      regexp0.toString();
      boolean boolean0 = regexp0.equals(regexp0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp2 = new Regexp(regexp_Op1);
      Regexp regexp3 = new Regexp(regexp2);
      Regexp regexp4 = new Regexp(regexp0);
      regexp0.toString();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      Regexp regexp5 = new Regexp(regexp_Op0);
      boolean boolean1 = regexp4.equals("");
      assertFalse(boolean1);
      
      Regexp regexp6 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op2 = Regexp.Op.CHAR_CLASS;
      Regexp regexp7 = new Regexp(regexp_Op2);
      assertFalse(regexp7.equals((Object)regexp5));
      
      int[] intArray0 = new int[8];
      intArray0[0] = 1698;
      intArray0[1] = 0;
      intArray0[2] = 9;
      intArray0[3] = 348;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      regexp7.runes = intArray0;
      String string0 = regexp7.toString();
      assertEquals("[\u06A2-\\x00\\t-\u015C\\x00\\x00]", string0);
      
      boolean boolean2 = regexp_Op2.isPseudo();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals("t{`nJ:");
      regexp0.max = 256;
      regexp0.equals(regexp_Op0);
      int[] intArray0 = new int[5];
      intArray0[0] = 256;
      intArray0[1] = 256;
      intArray0[2] = 256;
      intArray0[3] = 256;
      intArray0[4] = 308;
      regexp0.runes = intArray0;
      regexp0.cap = 248;
      regexp0.toString();
      regexp0.flags = 11;
      regexp0.toString();
      boolean boolean0 = regexp0.equals(regexp_Op0);
      regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp_Op0.isPseudo();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }
}
