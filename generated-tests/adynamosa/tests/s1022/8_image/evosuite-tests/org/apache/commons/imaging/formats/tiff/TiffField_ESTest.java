/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 11:13:25 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeRational0, 40094, 2413L, byteArray0, byteOrder0, 1543);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals(40094, tiffField0.getTag());
      assertEquals(2413, tiffField0.getOffset());
      assertEquals(1543, tiffField0.getSortHint());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1829), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1829), tiffField0.getOffset());
      assertEquals((-1829), tiffField0.getTag());
      assertEquals((-1829), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(273, 16, fieldTypeFloat0, 255L, 239, byteArray0, (ByteOrder) null, (-1264));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(239, tiffField0.getOffset());
      assertEquals((-1264), tiffField0.getSortHint());
      assertEquals(273, tiffField0.getTag());
      assertEquals(273, tagInfo0.tag);
      assertEquals(16, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte) (-1), (byte)0, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-55), 0, fieldTypeLong0, 1952L, (-55), byteArray0, byteOrder0, (byte)48);
      int int0 = tiffField0.getTag();
      assertEquals((-55), int0);
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)95, (byte)95, fieldTypeAscii0, 0L, 4L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(95, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(95, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(562, "'");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2753), (-956), fieldTypeByte0, 1L, 78L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-956), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(78, tiffField0.getOffset());
      assertEquals((-2753), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeRational0, (-1), (-1L), byteArray0, byteOrder0, (-1422));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1422), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(2000);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2000, 2000, fieldTypeRational0, 2000, 2000, byteArray0, byteOrder0, 31);
      int int0 = tiffField0.getOffset();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(2000, tiffField0.getTag());
      assertEquals(2000, tiffField0.getDirectoryType());
      assertEquals(2000, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 4060L, (byte) (-76), byteArray0, byteOrder0, (byte) (-76));
      int int0 = tiffField0.getOffset();
      assertEquals((-76), int0);
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-69);
      byteArray0[5] = (byte) (-58);
      TiffField tiffField0 = new TiffField(1900, 2132253267, fieldTypeByte0.SRATIONAL, 4868L, 575L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2132253267, tiffField0.getDirectoryType());
      assertEquals(241, int0);
      assertEquals(1900, tiffField0.getTag());
      assertEquals(575, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37122, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-113);
      TiffField tiffField0 = new TiffField((-1), 1532, fieldTypeShort0, (-6442450940L), 1900, byteArray0, byteOrder0, 1);
      assertEquals(8, tiffField0.getBytesLength());
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1532, tiffField0.getDirectoryType());
      assertEquals((-28928), int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1900, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(106, tiffField0.getOffset());
      assertEquals(2143831464, tiffField0.getDirectoryType());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-9);
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-121), fieldTypeShort0, 1L, 806L, byteArray0, (ByteOrder) null, (-1717986917));
      tiffField0.getIntValue();
      assertEquals(806, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(562, "'");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-83);
      TiffField tiffField0 = new TiffField(562, 793, fieldTypeByte0, 1L, 1L, byteArray0, (ByteOrder) null, 259);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(562, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(259, tiffField0.getSortHint());
      assertEquals(793, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2460, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1516), 2460, fieldTypeFloat0, 4L, (-1L), byteArray0, byteOrder0, (-1096));
      tiffField0.getFieldTypeName();
      assertEquals((-1516), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2460, tiffField0.getDirectoryType());
      assertEquals((-1096), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      tiffField0.getFieldTypeName();
      assertEquals((-1829), tiffField0.getSortHint());
      assertEquals((-1829), tiffField0.getOffset());
      assertEquals((-1829), tiffField0.getTag());
      assertEquals((-1829), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1247, 1828, (FieldType) null, 32L, 1828, byteArray0, byteOrder0, (byte)4);
      tiffField0.getFieldType();
      assertEquals(1247, tiffField0.getTag());
      assertEquals(1828, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1828, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Unknown Tag");
      TiffField tiffField0 = new TiffField(65535, (byte) (-26), fieldTypeShort0, 5, 5, byteArray0, byteOrder0, 1649);
      tiffField0.getFieldType();
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(1649, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1829), (-1829), fieldTypeLong0, 0L, (-1829), byteArray0, byteOrder0, (-1829));
      tiffField0.getFieldType();
      assertEquals((-1829), tiffField0.getSortHint());
      assertEquals((-1829), tiffField0.getOffset());
      assertEquals((-1829), tiffField0.getTag());
      assertEquals((-1829), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2188), 2146822273, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).RATIONAL).SHORT, 1L, 92L, byteArray0, byteOrder0, 2146822273);
      tiffField0.getDoubleValue();
      assertEquals(2146822273, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2188), tiffField0.getTag());
      assertEquals(2146822273, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-90);
      TiffField tiffField0 = new TiffField((byte) (-90), (-226), fieldTypeLong0, (byte)1, 34677, byteArray0, byteOrder0, 4547);
      tiffField0.getDoubleValue();
      assertEquals((-90), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4547, tiffField0.getSortHint());
      assertEquals((-226), tiffField0.getDirectoryType());
      assertEquals(34677, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(562, "'");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-83);
      TiffField tiffField0 = new TiffField((-2753), (-956), fieldTypeByte0, 1L, 78L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getDoubleValue();
      assertEquals((-2753), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-956), tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte) (-80), fieldTypeDouble0, (byte)8, 1, byteArray0, byteOrder0, (byte) (-80));
      tiffField0.getDoubleArrayValue();
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals((-80), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-80), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)120);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37122, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-72), (-738), fieldTypeShort0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte) (-27));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-738), int0);
      assertEquals(97, tiffField0.getOffset());
      assertEquals((-72), tiffField0.getTag());
      assertEquals((-27), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(318, 65535, fieldTypeLong0, 0, 50, byteArray0, byteOrder0, (byte) (-76));
      tiffField0.getCount();
      assertEquals((-76), tiffField0.getSortHint());
      assertEquals(318, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeDouble0, 1846L, (-3069L), byteArray0, byteOrder0, (-1));
      tiffField0.getCount();
      assertEquals((-3069), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1829), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2667), (-2667), fieldTypeLong0, (-230L), (-1913L), byteArray0, byteOrder0, (-1861));
      tiffField0.getCount();
      assertEquals((-1861), tiffField0.getSortHint());
      assertEquals((-1913), tiffField0.getOffset());
      assertEquals((-2667), tiffField0.getDirectoryType());
      assertEquals((-2667), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1840700269, "eof|AnS^");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeFloat0, 0L, (-1L), byteArray0, byteOrder0, 1840700269);
      int int0 = tiffField0.getBytesLength();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1840700269, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1405), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1405), (-1405), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1405), tiffField0.getOffset());
      assertEquals((-5620), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(51022, 1217, fieldTypeLong0, 84, 84, byteArray0, (ByteOrder) null, (-2136582714));
      tiffField0.getByteOrder();
      assertEquals((-2136582714), tiffField0.getSortHint());
      assertEquals(84, tiffField0.getOffset());
      assertEquals(51022, tiffField0.getTag());
      assertEquals(1217, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 5, fieldTypeLong0, 889L, (byte)0, byteArray0, byteOrder0, 439);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(439, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-785), (-1868), fieldTypeAscii0, 949L, 949L, byteArray0, byteOrder0, (-48));
      tiffField0.getByteArrayValue();
      assertEquals(949, tiffField0.getOffset());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals((-785), tiffField0.getTag());
      assertEquals((-1868), tiffField0.getDirectoryType());
      assertEquals(949, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeByte0, (byte)0, (-1982292597), byteArray0, byteOrder0, 4);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1982292597), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)120);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Unknown Tag (0x0)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2122), "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoSRationals");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3183), (-2122), fieldTypeByte0, (-2122), (-2122), byteArray0, (ByteOrder) null, (-3183));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2147483646, (byte) (-69), fieldTypeByte0, (-332L), 900L, byteArray0, byteOrder0, (byte) (-116));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-608), (-377), fieldTypeLong0, (-377), 0L, byteArray0, byteOrder0, (-2229));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1247, 1828, (FieldType) null, 32L, 1828, byteArray0, byteOrder0, (byte)4);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, (-1967L), 0L, byteArray0, byteOrder0, 65001);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1362, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1362, 50, fieldTypeShort0, (-1L), (byte)91, byteArray0, (ByteOrder) null, (byte)91);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3957, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3957, 50965, fieldTypeShort0, (-199L), (-199L), (byte[]) null, byteOrder0, (-578));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, (-3620L), 4L, byteArray0, byteOrder0, (byte)112);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-101), 1, (FieldType) null, 2799L, 0, byteArray0, byteOrder0, 2059);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-671), (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-671), (-671), fieldTypeLong0, (-671), 2936L, byteArray0, byteOrder0, (byte) (-108));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-319), (-319), fieldTypeLong0, (-319), 5115L, byteArray0, byteOrder0, (-170));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, (-1717986917), fieldTypeShort0.IFD, (-2147483648L), (-3633L), byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(279, (byte)86, fieldTypeDouble0, 409L, (-2184L), byteArray0, byteOrder0, (-1070));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-1070), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(279, tiffField0.getTag());
      assertEquals((-2184), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(279, (byte)86, fieldTypeDouble0, 409L, (-2184L), byteArray0, byteOrder0, (-1070));
      tiffField0.getFieldType();
      assertEquals((-1070), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(279, tiffField0.getTag());
      assertEquals((-2184), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4416, ">av~l.-T");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2634, fieldTypeShort0, 79L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(2634, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(158, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte)0, (byte)0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3352, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 3352, fieldTypeFloat0, 78L, 3352, (byte[]) null, byteOrder0, 3352);
      int int0 = tiffField0.getTag();
      assertEquals(3352, tiffField0.getSortHint());
      assertEquals(3352, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(3352, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34677, (-2188), fieldTypeByte0, 50, 1362, byteArray0, (ByteOrder) null, (-2188));
      int int0 = tiffField0.getBytesLength();
      assertEquals(34677, tiffField0.getTag());
      assertEquals((-2188), tiffField0.getSortHint());
      assertEquals(1362, tiffField0.getOffset());
      assertEquals((-2188), tiffField0.getDirectoryType());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34677, (-2188), fieldTypeByte0, 50, 1362, byteArray0, (ByteOrder) null, (-2188));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1900, 2132253267, fieldTypeByte0.SRATIONAL, 4868L, 575L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeLong0, 1701L, (-2147483648L), byteArray0, byteOrder0, 1900);
      tiffField0.getIntValueOrArraySum();
      assertEquals(6804, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getTag());
      assertEquals(1900, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeDouble0, 1846L, (-3069L), byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@73b70d0e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      tiffField0.getIntValueOrArraySum();
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(106, tiffField0.getOffset());
      assertEquals(2143831464, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(279, (byte)86, fieldTypeDouble0, 409L, (-2184L), byteArray0, byteOrder0, (-1070));
      tiffField0.getDoubleArrayValue();
      assertEquals(279, tiffField0.getTag());
      assertEquals((-2184), tiffField0.getOffset());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(3272, tiffField0.getBytesLength());
      assertEquals((-1070), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), 50, fieldTypeByte0, 318, (-3482L), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@66ee0437 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeLong0, 1701L, (-2147483648L), byteArray0, byteOrder0, 1900);
      tiffField0.getDoubleArrayValue();
      assertEquals(1900, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(6804, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(543, 543, fieldTypeLong0.SSHORT, 543, (-2147483648L), byteArray0, byteOrder0, (byte)125);
      tiffField0.getDoubleArrayValue();
      assertEquals(125, tiffField0.getSortHint());
      assertEquals(543, tiffField0.getTag());
      assertEquals(1086, tiffField0.getBytesLength());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(543, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2460, 2460, fieldTypeByte0.FLOAT, 4L, (-1L), byteArray0, byteOrder0, (-1096));
      tiffField0.getDoubleArrayValue();
      assertEquals(2460, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(2460, tiffField0.getTag());
      assertEquals((-1096), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(562, "'");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2753), (-956), fieldTypeByte0, 1L, 78L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-956), tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2753), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1900, 2132253267, fieldTypeByte0.SRATIONAL, 4868L, 575L, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(38944, tiffField0.getBytesLength());
      assertEquals(575, tiffField0.getOffset());
      assertEquals(2132253267, tiffField0.getDirectoryType());
      assertEquals(1900, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte)0, (byte)0, byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, intArray0.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(543, 543, fieldTypeLong0.SHORT, 543, (-2147483648L), byteArray0, byteOrder0, (byte)125);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(543, tiffField0.getTag());
      assertEquals(1086, tiffField0.getBytesLength());
      assertEquals(543, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(125, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-58);
      TiffField tiffField0 = new TiffField(1900, 2132253267, fieldTypeByte0.SRATIONAL, 4868L, 575L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(38944, tiffField0.getBytesLength());
      assertEquals(575, tiffField0.getOffset());
      assertEquals(2132253267, tiffField0.getDirectoryType());
      assertEquals(1900, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(279, (byte)86, fieldTypeDouble0, 409L, (-2184L), byteArray0, byteOrder0, (-1070));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4dcf95e3 for: 279 (0x117: PreviewImageLength): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(2143831464, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(106, tiffField0.getOffset());
      assertEquals(37381, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)71;
      TiffField tiffField0 = new TiffField(2112278998, 65490, fieldTypeAscii0, 14476L, 1885L, byteArray0, byteOrder0, (-1706));
      String string0 = tiffField0.getStringValue();
      assertEquals(2112278998, tiffField0.getTag());
      assertEquals((-1706), tiffField0.getSortHint());
      assertEquals(1885, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(14476, tiffField0.getBytesLength());
      assertEquals(65490, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2112278998, 65490, fieldTypeAscii0, 14476L, 1885L, byteArray0, byteOrder0, (-1706));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@765b3721
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1610612735), 889, fieldTypeByte0, 1L, (-2565L), byteArray0, byteOrder0, 439);
      String string0 = tiffField0.getTagName();
      assertEquals((-2565), tiffField0.getOffset());
      assertEquals(889, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xa0000001)", string0);
      assertEquals(439, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-53), fieldTypeLong0, 78L, (byte)31, byteArray0, byteOrder0, (-101));
      String string0 = tiffField0.getTagName();
      assertEquals((-53), tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1207), 709, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).IFD).FLOAT, 709, (-1207), byteArray0, byteOrder0, 215);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(UEw>K(!s` ");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2836, tiffField0.getBytesLength());
      assertEquals(709L, tiffField0.getCount());
      assertEquals((-1207), tiffField0.getTag());
      assertEquals(215, tiffField0.getSortHint());
      assertEquals((-1207), tiffField0.getOffset());
      assertEquals(709, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 127, fieldTypeByte0, 1746L, 127, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(1746, tiffField0.getBytesLength());
      assertEquals("16 (0x10: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (61) (1746 Byte)", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), 50, fieldTypeByte0, 318, (-3482L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(318, tiffField0.getBytesLength());
      assertEquals((-3482), tiffField0.getOffset());
      assertEquals(318L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeLong0.DOUBLE, 12, 1L, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.toString();
      assertEquals("12 (0xc: Unknown Tag): 0.0, 0.0 (12 Double)", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2460, 2460, fieldTypeByte0.FLOAT, 4L, (-1L), byteArray0, byteOrder0, (-1096));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1096), tiffField0.getSortHint());
      assertEquals(2460, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2460, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(215, 215, fieldTypeShort0.IFD, 215, 215, byteArray0, byteOrder0, 215);
      String string0 = tiffField0.toString();
      assertEquals(215, tiffField0.getOffset());
      assertEquals(215, tiffField0.getSortHint());
      assertEquals(215, tiffField0.getDirectoryType());
      assertEquals("215 (0xd7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (215 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(215, 215, fieldTypeShort0, 215, 215, byteArray0, byteOrder0, 215);
      String string0 = tiffField0.toString();
      assertEquals("215 (0xd7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (215 Short)", string0);
      assertEquals(430, tiffField0.getBytesLength());
      assertEquals(215, tiffField0.getOffset());
      assertEquals(215, tiffField0.getDirectoryType());
      assertEquals(215, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(543, 543, fieldTypeLong0.SHORT, 543, (-2147483648L), byteArray0, byteOrder0, (byte)125);
      String string0 = tiffField0.toString();
      assertEquals("543 (0x21f: Unknown Tag): 0, 0 (543 Short)", string0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(125, tiffField0.getSortHint());
      assertEquals(543, tiffField0.getDirectoryType());
      assertEquals(1086, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[61];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(3430, 3430, fieldTypeByte0.ASCII, 62, 3430, byteArray0, (ByteOrder) null, (-277));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3430, tiffField0.getOffset());
      assertEquals(62, tiffField0.getBytesLength());
      assertEquals((-277), tiffField0.getSortHint());
      assertEquals(3430, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(3430, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34735, 65535, fieldTypeByte0.SRATIONAL, 1976L, 4152L, byteArray0, byteOrder0, (-692));
      tiffField0.toString();
      assertEquals((-692), tiffField0.getSortHint());
      assertEquals(34735, tiffField0.getTag());
      assertEquals(4152, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1976L, tiffField0.getCount());
      assertEquals(15808, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)71;
      TiffField tiffField0 = new TiffField(2112278998, 65490, fieldTypeAscii0, 14476L, 1885L, byteArray0, byteOrder0, (-1706));
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(2112278998, tiffField0.getTag());
      assertEquals(1885, tiffField0.getOffset());
      assertEquals(65490, tiffField0.getDirectoryType());
      assertEquals((-1706), tiffField0.getSortHint());
      assertEquals(14476, tiffField0.getBytesLength());
      assertEquals(79L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(106, tiffField0.getOffset());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2143831464, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(562, "'");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2753), (-956), fieldTypeByte0, 1L, 78L, byteArray0, (ByteOrder) null, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1147), 77);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2753), tiffField0.getTag());
      assertNull(string0);
      assertEquals(78, tiffField0.getOffset());
      assertEquals((-956), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(51022, 1217, fieldTypeLong0, 84, 84, byteArray0, (ByteOrder) null, (-2136582714));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4118), 51022);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(51022, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: OpcodeList3, fieldType: Long", string0);
      assertEquals(1217, tiffField0.getDirectoryType());
      assertEquals((-2136582714), tiffField0.getSortHint());
      assertEquals(84, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(6, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(106, tiffField0.getOffset());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals(2143831464, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1516), 2460, fieldTypeByte0.FLOAT, 4L, (-1L), byteArray0, byteOrder0, (-1096));
      tiffField0.getFieldTypeName();
      assertEquals((-1096), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2460, tiffField0.getDirectoryType());
      assertEquals((-1516), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(404, 404, fieldTypeByte0, 404, 3353L, byteArray0, byteOrder0, (-3351));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3351), tiffField0.getSortHint());
      assertEquals(404, tiffField0.getTag());
      assertEquals(3353, tiffField0.getOffset());
      assertEquals(404, int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1556), (-1556), fieldTypeByte0, (-1556), 0L, byteArray0, byteOrder0, 92);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1556), tiffField0.getDirectoryType());
      assertEquals((-1556), tiffField0.getTag());
      assertEquals(92, int0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6, 2143831464, fieldTypeByte0, 1L, 106, byteArray0, (ByteOrder) null, 37381);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2143831464, tiffField0.getDirectoryType());
      assertEquals(37381, tiffField0.getSortHint());
      assertEquals("6 (0x6: Unknown Tag): ", string0);
      assertEquals(106, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeDouble0, 1846L, (-3069L), byteArray0, byteOrder0, (-1));
      tiffField0.dump();
      assertEquals(1846L, tiffField0.getCount());
      assertEquals(14768, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-3069), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2460, 2460, fieldTypeByte0.FLOAT, 4L, (-1L), byteArray0, byteOrder0, (-1096));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1096), tiffField0.getSortHint());
      assertEquals((-1L), tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2460, tiffField0.getTag());
      assertEquals(2460, tiffField0.getDirectoryType());
  }
}
