/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:57:16 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.InputStream;
import java.time.DateTimeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3025);
      // Undeclared exception!
      try { 
        classWriter0.newConst(classReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassReader@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      classWriter0.visitEnd();
      Item item0 = classWriter0.newInteger(34);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("9q4vH", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 25);
      Item item0 = classWriter0.newConstItem("wheel.asm.Frame");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      classWriter0.visitOuterClass("wheel.asm.MethodWriter", "wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      classWriter0.newFieldItem("=", "=", "=");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5780));
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(839);
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 839);
      classWriter0.newFloat(1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-37));
      classWriter0.newLong((-37));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1948, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.thisName = "org.apache.commons.io.IOCase";
      classWriter0.newLong(4);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newLong(1455L);
      classWriter0.newFloat(1455L);
      classWriter0.visitSource((String) null, "");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.thisName = "org.apache.commons.io.IOCase";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitSource("java/lang/Class", (String) null);
      classWriter0.newLong(1455L);
      System.setCurrentTimeMillis(1);
      classWriter0.newFloat(1455L);
      classWriter0.visitSource((String) null, "");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visitEnd();
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        classWriter0.visitField((-99), "2RH:x", "2RH:x", "2RH:x", mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@37cdfffe
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2884));
      classWriter0.addUninitializedType("+xSw3K9", (-1041));
      classWriter0.newConstItem("B~q>mn>OU=rQ}+Q<x");
      classWriter0.visitField(814, "B~q>mn>OU=rQ}+Q<x", "", "", "B~q>mn>OU=rQ}+Q<x");
      Item item0 = classWriter0.key;
      classWriter0.visitEnd();
      classWriter0.newClass("B~q>mn>OU=rQ}+Q<x");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1518);
      Float float0 = new Float((float) 1);
      classWriter0.newConstItem(float0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      classWriter0.newMethodItem("(U", "(U", "(U", true);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2885);
      String string0 = "R*b\\";
      Attribute attribute0 = new Attribute("R*b");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.newField("0<R><~", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Short short0 = new Short((short)2294);
      classWriter0.newConst(short0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      classWriter0.visitAnnotation(":,2Fqd\"pRW9xG", false);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)94;
      byteArray0[6] = (byte) (-128);
      Double.min((-6), (-6));
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      Type type0 = Type.DOUBLE_TYPE;
      String string0 = classWriter0.thisName;
      classWriter0.newConstItem(type0);
      Long long0 = new Long((byte)1);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      byte[] byteArray0 = ClassWriter.TYPE;
      int int0 = Float.MAX_EXPONENT;
      Long long0 = new Long(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Long.getLong("");
      Class<InputStream> class0 = InputStream.class;
      Type type0 = Type.getType(class0);
      classWriter0.newConst(type0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      classWriter0.thisName = ";pX6h::Do";
      classWriter0.newInteger(202);
      classWriter0.newInteger(202);
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        MockHijrahDate.of(1, 0, 773);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid Hijrah month: 0
         //
         verifyException("java.time.chrono.HijrahChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-63));
      classWriter0.toByteArray();
      classWriter0.addUninitializedType("2#e", (-63));
      classWriter0.addType("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2;%:");
      String[] stringArray0 = new String[7];
      stringArray0[0] = null;
      stringArray0[1] = "";
      stringArray0[3] = null;
      stringArray0[4] = "UZW;1/P\":0OmqB";
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        classWriter0.visit(4, 4, "", (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "1Xhby-z=e=]^Ut$h@<";
      stringArray0[1] = "";
      classWriter0.visit(10, (-5149), "", "1Xhby-z=e=]^Ut$h@<", "", stringArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.threshold = 2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      classWriter0.invalidFrames = true;
      classWriter0.addType("java/lang/String");
      classWriter0.addType("java/lang/String");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      Integer integer0 = new Integer(29);
      classWriter0.newConstItem(integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.ClassWriter");
      classWriter0.visitAnnotation(":,2Fqd\"pRW9xG", true);
      classWriter0.visitField(1, "wheel.asm.ClassWriter", "wheel.asm.ClassWriter", ":,2Fqd\"pRW9xG", ":,2Fqd\"pRW9xG");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1541);
      Byte byte0 = new Byte((byte)24);
      classWriter0.newConst(byte0);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem(":Cv+", ":Cv+", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(272);
      classWriter0.newUTF8("");
      classWriter0.visitOuterClass("", (String) null, (String) null);
      String string0 = "/UB/cQ1T-jT*";
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "g&j5yK&+8@ZS=", "Ro&`f?@)Z#\u0006f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2475));
      Double double0 = new Double((-2475));
      classWriter0.newConstItem(double0);
      Item item0 = classWriter0.newDouble((-2475));
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      classWriter0.newNameType("", "");
      classWriter0.addType("u=`#]{oW/k};Z*fLU~");
      classWriter0.visitOuterClass("", "", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(203);
      classWriter0.toByteArray();
      Boolean boolean0 = Boolean.valueOf(":B2Fqd\"pRW9xG");
      classWriter0.newConst(boolean0);
      Long long0 = new Long(2);
      Long.getLong(":B2Fqd\"pRW9xG", long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      int int0 = Double.MIN_EXPONENT;
      classWriter0.visitOuterClass("org.apache.commons.io.filefilter.FalseFileFilter", "", (String) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(186);
      String string0 = "java/lang/Object";
      classWriter0.visitInnerClass((String) null, "java/lang/Object", "java/lang/Object", 186);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2732));
      Long long0 = new Long((-4860L));
      classWriter0.newConst(long0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1902, (-2732));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1342));
      classWriter0.visitAnnotation("T_kw", false);
      classWriter0.visitInnerClass("T_kw", "n5", (String) null, (-70));
      classWriter0.typeTable = null;
      classWriter0.visitInnerClass("T_kw", "T_kw", "T_kw", 47);
      classWriter0.newLong(3147L);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      boolean boolean0 = ClassReader.SIGNATURES;
      classWriter0.newDouble(3565.177715051765);
      boolean boolean1 = ClassReader.WRITER;
      classWriter0.index = (-80);
      String[] stringArray0 = new String[0];
      classWriter0.visit(2, 2103, "G6rvn3Wi#K]q*l|bO", "G6rvn3Wi#K]q*l|bO", "G6rvn3Wi#K]q*l|bO", stringArray0);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray1[2] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray1[4] = "org.apache.commons.io.filefilter.FalseFileFilter";
      int int0 = Float.MIN_EXPONENT;
      classWriter0.addType("org.apache.commons.io.filefilter.FalseFileFilter");
      int int1 = Type.OBJECT;
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ":mv";
      stringArray0[1] = ":mv";
      stringArray0[2] = ":mv";
      stringArray0[3] = ":mv";
      stringArray0[4] = ":mv";
      classWriter0.visit(41, 41, ":mv", ":mv", ":mv", stringArray0);
      classWriter0.toByteArray();
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-37));
      Boolean boolean0 = Boolean.valueOf(true);
      classWriter0.newConstItem(boolean0);
      classWriter0.newNameType(" JW[}^m~1tasIR", "");
      System.setCurrentTimeMillis((-37));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2885);
      Attribute attribute0 = new Attribute("R*b");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      Character character0 = Character.valueOf('.');
      classWriter0.newConst(character0);
      classWriter0.addType("wheel.asm.ClassWriter");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.addUninitializedType("", 9);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.addUninitializedType("", 9);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      int int0 = Type.DOUBLE;
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.newClassItem("2 .i48;`l=Av goK#+");
      classWriter0.toByteArray();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeVisibleAnnotations");
      classWriter0.newFloat(8);
      classWriter0.newFloat(8);
      int int1 = Short.SIZE;
      int int2 = Float.BYTES;
      classWriter0.addType(".{,#E[8O1N$g*^");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("2 .i48;`l=Av goK#+", ".{,#E[8O1N$g*^");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 2 /i48;`l=Av goK#+
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(202);
      classWriter0.visitOuterClass("RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3298);
      classWriter0.newClass("$S|)'^c(p-d(O3&X#");
      classWriter0.visitSource("", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W");
      classWriter0.newNameType("W", "yS|-M\"b");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Dw>kwYxbVX742";
      int int0 = Character.MAX_RADIX;
      classWriter0.addUninitializedType("yS|-M\"b", 2533);
      Item[] itemArray0 = new Item[8];
      itemArray0[7] = itemArray0[2];
      classWriter0.typeTable = itemArray0;
      classWriter0.visitEnd();
      classWriter0.addUninitializedType("Dw>kwYxbVX742", 1);
      classWriter0.addUninitializedType("!EQ$h}/DW!un]r", 44);
      int int1 = Character.MIN_RADIX;
      int int2 = Frame.SHORT;
      classWriter0.newConst("Dw>kwYxbVX742");
      classWriter0.newConst("yS|-M\"b");
      classWriter0.addUninitializedType("Dw>kwYxbVX742", (-2282));
      classWriter0.newLong((-2282));
      classWriter0.newField("$", "Dw>kwYxbVX742", "EnclosingMethod");
      int int3 = Byte.SIZE;
      classWriter0.newLong((-2282));
      classWriter0.visitAnnotation("Dw>kwYxbVX742", false);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Edge.NORMAL;
      String[] stringArray0 = new String[9];
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1641, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Edge.NORMAL;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 1641);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.newInteger(4);
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.thisName = "ZWF;1/P\":0mqB";
      String string0 = "\\Qt#g8n\\";
      item0.strVal1 = "ZWF;1/P\":0mqB";
      classWriter0.visitAnnotation("Qt#g8n", true);
      boolean boolean0 = ClassReader.RESIZE;
      classWriter0.toByteArray();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray0[1] = "ZWF;1/P\":0mqB";
      stringArray0[2] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray0[3] = "Qt#g8n";
      stringArray0[4] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray0[5] = "org.apache.commons.io.filefilter.FalseFileFilter";
      int int0 = Float.SIZE;
      classWriter0.addType("org.apache.commons.io.filefilter.FalseFileFilter");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("ZWF;1/P\":0mqB", "org.apache.commons.io.filefilter.FalseFileFilter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: ZWF;1/P\":0mqB
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.toByteArray();
      Item[] itemArray0 = new Item[4];
      Item item0 = classWriter0.key3;
      itemArray0[0] = item0;
      Item item1 = classWriter0.newLong((-122));
      itemArray0[1] = item1;
      Item item2 = new Item(1, item1);
      itemArray0[2] = item2;
      Item item3 = classWriter0.key2;
      itemArray0[3] = item3;
      classWriter0.typeTable = itemArray0;
      item2.set(0);
      classWriter0.visit(0, (-122), "b9[T", "h9\"[ebYt6", "Synthetic", (String[]) null);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      int int0 = Character.BYTES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitSource("wheel.asm.Edge", "org.apache.commons.io.filefilter.FalseFileFilter");
      String[] stringArray0 = new String[0];
      classWriter0.visit((-2075), (-2075), "G6rvn3Wi#K]q*l|bO", "G6rvn3Wi#K]q*l|bO", "", stringArray0);
      int int1 = Frame.DOUBLE;
      String[] stringArray1 = new String[8];
      stringArray1[0] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray1[1] = "wheel.asm.Edge";
      stringArray1[2] = "org.apache.commons.io.filefilter.FalseFileFilter";
      classWriter0.newFloat(662.86F);
      stringArray1[3] = "";
      classWriter0.newClass("l'9*o!4u");
      int int2 = Frame.VALUE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(200, 2232);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      boolean boolean0 = ClassReader.WRITER;
      boolean boolean1 = classWriter0.invalidFrames;
      int int0 = Long.SIZE;
      boolean boolean2 = ClassReader.WRITER;
      classWriter0.index = 4;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newField("", "Synthetic", "org.apache.commons.io.filefilter.FalseFileFilter");
      classWriter0.getCommonSuperClass("wheel.asm.Edge", "org.apache.commons.io.filefilter.FalseFileFilter");
      int int1 = Frame.VALUE;
      classWriter0.toByteArray();
      classWriter0.newField("", "Synthetic", "org.apache.commons.io.filefilter.FalseFileFilter");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(9, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-70));
      boolean boolean0 = ClassReader.WRITER;
      classWriter0.newDouble(3034.6840979810395);
      int int0 = Long.SIZE;
      classWriter0.invalidFrames = true;
      boolean boolean1 = ClassReader.WRITER;
      classWriter0.index = 64;
      classWriter0.addType("org.apache.commons.io.filefilter.FalseFileFilter");
      int int1 = Type.OBJECT;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 34
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = 4;
      ClassWriter classWriter0 = new ClassWriter(4);
      boolean boolean0 = ClassReader.SIGNATURES;
      boolean boolean1 = ClassReader.RESIZE;
      boolean boolean2 = ClassReader.WRITER;
      classWriter0.index = (-80);
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod((-80), "wheel.asm.Edge", "wheel.asm.Edge", "4jK", stringArray0);
      String[] stringArray1 = new String[8];
      classWriter0.newLong(4);
      stringArray1[1] = "wheel.asm.Edge";
      stringArray1[2] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray1[6] = "org.apache.commons.io.filefilter.FalseFileFilter";
      stringArray1[4] = "org.apache.commons.io.filefilter.FalseFileFilter";
      int int1 = Long.BYTES;
      classWriter0.addType("org.apache.commons.io.filefilter.FalseFileFilter");
      String string0 = File.pathSeparator;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(8, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = 4;
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.thisName = "UZW;1/P\":0OmqB";
      int int1 = Character.BYTES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "org.apache.commons.io.filefilter.FalseFileFilter";
      classWriter0.newInteger(1);
      classWriter0.visitSource("wheel.asm.Edge", "org.apache.commons.io.filefilter.FalseFileFilter");
      String[] stringArray0 = new String[0];
      classWriter0.visit(2, (-2075), "UZW;1/P\":0OmqB", "UZW;1/P\":0OmqB", "", stringArray0);
      classWriter0.newClass("");
      classWriter0.newMethod("", "org.apache.commons.io.filefilter.FalseFileFilter", "", true);
      classWriter0.newMethod("", "org.apache.commons.io.filefilter.FalseFileFilter", "", true);
      String string1 = "";
      classWriter0.newClass("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "java/lang/String");
      String string2 = "void";
      String string3 = "java/lang/Object";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("wheel.asm.Edge", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      boolean boolean0 = ClassReader.WRITER;
      classWriter0.newLong(4);
      String string0 = "wheel.asm.Edge";
      int int0 = Long.SIZE;
      boolean boolean1 = ClassReader.WRITER;
      classWriter0.index = 384;
      int int1 = Frame.CHAR;
      classWriter0.getCommonSuperClass("wheel.asm.Edge", "org.apache.commons.io.filefilter.FalseFileFilter");
      classWriter0.getCommonSuperClass("wheel.asm.Edge", "java/lang/Object");
      int int2 = Type.OBJECT;
      classWriter0.toByteArray();
      classWriter0.newDouble(0.0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-2136), 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
