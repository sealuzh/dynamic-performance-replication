/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 01:16:06 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1861), "S]8+|an", "|g=rh5h-KI", "|g=rh5h-KI", "S]8+|an");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "ad#V}9sl", "ad#V}9sl", "ad#V}9sl", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@24c5a164
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-456));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Y", "", "", "p78pE}sTxNbFM[|*n\"E");
      Attribute attribute0 = new Attribute("p78pE}sTxNbFM[|*n\"E");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "9B8*o5]yl", "9B8*o5]yl", "9B8*o5]yl", "9B8*o5]yl");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("9B8*o5]yl", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1365));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2053), "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("Deprecated", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      classWriter0.version = (-1002);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1002), "_OKO0S%7+cd>?S", "_OKO0S%7+cd>?S", "_OKO0S%7+cd>?S", "_OKO0S%7+cd>?S");
      ByteVector byteVector0 = new ByteVector(268435456);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "9B8*o5]yl", "9B8*o5]yl", "9B8*o5]yl", "9B8*o5]yl");
      fieldWriter0.visitAnnotation("9B8*o5]yl", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-180));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\"/Dj7C*!s_", "\"/Dj7C*!s_", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1918));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 60, "na", "na", (String) null, "na");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1365));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2053), "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(0);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1365));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2053), "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "MJJ2K Q./_d1T`: ", "MJJ2K Q./_d1T`: ", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-456));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Y", "", "", "p78pE}sTxNbFM[|*n\"E");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1918));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 60, "na", "na", (String) null, "na");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
