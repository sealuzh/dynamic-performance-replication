/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 00:46:43 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-71);
      byteArray0[4] = (byte) (-16);
      TiffField tiffField0 = new TiffField((byte) (-16), (byte)120, fieldTypeRational0, 292L, 292L, byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(197, int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getTag());
      assertEquals(292, tiffField0.getOffset());
      assertEquals(2336, tiffField0.getBytesLength());
      assertEquals(120, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-16);
      TiffField tiffField0 = new TiffField((byte) (-16), (byte)120, fieldTypeRational0, 292L, 292L, byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-16), tiffField0.getTag());
      assertEquals(2336, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(292, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 39, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1537);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1537, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeShort0, 40965, (-1L), byteArray0, byteOrder0, 2164);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(2164, tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(40965, tagInfo0.tag);
      assertEquals(40965, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-2090L), 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2386), 2119594249, fieldTypeLong0, (-1L), 108L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getOffset());
      assertEquals((-2386), int0);
      assertEquals(2119594249, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)82;
      byteArray0[6] = (byte)82;
      TiffField tiffField0 = new TiffField((byte)82, 2147453128, fieldTypeAscii0, 16L, (-586L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(2147453128, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-586), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1887), "");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1017, 1017, fieldTypeDouble0, 1017, 1017, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1017, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1017, tiffField0.getDirectoryType());
      assertEquals(1017, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1026, 0, fieldTypeAscii0, 0L, 1026, byteArray0, byteOrder0, (-634));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1026, tiffField0.getTag());
      assertEquals((-634), int0);
      assertEquals(1026, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 1734L, byteArray0, byteOrder0, 4532);
      int int0 = tiffField0.getOffset();
      assertEquals(1734, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4532, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1058), 0, fieldTypeLong0, 0L, (-1058), byteArray0, (ByteOrder) null, (byte)74);
      int int0 = tiffField0.getOffset();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals((-1058), tiffField0.getTag());
      assertEquals((-1058), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-748), "`3");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-748), (-748), fieldTypeShort0, 4L, 16L, byteArray0, byteOrder0, (byte)17);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals((-748), tiffField0.getTag());
      assertEquals(21, int0);
      assertEquals((-748), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)57, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-41);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)63, (byte)2, fieldTypeShort0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)57);
      tiffField0.getIntValueOrArraySum();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(63, tiffField0.getTag());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(32826, "h^b!UI");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)54;
      TiffField tiffField0 = new TiffField(41487, 32826, fieldTypeByte0, 1L, (-637L), byteArray0, byteOrder0, (byte)34);
      tiffField0.getIntValue();
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-637), tiffField0.getOffset());
      assertEquals(41487, tiffField0.getTag());
      assertEquals(32826, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-59);
      TiffField tiffField0 = new TiffField(2741, 1, fieldTypeShort0, 1, 802L, byteArray0, byteOrder0, (-1593));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2741, tiffField0.getTag());
      assertEquals((-1593), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(802, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(282, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(3583, (byte)69, fieldTypeLong0, 1564L, (byte)13, byteArray0, (ByteOrder) null, 19);
      tiffField0.getFieldTypeName();
      assertEquals(3583, tiffField0.getTag());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(69, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(639, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-812), (byte)83, fieldTypeByte0, 3964L, (-2462L), byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-812), tiffField0.getTag());
      assertEquals((-2462), tiffField0.getOffset());
      assertEquals(83, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3939, 3939, (FieldType) null, 3939, (-2675L), byteArray0, byteOrder0, (byte)102);
      tiffField0.getFieldType();
      assertEquals((-2675), tiffField0.getOffset());
      assertEquals(3939, tiffField0.getDirectoryType());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(3939, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "org.apache.commons.imaging.formats.tiff.constants.OceScanjobTagConstants");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(105, 105, fieldTypeRational0, 105, 11736L, byteArray0, (ByteOrder) null, (-868));
      tiffField0.getFieldType();
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(105, tiffField0.getTag());
      assertEquals((-868), tiffField0.getSortHint());
      assertEquals(11736, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1239), "p0bes)2]Jc2>HeY");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2101L), (-1239), byteArray0, (ByteOrder) null, (-710));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-710), tiffField0.getSortHint());
      assertEquals((-1239), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1080, 32826, fieldTypeRational0.UNDEFINED, 1L, (-2048L), byteArray0, byteOrder0, 1080);
      tiffField0.getDoubleValue();
      assertEquals(1080, tiffField0.getSortHint());
      assertEquals(1080, tiffField0.getTag());
      assertEquals(32826, tiffField0.getDirectoryType());
      assertEquals((-2048), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)36;
      TiffField tiffField0 = new TiffField(3024, 41487, fieldTypeLong0, 1L, 504L, byteArray0, byteOrder0, 3);
      tiffField0.getDoubleValue();
      assertEquals(504, tiffField0.getOffset());
      assertEquals(3024, tiffField0.getTag());
      assertEquals(41487, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "T|f}nFe$[");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-127);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "E1||=");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeDouble0, 0, (byte)0, byteArray0, byteOrder0, 1326);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(1326, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-3155), (byte) (-19), fieldTypeLong0, 50934, 0L, byteArray0, byteOrder0, 72);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-3155), tiffField0.getTag());
      assertEquals((-19), int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 1734L, byteArray0, byteOrder0, 4532);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1734, tiffField0.getOffset());
      assertEquals(4532, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 192, (FieldType) null, 1L, 192, byteArray0, (ByteOrder) null, 0);
      tiffField0.getCount();
      assertEquals(192, tiffField0.getDirectoryType());
      assertEquals(192, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "T|f}nFe$[");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 123, fieldTypeAscii0, (-309L), 0, byteArray0, byteOrder0, 48325);
      int int0 = tiffField0.getBytesLength();
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(48325, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-309), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0.DOUBLE, 2400L, (-4L), byteArray0, (ByteOrder) null, 2238);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2238, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2670), fieldTypeByte0, 0L, 2288L, byteArray0, byteOrder0, (-3898));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2288, tiffField0.getOffset());
      assertEquals((-2670), tiffField0.getDirectoryType());
      assertEquals((-3898), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "E1||=");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-371), fieldTypeDouble0, 4L, 2944L, byteArray0, byteOrder0, 72);
      MockFile mockFile0 = new MockFile("E1||=", "< QZ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-371), tiffField0.getDirectoryType());
      assertEquals(40L, mockFile0.length());
      assertEquals(2944, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-6425), (-1049), fieldTypeLong0.FLOAT, (-1049), (-2581L), byteArray0, byteOrder0, (-6425));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 39, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1537);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[138];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(7, 1, fieldTypeDouble0, (-2183L), (-664L), byteArray0, byteOrder0, (-19));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(1985);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147453128, 63, fieldTypeAscii0, (-4204L), (-6468L), byteArray0, byteOrder0, 377);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1239), "p0bes)2]Jc2>HeY");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2101L), (-1239), byteArray0, (ByteOrder) null, (-710));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1594), (-1594), (FieldType) null, 18128L, (-1594), byteArray0, byteOrder0, (byte)117);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2386), 2119594249, fieldTypeLong0, (-1L), 108L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(639, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146718602, 2146718602, fieldTypeByte0, 639, 0L, byteArray0, byteOrder0, 3681);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, (byte[]) null, byteOrder0, (-829));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1071), (byte)95, fieldTypeFloat0, (-1106L), (-657L), byteArray0, byteOrder0, 32896);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2443), "unq{GuDR,");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 133, fieldTypeFloat0, (-559L), (-559L), byteArray0, byteOrder0, (-1049));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-408), (-408), fieldTypeShort0, (-408), (-408), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2089443548), (byte)64, fieldTypeDouble0, 170L, (byte)79, byteArray0, byteOrder0, 40963);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "t}wFG>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41498, (-534), fieldTypeLong0, (-75L), (-567L), byteArray0, byteOrder0, (-534));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ah!84");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "ah!84");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)74, 40961, fieldTypeLong0, (-1058), (-894L), byteArray0, byteOrder0, 88);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1174), 681, fieldTypeShort0, 681, (-2868L), byteArray0, byteOrder0, 2233);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("d}Q0OsSYH,{");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1362, tiffField0.getBytesLength());
      assertEquals(681, tiffField0.getDirectoryType());
      assertEquals(2233, tiffField0.getSortHint());
      assertEquals((-1174), tiffField0.getTag());
      assertEquals((-2868), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1058), 0, fieldTypeLong0, 0L, (-1058), byteArray0, (ByteOrder) null, (byte)110);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-1058), tiffField0.getOffset());
      assertEquals((-1058), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3077), (-898), fieldTypeShort0, 1405L, (-6166L), byteArray0, byteOrder0, (-898));
      tiffField0.getByteOrder();
      assertEquals((-898), tiffField0.getDirectoryType());
      assertEquals((-898), tiffField0.getSortHint());
      assertEquals((-6166), tiffField0.getOffset());
      assertEquals((-3077), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 18128L, 12392L, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(145024, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(12392, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-271), fieldTypeLong0, (-1565), (-271), byteArray0, byteOrder0, (-271));
      tiffField0.getFieldType();
      assertEquals(3, tiffField0.getTag());
      assertEquals((-271), tiffField0.getDirectoryType());
      assertEquals((-271), tiffField0.getOffset());
      assertEquals((-271), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1239), "p0bes)2]Jc2>HeY");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1239), 72, fieldTypeAscii0.SSHORT, 72, 72, byteArray0, byteOrder0, 48);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(72, tiffField0.getOffset());
      assertEquals((-1239), tiffField0.getTag());
      assertEquals(72, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[138];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-803), 7, fieldTypeDouble0, 70L, 70L, byteArray0, byteOrder0, (-803));
      tiffField0.getValue();
      assertEquals((-803), tiffField0.getTag());
      assertEquals(70, tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(560, tiffField0.getBytesLength());
      assertEquals((-803), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(28, (-820), fieldTypeDouble0, (-820), 28, byteArray0, byteOrder0, 29);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-820), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tagInfo0.tag);
      assertEquals(29, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(432, 37383, fieldTypeAscii0, 432, 37383, byteArray0, byteOrder0, 42016);
      int int0 = tiffField0.getTag();
      assertEquals(37383, tiffField0.getDirectoryType());
      assertEquals(432, int0);
      assertEquals(42016, tiffField0.getSortHint());
      assertEquals(37383, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1565), 41487, fieldTypeLong0, (-8L), 41487, byteArray0, byteOrder0, 41487);
      tiffField0.getCount();
      assertEquals(41487, tiffField0.getOffset());
      assertEquals(41487, tiffField0.getDirectoryType());
      assertEquals(41487, tiffField0.getSortHint());
      assertEquals((-1565), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3150, 3150, fieldTypeRational0, 0L, 189L, byteArray0, byteOrder0, 3150);
      int int0 = tiffField0.getBytesLength();
      assertEquals(3150, tiffField0.getDirectoryType());
      assertEquals(3150, tiffField0.getSortHint());
      assertEquals(3150, tiffField0.getTag());
      assertEquals(189, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(1985);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147453128, 63, fieldTypeAscii0, (-4204L), (-6468L), byteArray0, byteOrder0, 377);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(377, tiffField0.getSortHint());
      assertEquals((-6468), tiffField0.getOffset());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals("2147453128 (0x7fff88c8: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 18128L, 12392L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1080, 32826, fieldTypeRational0.SBYTE, 1L, (-2048L), byteArray0, byteOrder0, 1080);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(32826, tiffField0.getDirectoryType());
      assertEquals((-2048), tiffField0.getOffset());
      assertEquals(1080, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1080, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-118), 750, fieldTypeLong0, 2503L, (-1800), byteArray0, (ByteOrder) null, 750);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-118), tiffField0.getTag());
      assertEquals(750, tiffField0.getDirectoryType());
      assertEquals(750, tiffField0.getSortHint());
      assertEquals((-1800), tiffField0.getOffset());
      assertEquals(2503L, tiffField0.getCount());
      assertEquals(10012, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "E1||=");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1790), (-710), fieldTypeDouble0, 1077L, (byte)0, byteArray0, (ByteOrder) null, 1);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@9027ed3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(636, 636, fieldTypeShort0.UNDEFINED, 737L, 1734L, byteArray0, byteOrder0, 735);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@632a1017 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "E1||=");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeDouble0.FLOAT, 757L, (byte)0, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(757L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(3028, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeShort0.LONG, 4L, 0, byteArray0, byteOrder0, 271);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(271, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(565, 565, fieldTypeShort0, 892L, 0, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1784, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(565, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(565, tiffField0.getTag());
      assertEquals(892L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50708, 3, fieldTypeRational0, 133, (-1702L), byteArray0, byteOrder0, (byte)32);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(50708, tiffField0.getTag());
      assertEquals((-1702), tiffField0.getOffset());
      assertEquals(133L, tiffField0.getCount());
      assertEquals(1064, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 1734L, byteArray0, byteOrder0, 4532);
      tiffField0.getDoubleArrayValue();
      assertEquals(1734, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4532, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 100, fieldTypeFloat0, 1L, (byte)82, byteArray0, byteOrder0, (byte)95);
      tiffField0.getDoubleArrayValue();
      assertEquals(82, tiffField0.getTag());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(100, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-260), (-798), fieldTypeDouble0, 1734L, (-260), byteArray0, byteOrder0, 3307);
      tiffField0.getDoubleArrayValue();
      assertEquals((-798), tiffField0.getDirectoryType());
      assertEquals((-260), tiffField0.getOffset());
      assertEquals(3307, tiffField0.getSortHint());
      assertEquals(13872, tiffField0.getBytesLength());
      assertEquals((-260), tiffField0.getTag());
      assertEquals(1734L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "q?0wMNra0&g~VAva");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)59, 1366, fieldTypeByte0, 1366, (byte)0, byteArray0, byteOrder0, 50719);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7d05079f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1174), 681, fieldTypeShort0, 681, (-2868L), byteArray0, byteOrder0, 2233);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1362, tiffField0.getBytesLength());
      assertEquals(681, tiffField0.getDirectoryType());
      assertEquals(681L, tiffField0.getCount());
      assertEquals((-1174), tiffField0.getTag());
      assertEquals((-2868), tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(2233, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1058), 0, fieldTypeLong0, 0L, (-1058), byteArray0, (ByteOrder) null, (byte)74);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1058), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1058), tiffField0.getTag());
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(0, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50708, 3, fieldTypeRational0, 133, (-1702L), byteArray0, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeAscii0.LONG, 1L, (byte) (-9), byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-9), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147119605), (-2147119605), fieldTypeRational0, 1062L, 0L, byteArray0, byteOrder0, 1577);
      tiffField0.getIntArrayValue();
      assertEquals((-2147119605), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1577, tiffField0.getSortHint());
      assertEquals(8496, tiffField0.getBytesLength());
      assertEquals(1062L, tiffField0.getCount());
      assertEquals((-2147119605), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50708, 0, fieldTypeRational0, 408L, 1618L, byteArray0, byteOrder0, 775);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(50708 (0xc614: UniqueCameraModel): ): [Lorg.apache.commons.imaging.common.RationalNumber;@4f21231e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-51), 1195, fieldTypeAscii0, 0L, (-51), byteArray0, byteOrder0, 1195);
      String string0 = tiffField0.getStringValue();
      assertEquals((-51), tiffField0.getTag());
      assertEquals(1195, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1195, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-51), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1080, 32826, fieldTypeRational0.UNDEFINED, 1L, (-2048L), byteArray0, byteOrder0, 1080);
      String string0 = tiffField0.getTagName();
      assertEquals(32826, tiffField0.getDirectoryType());
      assertEquals((-2048), tiffField0.getOffset());
      assertEquals("Unknown Tag (0x438)", string0);
      assertEquals(1080, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3420), "GrayResponseCurve");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33451, (byte)4, fieldTypeAscii0, 1L, (byte)4, byteArray0, byteOrder0, (-384));
      String string0 = tiffField0.getTagName();
      assertEquals("MD PrepTime", string0);
      assertEquals((-384), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(33451, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2046, 1096, fieldTypeRational0, 2046, 2046, byteArray0, byteOrder0, 2046);
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(2046, tiffField0.getSortHint());
      assertEquals(2046, tiffField0.getTag());
      assertEquals(1096, tiffField0.getDirectoryType());
      assertEquals(2046, tiffField0.getOffset());
      assertEquals(16368, tiffField0.getBytesLength());
      assertEquals(2046L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[216];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-16), 1015, fieldTypeFloat0, 1015, 1324L, byteArray0, byteOrder0, 1015);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1015, tiffField0.getSortHint());
      assertEquals(1015, tiffField0.getDirectoryType());
      assertEquals(4060, tiffField0.getBytesLength());
      assertEquals(1015L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-16), tiffField0.getTag());
      assertEquals(1324, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[2];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(65535, (-2144513406), fieldTypeByte0, 715L, (byte)0, byteArray0, byteOrder0, 212);
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2144513406), tiffField0.getDirectoryType());
      assertEquals(715, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(715L, tiffField0.getCount());
      assertEquals(212, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(25, 3, fieldTypeFloat0.UNDEFINED, 261, 261, byteArray0, byteOrder0, 261);
      String string0 = tiffField0.getValueDescription();
      assertEquals(261, tiffField0.getOffset());
      assertEquals(25, tiffField0.getTag());
      assertEquals(261, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(261, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(261L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, (-2229), fieldTypeFloat0, 16L, 16L, byteArray0, byteOrder0, 2147453128);
      tiffField0.dump();
      assertEquals((-2229), tiffField0.getDirectoryType());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(2147453128, tiffField0.getSortHint());
      assertEquals(82, tiffField0.getTag());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-3155), (byte) (-19), fieldTypeLong0, 50934, 0L, byteArray0, byteOrder0, 72);
      tiffField0.dump();
      assertEquals((-19), tiffField0.getDirectoryType());
      assertEquals(50934L, tiffField0.getCount());
      assertEquals(72, tiffField0.getSortHint());
      assertEquals((-3155), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(203736, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[213];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(345, 2683, fieldTypeLong0, 1532L, 2683, byteArray0, byteOrder0, 345);
      String string0 = tiffField0.toString();
      assertEquals(345, tiffField0.getSortHint());
      assertEquals(2683, tiffField0.getOffset());
      assertEquals("345 (0x159: YClipPathUnits): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (1532 SLong)", string0);
      assertEquals(6128, tiffField0.getBytesLength());
      assertEquals(2683, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[117];
      TiffField tiffField0 = new TiffField(597, 597, fieldTypeShort0, 597, 597, byteArray0, byteOrder0, 597);
      String string0 = tiffField0.toString();
      assertEquals("597 (0x255: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (597 Short)", string0);
      assertEquals(597, tiffField0.getSortHint());
      assertEquals(597, tiffField0.getOffset());
      assertEquals(1194, tiffField0.getBytesLength());
      assertEquals(597, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(41487, (-2259), fieldTypeLong0.SHORT, 2279L, 623L, byteArray0, byteOrder0, (-2155));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3150, 3150, fieldTypeRational0, 0L, 189L, byteArray0, byteOrder0, 3150);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(3150, tiffField0.getDirectoryType());
      assertEquals(3150, tiffField0.getSortHint());
      assertEquals(3150, tiffField0.getTag());
      assertEquals(189, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[74];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1501, 44, fieldTypeAscii0, 1501, 5412L, byteArray0, byteOrder0, (-144));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1501, tiffField0.getTag());
      assertEquals(1501, tiffField0.getBytesLength());
      assertEquals(44, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-144), tiffField0.getSortHint());
      assertEquals(5412, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1565), "unq{GuDR,");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-1565), 133, fieldTypeAscii0, 133, 1L, byteArray0, (ByteOrder) null, (-1653));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1653), tiffField0.getSortHint());
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getBytesLength());
      assertEquals(133L, tiffField0.getCount());
      assertEquals((-1565), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 100, fieldTypeFloat0, 1L, (byte)82, byteArray0, byteOrder0, (byte)95);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(82, tiffField0.getTag());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(100, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2146718602, fieldTypeFloat0, (byte)50, (byte)50, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2146718602, tiffField0.getDirectoryType());
      assertEquals(50L, tiffElement0.offset);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "T|f}nFe$[");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-127), (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, (byte) (-63), fieldTypeRational0, 2828L, 3699, byteArray0, (ByteOrder) null, (byte) (-36));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-63), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals(3699, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1565), 41487, fieldTypeLong0, (-8L), 41487, byteArray0, byteOrder0, 41487);
      tiffField0.getFieldTypeName();
      assertEquals((-1565), tiffField0.getTag());
      assertEquals(41487, tiffField0.getDirectoryType());
      assertEquals(41487, tiffField0.getOffset());
      assertEquals(41487, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147119605), (-2147119605), fieldTypeRational0, 1062L, 0L, byteArray0, byteOrder0, 1577);
      int int0 = tiffField0.getOffset();
      assertEquals(1577, tiffField0.getSortHint());
      assertEquals((-2147119605), tiffField0.getTag());
      assertEquals((-2147119605), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-829), (-1550), fieldTypeShort0, (-2388L), (-2388L), (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals((-829), tiffField0.getTag());
      assertEquals((-2388), tiffField0.getOffset());
      assertEquals((-1550), tiffField0.getDirectoryType());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-2146681423), fieldTypeShort0, 2147475486, 3138L, byteArray0, byteOrder0, 2146967046);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3138, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(2146967046, tiffField0.getSortHint());
      assertEquals((-2146681423), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0.DOUBLE, 2400L, (-4L), byteArray0, (ByteOrder) null, 2238);
      tiffField0.dump();
      assertEquals(2238, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2400L, tiffField0.getCount());
      assertEquals(19200, tiffField0.getBytesLength());
      assertEquals((-4), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(41492, 65535, fieldTypeDouble0, 41492, (-27552L), byteArray0, (ByteOrder) null, 22);
      String string0 = tiffField0.getValueDescription();
      assertEquals(41492, tiffField0.getTag());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(331936, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-27552), tiffField0.getOffset());
      assertEquals(41492L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, " (");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3408, 0, fieldTypeFloat0, 4L, 4L, byteArray0, byteOrder0, 3408);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)20, (byte)4);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(3408, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType:  (", string0);
      assertNotNull(string0);
      assertEquals(3408, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }
}
