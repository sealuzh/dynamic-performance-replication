/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 09:11:41 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      short short0 = classReader0.readShort(14);
      assertEquals((short) (-25335), short0);
      
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
      
      classReader0.getInterfaces();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassWriter");
      classReader0.readByte(84);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      classReader0.getItem(81);
      ClassWriter classWriter0 = new ClassWriter(10);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.readShort(33);
      int int1 = ClassReader.SKIP_CODE;
      short short1 = classReader0.readShort(8);
      assertEquals((short)640, short1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      ClassWriter classWriter0 = new ClassWriter(12);
      classReader0.accept((ClassVisitor) classWriter0, (-1069));
      assertEquals(4, ClassReader.SKIP_FRAMES);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "wheel.asm.ClassWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      classReader0.readShort(14);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Z';
      charArray0[1] = '2';
      charArray0[2] = 'U';
      charArray0[3] = '(';
      charArray0[4] = 'M';
      charArray0[5] = '7';
      charArray0[6] = '6';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      classReader0.readShort(14);
      int int0 = classReader0.getAccess();
      assertEquals(33, int0);
      
      classReader0.getInterfaces();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.ClassWriter");
      classReader0.readByte(84);
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
      
      int int1 = classReader0.getItem(81);
      assertEquals(382, int1);
      
      classReader0.readShort(33);
      int int2 = ClassReader.SKIP_CODE;
      short short0 = classReader0.readShort(8);
      assertEquals((short)640, short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      int int0 = 13;
      Label[] labelArray0 = new Label[4];
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "wheel.asm.ClassWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      classReader0.readShort(14);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 9);
      // Undeclared exception!
      try { 
        classWriter0.newConst(classReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassReader@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NameFileFilter");
      Label[] labelArray0 = new Label[1];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = label0.next;
      int int0 = ClassReader.SKIP_FRAMES;
      char[] charArray0 = new char[8];
      charArray0[0] = 'W';
      charArray0[1] = 'x';
      charArray0[2] = '?';
      charArray0[3] = 'q';
      classReader0.getClassName();
      charArray0[4] = 's';
      charArray0[6] = '\"';
      charArray0[7] = 'l';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AbstractFileFilter");
      classReader0.getClassName();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        classReader0.getItem((-1906));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1906
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte) (-119);
      byteArray0[5] = (byte)46;
      byteArray0[7] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-4594));
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("org.apache.commons.io.IOCase");
      attributeArray0[0] = attribute0;
      char[] charArray0 = new char[4];
      charArray0[0] = 'R';
      charArray0[1] = 'z';
      charArray0[2] = ']';
      charArray0[3] = '`';
      Label[] labelArray0 = new Label[0];
      Attribute attribute1 = attribute0.read(classReader0, 1902, (byte)0, charArray0, (-784), labelArray0);
      attributeArray0[1] = attribute1;
      Attribute attribute2 = new Attribute("org.apache.commons.io.filefilter.SizeFileFilter");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = attribute2.read(classReader0, (byte)0, 682, charArray0, 930, labelArray0);
      attributeArray0[3] = attribute3;
      Attribute attribute4 = attribute2.read(classReader0, 8, (byte)7, charArray0, 1881, labelArray0);
      attributeArray0[4] = attribute4;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, (int) (byte)0);
      assertEquals(49, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FileFileFilter");
      char[] charArray0 = new char[3];
      classReader0.getInterfaces();
      charArray0[0] = 'Z';
      charArray0[1] = '}';
      charArray0[2] = 'j';
      // Undeclared exception!
      try { 
        classReader0.readConst(77, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 77
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)13;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte)53;
      byte byte1 = (byte) (-20);
      byteArray0[5] = (byte) (-20);
      byteArray0[6] = (byte)27;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte) (-88);
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)86;
      byteArray0[5] = (byte) (-49);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-911), 2769);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pushbackInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      int int0 = (-119);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-1), (-119));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("f4+8|f%");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(bufferedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)33;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)58;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)11, 101);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-24);
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1884);
      classReader0.copyPool(classWriter0);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.lastField = null;
      classReader0.getAccess();
      classReader0.readByte(48);
      classReader0.readInt(1);
      classReader0.copyPool(classWriter0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte) (-5);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-5), (-1343));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)36;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)21;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte)17;
      byteArray0[4] = (byte) (-102);
      byteArray0[5] = (byte) (-76);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = ",";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)115;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassWriter classWriter0 = new ClassWriter(8);
      Item[] itemArray0 = new Item[2];
      Item item0 = classWriter0.key3;
      itemArray0[0] = item0;
      Item item1 = classWriter0.key3;
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.copyPool(classWriter0);
      classReader0.getInterfaces();
      FileSystemHandling.shouldAllThrowIOExceptions();
      item1.intVal = 10;
      char[] charArray0 = new char[5];
      charArray0[0] = 'N';
      charArray0[1] = '!';
      charArray0[2] = 'n';
      charArray0[3] = 'q';
      charArray0[4] = '~';
      // Undeclared exception!
      try { 
        classReader0.readClass(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
