/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 18:18:37 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "ForwardMatrix2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-112);
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField(50218, 641, fieldTypeRational0, 582L, 50218, byteArray0, byteOrder0, 641);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50218, tiffField0.getTag());
      assertEquals(50218, tiffField0.getOffset());
      assertEquals(641, tiffField0.getSortHint());
      assertEquals(18, int0);
      assertEquals(641, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "ForwardMatrix2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField(50218, 641, fieldTypeRational0, 582L, 50218, byteArray0, byteOrder0, 641);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(641, tiffField0.getSortHint());
      assertEquals(641, tiffField0.getDirectoryType());
      assertEquals(50218, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50218, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-475), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-475), (-271), fieldTypeLong0, 1L, (-271), byteArray0, byteOrder0, 50934);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50934, tiffField0.getSortHint());
      assertEquals((-271), tiffField0.getDirectoryType());
      assertEquals((-271), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-475), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(27, (-4342), fieldTypeAscii0.LONG, 27, (-4342), byteArray0, byteOrder0, (-2207));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (27 Long)", string0);
      assertEquals((-4342), tiffField0.getOffset());
      assertEquals((-4342), tiffField0.getDirectoryType());
      assertEquals((-2207), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[225];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, (-34343034521L), 1L, byteArray0, byteOrder0, 1);
      tiffField0.getValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(27, (-4342), fieldTypeAscii0.LONG, 27, (-4342), byteArray0, byteOrder0, (-2207));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-4342), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-4342), tiffField0.getOffset());
      assertEquals((-2207), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1666), "DbcM iZe=Ztuk\"F.");
      TiffField tiffField0 = new TiffField(400, (-1666), fieldTypeRational0, 1716, (-1666), byteArray0, byteOrder0, (-1666));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1666), tiffField0.getDirectoryType());
      assertEquals(400, tagInfo0.tag);
      assertEquals((-1666), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
      assertEquals((-1666), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(332, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)0, 332, fieldTypeFloat0.ASCII, (byte)0, (-2323L), byteArray0, byteOrder0, 644);
      int int0 = tiffField0.getTag();
      assertEquals(644, tiffField0.getSortHint());
      assertEquals((-2323), tiffField0.getOffset());
      assertEquals(332, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-127), (byte)52, fieldTypeAscii0, 0L, 0L, (byte[]) null, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals((-127), int0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-4);
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeAscii0, 3, (byte) (-4), byteArray0, byteOrder0, (-1528));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-1528), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 2400, fieldTypeRational0, (-266L), 2400, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2400, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2400, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-975), fieldTypeFloat0, 966L, (-15L), byteArray0, byteOrder0, (byte)100);
      int int0 = tiffField0.getSortHint();
      assertEquals((-975), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-15), tiffField0.getOffset());
      assertEquals(100, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "Z;gvN2U5#il!z:e5Ghr");
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(1253, 1, fieldTypeShort0, 1, (-17179869184L), byteArray0, byteOrder0, 1253);
      int int0 = tiffField0.getOffset();
      assertEquals(1253, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1253, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1020), 150, fieldTypeRational0, 2050L, (-1747L), byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getOffset();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(150, tiffField0.getDirectoryType());
      assertEquals((-1747), int0);
      assertEquals((-1020), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-1);
      CharBuffer charBuffer0 = CharBuffer.allocate(1737);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40960, 1444, fieldTypeLong0, 2338L, 1737, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1737, tiffField0.getOffset());
      assertEquals(1444, tiffField0.getDirectoryType());
      assertEquals(40960, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-57);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-57), (byte)47, fieldTypeShort0, (byte)8, 3436L, byteArray0, byteOrder0, (-1170));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1170), tiffField0.getSortHint());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals((-57), tiffField0.getTag());
      assertEquals(3436, tiffField0.getOffset());
      assertEquals((-14592), int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34022, 996, fieldTypeFloat0, 1L, (-1221), byteArray0, byteOrder0, 2146149807);
      tiffField0.getIntValue();
      assertEquals(34022, tiffField0.getTag());
      assertEquals(996, tiffField0.getDirectoryType());
      assertEquals((-1221), tiffField0.getOffset());
      assertEquals(2146149807, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-47);
      byteArray0[4] = (byte)94;
      TiffField tiffField0 = new TiffField(39, (-2600), fieldTypeRational0, 1L, 1095L, byteArray0, byteOrder0, (-1531));
      tiffField0.getIntValue();
      assertEquals(1095, tiffField0.getOffset());
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals((-1531), tiffField0.getSortHint());
      assertEquals(39, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1327, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-44);
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2453, 2453, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(2453, tiffField0.getDirectoryType());
      assertEquals(2453, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(32995, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37382, 37382, fieldTypeLong0, 32995, 37382, byteArray0, byteOrder0, 32995);
      tiffField0.getFieldTypeName();
      assertEquals(32995, tiffField0.getSortHint());
      assertEquals(37382, tiffField0.getOffset());
      assertEquals(37382, tiffField0.getTag());
      assertEquals(37382, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-975), fieldTypeFloat0, 966L, (-15L), byteArray0, byteOrder0, (byte)100);
      tiffField0.getFieldTypeName();
      assertEquals(100, tiffField0.getSortHint());
      assertEquals((-15), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-975), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 133, (FieldType) null, 133, 133, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getTag());
      assertEquals(133, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, ".[g)UDJ-C4kcyhvvsZ|");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 75, fieldTypeByte0, 704L, (-117L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-117), tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147292128), 0, fieldTypeFloat0, 2029L, 4159L, byteArray0, byteOrder0, 4);
      tiffField0.getFieldType();
      assertEquals((-2147292128), tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4159, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 75, fieldTypeRational0.BYTE, 1, 1024L, byteArray0, byteOrder0, (-1425));
      tiffField0.getDoubleValue();
      assertEquals(1024, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1425), tiffField0.getSortHint());
      assertEquals(75, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      TiffField tiffField0 = new TiffField(12, 65535, fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, 2701);
      tiffField0.getDoubleValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(2701, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-60);
      TiffField tiffField0 = new TiffField((-1), (-1137), fieldTypeByte0, 1L, (-1), byteArray0, byteOrder0, 50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1137), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(8, 0, fieldTypeShort0, 360L, 1457, byteArray0, byteOrder0, 2697);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(2697, tiffField0.getSortHint());
      assertEquals(1457, tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(403, (byte) (-40), fieldTypeLong0.BYTE, 1056L, (-9L), byteArray0, byteOrder0, (-427));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(403, tiffField0.getTag());
      assertEquals((-427), tiffField0.getSortHint());
      assertEquals((-9), tiffField0.getOffset());
      assertEquals((-40), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 257, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)101);
      tiffField0.getCount();
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(257, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(257, (-644), fieldTypeLong0, (-3010L), (byte) (-111), byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals((-111), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(257, tiffField0.getTag());
      assertEquals((-644), tiffField0.getDirectoryType());
      assertEquals((-3010L), long0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33, "jF'pwE7QZTI-:6jH");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2476), (-2476), fieldTypeRational0, (-2476), (-2476), byteArray0, byteOrder0, (-2147292129));
      tiffField0.getBytesLength();
      assertEquals((-2476), tiffField0.getDirectoryType());
      assertEquals((-2476), tiffField0.getTag());
      assertEquals((-2476), tiffField0.getOffset());
      assertEquals((-2147292129), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(3, 2147452731, fieldTypeByte0, 613L, (-1L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2147452731, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34022, 996, fieldTypeFloat0, 1L, (-1221), byteArray0, byteOrder0, 2146149807);
      tiffField0.getByteArrayValue();
      assertEquals((-1221), tiffField0.getOffset());
      assertEquals(996, tiffField0.getDirectoryType());
      assertEquals(34022, tiffField0.getTag());
      assertEquals(2146149807, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1706), (-1706), fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1706), tiffField0.getTag());
      assertEquals((-1706), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)106, 4076, fieldTypeFloat0, 966L, (-15L), byteArray0, byteOrder0, 1253);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(146, 146, (FieldType) null, 146, 146, byteArray0, byteOrder0, 146);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2248), (-2248), fieldTypeRational0, (-2248), (-2248), byteArray0, byteOrder0, (-2248));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeRational0, 14, 14, (byte[]) null, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3009), (-3009), fieldTypeRational0, (-3009), (-3009), byteArray0, byteOrder0, (-3009));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeShort0, 40093, 188L, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3172), (-3172), fieldTypeLong0, (-3172), (-3172), (byte[]) null, byteOrder0, (-3172));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1614), (-1614), fieldTypeRational0, (-1614), (-1614), (byte[]) null, byteOrder0, (-1614));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1484), (-1484), fieldTypeDouble0, (-1484), (-1484), byteArray0, byteOrder0, (-1484));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1716, 1716, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 1716);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 44, (FieldType) null, 44, 44, byteArray0, byteOrder0, 44);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 41, fieldTypeShort0, 41, 41, (byte[]) null, byteOrder0, 41);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-26), (-26), fieldTypeRational0, (-26), (-26), byteArray0, byteOrder0, (-26));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeFloat0, 1, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1681, 1681, fieldTypeShort0, 1681, 1681, (byte[]) null, byteOrder0, 1681);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-596), (-596), fieldTypeShort0, (-596), (-596), byteArray0, byteOrder0, (-596));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2248), (-2248), fieldTypeRational0, (-2248), (-2248), (byte[]) null, byteOrder0, (-2248));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeRational0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeShort0, 40095, 40095, byteArray0, byteOrder0, 1694);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(382, 382, fieldTypeShort0, 382, 382, (byte[]) null, byteOrder0, 382);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1388), (-1388), fieldTypeShort0, (-1388), (-1388), byteArray0, byteOrder0, (-1388));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), (byte[]) null, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-34), (-34), fieldTypeRational0, (-34), (-34), byteArray0, byteOrder0, (-34));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[197];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-381), (-381), fieldTypeFloat0, (-381), (-381), byteArray0, byteOrder0, (-381));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, (-620), fieldTypeShort0, (-620), 1847, byteArray0, byteOrder0, 3119);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "f.tH[+ijT'AEV(");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(959, 959, fieldTypeRational0, 1L, 959, byteArray0, (ByteOrder) null, 959);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(959);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "'KNZUye]s)h@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1871, 1871, fieldTypeFloat0, 1871, 1871, byteArray0, byteOrder0, 1871);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-33), (-33), fieldTypeRational0, (-33), (-33), byteArray0, byteOrder0, (-33));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2806, (-887), fieldTypeFloat0, 255L, 255L, byteArray0, byteOrder0, (-1481));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1228, 50722, fieldTypeFloat0, 0L, 3864L, byteArray0, byteOrder0, 50737);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50737, tiffField0.getSortHint());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(1228, tiffField0.getTag());
      assertEquals(3864, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147292128), 0, fieldTypeFloat0, 2029L, 4159L, byteArray0, byteOrder0, 4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-2147292128), tiffField0.getTag());
      assertEquals(4159, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1030), (-1030), fieldTypeAscii0, 7028L, (-11208L), byteArray0, byteOrder0, 75);
      tiffField0.getByteOrder();
      assertEquals(75, tiffField0.getSortHint());
      assertEquals((-1030), tiffField0.getTag());
      assertEquals((-11208), tiffField0.getOffset());
      assertEquals((-1030), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(316, 316, fieldTypeShort0, 316, 316, (byte[]) null, byteOrder0, 316);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 75, fieldTypeLong0.BYTE, 704L, (-117L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-117), tiffField0.getOffset());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeDouble0, 1254, 1254, byteArray0, byteOrder0, 1254);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1254, int0);
      assertEquals(1254, tiffField0.getOffset());
      assertEquals(1254, tiffField0.getSortHint());
      assertEquals(1254, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1897), (-1897), fieldTypeFloat0, (-1897), (-1897), byteArray0, byteOrder0, (-1897));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1141), (-1141), fieldTypeFloat0, (-1141), (-1141), byteArray0, byteOrder0, (-1141));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1228, 50722, fieldTypeFloat0, 0L, 3864L, byteArray0, byteOrder0, 50737);
      int int0 = tiffField0.getOffset();
      assertEquals(50737, tiffField0.getSortHint());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertEquals(3864, int0);
      assertEquals(1228, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1449, 1449, (FieldType) null, 0L, 0L, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(1449, int0);
      assertEquals(1449, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50737, 1, fieldTypeFloat0.SHORT, 1757L, (-679), byteArray0, byteOrder0, (-370));
      long long0 = tiffField0.getCount();
      assertEquals(50737, tiffField0.getTag());
      assertEquals(1757L, long0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-370), tiffField0.getSortHint());
      assertEquals((-679), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-12), 65535, fieldTypeLong0, (byte)0, (byte)25, byteArray0, byteOrder0, (-1));
      tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-12), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeDouble0, 1254, 1254, byteArray0, byteOrder0, 1254);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1254, tiffField0.getDirectoryType());
      assertEquals("1254 (0x4e6: Unknown Tag): ", string0);
      assertEquals(1254, tiffField0.getSortHint());
      assertEquals(1254, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(697, 6480, fieldTypeRational0, 1L, 785L, byteArray0, byteOrder0, 6480);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1871, 1871, fieldTypeFloat0, 1871, 1871, byteArray0, byteOrder0, 1871);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@174836fa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, 2, 2, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeDouble0, 1254, 1254, byteArray0, byteOrder0, 1254);
      tiffField0.getDoubleArrayValue();
      assertEquals(1254, tiffField0.getTag());
      assertEquals(1254, tiffField0.getDirectoryType());
      assertEquals(1254L, tiffField0.getCount());
      assertEquals(1254, tiffField0.getOffset());
      assertEquals(1254, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(394, 394, fieldTypeFloat0, 394, 394, byteArray0, byteOrder0, 394);
      tiffField0.getDoubleArrayValue();
      assertEquals(394, tiffField0.getOffset());
      assertEquals(394, tiffField0.getTag());
      assertEquals(394, tiffField0.getSortHint());
      assertEquals(394L, tiffField0.getCount());
      assertEquals(394, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(66, 1013, fieldTypeLong0, 1013, 1013, byteArray0, byteOrder0, 1013);
      tiffField0.getDoubleArrayValue();
      assertEquals(1013, tiffField0.getSortHint());
      assertEquals(1013, tiffField0.getDirectoryType());
      assertEquals(1013L, tiffField0.getCount());
      assertEquals(66, tiffField0.getTag());
      assertEquals(1013, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1568, 1568, fieldTypeByte0, 1568, 1568, byteArray0, byteOrder0, 1568);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5ea82d03 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(13L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2586, 2586, fieldTypeShort0, 2586, 2586, byteArray0, byteOrder0, 2586);
      tiffField0.getDoubleArrayValue();
      assertEquals(2586, tiffField0.getOffset());
      assertEquals(2586, tiffField0.getTag());
      assertEquals(2586, tiffField0.getDirectoryType());
      assertEquals(2586, tiffField0.getSortHint());
      assertEquals(2586L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, (byte)0, 15, byteArray0, byteOrder0, 15);
      tiffField0.getDoubleArrayValue();
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeLong0, 66, 66, byteArray0, byteOrder0, 66);
      tiffField0.getIntArrayValue();
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getOffset());
      assertEquals(66L, tiffField0.getCount());
      assertEquals(66, tiffField0.getTag());
      assertEquals(66, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeDouble0, 1254, 1254, byteArray0, byteOrder0, 1254);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@61af8a51 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, (byte)0, 1, byteArray0, byteOrder0, 1);
      assertEquals(0L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2565, tiffField0.getDirectoryType());
      assertEquals(2565, tiffField0.getOffset());
      assertEquals(2565, tiffField0.getTag());
      assertEquals(2565, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(2565L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@1f9b74dd
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeAscii0, 2147483647L, 5, byteArray0, byteOrder0, 237);
      String string0 = tiffField0.getStringValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(237, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      String string0 = tiffField0.getTagName();
      assertEquals(2565, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xa05)", string0);
      assertEquals(2565, tiffField0.getSortHint());
      assertEquals(2565, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(256, 256, fieldTypeDouble0, 256, 256, byteArray0, byteOrder0, 256);
      String string0 = tiffField0.getTagName();
      assertEquals(256, tiffField0.getOffset());
      assertEquals("ImageWidth", string0);
      assertEquals(256, tiffField0.getSortHint());
      assertEquals(256, tiffField0.getTag());
      assertEquals(256, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[333];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2067, 2067, fieldTypeFloat0, 2067, 2067, byteArray0, byteOrder0, (-407));
      tiffField0.dump();
      assertEquals(2067, tiffField0.getTag());
      assertEquals(2067, tiffField0.getOffset());
      assertEquals(8268, tiffField0.getBytesLength());
      assertEquals(2067, tiffField0.getDirectoryType());
      assertEquals((-407), tiffField0.getSortHint());
      assertEquals(2067L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[74];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(166, 166, fieldTypeByte0, 166, 166, byteArray0, byteOrder0, 34019);
      tiffField0.dump();
      assertEquals(166, tiffField0.getDirectoryType());
      assertEquals(166L, tiffField0.getCount());
      assertEquals(166, tiffField0.getBytesLength());
      assertEquals(166, tiffField0.getTag());
      assertEquals(34019, tiffField0.getSortHint());
      assertEquals(166, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(43, 2565, fieldTypeByte0, 43, 43, byteArray0, byteOrder0, 43);
      tiffField0.dump();
      assertEquals(2565, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getBytesLength());
      assertEquals(43L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1254, 1254, fieldTypeDouble0, 1254, 1254, byteArray0, byteOrder0, 1254);
      String string0 = tiffField0.toString();
      assertEquals(1254, tiffField0.getSortHint());
      assertEquals(1254, tiffField0.getDirectoryType());
      assertEquals(10032, tiffField0.getBytesLength());
      assertEquals("1254 (0x4e6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1254 Double)", string0);
      assertEquals(1254, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[425];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1482, 1482, fieldTypeDouble0, 1482, 1482, byteArray0, byteOrder0, 1482);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1482, tiffField0.getDirectoryType());
      assertEquals(1482, tiffField0.getTag());
      assertEquals(1482, tiffField0.getSortHint());
      assertEquals(1482L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(11856, tiffField0.getBytesLength());
      assertEquals(1482, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(640, 640, fieldTypeDouble0.SLONG, 640, 640, byteArray0, byteOrder0, 640);
      tiffField0.dump();
      assertEquals(640, tiffField0.getSortHint());
      assertEquals(640, tiffField0.getOffset());
      assertEquals(640, tiffField0.getTag());
      assertEquals(640L, tiffField0.getCount());
      assertEquals(2560, tiffField0.getBytesLength());
      assertEquals(640, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 64L, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(64L, tiffField0.getCount());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(238, 65535, fieldTypeRational0.SHORT, 238, 65535, byteArray0, byteOrder0, 238);
      tiffField0.dump();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(238, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(238, tiffField0.getSortHint());
      assertEquals(238L, tiffField0.getCount());
      assertEquals(476, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      tiffField0.dump();
      assertEquals(2565, tiffField0.getOffset());
      assertEquals(2565, tiffField0.getTag());
      assertEquals(2565, tiffField0.getSortHint());
      assertEquals(2565L, tiffField0.getCount());
      assertEquals(5130, tiffField0.getBytesLength());
      assertEquals(2565, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(95, "");
      TiffField tiffField0 = new TiffField(51, 440, fieldTypeAscii0, 1871, 4052L, byteArray0, byteOrder0, 95);
      tiffField0.dump();
      assertEquals(1871, tiffField0.getBytesLength());
      assertEquals(4052, tiffField0.getOffset());
      assertEquals(51, tiffField0.getTag());
      assertEquals(1871L, tiffField0.getCount());
      assertEquals(440, tiffField0.getDirectoryType());
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, 2, 2, byteArray0, byteOrder0, 2);
      tiffField0.dump();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40963, 37, fieldTypeShort0.ASCII, 37, 37, byteArray0, byteOrder0, 37);
      tiffField0.dump();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getBytesLength());
      assertEquals(37L, tiffField0.getCount());
      assertEquals(40963, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-679), 50737, fieldTypeFloat0, 0L, 131980L, byteArray0, byteOrder0, 50722);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50722, tiffField0.getSortHint());
      assertEquals(50737, tiffField0.getDirectoryType());
      assertEquals((-679), tiffField0.getTag());
      assertEquals(131980, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 13);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(6, 6);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertNull(string0);
      assertEquals(13L, tiffField0.getCount());
      assertEquals(13, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 9, 9, byteArray0, byteOrder0, 9);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(9, 9);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(9, tiffField0.getTag());
      assertEquals(72, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2565, 2565, fieldTypeShort0, 2565, 2565, byteArray0, byteOrder0, 2565);
      tiffField0.getFieldTypeName();
      assertEquals(2565, tiffField0.getSortHint());
      assertEquals(2565, tiffField0.getOffset());
      assertEquals(2565, tiffField0.getTag());
      assertEquals(2565, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1919), (byte) (-107), fieldTypeLong0, 2767L, (byte) (-107), byteArray0, byteOrder0, (byte) (-107));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1919), tiffField0.getTag());
      assertEquals((-107), int0);
      assertEquals((-107), tiffField0.getOffset());
      assertEquals(11068, tiffField0.getBytesLength());
      assertEquals((-107), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1957), fieldTypeRational0, (-1957), 27, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-719), (-719), fieldTypeShort0, (-719), (-719), (byte[]) null, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(959, 959, fieldTypeRational0, 1L, 959, byteArray0, (ByteOrder) null, 959);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1734, 1734, fieldTypeShort0, 1734, 1734, byteArray0, byteOrder0, 1734);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1734, tiffField0.getTag());
      assertEquals(1734, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1734, tiffField0.getDirectoryType());
      assertEquals(1734L, tiffElement0.offset);
  }
}
