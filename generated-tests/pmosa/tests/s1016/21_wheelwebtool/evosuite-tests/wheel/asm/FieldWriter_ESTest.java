/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 08:52:20 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1221), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(2);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("0x4YJ#z*8n8$Db!7", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newMethod("RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", false);
      classWriter0.newFieldItem("", "", "7Q");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2463, "`_%&?S[|3{<5JGD.s?", "6'!", "`_%&?S[|3{<5JGD.s?", "`_%&?S[|3{<5JGD.s?");
      Attribute attribute0 = new Attribute("7Q");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-973));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2409, "m3cx#3A{", "m3cx#3A{", "Signature", "Signature");
      classWriter0.visitSource("Signature", "c#veT");
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(2409);
      byteVector1.putShort(2);
      fieldWriter0.put(byteVector1);
      System.setCurrentTimeMillis(0L);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("/>", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "", "*QwX4x=|6JO", "", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("*QwX4x=|6JO");
      byteVector0.putInt(7);
      ByteVector byteVector1 = byteVector0.putShort(131072);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1221), "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "8", "8", "8", "8");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.put12(1, 2);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-65), "", "", "k*$7y%dfrRsw]@;^", "k*$7y%dfrRsw]@;^");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 455, "", "", "StackMapTable", (Object) null);
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter1.next = fieldWriter2;
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(455);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
      
      fieldWriter0.put(byteVector0);
      int int1 = fieldWriter1.getSize();
      assertEquals(16, int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1252));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "(rF9cFn+2";
      stringArray0[1] = "(rF9cFn+2";
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)98;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringArray0[2] = "";
      stringArray0[3] = "(rF9cFn+2";
      stringArray0[4] = "(rF9cFn+2";
      classWriter0.visit((-1252), (-1252), "", "(rF9cFn+2", "RoX", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3551), "RoX", "?`c61|x", "Synthetic", "?`c61|x");
      fieldWriter0.visitEnd();
      fieldWriter0.visitEnd();
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1201), "", "", "", "");
      ByteVector byteVector0 = new ByteVector(321);
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "Q`l6X";
      classWriter0.visit(321, (-1201), "", "", "Q`l6X", stringArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I/mC?");
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putUTF8("");
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2368), "w9hb&T6", "w9hb&T6", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("w9hb&T6", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1221));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1221), "", "vW)&&et><A-", (String) null, "vW)&&et><A-");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.firstField;
      ByteVector byteVector1 = byteVector0.putInt(1);
      fieldWriter1.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }
}
