/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:06:42 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListAxioms;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSState;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSState_ESTest extends JSState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JSPlan jSPlan0 = new JSPlan();
      JSState jSState0 = null;
      try {
        jSState0 = new JSState((StreamTokenizer) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSState0.standarizerListLogicalAtoms();
      JSListAxioms jSListAxioms0 = new JSListAxioms();
      // Undeclared exception!
      try { 
        jSState0.satisfies(jSListLogicalAtoms0, (JSSubstitution) null, jSListAxioms0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSState", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSJshopVars.flagLevel = 1281;
      jSState0.add((Object) jSState0);
      jSState0.addElementsToState(jSState0);
      jSState0.addElementsToState(jSState0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSState0.satisfiesTAm((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSState cannot be cast to umd.cs.shop.JSPredicateForm
         //
         verifyException("umd.cs.shop.JSState", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSOperator jSOperator0 = new JSOperator();
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.cloneTasks();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      JSPlanningDomain jSPlanningDomain1 = new JSPlanningDomain();
      JSListAxioms jSListAxioms0 = jSPlanningDomain0.axioms();
      JSState jSState0 = new JSState();
      JSPlan jSPlan1 = new JSPlan();
      JSPlan jSPlan2 = new JSPlan();
      jSPlan1.parallelStream();
      jSPlanningDomain0.axioms();
      JSListAxioms jSListAxioms1 = jSPlanningDomain1.axioms();
      jSListAxioms1.add((Object) jSListAxioms0);
      JSJshopVars.flagLevel = 792;
      jSState0.satisfiesTAm(jSTerm0, jSSubstitution0);
      System.setCurrentTimeMillis(71L);
      System.setCurrentTimeMillis((-623L));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSOperator jSOperator0 = new JSOperator();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DRIX 4>97(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSPlan jSPlan0 = new JSPlan();
      jSPlan0.add((Object) jSPredicateForm0);
      jSState0.addElementsToState(jSPlan0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      jSPredicateForm0.add((Object) "DRIX 4>97(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DRIX 4>97(");
      jSState0.addElementsToState(jSPlan0);
      jSPlanningDomain0.axioms();
      JSListAxioms jSListAxioms0 = jSPlanningDomain0.axioms();
      jSState0.satisfiesAll(jSPlan0, jSSubstitution0, jSListAxioms0);
      // Undeclared exception!
      try { 
        jSState0.applyOp(jSOperator0, jSSubstitution1, jSPlan0, jSPlan0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSState", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSState0.satisfiesTAm(jSPredicateForm0, jSSubstitution0);
      JSOperator jSOperator0 = new JSOperator();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DRIX 4>97(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSPlan jSPlan0 = new JSPlan();
      Object object0 = new Object();
      jSPlan0.add((Object) jSPredicateForm0);
      jSState0.addElementsToState(jSPlan0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPlanningDomain jSPlanningDomain0 = new JSPlanningDomain();
      jSPredicateForm0.add((Object) "DRIX 4>97(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DRIX 4>97(");
      jSState0.addElementsToState(jSPlan0);
      JSListAxioms jSListAxioms0 = jSPlanningDomain0.axioms();
      JSState jSState1 = jSState0.apply(jSPlan0);
      JSSubstitution jSSubstitution2 = jSState1.satisfies(jSState0, jSSubstitution0, jSListAxioms0);
      jSState0.satisfiesTAm(jSPredicateForm0, jSSubstitution2);
      jSState0.addElementsToState(jSState1);
      jSState0.addElementsToState(jSState1);
      long long0 = 417L;
      PipedWriter pipedWriter0 = null;
      try {
        pipedWriter0 = new PipedWriter((PipedReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedWriter", e);
      }
  }
}
