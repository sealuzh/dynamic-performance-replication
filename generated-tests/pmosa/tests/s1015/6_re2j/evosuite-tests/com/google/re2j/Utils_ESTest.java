/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 07:05:39 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Utils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utils_ESTest extends Utils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Utils.unhex(1727);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 137);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utils.unhex(3880);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      int int0 = 1638;
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 0, 1638);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utils.isalnum((-2309));
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 1, 387);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)100;
      byte byte0 = (byte) (-100);
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-80);
      byteArray0[7] = (byte) (-73);
      byteArray0[8] = (byte)123;
      Utils.indexOf(byteArray0, byteArray0, 7293);
      Utils.stringToRunes("x{");
      Utils.runeToString(0);
      Utils.isWordRune((byte) (-1));
      StringBuilder stringBuilder0 = new StringBuilder(2957);
      // Undeclared exception!
      try { 
        stringBuilder0.append((CharSequence) "\u0000", (int) (byte) (-100), 3860);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start -100, end 3860, s.length() 1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(0);
      boolean boolean1 = Utils.isalnum(0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-2309));
      assertEquals(0, int0);
      
      Utils.isWordRune((-2309));
      String string0 = Utils.runeToString(1);
      assertEquals("\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      int int0 = Utils.indexOf(byteArray0, byteArray0, (byte)3);
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isalnum((byte)3);
      assertFalse(boolean0);
      
      int[] intArray0 = Utils.stringToRunes("");
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-2309));
      assertEquals(0, int0);
      
      boolean boolean0 = Utils.isWordRune(1081);
      assertFalse(boolean0);
      
      String string0 = Utils.runeToString((-2309));
      assertEquals("\uF6FB", string0);
      
      int int1 = Utils.unhex(0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = Utils.subarray((byte[]) null, 94, 94);
      Utils.unhex(0);
      Utils.emptyOpContext(94, 120485);
      // Undeclared exception!
      try { 
        Utils.indexOf(byteArray0, (byte[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Utils.subarray((byte[]) null, 94, 94);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 94);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utils.isalnum(137);
      // Undeclared exception!
      try { 
        Utils.subarray((byte[]) null, 137, 256);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utils.isalnum(3400);
      int[] intArray0 = new int[0];
      int int0 = 992;
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 3400, 992);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utils.subarray((int[]) null, 2720, 2720);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-99);
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-71);
      // Undeclared exception!
      try { 
        Utils.subarray(byteArray0, 1346, (-368));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utils.runeToString((-1981));
      // Undeclared exception!
      try { 
        Utils.subarray((int[]) null, (-1120), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utils.unhex(2591);
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 747);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-2309);
      Utils.indexOf(byteArray0, byteArray0, (-2309));
      Utils.isWordRune((-2309));
      Utils.stringToRunes(".lI0#r{(g'4''H{");
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        stringBuilder0.insert((-2309), "Gujarati");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2309
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = Utils.isWordRune(120084);
      assertFalse(boolean0);
      
      int[] intArray0 = Utils.stringToRunes("");
      assertArrayEquals(new int[] {}, intArray0);
      
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)26;
      int int0 = Utils.indexOf(byteArray0, byteArray0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-8);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-683));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 65;
      Utils.isalnum(65);
      int int1 = 0;
      Utils.emptyOpContext(0, 318);
      StringBuilder stringBuilder0 = new StringBuilder(65);
      int int2 = (-1557);
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1557));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 3902;
      Utils.isWordRune(3902);
      Utils.emptyOpContext(90, 90);
      StringBuilder stringBuilder0 = new StringBuilder("Imperial_Aramaic");
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        stringBuilder0.insert(3902, object0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 3902
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 94;
      byte[] byteArray0 = Utils.subarray((byte[]) null, 94, 94);
      Utils.unhex(0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-34);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-24);
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte) (-25);
      byteArray1[7] = (byte)21;
      byteArray1[8] = (byte) (-34);
      Utils.indexOf(byteArray0, byteArray1, (-292));
      // Undeclared exception!
      try { 
        Utils.subarray((int[]) null, 581, (byte) (-25));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = Utils.EMPTY_END_TEXT;
      boolean boolean0 = Utils.isWordRune(121);
      assertTrue(boolean0);
      
      String string0 = Utils.runeToString((-1378));
      assertEquals("\uFA9E", string0);
      
      int[] intArray0 = Utils.stringToRunes("\uFA9E");
      assertArrayEquals(new int[] {64158}, intArray0);
      
      int int1 = Utils.unhex((byte)83);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Utils.unhex(1727);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        Utils.escapeRune((StringBuilder) null, 2241);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)8;
      int int0 = Utils.indexOf(byteArray1, byteArray0, (byte)0);
      assertEquals(1, int0);
      
      boolean boolean0 = Utils.isWordRune(7);
      assertFalse(boolean0);
      
      String string0 = Utils.runeToString((byte)8);
      assertEquals("\b", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte)8;
      int int0 = Utils.indexOf(byteArray1, byteArray0, (byte)0);
      assertEquals((-1), int0);
      
      boolean boolean0 = Utils.isWordRune(7);
      assertFalse(boolean0);
      
      String string0 = Utils.runeToString((byte)8);
      assertEquals("\b", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(90);
      Utils.escapeRune(stringBuilder0, (-2309));
      assertEquals("\\xfffff6fb", stringBuilder0.toString());
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-51);
      int int0 = Utils.indexOf(byteArray0, byteArray0, (-2309));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(90);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)85;
      Utils.isWordRune((byte)85);
      Utils.runeToString((byte)85);
      StringBuilder stringBuilder1 = new StringBuilder((CharSequence) "U");
      Utils.escapeRune(stringBuilder0, 8);
      assertEquals("\\b", stringBuilder0.toString());
      
      int int0 = Utils.unhex(124);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      StringBuilder stringBuilder0 = new StringBuilder("meY1V`TcNs.[c|-^}");
      StringBuilder stringBuilder1 = stringBuilder0.append(2400.25F);
      Utils.escapeRune(stringBuilder1, 10);
      assertEquals("meY1V`TcNs.[c|-^}2400.25\\n", stringBuilder1.toString());
      assertEquals("meY1V`TcNs.[c|-^}2400.25\\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)8;
      Utils.indexOf(byteArray1, byteArray0, (byte)0);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)8;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = 1;
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 0, 110);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Utils.isWordRune(58);
      StringBuilder stringBuilder0 = new StringBuilder(12);
      Utils.emptyOpContext(1598, 3951);
      Utils.escapeRune(stringBuilder0, 12);
      Utils.escapeRune(stringBuilder0, (-490));
      Utils.emptyOpContext(3951, (-1288));
      int[] intArray0 = new int[7];
      intArray0[0] = 32;
      intArray0[1] = 3951;
      intArray0[2] = 12;
      intArray0[3] = 12;
      intArray0[4] = 58;
      intArray0[5] = (-972);
      intArray0[6] = 58;
      // Undeclared exception!
      try { 
        Utils.subarray(intArray0, 12, 32);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("com.google.re2j.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      boolean boolean0 = Utils.isalnum(54);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Utils.isWordRune(58);
      Utils.runeToString(206);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\u00CE");
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      Utils.escapeRune(stringBuilder0, 31);
      assertEquals("\u00CE\\x1f", stringBuilder0.toString());
      
      Utils.unhex(1790);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)122;
      Utils.indexOf(byteArray0, byteArray0, 3361);
      Utils.emptyOpContext(1790, 48);
      int int0 = Utils.emptyOpContext((-1), (-1));
      assertEquals(47, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      int int0 = Utils.unhex(3801);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte)122;
      byteArray1[2] = (byte)42;
      byteArray1[3] = (byte)8;
      byteArray1[4] = (byte)122;
      byteArray1[5] = (byte)42;
      byteArray1[6] = (byte)122;
      byteArray1[7] = (byte)8;
      byteArray1[8] = (byte)122;
      int int1 = Utils.indexOf(byteArray1, byteArray0, (-221));
      assertTrue(int1 == int0);
      
      int int2 = Utils.emptyOpContext(2066, (-141));
      assertEquals(42, int2);
      
      int int3 = Utils.emptyOpContext((byte)122, (-812));
      assertEquals(26, int3);
      
      boolean boolean0 = Utils.isalnum(70);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Utils.isWordRune(58);
      Utils.runeToString(206);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\u00CE");
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      Utils.escapeRune(stringBuilder0, 31);
      Utils.escapeRune(stringBuilder0, 9);
      assertEquals("\u00CE\\x1f\\t", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(90);
      Utils.escapeRune(stringBuilder0, 13);
      int int0 = Utils.EMPTY_END_LINE;
      assertEquals(2, int0);
  }
}
