/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 20:08:24 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)64;
      byteArray0[5] = (byte) (-102);
      TiffField tiffField0 = new TiffField((-3473), (-1717986917), fieldTypeRational0, 265L, (-956L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-956), tiffField0.getOffset());
      assertEquals(2120, tiffField0.getBytesLength());
      assertEquals(27235, int0);
      assertEquals((-3473), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte)121;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(10936, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2147197964, tiffField0.getDirectoryType());
      assertEquals(426, tiffField0.getOffset());
      assertEquals((-50), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "nWK?nX}J.T~T9 IGg'");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 132, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2146), fieldTypeRational0, 2764L, (byte)19, byteArray0, byteOrder0, 50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(19, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2146), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(400, 2147245594, fieldTypeShort0, 1, (byte)22, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals(22, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2147245594, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-3473), fieldTypeRational0, (byte)0, 503L, byteArray0, byteOrder0, 1582);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-3473), tiffField0.getDirectoryType());
      assertEquals(1582, tiffField0.getSortHint());
      assertEquals(503, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1010), "6J_&");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1010), (-1010), fieldTypeFloat0, (-1010), (-1010), byteArray0, (ByteOrder) null, (byte) (-48));
      int int0 = tiffField0.getTag();
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals((-1010), tiffField0.getOffset());
      assertEquals((-1010), int0);
      assertEquals((-1010), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50679, "|bS>}{vE%%");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)26;
      TiffField tiffField0 = new TiffField((byte)26, 2073432487, fieldTypeAscii0, 50679, (byte)26, byteArray0, byteOrder0, (-3376));
      String string0 = tiffField0.getStringValue();
      assertEquals(26, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals((-3376), tiffField0.getSortHint());
      assertEquals(50679, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37390, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(392, 1, fieldTypeLong0, 0L, 37390, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(37390, tiffField0.getOffset());
      assertEquals(392, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-117), (byte) (-117), fieldTypeLong0, 14812L, 1L, byteArray0, byteOrder0, (-1275));
      int int0 = tiffField0.getSortHint();
      assertEquals((-117), tiffField0.getTag());
      assertEquals((-117), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1275), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, 1660);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1660, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, (ByteOrder) null, (byte)10);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)121;
      TiffField tiffField0 = new TiffField(571, 50, fieldTypeShort0, 1035L, (-956L), byteArray0, byteOrder0, 393);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(30976, int0);
      assertEquals((-956), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(571, tiffField0.getTag());
      assertEquals(2070, tiffField0.getBytesLength());
      assertEquals(393, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-101);
      TiffField tiffField0 = new TiffField(4499, (-3473), fieldTypeRational0.SLONG, 104L, 2368L, byteArray0, byteOrder0, (-3473));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3473), tiffField0.getSortHint());
      assertEquals((-3473), tiffField0.getDirectoryType());
      assertEquals(4499, tiffField0.getTag());
      assertEquals(416, tiffField0.getBytesLength());
      assertEquals(2368, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 4423, fieldTypeByte0, 1, (-3271L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(4423, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-3271), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 4423, fieldTypeByte0, 1, (-3271L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4423, tiffField0.getDirectoryType());
      assertEquals((-3271), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[54];
      byteArray0[0] = (byte) (-106);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-106), (byte) (-106), fieldTypeDouble0.SBYTE, 1L, (-1424L), byteArray0, byteOrder0, (byte) (-106));
      tiffField0.getIntValue();
      assertEquals((-106), tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals((-1424), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-106), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-4458), (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeShort0, 232L, 991L, byteArray0, byteOrder0, 4004);
      tiffField0.getFieldTypeName();
      assertEquals(48, tiffField0.getTag());
      assertEquals(4004, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getOffset());
      assertEquals(48, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-335), fieldTypeLong0, 10928L, (byte) (-13), byteArray0, byteOrder0, (-1472));
      tiffField0.getFieldTypeName();
      assertEquals((-335), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1472), tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)0, "X2N");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 3721, fieldTypeLong0, (-4043L), 1362L, byteArray0, byteOrder0, 97);
      tiffField0.getFieldType();
      assertEquals(17, tiffField0.getTag());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(1362, tiffField0.getOffset());
      assertEquals(3721, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1166), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(18246, 2980, fieldTypeRational0, 1L, 2980, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(2980, tiffField0.getOffset());
      assertEquals(18246, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2980, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37390, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(392, 1, fieldTypeLong0, 0L, 37390, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(37390, tiffField0.getOffset());
      assertEquals(392, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (-787), fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getDoubleValue();
      assertEquals((-787), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)63;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)63, 1, fieldTypeRational0.SHORT, 1, (byte) (-128), byteArray0, byteOrder0, 50);
      tiffField0.getDoubleValue();
      assertEquals(63, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-128), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-61);
      TiffField tiffField0 = new TiffField(2631, (-3143), fieldTypeShort0, 1, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2631, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-3143), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3516), "|bS>}{vE%%");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 97L, 0, byteArray0, byteOrder0, (byte) (-106));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "Hp/");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-358), fieldTypeDouble0, (-358), 26L, byteArray0, byteOrder0, (byte) (-115));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-358), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37390, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)54, 2288, fieldTypeLong0, 2147483647L, 392, byteArray0, (ByteOrder) null, (byte) (-24));
      tiffField0.getCount();
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(2288, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getTag());
      assertEquals(392, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1801), 422, fieldTypeByte0, (-1801), (byte)0, byteArray0, byteOrder0, (-1801));
      tiffField0.getCount();
      assertEquals((-1801), tiffField0.getTag());
      assertEquals((-1801), tiffField0.getSortHint());
      assertEquals(422, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "Invalid value: ");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1697, " ");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1697, 1697, fieldTypeShort0, (-2147483657L), 2147483647L, byteArray0, (ByteOrder) null, 362);
      int int0 = tiffField0.getBytesLength();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1697, tiffField0.getDirectoryType());
      assertEquals((-18), int0);
      assertEquals(1697, tiffField0.getTag());
      assertEquals(362, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1010), "6J_&");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1010), (-1010), fieldTypeFloat0, (-1010), (-1010), byteArray0, (ByteOrder) null, (byte) (-48));
      tiffField0.getByteOrder();
      assertEquals((-1010), tiffField0.getTag());
      assertEquals((-1010), tiffField0.getOffset());
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals((-1010), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "nWK?nX}J.T~T9 IGg'");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 132, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-3334), fieldTypeByte0, 0L, (byte)28, byteArray0, byteOrder0, (byte)50);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-3334), tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(5, "Unknown value: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeLong0, 338, (-3360L), byteArray0, byteOrder0, 9);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(53, charArrayWriter0.size());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[270];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-18), (-2465), fieldTypeDouble0.FLOAT, (-2465), (-2465), byteArray0, byteOrder0, (-2465));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-239), 0, fieldTypeFloat0, (-239), 790L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-3334), fieldTypeByte0, 0L, (byte)28, byteArray0, byteOrder0, (byte)50);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 2, (FieldType) null, (-611L), 0L, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TiffField tiffField0 = new TiffField(2146927737, 13, (FieldType) null, (-1794L), (-2147483648L), (byte[]) null, (ByteOrder) null, (-920));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, (ByteOrder) null, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 1L, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1112), 9, fieldTypeShort0, 9, (-2145249012), byteArray0, byteOrder0, (-1112));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "':PI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      byte[] byteArray0 = new byte[2];
      File file0 = MockFile.createTempFile("&5~ 3^[x`", "@2b:Ld");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      TiffField tiffField0 = new TiffField((byte)120, (-335), fieldTypeLong0, (-335), 196L, byteArray0, (ByteOrder) null, 13);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.imaging.formats.tiff.TiffField");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-335), (-335), fieldTypeLong0, (-1133L), (-1133L), byteArray0, byteOrder0, (-2291));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeRational0, 35L, 4L, byteArray0, byteOrder0, (-374));
      File file0 = MockFile.createTempFile("Ij~!fNB!MB0bHxVy1Tu", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(38L, file0.length());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 4423, fieldTypeByte0, 1, (-3271L), byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3271), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(4423, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)91, 47L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, (byte)120, fieldTypeByte0.DOUBLE, 15728L, 1248L, byteArray0, byteOrder0, (-5660));
      tiffField0.getByteArrayValue();
      assertEquals(1248, tiffField0.getOffset());
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals((-5660), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(125824, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TiffField tiffField0 = new TiffField(2146927737, 13, (FieldType) null, (-1794L), (-2147483648L), (byte[]) null, (ByteOrder) null, (-920));
      tiffField0.getFieldType();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(2146927737, tiffField0.getTag());
      assertEquals((-920), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)120, 37520, fieldTypeByte0, 2790L, 11L, byteArray0, byteOrder0, (-1535));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1535), tiffField0.getSortHint());
      assertEquals(37520, int0);
      assertEquals(11, tiffField0.getOffset());
      assertEquals(120, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-68), (byte)0, fieldTypeByte0, 15728L, (-3271L), byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getValue();
      assertEquals(15728, tiffField0.getBytesLength());
      assertEquals((-68), tiffField0.getTag());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals((-3271), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(4456, "");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeByte0, 0L, 50, byteArray0, byteOrder0, (byte) (-119));
      int int0 = tiffField0.getOffset();
      assertEquals(50, int0);
      assertEquals((-119), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(279, 279, fieldTypeDouble0, 279, 279, byteArray0, byteOrder0, 279);
      int int0 = tiffField0.getTag();
      assertEquals(279, tiffField0.getOffset());
      assertEquals(279, tiffField0.getDirectoryType());
      assertEquals(279, tiffField0.getSortHint());
      assertEquals(279, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 896, fieldTypeByte0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(896, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "Hp/");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-802), (-802), fieldTypeDouble0, 50, 50, byteArray0, byteOrder0, (byte)44);
      int int0 = tiffField0.getBytesLength();
      assertEquals(400, int0);
      assertEquals((-802), tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-802), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[219];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2207), 39, fieldTypeDouble0.FLOAT, 593L, 21, byteArray0, byteOrder0, 3384);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(3384, tiffField0.getSortHint());
      assertEquals("-2207 (0xfffff761: Unknown Tag): ", string0);
      assertEquals(21, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, (-1475), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(639, (-374), fieldTypeShort0, 639, (-363L), byteArray0, byteOrder0, (-1307));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@c8ddba1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3473), (byte)0, fieldTypeRational0, 1L, (byte)0, byteArray0, byteOrder0, 2159);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3516), "|bS>}{vE%%");
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)12, fieldTypeDouble0, (byte)12, 3646L, byteArray0, byteOrder0, (byte) (-106));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(3, doubleArray0.length);
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals(3646, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 7, fieldTypeRational0.FLOAT, 3442L, 0, byteArray0, (ByteOrder) null, 826);
      tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(826, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(13768, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-307), (-335), fieldTypeLong0, 665L, (-307), byteArray0, byteOrder0, (byte)89);
      tiffField0.getDoubleArrayValue();
      assertEquals((-307), tiffField0.getOffset());
      assertEquals((-307), tiffField0.getTag());
      assertEquals(89, tiffField0.getSortHint());
      assertEquals((-335), tiffField0.getDirectoryType());
      assertEquals(2660, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3513, (-427), fieldTypeShort0, 4L, 14812L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(14812, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(3513, tiffField0.getTag());
      assertEquals((-427), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2147197964, tiffField0.getDirectoryType());
      assertEquals(426, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(10936, tiffField0.getBytesLength());
      assertEquals((-50), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      tiffField0.getDoubleArrayValue();
      assertEquals((-50), tiffField0.getSortHint());
      assertEquals(10936, tiffField0.getBytesLength());
      assertEquals(426, tiffField0.getOffset());
      assertEquals(2147197964, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (-787), fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte) (-68));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-68), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-787), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-68), (byte)0, fieldTypeByte0, 15728L, (-3271L), byteArray0, byteOrder0, (byte) (-68));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5483c7c3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)103, (-335), fieldTypeLong0, (byte)103, (-1844L), byteArray0, (ByteOrder) null, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-335), tiffField0.getDirectoryType());
      assertEquals((-1844), tiffField0.getOffset());
      assertEquals(103, tiffField0.getTag());
      assertEquals(412, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 4, fieldTypeAscii0, 0L, 3123L, byteArray0, byteOrder0, (byte) (-89));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2147197964, fieldTypeRational0, 1367, 426L, byteArray0, byteOrder0, (byte) (-50));
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-50), tiffField0.getSortHint());
      assertEquals(426, tiffField0.getOffset());
      assertEquals(10936, tiffField0.getBytesLength());
      assertEquals(2147197964, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 4423, fieldTypeByte0, 1, (-3271L), byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-3271), tiffField0.getOffset());
      assertEquals(4423, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(639, (-374), fieldTypeShort0, 639, (-363L), byteArray0, byteOrder0, (-1307));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals((-374), tiffField0.getDirectoryType());
      assertEquals(639, tiffField0.getTag());
      assertEquals(1278, tiffField0.getBytesLength());
      assertEquals((-363), tiffField0.getOffset());
      assertEquals(639L, tiffField0.getCount());
      assertEquals((-1307), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@7d0de9ad
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147287081, 2147287081, fieldTypeAscii0, 0L, (byte) (-89), byteArray0, byteOrder0, (-523));
      String string0 = tiffField0.getStringValue();
      assertEquals(2147287081, tiffField0.getTag());
      assertEquals(2147287081, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-523), tiffField0.getSortHint());
      assertEquals((-89), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147287081, 2147287081, fieldTypeAscii0, 0L, (byte) (-89), byteArray0, byteOrder0, (-523));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x7ffd0029)", string0);
      assertEquals((-523), tiffField0.getSortHint());
      assertEquals(2147287081, tiffField0.getDirectoryType());
      assertEquals((-89), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-3334), fieldTypeByte0, 0L, (byte)28, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSAreaInformation", string0);
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-3334), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3516), "|bS>}{vE%%");
      byte[] byteArray0 = new byte[17];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-106), 0, fieldTypeDouble0, 1367L, 1367L, byteArray0, byteOrder0, 10);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "|bS>}{vE%%");
      assertEquals(71, charArrayWriter0.size());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-239), 34677, fieldTypeFloat0, (byte)26, 0L, byteArray0, byteOrder0, 34677);
      String string0 = tiffField0.toString();
      assertEquals("-239 (0xffffff11: Unknown Tag): 0.0, 0.0 (26 Float)", string0);
      assertEquals(34677, tiffField0.getDirectoryType());
      assertEquals(104, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34677, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-106), 34677, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SLONG).SBYTE, 4144L, (byte) (-106), byteArray0, byteOrder0, 34677);
      tiffField0.dump();
      assertEquals(34677, tiffField0.getSortHint());
      assertEquals(34677, tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getTag());
      assertEquals((-106), tiffField0.getOffset());
      assertEquals(4144L, tiffField0.getCount());
      assertEquals(4144, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[219];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2207), 39, fieldTypeDouble0.FLOAT, 593L, 21, byteArray0, byteOrder0, 3384);
      String string0 = tiffField0.toString();
      assertEquals(21, tiffField0.getOffset());
      assertEquals(3384, tiffField0.getSortHint());
      assertEquals(2372, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals("-2207 (0xfffff761: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (593 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1537, 49, fieldTypeLong0, 1329L, 2699, byteArray0, byteOrder0, 2699);
      String string0 = tiffField0.toString();
      assertEquals(5316, tiffField0.getBytesLength());
      assertEquals(2699, tiffField0.getOffset());
      assertEquals("1537 (0x601: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (1329 Long)", string0);
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(2699, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(4499, (-427), fieldTypeShort0, 4499, 4L, byteArray0, byteOrder0, (-427));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Z!xH`1~y=qT");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-427), tiffField0.getSortHint());
      assertEquals(8998, tiffField0.getBytesLength());
      assertEquals(4499, tiffField0.getTag());
      assertEquals(4499L, tiffField0.getCount());
      assertEquals((-427), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[111];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(604, (-433), fieldTypeDouble0.SSHORT, 3256, 757L, byteArray0, byteOrder0, (-1));
      tiffField0.dump();
      assertEquals(604, tiffField0.getTag());
      assertEquals(6512, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(3256L, tiffField0.getCount());
      assertEquals((-433), tiffField0.getDirectoryType());
      assertEquals(757, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)40, (-1475), fieldTypeAscii0, 1899, (byte) (-92), byteArray0, byteOrder0, (byte) (-92));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1899, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-1475), tiffField0.getDirectoryType());
      assertEquals((-92), tiffField0.getOffset());
      assertEquals((-92), tiffField0.getSortHint());
      assertEquals(40, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1057, 6, fieldTypeRational0.ASCII, 0L, (-352L), byteArray0, byteOrder0, 98);
      tiffField0.dump();
      assertEquals((-352), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1057, tiffField0.getTag());
      assertEquals(98, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(465, 465, fieldTypeByte0.SHORT, 1L, (byte)91, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(465, tiffField0.getTag());
      assertEquals(91, tiffField0.getOffset());
      assertEquals(465, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(37390, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(392, 1, fieldTypeLong0, 0L, 37390, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3, 1688);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(37390, tiffField0.getOffset());
      assertEquals(392, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "nWK?nX}J.T~T9 IGg'");
      Float float0 = new Float((-1.0));
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(float0, byteOrder0);
      TiffField tiffField0 = new TiffField(3866, 38, fieldTypeRational0, 38, 132, byteArray0, byteOrder0, 132);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription(false);
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(3866, tiffField0.getTag());
      assertEquals(132, tiffField0.getSortHint());
      assertEquals(132L, tiffElement0.offset);
      assertEquals(38L, tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: nWK?nX}J.T~T9 IGg'", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-98), 649, fieldTypeByte0, 4L, (byte) (-68), byteArray0, byteOrder0, 734);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-98), tiffField0.getTag());
      assertEquals(734, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(649, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-68), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, (-1475), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1475), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-106), (-4393), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SLONG).SBYTE, 45L, 50L, byteArray0, byteOrder0, (-4393));
      tiffField0.dump();
      assertEquals((-4393), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-106), tiffField0.getTag());
      assertEquals(45L, tiffField0.getCount());
      assertEquals(45, tiffField0.getBytesLength());
      assertEquals((-4393), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-335), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-307), (-335), fieldTypeLong0, 665L, (-307), byteArray0, byteOrder0, (byte)89);
      int int0 = tiffField0.getSortHint();
      assertEquals((-307), tiffField0.getTag());
      assertEquals((-307), tiffField0.getOffset());
      assertEquals(89, int0);
      assertEquals((-335), tiffField0.getDirectoryType());
      assertEquals(665L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-3334), fieldTypeByte0, 0L, (byte)28, byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-3334), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)91, 47L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
