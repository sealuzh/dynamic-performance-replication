/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 20:31:21 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeByte0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(63, 1258, fieldTypeFloat0, 63, 1258, byteArray0, byteOrder0, 1258);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(1258, tiffField0.getSortHint());
      assertEquals(1258, tiffField0.getDirectoryType());
      assertEquals(252, tiffField0.getBytesLength());
      assertEquals(63, tiffField0.getTag());
      assertEquals(63L, tiffField0.getCount());
      assertEquals(1258L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1552), 41993, fieldTypeShort0, 41993, 1L, (byte[]) null, byteOrder0, 41993);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41993, (-1183));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1552), tiffField0.getTag());
      assertEquals(41993, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(41993L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(41993, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeFloat0, 56, 56, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(56, 56);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(224, tiffField0.getBytesLength());
      assertNull(string1);
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-447), "");
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-6);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeAscii0, 22, 1L, byteArray1, byteOrder0, (-1186));
      String string0 = tiffField0.getStringValue();
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getBytesLength());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals((-1186), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("B@FJS(t1mz");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      charBuffer0.order();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)76;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeFloat0, (byte)48, 2496L, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@75a7666e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-41);
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)70;
      byteArray0[8] = (byte) (-41);
      TiffField tiffField0 = new TiffField((byte)70, 3655, fieldTypeLong0, (byte)70, 966L, byteArray0, byteOrder0, (byte)76);
      assertEquals(280, tiffField0.getBytesLength());
      
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField1 = new TiffField((byte)70, 3655, fieldTypeByte0, (byte)70, (-2698L), byteArray0, byteOrder0, 1);
      String string0 = tiffField1.toString();
      assertEquals("70 (0x46: Unknown Tag): 70, -1, -41, -41, 70, 76, -1, 70, -41 (70 SByte)", string0);
      assertEquals(1, tiffField1.getSortHint());
      assertEquals(3655, tiffField1.getDirectoryType());
      assertEquals((-2698), tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)22;
      byteArray0[6] = (byte)22;
      TiffField tiffField0 = new TiffField(1948, 1, fieldTypeShort0, 689L, 0L, byteArray0, byteOrder0, (byte)22);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(63, 63, fieldTypeShort0, 63, 63, byteArray0, byteOrder0, (-1631));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(63, tiffField0.getTag());
      assertEquals(63, int0);
      assertEquals(126, tiffField0.getBytesLength());
      assertEquals((-1631), tiffField0.getSortHint());
      assertEquals(63, tiffField0.getOffset());
      assertEquals(63L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("/9R|");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2790), 50, fieldTypeRational0, (byte)48, (-2790), byteArray0, byteOrder0, (-987));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.dump();
      int int1 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals((-987), tiffField0.getSortHint());
      assertEquals((-2790), int1);
      assertEquals(48L, tiffField0.getCount());
      assertEquals((-2790), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2904, 0, fieldTypeDouble0, 65535, (-854L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals("2904 (0xb58: Unknown Tag): 0.0, 0.0 (65535 Double)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-854), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "W+U\"* V0Y");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2904, 0, fieldTypeDouble0, 65535, (-854L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(63, 63, fieldTypeFloat0, 63, 63, byteArray0, byteOrder0, 63);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte)18;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-55), 2067, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValueOrArraySum();
      ByteOrder.nativeOrder();
      tiffField0.dump();
      tiffField0.getOffset();
      tiffField0.getIntValueOrArraySum();
      assertEquals(2067, tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 2212, fieldTypeLong0, 2L, 2L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      tiffField0.getDoubleArrayValue();
      ByteOrder.nativeOrder();
      tiffField0.getTagInfo();
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-138), (-138), fieldTypeFloat0.SRATIONAL, 411L, 411L, byteArray0, byteOrder0, (-138));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)11, "T-l,B;5tN");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(2904, 2904, fieldTypeRational0, 4L, (byte)11, byteArray0, (ByteOrder) null, 2904);
      tiffField0.getIntArrayValue();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      Pattern.quote("Unknown: ");
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((-2810), 65535, fieldTypeRational0, (-812L), (-1413L), byteArray1, (ByteOrder) null, 65535);
      tiffField0.getOversizeValueElement();
      ByteOrder.nativeOrder();
      tiffField1.getDirectoryType();
      // Undeclared exception!
      try { 
        tiffField1.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, 1, 1426L, byteArray0, byteOrder0, 0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1426, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "W+U\"* V0Y");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(65535, (-1), fieldTypeDouble0, 65535, (byte)100, byteArray0, byteOrder0, 2904);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(100, tiffField0.getOffset());
      assertEquals(2904, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)56;
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-55);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      int int0 = 48258;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(48258, (byte)56, fieldTypeByte0, 1496L, 3687L, byteArray0, byteOrder0, (byte) (-55));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7f5052fc for: 48258 (0xbc82: WidthResolution): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeByte0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8)", string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(8L, tiffElement0.offset);
      assertEquals(8, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50707, (-2232), fieldTypeLong0, 4327L, (-537L), byteArray0, (ByteOrder) null, 50707);
      tiffField0.getIntArrayValue();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      Pattern.quote("X");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField((-2111692252), (-530), fieldTypeLong0, (-205L), (-3506L), byteArray1, (ByteOrder) null, 300);
      tiffField1.getOversizeValueElement();
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffField1.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Ee<x");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(419, 107, fieldTypeRational0, 0, 419, byteArray0, byteOrder0, (byte) (-55));
      tiffField0.getDoubleArrayValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      ByteOrder.nativeOrder();
      int int0 = tiffField0.getDirectoryType();
      assertEquals(107, int0);
      
      tiffField0.isLocalValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(419, tiffField0.getTag());
      assertEquals(419, tiffField0.getOffset());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-55), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "Noise");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2941, 43, fieldTypeDouble0, 65535, (-854L), byteArray0, byteOrder0, 43);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5ddb70d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)56, "Noise");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), fieldTypeDouble0, (byte)0, (byte)56, byteArray0, byteOrder0, 50970);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: GPSVersionID):  (0 Noise)", string0);
      
      tiffField0.getValueDescription();
      tiffField0.getFieldTypeName();
      String string1 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string1);
      
      TiffField tiffField1 = new TiffField((byte)56, (byte)0, fieldTypeDouble0, 1507L, (byte)0, byteArray0, byteOrder0, (-1462));
      String string2 = tiffField1.getDescriptionWithoutValue();
      assertEquals(12056, tiffField1.getBytesLength());
      assertEquals("56 (0x38: Unknown Tag): ", string2);
      
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(50970, int0);
      assertEquals(56, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "PreviewApplicationName");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      TiffField tiffField0 = new TiffField(11, (byte)0, fieldTypeLong0, 789L, 9792L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("11 (0xb: ProcessingSoftware): 0, 0 (789 IFD)", string0);
      assertEquals(9792, tiffField0.getOffset());
      assertEquals(3156, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-813), "W+U\"* V0Y");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-40);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      TiffField tiffField0 = new TiffField(65535, (byte)0, fieldTypeRational0, 9792L, 9792L, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(78336, tiffField0.getBytesLength());
      assertEquals(9792, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2138859215, "LensModel");
      TiffField tiffField0 = new TiffField(50, (-599), fieldTypeShort0, 221L, (-4076L), byteArray0, byteOrder0, (-2144880662));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals(442, tiffField0.getBytesLength());
      assertEquals((-4076), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-599), tiffField0.getDirectoryType());
      assertEquals((-2144880662), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "W+U\"* V0Y");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)2;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "W+U\"* V0Y");
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2147483647), (String) null);
      TiffField tiffField0 = new TiffField(1424, 0, fieldTypeShort0, 50L, (byte)0, byteArray0, byteOrder0, 2101792506);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2101792506, tiffField0.getSortHint());
      assertEquals(1424, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(",Z|y5\"Y`P`?");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1424), (-1424), fieldTypeFloat0, 4L, 256L, byteArray0, byteOrder0, (-1424));
      fieldTypeFloat0.getValue(tiffField0);
      TiffField tiffField1 = new TiffField((-1424), (-1424), fieldTypeFloat0, 255L, 255L, byteArray0, (ByteOrder) null, 3254);
      tiffField1.getOversizeValueElement();
      tiffField1.getValue();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(",Z|y5\"Y`P`?");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1424), (-1424), fieldTypeFloat0, 4L, 256L, byteArray0, byteOrder0, (-1424));
      fieldTypeFloat0.getValue(tiffField0);
      tiffField0.getFieldTypeName();
      TiffField tiffField1 = new TiffField((byte)8, (-1431655764), fieldTypeFloat0, 255L, (-1538L), byteArray0, byteOrder0, 50);
      tiffField0.toString();
      tiffField0.getDirectoryType();
      tiffField0.getDoubleArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@2cff42ee
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-19);
      byteArray0[5] = (byte) (-99);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(82, (-826), fieldTypeShort0, 82, 1L, byteArray0, byteOrder0, (-1944));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {(-156.0), (-13262.0), (-25107.0)}, doubleArray0, 0.01);
      assertEquals(164, tiffField0.getBytesLength());
      assertEquals((-1944), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-826), tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      charset0.encode("@_h5|)+");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 32L, 1020L, byteArray0, byteOrder1, (byte)22);
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField1 = new TiffField((-2585), (byte)22, fieldTypeShort0, 4L, (-1436L), byteArray0, byteOrder1, (byte)22);
      tiffField1.getValueDescription();
      TiffField tiffField2 = new TiffField(50707, 2544, fieldTypeShort0, (byte)22, 1020L, byteArray0, byteOrder1, 4177);
      tiffField1.getIntArrayValue();
      ByteOrder.nativeOrder();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@399dd07d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(20, "w<f,~ |lOpc]rt");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeAscii0, 3811L, 453L, byteArray0, byteOrder0, 3936);
      String string0 = tiffField0.getStringValue();
      assertEquals(453, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(3811, tiffField0.getBytesLength());
      assertEquals(3936, tiffField0.getSortHint());
  }
}
