/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:15:26 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Frame;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      char[] charArray0 = new char[5];
      classReader0.getClassName();
      int int0 = 948;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("java/lang/String", "W:)e.pS`>+");
      int int1 = 2885;
      classReader0.accept((ClassVisitor) classWriter0, 2885);
      classReader0.readUTF8(199, charArray0);
      classReader0.getItem(int0);
      classReader0.readConst(int1, charArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 6892);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.getClassName();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("java/lang/String", "W:)e.pS`>+");
      classReader0.accept((ClassVisitor) classWriter0, 2885);
      ClassReader classReader1 = new ClassReader("[]");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 6892);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassWriter classWriter1 = new ClassWriter(0);
      classReader0.getClassName();
      classReader0.accept((ClassVisitor) classWriter0, 1);
      String string0 = classWriter0.thisName;
      classReader0.getClassName();
      classReader0.getItem(0);
      classReader0.readByte(0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      classReader0.getClassName();
      classReader0.getAccess();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 6892);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassWriter classWriter1 = new ClassWriter(0);
      classReader0.accept((ClassVisitor) classWriter0, 220);
      classReader0.getClassName();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter1);
      classAdapter1.visitSource("java/lang/String", "|KiHAV&~`?dw-{8i9y");
      classReader0.accept((ClassVisitor) classAdapter0, (-1624));
      ClassReader classReader1 = new ClassReader("java/lang/String");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      charArray0[1] = 'C';
      charArray0[2] = 'w';
      charArray0[3] = '9';
      // Undeclared exception!
      try { 
        classReader0.readConst(6, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter(0);
      classReader0.getClassName();
      classWriter0.newDouble(6892);
      classReader0.accept((ClassVisitor) classWriter0, 558);
      ClassReader classReader1 = new ClassReader(classReader0.b, 4, 6892);
      char[] charArray0 = null;
      int int0 = (-324);
      classReader1.getItem(int0);
      int int1 = 2181;
      classReader0.readConst(int1, charArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      char[] charArray0 = new char[5];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("q0l0%KS}tlGY<up0", "XQ?)[");
      classReader0.accept((ClassVisitor) classAdapter0, (-1218));
      classReader0.readByte(63);
      classReader0.getClassName();
      int int0 = Frame.INTEGER;
      classReader0.readConst(1, charArray0);
      int int1 = 247;
      classReader0.readShort(int1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 6892);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassWriter classWriter1 = new ClassWriter(2);
      String string0 = classWriter0.thisName;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("java/lang/String", "W:)e.pS`>+");
      classReader0.accept((ClassVisitor) classWriter1, 2885);
      char[] charArray0 = new char[5];
      charArray0[0] = '8';
      charArray0[1] = 'R';
      charArray0[2] = '';
      charArray0[3] = 'A';
      charArray0[4] = '{';
      classReader0.readConst(42, charArray0);
      classReader0.readLong(classWriter1.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 6892);
      ClassReader classReader1 = new ClassReader("java/lang/String");
      classReader1.getClassName();
      classWriter0.newDouble(1428.47274793);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classReader1.getInterfaces();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("", "org.apache.commons.io.frlefilter.WileFileFilter");
      classReader1.accept((ClassVisitor) classWriter0, 2);
      char char0 = 'h';
      char char1 = '!';
      int int0 = (-491);
      int int1 = classReader0.readByte(int0);
      classReader0.getClassName();
      int int2 = Frame.INTEGER;
      char[] charArray0 = new char[7];
      charArray0[0] = char1;
      char char2 = 'U';
      charArray0[1] = char2;
      charArray0[2] = char0;
      charArray0[3] = char1;
      charArray0[4] = char1;
      charArray0[5] = char0;
      charArray0[6] = char1;
      classReader0.readConst(int1, charArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.getClassName();
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 948);
      classReader0.readByte(1);
      String string0 = classReader0.getClassName();
      int int0 = Frame.INTEGER;
      char[] charArray0 = new char[5];
      charArray0[1] = 't';
      charArray0[2] = 'O';
      charArray0[3] = '!';
      charArray0[4] = '!';
      classReader0.readConst(16777217, charArray0);
      ClassReader classReader1 = new ClassReader(string0);
      classReader1.readShort(classReader0.header);
  }
}
