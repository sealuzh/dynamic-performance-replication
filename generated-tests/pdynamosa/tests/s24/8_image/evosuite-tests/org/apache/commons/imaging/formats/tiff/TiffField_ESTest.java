/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 11:04:24 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)35;
      byteArray0[4] = (byte)20;
      TiffField tiffField0 = new TiffField(727, 3414, fieldTypeRational0, 652L, (-1), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(5216, tiffField0.getBytesLength());
      assertEquals(727, tiffField0.getTag());
      assertEquals(3414, tiffField0.getDirectoryType());
      assertEquals(448, int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)20;
      TiffField tiffField0 = new TiffField(727, 3414, fieldTypeRational0, 652L, (-1), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(3414, tiffField0.getDirectoryType());
      assertEquals(727, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(5216, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte) (-121));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-121), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3058), fieldTypeShort0.IFD, 28, (-1L), byteArray0, byteOrder0, (-3058));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals((-3058), tiffField0.getDirectoryType());
      assertEquals((-3058), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34665, 34665, fieldTypeShort0, 1150L, (-1479L), byteArray0, byteOrder0, (-1343));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34665, tiffField0.getDirectoryType());
      assertEquals(34665, tiffField0.getTag());
      assertEquals((-1479), tiffField0.getOffset());
      assertEquals((-1343), tiffField0.getSortHint());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1001, "... (");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte) (-35), 566L, byteArray0, byteOrder0, (byte) (-35));
      int int0 = tiffField0.getTag();
      assertEquals(566, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-35), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1399, 316, fieldTypeLong0, 316, 316, byteArray0, byteOrder0, (byte)66);
      int int0 = tiffField0.getTag();
      assertEquals(316, tiffField0.getDirectoryType());
      assertEquals(1399, int0);
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(316, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-17), 1319, fieldTypeAscii0, 0L, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(1319, tiffField0.getDirectoryType());
      assertEquals((-17), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, 3029L, 0L, byteArray0, (ByteOrder) null, (byte)119);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(119, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1196), (byte)70, fieldTypeLong0, (byte)115, 393L, byteArray0, byteOrder0, (-171));
      int int0 = tiffField0.getSortHint();
      assertEquals((-171), int0);
      assertEquals((-1196), tiffField0.getTag());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(393, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2334, 1947, fieldTypeLong0, 1947, 1947, byteArray0, byteOrder0, (byte) (-116));
      int int0 = tiffField0.getOffset();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(2334, tiffField0.getTag());
      assertEquals(1947, tiffField0.getDirectoryType());
      assertEquals(1947, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-121);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-121), (byte) (-121), fieldTypeShort0, 1475, (-27L), byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-121), tiffField0.getTag());
      assertEquals(2950, tiffField0.getBytesLength());
      assertEquals((-121), tiffField0.getDirectoryType());
      assertEquals(135, int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-27), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-117);
      TiffField tiffField0 = new TiffField(1475, 715, fieldTypeShort0, 1475, (-1326L), byteArray0, byteOrder0, (byte) (-117));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(715, tiffField0.getDirectoryType());
      assertEquals((-117), tiffField0.getSortHint());
      assertEquals((-1326), tiffField0.getOffset());
      assertEquals((-29952), int0);
      assertEquals(2950, tiffField0.getBytesLength());
      assertEquals(1475, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)22;
      TiffField tiffField0 = new TiffField((byte) (-7), 14, fieldTypeShort0, 1L, 2587L, byteArray0, byteOrder0, 19);
      tiffField0.getIntValue();
      assertEquals((-7), tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2587, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-114);
      TiffField tiffField0 = new TiffField((byte)0, 1469, fieldTypeShort0, 1L, 89L, byteArray0, byteOrder0, 17);
      tiffField0.getIntValue();
      assertEquals(89, tiffField0.getOffset());
      assertEquals(1469, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-5812), (-5812), fieldTypeByte0, 717, 717, byteArray0, byteOrder0, 48258);
      tiffField0.getFieldTypeName();
      assertEquals(48258, tiffField0.getSortHint());
      assertEquals((-5812), tiffField0.getDirectoryType());
      assertEquals((-5812), tiffField0.getTag());
      assertEquals(717, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1959), (-1959), fieldTypeLong0, (-1959), (-1959), byteArray0, byteOrder0, (-1347));
      tiffField0.getFieldTypeName();
      assertEquals((-1959), tiffField0.getOffset());
      assertEquals((-1347), tiffField0.getSortHint());
      assertEquals((-1959), tiffField0.getTag());
      assertEquals((-1959), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147031830), 3, (FieldType) null, 4L, 82L, byteArray0, byteOrder0, (byte) (-116));
      tiffField0.getFieldType();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals((-2147031830), tiffField0.getTag());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4259), (-4259), fieldTypeLong0, (-4259), (-13L), byteArray0, byteOrder0, 1002);
      tiffField0.getFieldType();
      assertEquals(1002, tiffField0.getSortHint());
      assertEquals((-4259), tiffField0.getTag());
      assertEquals((-13), tiffField0.getOffset());
      assertEquals((-4259), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-110), "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-110), (byte) (-110), fieldTypeByte0, (-1L), (byte) (-110), byteArray0, byteOrder0, (byte)10);
      tiffField0.getFieldType();
      assertEquals((-110), tiffField0.getTag());
      assertEquals((-110), tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-110), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3338, (-1717986917), fieldTypeLong0.BYTE, 1L, (-1717986917), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(3338, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(3491, 3782, fieldTypeDouble0, (byte)1, (-3781L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3491, tiffField0.getTag());
      assertEquals((-3781), tiffField0.getOffset());
      assertEquals(3782, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "9uxy{l/c");
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-6);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "VIb*pa=Yd&|&");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(717, (-886), fieldTypeByte0.SRATIONAL, 65535, (-133), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals((-133), tiffField0.getOffset());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(717, tiffField0.getTag());
      assertEquals((-886), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2142333806), 0, fieldTypeByte0, (-2142333806), 1385L, byteArray0, byteOrder0, (byte)70);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-2142333806), tiffField0.getTag());
      assertEquals(1385, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2147265517), (-2147260809), fieldTypeByte0.FLOAT, (-2147265517), 4L, byteArray0, byteOrder0, (-2147260809));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-2147260809), int0);
      assertEquals((-2147260809), tiffField0.getSortHint());
      assertEquals((-2147265517), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(480, 480, fieldTypeShort0, 0L, 117, byteArray0, byteOrder0, 133);
      tiffField0.getCount();
      assertEquals(480, tiffField0.getDirectoryType());
      assertEquals(480, tiffField0.getTag());
      assertEquals(117, tiffField0.getOffset());
      assertEquals(133, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, 625L, (-1), byteArray0, byteOrder0, (byte) (-4));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1808), (-2128), fieldTypeByte0, (-1808), (-820L), byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getCount();
      assertEquals((-1808), tiffField0.getTag());
      assertEquals((-2128), tiffField0.getDirectoryType());
      assertEquals((-820), tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3491, (-2756), fieldTypeDouble0, (-2147483648L), 3491, byteArray0, byteOrder0, (-2756));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2756), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(3491, tiffField0.getTag());
      assertEquals((-2756), tiffField0.getDirectoryType());
      assertEquals(3491, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2354, "");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3935), 50724, fieldTypeFloat0, (byte) (-108), 1114, (byte[]) null, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getBytesLength();
      assertEquals(50724, tiffField0.getDirectoryType());
      assertEquals((-3935), tiffField0.getTag());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals(1114, tiffField0.getOffset());
      assertEquals((-432), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-106), (-594), fieldTypeLong0.SHORT, 48325, (-197L), byteArray0, (ByteOrder) null, 4766);
      tiffField0.getByteOrder();
      assertEquals((-106), tiffField0.getTag());
      assertEquals((-197), tiffField0.getOffset());
      assertEquals((-594), tiffField0.getDirectoryType());
      assertEquals(4766, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(717, 717, fieldTypeByte0, 717, 0L, byteArray0, byteOrder0, (-171));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-171), tiffField0.getSortHint());
      assertEquals(717, tiffField0.getDirectoryType());
      assertEquals(717, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(717, 717, fieldTypeByte0, 717, 0L, byteArray0, byteOrder0, (-171));
      tiffField0.getByteArrayValue();
      assertEquals(717, tiffField0.getDirectoryType());
      assertEquals(717, tiffField0.getTag());
      assertEquals(717, tiffField0.getBytesLength());
      assertEquals((-171), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3198, 2145780647, fieldTypeByte0, 0L, (-4748L), byteArray0, byteOrder0, (-135));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(3198, tiffField0.getTag());
      assertEquals(2145780647, tiffField0.getDirectoryType());
      assertEquals((-4748), tiffField0.getOffset());
      assertEquals((-135), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-719), (-719), fieldTypeDouble0, (-719), (-719), (byte[]) null, byteOrder0, (-1230));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "CPhCW`[w,e1 =mpPab ");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1L), (-1L), byteArray0, (ByteOrder) null, 1646);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1808), (-2128), fieldTypeByte0, (-1808), (-820L), byteArray0, byteOrder0, (byte) (-31));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(279);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(279, 279, fieldTypeLong0, (-239L), (-239L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3201), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2060, 2060, fieldTypeByte0, (-1L), 0L, byteArray0, byteOrder0, (-3201));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)67, 33450, fieldTypeLong0, (-1198L), 4L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1001, "... (");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 2325, fieldTypeAscii0, 96650L, (byte) (-35), byteArray0, byteOrder0, (byte) (-124));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147031830), 3, (FieldType) null, 4L, 82L, byteArray0, byteOrder0, (byte) (-116));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(42035, (byte) (-44), fieldTypeShort0, (byte) (-44), (byte) (-30), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (-2538L), (-2637), byteArray0, byteOrder0, (-2146299155));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-110), "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-110), (byte) (-110), fieldTypeByte0, (-1L), (byte) (-110), byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1056), (-1056), fieldTypeShort0, (-1056), 322L, byteArray0, byteOrder0, 1843);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2023, 2023, fieldTypeAscii0, 2023, 2023, (byte[]) null, byteOrder0, 2023);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1769), (-2484), fieldTypeByte0, (-1769), (-2484), byteArray0, byteOrder0, (-2484));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SG-qsA>");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-694), (-4582), fieldTypeByte0.FLOAT, (-879), 2309L, byteArray0, byteOrder0, 2144475967);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SYSTEM");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (-4829));
      tiffField0.getFieldType();
      assertEquals((-4829), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 3434, fieldTypeAscii0, (-2429L), 3914L, byteArray0, byteOrder0, (byte) (-113));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3434, int0);
      assertEquals(3914, tiffField0.getOffset());
      assertEquals((-113), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SYSTEM");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (-4829));
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4829), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-719), (-719), fieldTypeDouble0, (-719), (-719), (byte[]) null, byteOrder0, (-1230));
      int int0 = tiffField0.getTag();
      assertEquals((-1230), tiffField0.getSortHint());
      assertEquals((-719), tiffField0.getDirectoryType());
      assertEquals((-719), tiffField0.getOffset());
      assertEquals((-719), int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeByte0.FLOAT, 2911L, (-2249L), byteArray0, byteOrder0, 326);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals((-2249), tiffField0.getOffset());
      assertEquals(285, tiffField0.getTag());
      assertEquals(11644, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, "VIb*pa=Yd&|&");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(717, (-886), fieldTypeByte0.SRATIONAL, 717, 717, byteArray0, byteOrder0, 717);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41988, (-115), fieldTypeByte0, 1L, (-248L), byteArray0, byteOrder0, (-115));
      tiffField0.getIntValue();
      assertEquals((-248), tiffField0.getOffset());
      assertEquals(41988, tiffField0.getTag());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-115), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(4766, 48325, fieldTypeLong0, 48325, 0L, byteArray0, (ByteOrder) null, (-594));
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(193300, tiffField0.getBytesLength());
      assertEquals((-594), tiffField0.getSortHint());
      assertEquals(4766, tiffField0.getTag());
      assertEquals(48325, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1001, "... (");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50737, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41988, (-115), fieldTypeByte0, 1L, (-248L), byteArray0, byteOrder0, (-115));
      tiffField0.getIntValueOrArraySum();
      assertEquals(41988, tiffField0.getTag());
      assertEquals((-248), tiffField0.getOffset());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-354), (-354), fieldTypeRational0, 715, 2431L, byteArray0, byteOrder0, (-354));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)115, 2147001392, fieldTypeLong0.DOUBLE, (byte)115, (-3349L), byteArray0, byteOrder0, 14);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147001392, tiffField0.getDirectoryType());
      assertEquals(920, tiffField0.getBytesLength());
      assertEquals((-3349), tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(717, 717, fieldTypeByte0, 717, 0L, byteArray0, byteOrder0, (-133));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@791cf45 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1196), (byte)70, fieldTypeLong0, (byte)115, 393L, byteArray0, byteOrder0, (-171));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1196), tiffField0.getTag());
      assertEquals(393, tiffField0.getOffset());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(460, tiffField0.getBytesLength());
      assertEquals((-171), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeShort0, 1022L, (byte)0, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2044, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-354), (-354), fieldTypeRational0, 715, 2431L, byteArray0, byteOrder0, (-354));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-354), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-354), tiffField0.getTag());
      assertEquals((-354), tiffField0.getSortHint());
      assertEquals(5720, tiffField0.getBytesLength());
      assertEquals(2431, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(851, 851, fieldTypeByte0, 1L, (-2015L), byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-2015), tiffField0.getOffset());
      assertEquals(851, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(851, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(361, 361, fieldTypeShort0.FLOAT, 361, 361, byteArray0, byteOrder0, 361);
      tiffField0.getDoubleArrayValue();
      assertEquals(361, tiffField0.getDirectoryType());
      assertEquals(361L, tiffField0.getCount());
      assertEquals(1444, tiffField0.getBytesLength());
      assertEquals(361, tiffField0.getOffset());
      assertEquals(361, tiffField0.getSortHint());
      assertEquals(361, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1399, 316, fieldTypeLong0, 316, 316, byteArray0, byteOrder0, (byte)66);
      tiffField0.getIntArrayValue();
      assertEquals(316L, tiffField0.getCount());
      assertEquals(1264, tiffField0.getBytesLength());
      assertEquals(316, tiffField0.getDirectoryType());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(316, tiffField0.getOffset());
      assertEquals(1399, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146688578, 2147351714, fieldTypeShort0, 4253, 1264L, byteArray0, byteOrder0, 2147351714);
      tiffField0.getIntArrayValue();
      assertEquals(4253L, tiffField0.getCount());
      assertEquals(8506, tiffField0.getBytesLength());
      assertEquals(2146688578, tiffField0.getTag());
      assertEquals(1264, tiffField0.getOffset());
      assertEquals(2147351714, tiffField0.getSortHint());
      assertEquals(2147351714, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1001, "... (");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(571, 1001, fieldTypeAscii0, 1217L, 1217L, byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@242e279 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "VIb*pa=Yd&|&");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(40965, (-3695), fieldTypeByte0.RATIONAL, 1924L, 65535, byteArray0, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte) (-121));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-121), tiffField0.getSortHint());
      assertEquals(0, intArray0.length);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4210, 4210, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, (-1786));
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4210, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4210, tiffField0.getDirectoryType());
      assertEquals((-1786), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "VIb*pa=Yd&|&");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(717, (-886), fieldTypeByte0.RATIONAL, 65535, (-133), byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals((-133), tiffField0.getOffset());
      assertEquals((-886), tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(717, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(331, "EuO/F%hPirxXF");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-53);
      byteArray0[6] = (byte) (-35);
      TiffField tiffField0 = new TiffField(331, 331, fieldTypeAscii0, 331, 331, byteArray0, byteOrder0, (byte)66);
      String string0 = tiffField0.getStringValue();
      assertEquals(331, tiffField0.getBytesLength());
      assertEquals(331, tiffField0.getTag());
      assertEquals(331, tiffField0.getOffset());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(331, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(331, "EuO/F%hPirxXF");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(331, 331, fieldTypeAscii0, 331, 331, byteArray0, byteOrder0, (byte)66);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@5cd5ac27
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(480, 480, fieldTypeShort0, 0L, 117, byteArray0, byteOrder0, 133);
      String string0 = tiffField0.getTagName();
      assertEquals(117, tiffField0.getOffset());
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(480, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x1e0)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(717, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(285, 0, fieldTypeByte0.FLOAT, 2911L, (-2249L), byteArray0, byteOrder0, 326);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("PageName", string0);
      assertEquals((-2249), tiffField0.getOffset());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(285, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(406, 406, fieldTypeFloat0, 406, 406, byteArray0, byteOrder0, 406);
      String string0 = tiffField0.toString();
      assertEquals(406, tiffField0.getOffset());
      assertEquals("406 (0x196: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (406 Float)", string0);
      assertEquals(406, tiffField0.getSortHint());
      assertEquals(406, tiffField0.getDirectoryType());
      assertEquals(1624, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3257, 3257, fieldTypeByte0, 3257, 3257, byteArray0, byteOrder0, 1856);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3257, tiffField0.getDirectoryType());
      assertEquals(3257, tiffField0.getBytesLength());
      assertEquals(1856, tiffField0.getSortHint());
      assertEquals(3257L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(3257, tiffField0.getTag());
      assertEquals(3257, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(602, 2147479551, fieldTypeShort0.DOUBLE, 7, 3246L, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(602, tiffField0.getTag());
      assertEquals("0.0, 0.0", string0);
      assertEquals(7L, tiffField0.getCount());
      assertEquals(3246, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147479551, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(23, 2375, fieldTypeLong0, 2375, 2375, byteArray0, byteOrder0, 2375);
      String string0 = tiffField0.toString();
      assertEquals(9500, tiffField0.getBytesLength());
      assertEquals(2375, tiffField0.getOffset());
      assertEquals(2375, tiffField0.getDirectoryType());
      assertEquals(2375, tiffField0.getSortHint());
      assertEquals("23 (0x17: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2375 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[129];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-459), (-459), fieldTypeLong0, 65545, 65545, byteArray0, byteOrder0, 65545);
      String string0 = tiffField0.toString();
      assertEquals(262180, tiffField0.getBytesLength());
      assertEquals(65545, tiffField0.getOffset());
      assertEquals("-459 (0xfffffe35: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (65545 SLong)", string0);
      assertEquals(65545, tiffField0.getSortHint());
      assertEquals((-459), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1698), (-526), fieldTypeShort0, 2037L, (-1698), byteArray0, byteOrder0, (-1698));
      String string0 = tiffField0.toString();
      assertEquals((-1698), tiffField0.getSortHint());
      assertEquals((-1698), tiffField0.getOffset());
      assertEquals((-526), tiffField0.getDirectoryType());
      assertEquals("-1698 (0xfffff95e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (2037 SShort)", string0);
      assertEquals(4074, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1454), (-1454), fieldTypeShort0.ASCII, 34679, 255L, byteArray0, byteOrder0, (-1454));
      tiffField0.toString();
      assertEquals((-1454), tiffField0.getTag());
      assertEquals((-1454), tiffField0.getSortHint());
      assertEquals((-1454), tiffField0.getDirectoryType());
      assertEquals(34679, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(34679L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1454), (-1454), fieldTypeShort0.ASCII, 34669, 255L, byteArray0, byteOrder0, (-1454));
      tiffField0.toString();
      assertEquals((-1454), tiffField0.getTag());
      assertEquals((-1454), tiffField0.getDirectoryType());
      assertEquals((-1454), tiffField0.getSortHint());
      assertEquals(34669L, tiffField0.getCount());
      assertEquals(34669, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(514, 927, fieldTypeAscii0, (byte)0, (byte) (-110), byteArray0, byteOrder0, 514);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "I5-o-4Umh+J-u!y;Cv");
      assertEquals(91, byteArrayOutputStream0.size());
      assertEquals(514, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-17), 1319, fieldTypeAscii0, 0L, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-17), tiffField0.getTag());
      assertEquals(1319, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33450, (byte)0, fieldTypeLong0, 316, 255L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(255L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(33450, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4259), (-4259), fieldTypeLong0, (-4259), (-13L), byteArray0, byteOrder0, 1002);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1002, tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-4259), tiffField0.getTag());
      assertEquals((-4259), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SYSTEM");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (-4829));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4829), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SYSTEM", string0);
      assertEquals((-4829), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeShort0, 2L, (-1355L), byteArray0, byteOrder0, 16);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals((-1355), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(338, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "VIb*pa=Yd&|&");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(717, (-886), fieldTypeByte0.SRATIONAL, 65535, (-133), byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-133), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(717, tiffField0.getTag());
      assertEquals((-886), tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2354, "");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2354, 1114, fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 2354);
      tiffField0.getFieldTypeName();
      assertEquals(2354, tiffField0.getTag());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals(2354, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-719), (-719), fieldTypeDouble0, (-719), (-719), (byte[]) null, byteOrder0, (-1230));
      int int0 = tiffField0.getOffset();
      assertEquals((-719), tiffField0.getDirectoryType());
      assertEquals((-719), int0);
      assertEquals((-719), tiffField0.getTag());
      assertEquals((-1230), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2104), fieldTypeShort0, 1L, (-2294L), byteArray0, byteOrder0, 22);
      String string0 = tiffField0.toString();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (1 Short)", string0);
      assertEquals((-2294), tiffField0.getOffset());
      assertEquals((-2104), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(851, 851, fieldTypeByte0, 1L, (-2015L), byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals((-2015), tiffField0.getOffset());
      assertEquals(851, tiffField0.getTag());
      assertEquals(851, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, (-2492), fieldTypeShort0.FLOAT, 5044L, 4994L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2492), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(4994, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
      assertEquals(20176, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 117, fieldTypeShort0, 1L, 102L, byteArray0, byteOrder0, 338);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(102, tiffField0.getOffset());
      assertEquals(338, tiffField0.getSortHint());
      assertEquals(117, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals("133 (0x85: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147461428, 717, fieldTypeByte0, 2147461428, 1L, byteArray0, byteOrder0, 1655);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[123];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(346, 346, fieldTypeShort0.FLOAT, 346, 346, byteArray0, byteOrder0, 346);
      String string0 = tiffField0.toString();
      assertEquals(1384, tiffField0.getBytesLength());
      assertEquals(346, tiffField0.getSortHint());
      assertEquals(346, tiffField0.getOffset());
      assertEquals("346 (0x15a: Indexed): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (346 Float)", string0);
      assertEquals(346, tiffField0.getDirectoryType());
  }
}
