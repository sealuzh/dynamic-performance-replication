/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 22:54:16 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1807, 88, fieldTypeLong0, 88, 1807, byteArray0, byteOrder0, 1807);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(1807, int0);
      assertEquals(88L, tiffField0.getCount());
      assertEquals(1807, tiffField0.getOffset());
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals(1807, tiffField0.getTag());
      assertEquals(352, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4591, ":dp=i/S@>>");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)44;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 4591, 65535, byteArray0, byteOrder0, (-1));
      tiffField0.dump();
      fieldTypeRational0.getValue(tiffField0);
      tiffField0.getByteOrder();
      tiffField0.getByteOrder();
      tiffField0.getCount();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-62), 65535);
      tiffField_OversizeValueElement0.getElementDescription(false);
      String string0 = "GPSImgDirectionRef";
      try { 
        MockURI.URI("nQ:$&y", "?@(nCKet5", ":dp=i/S@>>", (-1659), "nQ:$&y", "?@(nCKet5", "GPSImgDirectionRef");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: nQ:$&y://%3F%40(nCKet5@[:dp=i/S@>>]:-1659nQ:$&y??@(nCKet5#GPSImgDirectionRef
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1880, 1880, fieldTypeFloat0, 1880, 1880, byteArray0, byteOrder0, 1880);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1813, 1813, fieldTypeFloat0, 1813, 1813, byteArray0, byteOrder0, 1813);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1813, 1813);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1813, tiffField0.getTag());
      assertEquals(7252, tiffField0.getBytesLength());
      assertEquals(1813, tiffField0.getSortHint());
      assertEquals(1813L, tiffField0.getCount());
      assertEquals(1813, tiffField0.getOffset());
      assertNull(string1);
      assertEquals(1813, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(353, 353, fieldTypeRational0, 1807, 353, byteArray0, byteOrder0, 1807);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1807, tiffField0.getSortHint());
      assertEquals(353, tiffField0.getDirectoryType());
      assertEquals(14456, tiffField0.getBytesLength());
      assertEquals(353, tiffField0.getTag());
      assertEquals(353, tiffField0.getOffset());
      assertEquals(1807L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-602), fieldTypeAscii0, 50, 4L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-602), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1842, 1, fieldTypeFloat0, 1, 1L, byteArray0, byteOrder0, (-2653));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      int int0 = tiffField0.getSortHint();
      assertEquals(1842, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2653), int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte) (-109);
      byteArray0[6] = (byte)26;
      byteArray0[7] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 638, fieldTypeByte0, 638, (-4935L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(638, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(638, tiffField0.getBytesLength());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, -1, -104, 47, -109, 26, 13 (638 Undefined)", string0);
      assertEquals((-4935), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1862, 663, fieldTypeByte0, 663, 663, byteArray0, byteOrder0, 663);
      String string0 = tiffField0.getValueDescription();
      assertEquals(663, tiffField0.getSortHint());
      assertEquals(663, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1862, tiffField0.getTag());
      assertEquals(663, tiffField0.getOffset());
      assertEquals(663, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1813, 1813, fieldTypeFloat0, 1813, 1813, byteArray0, byteOrder0, 1813);
      tiffField0.getDoubleArrayValue();
      assertEquals(1813, tiffField0.getTag());
      assertEquals(7252, tiffField0.getBytesLength());
      assertEquals(1813, tiffField0.getSortHint());
      assertEquals(1813, tiffField0.getOffset());
      assertEquals(1813, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1469, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)69;
      byteArray0[6] = (byte) (-127);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)42;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-210), 0, fieldTypeFloat0, 1469, 0, byteArray0, byteOrder0, (byte)69);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffff2e)", string0);
      
      String string1 = tiffField0.getDescriptionWithoutValue();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("-210 (0xffffff2e: Unknown Tag): ", string1);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(5876, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1857, 685, fieldTypeShort0, 685, 685, byteArray0, byteOrder0, 685);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getTag();
      assertEquals(685, tiffField0.getSortHint());
      assertEquals(1857, int0);
      assertEquals(685, tiffField0.getDirectoryType());
      assertEquals(1370, tiffField0.getBytesLength());
      assertEquals(685, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)112;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte) (-1), fieldTypeLong0, 663L, (-1294L), byteArray0, byteOrder0, (byte)73);
      fieldTypeLong0.getValue(tiffField0);
      assertEquals(73, tiffField0.getTag());
      
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte) (-123);
      byteArray0[6] = (byte)1;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField1 = new TiffField(0, 50981, fieldTypeLong0, 0L, 5201L, byteArray0, byteOrder1, (-2725));
      int int0 = tiffField1.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string0 = tiffField1.getDescriptionWithoutValue();
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      
      int int1 = tiffField1.getSortHint();
      assertEquals((-2725), int1);
      
      tiffField1.getIntArrayValue();
      assertEquals(5201, tiffField1.getOffset());
      assertEquals(50981, tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1469, (String) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)69;
      byteArray0[6] = (byte) (-127);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)42;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-210), 0, fieldTypeFloat0, 1469, 0, byteArray0, byteOrder0, (byte)69);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3be7f20d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1813, 1813, fieldTypeFloat0, 1813, 1813, byteArray0, byteOrder0, 1813);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ew,v");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      TiffField tiffField0 = new TiffField((byte)0, (-2665), fieldTypeShort0, 48L, (-1L), byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "Ru! SYV");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, (-505), fieldTypeLong0, (-2147483648L), 4L, byteArray0, byteOrder1, 2678);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals((-505), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2678, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "vd:a9x");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      MockFile mockFile0 = new MockFile("vd:a9x");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      TiffField tiffField0 = new TiffField(521, 0, fieldTypeFloat0, 1699L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getOversizeValueElement();
      mockFile0.getCanonicalPath();
      mockFile0.setWritable(true);
      String string0 = null;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("vd:a9x", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1813, 1813, fieldTypeFloat0, 1813, 1813, byteArray0, byteOrder0, 1813);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1813, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1813, tiffField0.getDirectoryType());
      assertEquals(1813, tiffField0.getTag());
      assertEquals(1813L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "Ru! SYV");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-23);
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte) (-121);
      byteArray0[5] = (byte)112;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 1, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      String string1 = tiffField0.toString();
      assertTrue(string1.equals((Object)string0));
      assertEquals("0 (0x0: Unknown Tag):  (0 Ru! SYV)", string1);
      
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "Ru! SYV");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(853, 828, fieldTypeLong0, 875L, (-1514L), byteArray0, byteOrder0, 0);
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "vd:a9x");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)42;
      TiffField tiffField0 = new TiffField(0, (byte) (-1), fieldTypeFloat0, 0L, (-1682L), byteArray0, byteOrder0, (byte)69);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string0);
      
      String string1 = tiffField0.getDescriptionWithoutValue();
      assertEquals("0 (0x0: GPSVersionID): ", string1);
      
      String string2 = tiffField0.toString();
      assertEquals("0 (0x0: GPSVersionID):  (0 vd:a9x)", string2);
      assertEquals((-1682), tiffField0.getOffset());
      assertEquals(69, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "vd:a9x");
      byte byte0 = (byte)69;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)69;
      byteArray0[0] = (byte) (-1);
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)42, 1, fieldTypeFloat0, 0L, (byte) (-1), byteArray0, byteOrder1, (byte) (-1));
      tiffField0.getFieldType();
      tiffField0.getFieldType();
      TiffField tiffField1 = new TiffField((byte)0, 50, fieldTypeFloat0, (byte)69, (byte)69, byteArray0, byteOrder0, (byte) (-1));
      tiffField1.toString();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("&P?M nv:F-*y%U$G(?P", "UH*Sq,dt&sn");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // UH*Sq,dt&sn
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-1924));
      tiffField0.getFieldType();
      FieldType fieldType0 = tiffField0.getFieldType();
      tiffField0.toString();
      TiffField tiffField1 = new TiffField((-1717986917), 1, fieldType0, 255L, 1L, byteArray0, byteOrder0, 0);
      tiffField1.toString();
      try { 
        tiffField1.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6207ed35 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 1;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "Ru! SYV");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2591, 6, fieldTypeLong0, 0, 2591, byteArray0, byteOrder0, 6);
      int int1 = 50;
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 1162);
      tiffField0.getFieldType();
      FieldType fieldType0 = tiffField0.getFieldType();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1924), "Ru! SYV");
      fieldType0.getValue(tiffField0);
      TiffField tiffField1 = new TiffField((-701), 1, fieldTypeDouble0, 0L, 6, byteArray0, byteOrder0, 0);
      tiffField1.toString();
      try { 
        tiffField1.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4ddf5ab0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1, "Yd");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)69;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)69;
      TiffField tiffField0 = new TiffField((-2310), 1, fieldTypeDouble0, 4L, (-98L), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffff6fa)", string0);
      
      String string1 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2310 (0xfffff6fa: Unknown Tag): ", string1);
      
      String string2 = tiffField0.toString();
      assertEquals("-2310 (0xfffff6fa: Unknown Tag): 1.5432225182621903E29 (4 Yd)", string2);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-98), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-46);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-46), "Ru! SYV");
      TiffField tiffField0 = new TiffField(2678, (byte) (-46), fieldTypeShort0, (-2147483648L), 2678, byteArray0, byteOrder1, 446);
      tiffField0.toString();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@23fe48da
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1610612735), (-1610612735), fieldTypeShort0, (-1610612735), (-1610612735), byteArray0, (ByteOrder) null, (-1610612735));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals((-1610612735), int0);
      assertEquals((-1610612735), tiffField0.getTag());
      assertEquals((-1610612735), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-46);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-46), " for: ");
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-46), 34025, fieldTypeShort0, (byte) (-46), 4L, byteArray0, byteOrder2, (byte) (-46));
      TiffField tiffField1 = new TiffField(446, 446, fieldTypeShort0, 169L, 446, byteArray0, byteOrder1, (byte) (-46));
      String string0 = tiffField1.toString();
      assertEquals("446 (0x1be: Unknown Tag): 210 (169  for: )", string0);
      
      TiffField tiffField2 = new TiffField((-1410), 7, fieldTypeShort0, (byte) (-46), 2953L, byteArray0, byteOrder2, (-1717986917));
      assertEquals((-1410), tiffField2.getTag());
      assertEquals(7, tiffField2.getDirectoryType());
      
      String string1 = tiffField1.getTagName();
      assertEquals("Unknown Tag (0x1be)", string1);
      assertEquals(446, tiffField1.getOffset());
      assertEquals((-46), tiffField1.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1503, 399, fieldTypeShort0, 0L, 1503, byteArray0, byteOrder0, 399);
      tiffField0.getFieldType();
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleArrayValue();
      tiffField0.getCount();
      assertEquals(399, tiffField0.getSortHint());
      assertEquals(399, tiffField0.getDirectoryType());
      assertEquals(1503, tiffField0.getTag());
      assertEquals(1503, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(457, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 10, fieldTypeRational0, (-2147483648L), 0L, byteArray0, byteOrder0, (-1));
      fieldTypeByte0.FLOAT.getValue(tiffField0);
      TiffField tiffField1 = new TiffField(284, 10, fieldTypeByte0, (-1L), 2147378897, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      tiffField0.getValueDescription();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@7a04a3b4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, "!%CMdj`2W");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte) (-36);
      TiffField tiffField0 = new TiffField(1813, 34019, fieldTypeShort0, 762L, 50, byteArray0, byteOrder0, 2146527085);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getOffset());
      
      TiffField tiffField1 = new TiffField(1813, 2147475455, fieldTypeShort0, 255L, 255L, byteArray0, byteOrder0, 16);
      String string0 = tiffField1.getDescriptionWithoutValue();
      assertEquals("1813 (0x715: Unknown Tag): ", string0);
      
      int int0 = tiffField1.getIntValueOrArraySum();
      assertEquals(16, tiffField1.getSortHint());
      assertEquals(2147475455, tiffField1.getDirectoryType());
      assertEquals((-36087), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-35);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-126);
      byteArray0[5] = (byte) (-54);
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeRational0, 10, (-1524L), byteArray0, byteOrder0, 10);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(10, int0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int1);
      
      tiffField0.getByteOrder();
      assertEquals((-1524), tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1787, 1787, fieldTypeRational0, 2616L, 2616L, byteArray0, byteOrder0, (-1399));
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals(1787, tiffField0.getDirectoryType());
      assertEquals(1787, tiffField0.getTag());
      assertEquals((-1399), int0);
      assertEquals(2616, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-3995), 1657, fieldTypeRational0, 2914L, 1657, byteArray0, byteOrder0, (-407));
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      tiffField0.getIntArrayValue();
      tiffField0.getBytesLength();
      assertEquals((-407), tiffField0.getSortHint());
      assertEquals(1657, tiffField0.getOffset());
      assertEquals((-3995), tiffField0.getTag());
      assertEquals(1657, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1813, "_y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      ByteOrder.nativeOrder();
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-103);
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 1813, 1813, byteArray0, byteOrder0, 1813);
      tiffField0.getStringValue();
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: 
         // \uFFFDH\u0001\uFFFD for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
