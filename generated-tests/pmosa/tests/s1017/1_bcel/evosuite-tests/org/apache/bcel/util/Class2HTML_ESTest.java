/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 12:41:32 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.BCELComparator;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class2HTML.toHTML("^pLm");
      Class2HTML.toHTML("^pLm");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "^pLm";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = "pDA3:[F~RQ.h<`P8";
      Class2HTML.referenceType("pDA3:[F~RQ.h<`P8");
      ClassPath classPath0 = new ClassPath("pDA3:[F~RQ.h<`P8");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      try { 
        memorySensitiveClassPathRepository0.loadClass("<A HREF=\"pDA3:.html\" TARGET=_top>pDA3:[F~RQ.h<`P8</A>");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class <A HREF=\"pDA3:.html\" TARGET=_top>pDA3:[F~RQ.h<`P8<.A>: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: <A HREF=\"pDA3:/html\" TARGET=_top>pDA3:[F~RQ/h<`P8</A>.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class2HTML.toHTML("-zip");
      Class2HTML.toHTML("");
      Class2HTML.toHTML("");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("-zip", false);
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, ">wUk=5bk@]2aL]]w");
      Class2HTML.toHTML("P-pKEC=u");
      String string0 = "#1EU=e}|oc}GIG";
      Class2HTML.toHTML("#1EU=e}|oc}GIG");
      classLoader0.clearAssertionStatus();
      classLoaderRepository0.loadClass(class0);
      Class2HTML.toHTML("");
      Class2HTML.toHTML("-zip");
      Class2HTML.toHTML("-zip");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classLoader0.setClassAssertionStatus((String) null, false);
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      JavaClass javaClass0 = syntheticRepository0.loadClass("java.lang.reflect.AnnotatedType");
      BCELComparator bCELComparator0 = Constant.getComparator();
      JavaClass.setComparator(bCELComparator0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "|NWM$$L[';&(of5");
      String string0 = Class2HTML.referenceType("|NWM$$L[';&(of5");
      assertEquals("<A HREF=\"|NWM$$L.html\" TARGET=_top>|NWM$$L[';&(of5</A>", string0);
      
      String string1 = Class2HTML.toHTML("h.=75'+6tn");
      assertEquals("h.=75'+6tn", string1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      Class2HTML.toHTML("_methods.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n</FRAMESET></FRAMESET></HTML>");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "_methods.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n</FRAMESET></FRAMESET></HTML>");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = "-zip";
      Class2HTML.toHTML("-zip");
      Class2HTML.toHTML("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-zip";
      stringArray0[1] = "";
      stringArray0[2] = "$O2^W+$J>B";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         //  (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("-zip");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      memorySensitiveClassPathRepository0.findClass("-zip");
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "-zip");
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-zip";
      stringArray0[1] = "-zip";
      stringArray0[2] = "-zip";
      stringArray0[3] = "A*huPEjw$";
      javaClass0.setClassName("`3");
      stringArray0[4] = "}[mZA#EpIHyaA";
      stringArray0[5] = "-zip";
      Class2HTML class2HTML1 = new Class2HTML(javaClass0, (String) null);
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class2HTML.toHTML("-d$G");
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d$G";
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      stringArray0[4] = "-d$G";
      Class2HTML.main(stringArray0);
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/-d");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String string0 = File.separator;
      Class2HTML.toHTML("-d");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
