/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 04:53:25 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2895));
      classWriter0.index = (-2895);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "J/T|^0%``", "", "", "J/T|^0%``");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(94, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2940), "", "", "?&>?R$", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "vJ/T|^0%``", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2940), (String) null, "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-946));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1), "(EvKqIUClQZ", "RuntimeVisibleAnnotations", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5317853a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Signature", "Code", "Code", "P8`");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("P8`");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2940), "vJ/T|^0%``", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      classWriter0.version = (-2940);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-594), "", "", (String) null, "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(81, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "", "&@T|3qZrEpL,", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("&@T|3qZrEpL,");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "?&>?R$", "?&>?R$", "?&>?R$", "?&>?R$");
      fieldWriter0.visitAnnotation("V=,)iA -*(7<l_", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2940), "vJ/T|^0%``", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2940));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2940), "vJ/T|^0%``", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("vJ/T|^0%``", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(127, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2895));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2895), "J/T|^0%``", "", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "J/T|^0%``", "", "", "J/T|^0%``");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3373);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2394, "ConstantValue", "5!rE|VkWY*", "wheel.asm.Handler", "5!rE|VkWY*");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2895));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2895), "J/T|^0%``", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
