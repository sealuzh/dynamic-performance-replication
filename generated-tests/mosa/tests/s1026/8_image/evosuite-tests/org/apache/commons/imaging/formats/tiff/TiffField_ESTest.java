/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 16:42:23 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2880, 2880, fieldTypeFloat0, 2880, 2880, byteArray0, byteOrder0, 2880);
      tiffField0.dump();
      assertEquals(2880, tiffField0.getOffset());
      assertEquals(2880, tiffField0.getDirectoryType());
      assertEquals(2880L, tiffField0.getCount());
      assertEquals(2880, tiffField0.getTag());
      assertEquals(2880, tiffField0.getSortHint());
      assertEquals(11520, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 880, 880, byteArray0, byteOrder0, 880);
      String string0 = tiffField0.toString();
      assertEquals(3520, tiffField0.getBytesLength());
      assertEquals("880 (0x370: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0 (880 Float)", string0);
      assertEquals(880, tiffField0.getDirectoryType());
      assertEquals(880, tiffField0.getOffset());
      assertEquals(880, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[264];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(479, 479, fieldTypeDouble0, 479, 479, byteArray0, byteOrder0, 479);
      tiffField0.getDoubleArrayValue();
      assertEquals(479, tiffField0.getDirectoryType());
      assertEquals(479, tiffField0.getSortHint());
      assertEquals(479L, tiffField0.getCount());
      assertEquals(3832, tiffField0.getBytesLength());
      assertEquals(479, tiffField0.getTag());
      assertEquals(479, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(148, 148, fieldTypeFloat0, 148, 148, byteArray0, byteOrder0, 148);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@42af3624 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2855, 2855, fieldTypeFloat0.BYTE, 2855, 2855, byteArray0, byteOrder0, 2855);
      String string0 = tiffField0.toString();
      assertEquals(2855, tiffField0.getSortHint());
      assertEquals(2855, tiffField0.getDirectoryType());
      assertEquals("2855 (0xb27: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (2855 Byte)", string0);
      assertEquals(2855, tiffField0.getBytesLength());
      assertEquals(2855, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeFloat0, 10, 10, byteArray0, byteOrder0, 31);
      int int0 = tiffField0.getSortHint();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(40, 40, fieldTypeFloat0, 40, 40, byteArray0, byteOrder0, 40);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals("40 (0x28: Unknown Tag): ", string0);
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 880, 880, byteArray0, byteOrder0, 880);
      tiffField0.getFieldTypeName();
      assertEquals(880, tiffField0.getDirectoryType());
      assertEquals(880, tiffField0.getOffset());
      assertEquals(880, tiffField0.getSortHint());
      assertEquals(880, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 880, 880, byteArray0, byteOrder0, 880);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@55d6c016 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 880, 880, byteArray0, byteOrder0, 880);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@641bb51d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(889, 30, fieldTypeAscii0, 889, 889, byteArray0, byteOrder0, 889);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription();
      assertEquals(30, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(889, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals(889, tiffField0.getTag());
      assertEquals(889L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[201];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeDouble0, 1354, 1354, byteArray0, byteOrder0, 1354);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1354, 1354);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1354, tiffField0.getSortHint());
      assertEquals(1354, tiffField0.getDirectoryType());
      assertEquals(1354, tiffField0.getTag());
      assertEquals(1354, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, 366L, (-7), byteArray0, byteOrder0, (-7));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-7), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-7), tiffField0.getTag());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
      assertEquals(366L, tiffField0.getCount());
      assertEquals(732, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 1, fieldTypeLong0, 4, 4, byteArray0, byteOrder0, 4);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[180];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeLong0, 92, 92, byteArray0, byteOrder0, 92);
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.toString();
      assertEquals("92 (0x5c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (92 Long)", string0);
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[369];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(0, (-3699), fieldTypeShort0, 0, 0, (byte[]) null, (ByteOrder) null, (-3699));
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals((-3699), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3699), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(535, 535, fieldTypeLong0, 535, 535, byteArray0, byteOrder0, 535);
      tiffField0.getDoubleArrayValue();
      assertEquals(535, tiffField0.getTag());
      assertEquals(535L, tiffField0.getCount());
      assertEquals(535, tiffField0.getSortHint());
      assertEquals(535, tiffField0.getDirectoryType());
      assertEquals(535, tiffField0.getOffset());
      assertEquals(2140, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeShort0, 1354, 1354, byteArray0, byteOrder0, 1354);
      tiffField0.getIntArrayValue();
      assertEquals(1354, tiffField0.getDirectoryType());
      assertEquals(1354L, tiffField0.getCount());
      assertEquals(1354, tiffField0.getSortHint());
      assertEquals(1354, tiffField0.getTag());
      assertEquals(2708, tiffField0.getBytesLength());
      assertEquals(1354, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2855, 2855, fieldTypeFloat0, 2855, 2855, byteArray0, byteOrder0, 2855);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2867, 2867, fieldTypeByte0, 2867, (-1L), byteArray0, byteOrder0, 2867);
      tiffField0.toString();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@34d599c8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[150];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0.DOUBLE, 880, 880, byteArray0, byteOrder0, 880);
      String string0 = tiffField0.getValueDescription();
      assertEquals(880L, tiffField0.getCount());
      assertEquals(880, tiffField0.getOffset());
      assertEquals(880, tiffField0.getSortHint());
      assertEquals(880, tiffField0.getDirectoryType());
      assertEquals(7040, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(880, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65539, 65539, fieldTypeDouble0.ASCII, 0L, 65539, byteArray0, byteOrder0, 65539);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65539, tiffField0.getTag());
      assertEquals(65539, tiffField0.getSortHint());
      assertEquals(65539, tiffField0.getOffset());
      assertEquals(65539, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(518, 518, fieldTypeLong0, 518, 518, byteArray0, byteOrder1, 518);
      byteOrder1.toString();
      String string0 = tiffField0.getTagName();
      assertEquals("JPEGPointTransforms", string0);
      assertEquals(518, tiffField0.getOffset());
      assertEquals(518, tiffField0.getSortHint());
      assertEquals(518, tiffField0.getDirectoryType());
      assertEquals(518, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeAscii0, 1L, 1354, byteArray0, byteOrder0, 1354);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1354, tiffField0.getTag());
      assertEquals(1354, tiffField0.getSortHint());
      assertEquals(1354, tiffField0.getOffset());
      assertEquals(1354, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, 366L, (-7), byteArray0, byteOrder0, (-7));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getTag());
      assertEquals(366L, tiffField0.getCount());
      assertEquals((-7), tiffField0.getOffset());
      assertEquals((-7), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65540, 65540, fieldTypeDouble0.ASCII, 65540, 65540, byteArray0, byteOrder0, 65540);
      tiffField0.dump();
      assertEquals(65540L, tiffField0.getCount());
      assertEquals(65540, tiffField0.getOffset());
      assertEquals(65540, tiffField0.getSortHint());
      assertEquals(65540, tiffField0.getDirectoryType());
      assertEquals(65540, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 1L, 880, byteArray0, byteOrder0, 880);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(880, tiffField0.getTag());
      assertEquals(880, tiffField0.getDirectoryType());
      assertEquals(880, tiffField0.getSortHint());
      assertEquals(880, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65525, 65525, fieldTypeFloat0, 65525, 65525, byteArray0, byteOrder0, 65525);
      tiffField0.getDoubleArrayValue();
      assertEquals(65525, tiffField0.getOffset());
      assertEquals(65525, tiffField0.getDirectoryType());
      assertEquals(65525, tiffField0.getSortHint());
      assertEquals(65525, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 24, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(880, 880, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 880);
      tiffField0.getDoubleArrayValue();
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(880, tiffField0.getDirectoryType());
      assertEquals(880, tiffField0.getSortHint());
      assertEquals(880, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(351, "vj]]m'mE,ye`s4");
      TiffField tiffField0 = new TiffField(351, 1521, fieldTypeRational0, 351, 351, byteArray0, byteOrder0, 351);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(351, tiffField0.getTag());
      assertEquals(351, tiffField0.getOffset());
      assertEquals(351, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(1521, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3291, 3291, fieldTypeAscii0, 3291, 11, byteArray0, byteOrder0, 11);
      tiffField0.dump();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(3291, tiffField0.getDirectoryType());
      assertEquals(3291, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1354, 1354, fieldTypeShort0, 1354, 1354, byteArray0, byteOrder0, 1354);
      String string0 = tiffField0.toString();
      assertEquals(1354, tiffField0.getDirectoryType());
      assertEquals(1354, tiffField0.getOffset());
      assertEquals("1354 (0x54a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (88) (1354 SShort)", string0);
      assertEquals(1354, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[326];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2882, 2882, fieldTypeFloat0, 2882, 2882, byteArray0, byteOrder0, 2882);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2882, tiffField0.getOffset());
      assertEquals(2882, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2882, tiffField0.getSortHint());
      assertEquals(2882, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[397];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(123, 123, fieldTypeLong0, 123, 123, byteArray0, byteOrder0, 123);
      tiffField0.dump();
      assertEquals(123, tiffField0.getSortHint());
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals(123, tiffField0.getOffset());
      assertEquals(123, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(154, 154, fieldTypeDouble0, 154, 154, byteArray0, byteOrder0, 154);
      tiffField0.dump();
      assertEquals(154, tiffField0.getSortHint());
      assertEquals(154, tiffField0.getDirectoryType());
      assertEquals(154, tiffField0.getTag());
      assertEquals(154, tiffField0.getOffset());
  }
}
