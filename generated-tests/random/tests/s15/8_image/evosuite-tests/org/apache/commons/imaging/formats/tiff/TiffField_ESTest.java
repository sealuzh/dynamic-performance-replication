/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:14:54 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 1135, fieldTypeShort0, 32L, 32L, byteArray0, byteOrder0, (byte) (-7));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(255, int0);
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals(133, tiffField0.getTag());
      assertEquals(1135, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)48);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(905, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(905, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1716, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1597), (-1597), fieldTypeLong0, 2401L, (-1276L), byteArray0, byteOrder0, 1276);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1597), tiffField0.getTag());
      assertEquals((-1276), tiffField0.getOffset());
      assertEquals((-1597), tiffField0.getDirectoryType());
      assertEquals(1276, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 255L, (-2147483648L), byteArray0, byteOrder0, 3461);
      int int0 = tiffField0.getSortHint();
      assertEquals(3461, int0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 44L, byteArray0, byteOrder0, (byte)84);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(44, int0);
      assertEquals(84, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (byte)50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-844), (-844), fieldTypeRational0, 2088L, (-844), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-844), int0);
      assertEquals((-844), tiffField0.getOffset());
      assertEquals((-844), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1717986918, 50, fieldTypeRational0, 1717986918, 1717986918, byteArray0, (ByteOrder) null, (-1364));
      tiffField0.getByteOrder();
      assertEquals((-1364), tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 37396, fieldTypeShort0, (-2025L), (-8589934592L), (byte[]) null, byteOrder0, 1603);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1411, 0, fieldTypeDouble0, (-1847L), (-1847L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-250), "Missing value: ");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-250), (-250), fieldTypeRational0, (-250), (-250), byteArray0, byteOrder0, (byte)20);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Missing value: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Missing value: ");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1352, 1352, fieldTypeByte0, (-3892L), (-1L), byteArray0, byteOrder0, 2146993018);
      tiffField0.getByteOrder();
      assertEquals(1352, tiffField0.getDirectoryType());
      assertEquals(1352, tiffField0.getTag());
      assertEquals(2146993018, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 255L, (-2147483648L), byteArray0, byteOrder0, 3461);
      tiffField0.getByteArrayValue();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(3461, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "FPTyRDL?<}N'z");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)109);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (-157), fieldTypeRational0, 1091L, (-2326L), byteArray0, byteOrder0, 2129129086);
      tiffField0.getFieldType();
      assertEquals(2129129086, tiffField0.getSortHint());
      assertEquals(1880, tiffField0.getTag());
      assertEquals((-2326), tiffField0.getOffset());
      assertEquals((-157), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 255L, (-2147483648L), byteArray0, byteOrder0, 3461);
      tiffField0.getValue();
      assertEquals(3461, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-4068L), byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-4068), tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147432499, (-2147483645), fieldTypeLong0, (-2147483645), 1356L, byteArray0, byteOrder0, (byte)118);
      int int0 = tiffField0.getTag();
      assertEquals(1356, tiffField0.getOffset());
      assertEquals(2147432499, int0);
      assertEquals(118, tiffField0.getSortHint());
      assertEquals((-2147483645), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-35), fieldTypeByte0, (-937L), 0L, byteArray0, byteOrder0, (-2513));
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-937L), long0);
      assertEquals((-35), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-2513), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-4246L), byteArray0, byteOrder0, 2336);
      tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2336, tiffField0.getSortHint());
      assertEquals((-4246), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3585, "w+*KsF=/=05,Kz");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), 779, fieldTypeAscii0, 400L, 3585, byteArray0, byteOrder0, (-1982292597));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)48);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(905, 0, fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147432499, (-2147483645), fieldTypeLong0, (-2147483645), 1356L, byteArray0, byteOrder0, (byte)118);
      tiffField0.getIntValueOrArraySum();
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(2147432499, tiffField0.getTag());
      assertEquals((-2147483645L), tiffField0.getCount());
      assertEquals((-2147483645), tiffField0.getDirectoryType());
      assertEquals(1356, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-844), (-844), fieldTypeRational0, 2088L, (-844), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-844), tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(2088L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals((-844), tiffField0.getTag());
      assertEquals((-844), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146993018, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147281454), 2146993018, fieldTypeFloat0, (-2147281454), (-2147281454), byteArray0, byteOrder0, 1710);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@10a3ecec for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 2, (-7488L), byteArray0, byteOrder0, 3);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4865daa9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(345, 345, fieldTypeFloat0, 345, 1451L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(345L, tiffField0.getCount());
      assertEquals(345, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(345, tiffField0.getDirectoryType());
      assertEquals(1451, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147432499, (-2147483645), fieldTypeLong0, (-2147483645), 1356L, byteArray0, byteOrder0, (byte)118);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147432499, tiffField0.getTag());
      assertEquals((-2147483645L), tiffField0.getCount());
      assertEquals(118, tiffField0.getSortHint());
      assertEquals((-2147483645), tiffField0.getDirectoryType());
      assertEquals(1356, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1610612735), "");
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1610612735), (-1610612735), fieldTypeShort0, 2104L, (-1L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2104L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals((-1610612735), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1568), (-1568), fieldTypeDouble0, 2285L, (-267L), byteArray0, byteOrder0, 2073432487);
      tiffField0.getDoubleArrayValue();
      assertEquals(2073432487, tiffField0.getSortHint());
      assertEquals((-267), tiffField0.getOffset());
      assertEquals(2285L, tiffField0.getCount());
      assertEquals((-1568), tiffField0.getDirectoryType());
      assertEquals((-1568), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2002, 101, fieldTypeLong0, 1L, 2002, byteArray0, byteOrder0, (-1908874352));
      tiffField0.getDoubleArrayValue();
      assertEquals(2002, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2002, tiffField0.getTag());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals((-1908874352), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "FPTyRDL?<}N'z");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)109);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (-157), fieldTypeRational0, 1091L, (-2326L), byteArray0, byteOrder0, 2129129086);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2129129086, tiffField0.getSortHint());
      assertEquals((-157), tiffField0.getDirectoryType());
      assertEquals(1880, tiffField0.getTag());
      assertEquals((-2326), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1091L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1717986917), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 156, fieldTypeFloat0, 156, 0L, byteArray0, byteOrder0, (byte)1);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2943ee8b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 841, fieldTypeShort0, (-1717986917), 841, byteArray0, byteOrder0, 33550);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(841, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals((-1717986917L), tiffField0.getCount());
      assertEquals(841, tiffField0.getDirectoryType());
      assertEquals(33550, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "FPTyRDL?<}N'z");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)109);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (-157), fieldTypeRational0, 1091L, (-2326L), byteArray0, byteOrder0, 2129129086);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeLong0, (-1717986917), 2147483647L, byteArray0, byteOrder0, (byte) (-1));
      assertEquals(1717986924, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1717986917L), tiffField0.getCount());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2002, 101, fieldTypeLong0, 1L, 2002, byteArray0, byteOrder0, (-1908874352));
      tiffField0.getIntArrayValue();
      assertEquals(2002, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(2002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 44L, byteArray0, byteOrder0, (byte)84);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(44, tiffField0.getOffset());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 1135, fieldTypeShort0, 32L, 32L, byteArray0, byteOrder0, (byte) (-7));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@264e368
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146993018, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147281454), 2146993018, fieldTypeFloat0, (-2147281454), (-2147281454), byteArray0, byteOrder0, 1710);
      String string0 = tiffField0.getTagName();
      assertEquals((-2147281454), tiffField0.getOffset());
      assertEquals("Unknown Tag (0x800315d2)", string0);
      assertEquals(1710, tiffField0.getSortHint());
      assertEquals(2146993018, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50740, 50740, fieldTypeShort0, (-1L), 1L, byteArray0, (ByteOrder) null, 2657);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals("DNGPrivateData", string0);
      assertEquals(50740, tiffField0.getTag());
      assertEquals(2657, tiffField0.getSortHint());
      assertEquals(50740, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeLong0, (-1717986917), 2147483647L, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Unknown Tag (0x9999999b)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2, "0uFb?qf&EEaAUYU%Q");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2, 0, fieldTypeFloat0, 2, 2147483647L, byteArray0, byteOrder0, 1474);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0", string0);
      assertEquals(1474, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 255L, (-2147483648L), byteArray0, byteOrder0, 3461);
      tiffField0.dump();
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(3461, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-573), "Y~I[^fPWf&y");
      byte[] byteArray0 = new byte[21];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-573), (-573), fieldTypeDouble0, 172L, 71L, byteArray0, byteOrder0, (byte) (-60));
      String string0 = tiffField0.toString();
      assertEquals((-573), tiffField0.getDirectoryType());
      assertEquals((-60), tiffField0.getSortHint());
      assertEquals(71, tiffField0.getOffset());
      assertEquals(1376, tiffField0.getBytesLength());
      assertEquals("-573 (0xfffffdc3: Unknown Tag): 0.0, 0.0 (172 Y~I[^fPWf&y)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1332), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-487), 815, fieldTypeLong0, 11068L, (-1332), byteArray0, byteOrder0, (byte)83);
      File file0 = MockFile.createTempFile("XBe>&h^r$%v", "XBe>&h^r$%v");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50L, file0.length());
      assertEquals((-487), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 1135, fieldTypeShort0, 32L, 32L, byteArray0, byteOrder0, (byte) (-7));
      String string0 = tiffField0.toString();
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals("133 (0x85: Unknown Tag): 0, 0, 0 (32 Short)", string0);
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1135, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1409, (-2147483646), fieldTypeAscii0, 1409, (-2147483646), byteArray0, byteOrder0, (byte)90);
      tiffField0.toString();
      assertEquals(1409, tiffField0.getBytesLength());
      assertEquals(1409, tiffField0.getTag());
      assertEquals(1409L, tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getOffset());
      assertEquals(90, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3585, "w+*KsF=/=05,Kz");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-40);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte) (-31);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)50;
      byteArray0[7] = (byte) (-51);
      TiffField tiffField0 = new TiffField((-1982292597), 779, fieldTypeAscii0, 400L, 3585, byteArray0, byteOrder0, (-1982292597));
      tiffField0.toString();
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals(400L, tiffField0.getCount());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(3585, tiffField0.getOffset());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(779, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-4068L), byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-4068), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3380, 4, fieldTypeShort0, 1815L, 1815L, byteArray0, byteOrder0, 3380);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(4, (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(3380, tiffField0.getTag());
      assertEquals(3380, tiffField0.getSortHint());
      assertEquals(1815, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2002, 101, fieldTypeLong0, 1L, 2002, byteArray0, byteOrder0, (-1908874352));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(2002, tiffField0.getTag());
      assertEquals(2002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "FPTyRDL?<}N'z");
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)109);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (-157), fieldTypeRational0, 1091L, (-2326L), byteArray0, byteOrder0, 2129129086);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-157), tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(2129129086, tiffField0.getSortHint());
      assertEquals((-2326L), tiffElement0.offset);
      assertEquals(1880, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2002, 101, fieldTypeLong0, 1L, 2002, byteArray0, byteOrder0, (-1908874352));
      tiffField0.getFieldTypeName();
      assertEquals(2002, tiffField0.getOffset());
      assertEquals(2002, tiffField0.getTag());
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(101, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146993018, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147281454), 2146993018, fieldTypeFloat0, (-2147281454), (-2147281454), byteArray0, byteOrder0, 1710);
      int int0 = tiffField0.getOffset();
      assertEquals((-2147281454), int0);
      assertEquals(1710, tiffField0.getSortHint());
      assertEquals((-2147281454), tiffField0.getTag());
      assertEquals(2146993018, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2146993018, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147281454), 2146993018, fieldTypeFloat0, (-2147281454), (-2147281454), byteArray0, byteOrder0, 1710);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2146993018, int0);
      assertEquals(1710, tiffField0.getSortHint());
      assertEquals((-2147281454), tiffField0.getOffset());
      assertEquals((-2147281454), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeLong0, (-1717986917), 2147483647L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2002, 101, fieldTypeLong0, 1L, 2002, byteArray0, byteOrder0, (-1908874352));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2002 (0x7d2: Unknown Tag): ", string0);
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(2002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-4246L), byteArray0, byteOrder0, 2336);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-4246), tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(2336, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 44L, byteArray0, byteOrder0, (byte)84);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2255), 50216);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(44, tiffField0.getOffset());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
  }
}
