/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:31:54 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      assertEquals(1734, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(1734);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      long long0 = classReader0.readLong(4);
      assertEquals(214758394368L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readLong((-22));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -22
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.getSuperName();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newFieldItem("wheel/asm/ClassWriter", "v(iCy_?)D?mPl{Z~P", "wheel/asm/ClassWriter");
      classWriter0.newMethodItem("wheel/asm/ClassWriter", "wheel/asm/ClassWriter", "wheel/asm/ClassWriter", true);
      classReader0.accept((ClassVisitor) classWriter0, 143);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      classReader0.getSuperName();
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1365));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(139);
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute0 = new Attribute("Kst1O");
      Attribute attribute1 = attribute0.read(classReader0, 1274, 127, (char[]) null, 127, (Label[]) null);
      attributeArray0[0] = attribute1;
      Attribute attribute2 = new Attribute("");
      attributeArray0[1] = attribute2;
      Attribute attribute3 = new Attribute((String) null);
      attributeArray0[2] = attribute3;
      Attribute attribute4 = attribute3.next;
      attributeArray0[3] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader0.readLong(9);
      classReader0.readInt(9);
      // Undeclared exception!
      try { 
        classReader0.readClass(9, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "wheel.asm.AnnotationWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassVisitor classVisitor0 = null;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 60);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NameFileFilter");
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
      assertEquals(1274, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      int int0 = 251658240;
      // Undeclared exception!
      try { 
        classReader0.getItem(251658240);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 251658240
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(133);
      Attribute[] attributeArray0 = new Attribute[4];
      Attribute attribute0 = new Attribute("Kst1O");
      Attribute attribute1 = attribute0.read(classReader0, 5, 127, (char[]) null, 127, (Label[]) null);
      attributeArray0[0] = attribute1;
      Attribute attribute2 = new Attribute("");
      attributeArray0[1] = attribute2;
      Attribute attribute3 = new Attribute((String) null);
      attributeArray0[2] = attribute3;
      Attribute attribute4 = attribute3.next;
      attributeArray0[3] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, (-384));
      classReader0.readLong(9);
      classReader0.readInt(9);
      // Undeclared exception!
      try { 
        classReader0.readClass(9, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-6);
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte) (-21);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-6), 83);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-100);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-25);
      byteArray0[6] = (byte) (-22);
      byte byte0 = (byte)35;
      byteArray0[7] = (byte)35;
      byteArray0[8] = (byte)115;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "Jze<A~k@";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Jze<A~k@");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-36);
      byte byte2 = (byte)108;
      byteArray0[6] = (byte)108;
      byteArray0[7] = (byte)13;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(132);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = 'G';
      charArray0[2] = '|';
      charArray0[3] = 'n';
      charArray0[4] = '/';
      String[] stringArray0 = classReader0.getInterfaces();
      charArray0[6] = '@';
      classReader0.readConst(255, charArray0);
      classReader0.getInterfaces();
      classReader0.readShort(2);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      classReader0.readByte(2);
      classReader0.readInt(1);
      String[] stringArray1 = classReader0.getInterfaces();
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getAccess();
      int int0 = 259;
      classReader0.getSuperName();
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      charArray0[1] = '[';
      charArray0[2] = 'k';
      // Undeclared exception!
      try { 
        classReader0.readClass(259, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("InnerClasses");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("6>3.piWU");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "Signature";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Signature");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byte byte0 = (byte)54;
      byteArray0[1] = (byte)54;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      ClassReader classReader0 = new ClassReader(bufferedInputStream0);
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 59;
      int int1 = 31;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 59, 31);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte) (-76);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)80, (byte)80);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("SourceFile");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
