/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:26:36 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.javathena.core.data.Excecutable;
import org.javathena.core.data.IParse;
import org.javathena.core.data.Socket_data;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      int int0 = 1692;
      // Undeclared exception!
      try { 
        MySQLConfig.sql_config_read((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConfigurationManagement.setAccess_denynum((-1));
      String string0 = "reg_db";
      Login.login_log("reg_db");
      Login login0 = new Login();
      String string1 = "ApHxd^Ak";
      // Undeclared exception!
      try { 
        login0.parse_console("ApHxd^Ak");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login.getDbManagemtType();
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      Login login0 = new Login();
      Login.mmo_auth_initTXT();
      login0.getServer_fd();
      Login.showTab(byteArray0);
      // Undeclared exception!
      try { 
        login0.parse_console("jGpGD2b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login.logUnknownPackets((Socket_data) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getByName((String) null);
      login0.check_ip(inetAddress0);
      int int0 = login0.getAuth_num();
      assertEquals(0, login0.getAuth_max());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      Login.setPASSWORDENC((-2212));
      ConfigurationManagement.setAccess_denynum((-636));
      Login.mmo_auth_initTXT();
      // Undeclared exception!
      try { 
        Login.login_log("conf/subnet_athena.conf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)0;
      Login login0 = new Login();
      Login.showTab(byteArray0);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      Login.mmo_auth_syncTXT();
      Login.mmo_auth_syncXML();
      byte[] byteArray0 = new byte[0];
      try { 
        MockInetAddress.getByAddress("conf/subnet_athena.conf", byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: []
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      login0.getAuth_max();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("", 2);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@4069e0ad
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      StringWriter stringWriter0 = new StringWriter(2000000);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "conf/subnet_athena.conf", objectArray0);
      login0.setOut(printWriter0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login login0 = new Login();
      Login.End login_End0 = login0.new End();
      Login.mmo_auth_syncXML();
      login0.setAuth_max((-636));
      login0.setAuth_max((-636));
      ConfigurationManagement.setAccess_denynum((-636));
      Login.mmo_auth_initTXT();
      login0.save_config_in_log();
      Login.login_log("conf/subnet_athena.conf");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.lesslessAuth_before_save_file();
      int int0 = login0.auth_max;
      login0.setAuth_max((-819));
      ConfigurationManagement.setAccess_denynum(2);
      Login.mmo_auth_initTXT();
      MySQLConfig.setLogin_server_db("k-=RA</YJr6oIK?'!u");
      login0.save_config_in_log();
      ConfigurationManagement.setAuth_before_save_file(30);
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        login0.parse_console("OFF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login login0 = new Login();
      login0.check_ipmask((-1212), "ET>PQU>C}F");
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("\n\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      int[] intArray0 = new int[7];
      int int0 = 109;
      Socket_data socket_data0 = new Socket_data((Socket) null);
      // Undeclared exception!
      try { 
        login0.parse_admin(3, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      Login login0 = new Login();
      login0.getServer_fd();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login0.setAuth_max((byte)55);
      ConfigurationManagement.setAccess_denynum((byte)0);
      Login.mmo_auth_initTXT();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf", "conf/subnet_athena.conf");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // conf/subnet_athena.conf
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)55;
      byteArray0[0] = (byte)55;
      Login.setPASSWORDENC((byte)55);
      Login.showTab(byteArray0);
      int int0 = Calendar.UNDECIMBER;
      MockSocket mockSocket0 = new MockSocket();
      mockSocket0.setReuseAddress(true);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        Login.version(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Login.End login_End0 = login0.new End();
      Login.mmo_auth_syncXML();
      Login.End login_End1 = login0.new End();
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Login login0 = new Login();
      Login.showTab(byteArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 30;
      intArray0[1] = 30;
      intArray0[2] = 20;
      login0.setServer_fd(intArray0);
      login0.getLog_fp();
      Login.showTab(byteArray0);
      Login.getPASSWORDENC();
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      login0.save_config_in_log();
      Login.login_log("PwyN%%MWL?b");
      Login.mmo_auth_initTXT();
      Login.mmo_auth_initTXT();
      Proxy proxy1 = Proxy.NO_PROXY;
      MockSocket mockSocket1 = new MockSocket(proxy0);
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromAdmin0);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      MockSocket mockSocket1 = new MockSocket();
      Socket_data socket_data1 = new Socket_data(mockSocket0);
      socket_data1.getFunc_send();
      socket_data0.setFunc_recv((Excecutable) null);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      login0.yesNoOnOffToBoolean("NO");
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("NO", 9986, inetAddress0, 2000000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2000000
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      login0.setAuth_max((-636));
      login0.check_auth_sync();
      MockFile mockFile0 = new MockFile("conf/subnet_athena.conf", "P:D");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      Login.End login_End0 = login0.new End();
      login_End0.toString();
      // Undeclared exception!
      try { 
        mockPrintWriter0.append((CharSequence) "Thread[MockThread-1,5,Test_Execution_Group]", 105, 4609);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.mmo_auth_initTXT();
      login0.parse_console("jGpGD2b");
      File file0 = login0.getLog_fp();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      login0.yesNoOnOffToBoolean("OFF");
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket("OFF", 9986, inetAddress0, 2000000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:2000000
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter");
      Login login0 = new Login();
      login0.getServer_fd();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login0.setAuth_max((byte)55);
      ConfigurationManagement.setAccess_denynum((byte)0);
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      Login login0 = new Login();
      login0.do_initXML();
      Login.mmo_auth_syncTXT();
      login0.getServer_fd();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login0.setAuth_max((byte)55);
      ConfigurationManagement.setAccess_denynum((byte)0);
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)46;
      Login login0 = new Login();
      login0.getOut();
      Login.showTab(byteArray0);
      // Undeclared exception!
      try { 
        login0.parse_console((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      login0.yesNoOnOffToBoolean("NO");
      login0.do_initXML();
      login0.getServer_fd();
      Login login1 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login1.setAuth_max(970);
      ConfigurationManagement.setAccess_denynum(100000000);
      Login.mmo_auth_initTXT();
      Login login2 = new Login();
      login2.setAuth_max(50);
      login2.setAuth_max(9966);
      ConfigurationManagement.setAccess_denynum((-64));
      Login.mmo_auth_initTXT();
      login2.save_config_in_log();
      login2.parse_console("status");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/log");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      UserManagement.addUserTXT("NO", "X", "NO", ';');
      Login login0 = new Login();
      login0.do_initTXT();
      Login.mmo_auth_syncTXT();
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      UserManagement.addUserTXT("conf/subnet_athena.conf", (String) null, "conf/subnet_athena.conf", 'o');
      login0.do_initTXT();
      Login.login_log("I7m]4+_");
      Login.mmo_auth_syncTXT();
      Login login1 = new Login();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Login login2 = new Login();
      Login login3 = new Login();
      Login login4 = new Login();
      login0.setServer_fd((int[]) null);
      MockSocket mockSocket0 = new MockSocket();
      login2.parse_console("/z+V/SVo=");
      Login login5 = new Login();
      Login login6 = new Login();
      // Undeclared exception!
      try { 
        login6.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/log");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      UserManagement.addUserTXT("XCo\"PQi3F?|", "conf/subnet_athena.conf", "kYqM!Ut#p*SO@KJ", ';');
      Login login1 = new Login();
      login1.do_initTXT();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      Login.mmo_auth_syncTXT();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Login login0 = new Login();
      login0.do_initXML();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int[] intArray0 = login0.getServer_fd();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login0.setAuth_max((byte)0);
      ConfigurationManagement.setAccess_denynum((byte)0);
      Login.mmo_auth_initTXT();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      mockPrintWriter0.println((float) 2000000);
      mockPrintWriter0.checkError();
      login0.setServer_fd(intArray0);
      String string0 = "shutdown";
      // Undeclared exception!
      try { 
        login0.parse_console("shutdown");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      Login login0 = new Login();
      login0.do_initXML();
      Login login1 = new Login();
      login1.getServer_fd();
      Login.ConnectionListener login_ConnectionListener0 = login1.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      Login.login_log("conf/subnet_athena.conf");
      login0.parse_console("- WITH THE IP SECURITY ORDER: 'ALLOW,DENY' (DENY IF NOT ALLOW). YOU AUTHORISE ALL IP.");
      Login login2 = new Login();
      login2.parse_console("help");
      String string0 = "knmbn8?ca25S~6";
      login2.parse_console("YES");
      login2.parse_console("YES");
      login2.parse_console("help");
      login0.getOut();
      login0.parse_console("&apos;");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      Login login1 = new Login();
      login0.do_initXML();
      FileSystemHandling.shouldAllThrowIOExceptions();
      login1.getServer_fd();
      Login login2 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login2.new ConnectionListener();
      login1.setAuth_max(100000000);
      ConfigurationManagement.setAccess_denynum(50);
      Login.mmo_auth_initTXT();
      login0.save_config_in_log();
      Login.login_log("~G");
      login1.parse_console("r@0}3@9Y6k");
      Login login3 = new Login();
      login2.parse_console("r@0}3@9Y6k");
      Login login4 = new Login();
      login4.parse_console("yF{if");
      Login login5 = new Login();
      login5.parse_console("alive");
      login0.getOut();
      String string0 = "org.javathena.login.Login";
      login5.parse_console("org.javathena.login.Login");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
