/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 02 21:05:10 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2), "?(Dubk.4@wo--");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)110;
      TiffField tiffField0 = new TiffField(2075, 1886, fieldTypeShort0, 1187, 1734L, byteArray0, byteOrder0, 970);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1734, tiffField0.getOffset());
      assertEquals(110, int0);
      assertEquals(2075, tiffField0.getTag());
      assertEquals(970, tiffField0.getSortHint());
      assertEquals(2374, tiffField0.getBytesLength());
      assertEquals(1886, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(41986, "l$5_D(rYJs27%EvN");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-126);
      byteArray0[4] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)23, 2147344535, fieldTypeRational0, 276L, (byte) (-126), byteArray0, byteOrder0, 3464);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(23, tiffField0.getTag());
      assertEquals(2147344535, tiffField0.getDirectoryType());
      assertEquals(1446, int0);
      assertEquals(3464, tiffField0.getSortHint());
      assertEquals((-126), tiffField0.getOffset());
      assertEquals(2208, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(41986, "l$5_D(rYJs27%EvN");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)23, 2147344535, fieldTypeRational0, 276L, (byte) (-126), byteArray0, byteOrder0, 3464);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(3464, tiffField0.getSortHint());
      assertEquals((-126), tiffField0.getOffset());
      assertEquals(2208, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getTag());
      assertEquals(2147344535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, 4, (-1279L), byteArray0, byteOrder0, 1422);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getTag());
      assertEquals(1422, tiffField0.getSortHint());
      assertEquals((-1279), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(22, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeRational0, 1832, (-2672L), byteArray0, byteOrder0, 8);
      tiffField0.dump();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2672), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(557, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-108), (byte)50, fieldTypeDouble0, (byte)92, 2095L, byteArray0, byteOrder0, 876);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(876, tiffField0.getSortHint());
      assertEquals(736, tiffField0.getBytesLength());
      assertEquals(2095, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-108), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1546), fieldTypeByte0, 4277L, 4277L, byteArray0, byteOrder0, 15);
      tiffField0.getValue();
      assertEquals((-1546), tiffField0.getDirectoryType());
      assertEquals(4277, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(4277, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(400, "?VD:_.I7~)Tt<Kv%");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(400, 400, fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, 13);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getTag());
      assertEquals(400, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41485, 41485, (FieldType) null, 41485, (-2107L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(41485, tiffField0.getDirectoryType());
      assertEquals(41485, int0);
      assertEquals((-2107), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-309), 2146263486, fieldTypeByte0.SHORT, 1932L, (-4317L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2146263486, tiffField0.getDirectoryType());
      assertEquals((-309), int0);
      assertEquals((-4317), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147358100, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)110;
      TiffField tiffField0 = new TiffField(2147358100, (-875), fieldTypeAscii0, 1959L, 3864L, byteArray0, byteOrder0, 814);
      String string0 = tiffField0.getStringValue();
      assertEquals(814, tiffField0.getSortHint());
      assertEquals(3864, tiffField0.getOffset());
      assertEquals((-875), tiffField0.getDirectoryType());
      assertEquals(1959, tiffField0.getBytesLength());
      assertEquals(2147358100, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1546), (-1717986917), (FieldType) null, 1L, (-1717986917), (byte[]) null, byteOrder0, 6);
      int int0 = tiffField0.getSortHint();
      assertEquals(6, int0);
      assertEquals((-1546), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(876, 2140709251, fieldTypeFloat0, 1052L, 2140709251, byteArray0, byteOrder0, (byte) (-124));
      int int0 = tiffField0.getSortHint();
      assertEquals(2140709251, tiffField0.getOffset());
      assertEquals(2140709251, tiffField0.getDirectoryType());
      assertEquals(876, tiffField0.getTag());
      assertEquals((-124), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)114, fieldTypeByte0, 1878, (byte)0, byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getOffset();
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-498), (-672), fieldTypeByte0, (-1L), (-1637L), byteArray0, byteOrder0, (byte) (-112));
      int int0 = tiffField0.getOffset();
      assertEquals((-498), tiffField0.getTag());
      assertEquals((-672), tiffField0.getDirectoryType());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals((-1637), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, (byte)1, fieldTypeByte0, (byte)1, (-2322), byteArray0, byteOrder0, 1001);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2322), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-90);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 2095, fieldTypeLong0, 252L, 1350L, byteArray0, byteOrder0, 2095);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2095, tiffField0.getDirectoryType());
      assertEquals(2095, tiffField0.getSortHint());
      assertEquals(1350, tiffField0.getOffset());
      assertEquals(1008, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)3, "[2{k>iQ=");
      TiffField tiffField0 = new TiffField(16, 2142074369, fieldTypeShort0, 1L, 1561L, byteArray0, byteOrder0, 16);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1561, tiffField0.getOffset());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(2142074369, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, (byte)1, fieldTypeByte0, (byte)1, (-2322), byteArray0, byteOrder0, 1003);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1003, tiffField0.getSortHint());
      assertEquals((-2322), tiffField0.getOffset());
      assertEquals(56, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-92);
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeByte0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-46));
      tiffField0.getIntValue();
      assertEquals((-46), tiffField0.getSortHint());
      assertEquals(1825, tiffField0.getDirectoryType());
      assertEquals(1825, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1832, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      tiffField0.getFieldTypeName();
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1832, tiffField0.getDirectoryType());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(1832, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeLong0, 13, 13, byteArray0, byteOrder0, 13);
      tiffField0.getFieldTypeName();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(301, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(301, 0, fieldTypeByte0, 301, (-1L), byteArray0, byteOrder0, (byte)117);
      tiffField0.getFieldTypeName();
      assertEquals(301, tiffField0.getTag());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41, (byte) (-1), (FieldType) null, (byte) (-126), (byte) (-104), byteArray0, byteOrder0, (byte) (-126));
      tiffField0.getFieldType();
      assertEquals(41, tiffField0.getTag());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-104), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "?(Dubk.4@wo--");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-515), "");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-515), (-515), fieldTypeLong0, (-515), 255L, byteArray0, byteOrder0, (byte)114);
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(114, tiffField0.getSortHint());
      assertEquals((-515), tiffField0.getTag());
      assertEquals((-515), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2), "?(Dubk.4@wo--");
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).FLOAT).SSHORT, 1L, 360L, byteArray0, byteOrder0, 5);
      tiffField0.getDoubleValue();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(360, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)43;
      TiffField tiffField0 = new TiffField(50829, 1, fieldTypeLong0.UNDEFINED, 1, 384L, byteArray0, byteOrder0, 2842);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50829, tiffField0.getTag());
      assertEquals(384, tiffField0.getOffset());
      assertEquals(2842, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-45);
      TiffField tiffField0 = new TiffField(1825, (-753), fieldTypeByte0, 1L, 1832L, byteArray0, (ByteOrder) null, (-766));
      tiffField0.getDoubleValue();
      assertEquals((-766), tiffField0.getSortHint());
      assertEquals((-753), tiffField0.getDirectoryType());
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1825, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(219, 219, fieldTypeAscii0.SRATIONAL, 219, 219, byteArray0, byteOrder0, 219);
      tiffField0.getDoubleArrayValue();
      assertEquals(219, tiffField0.getSortHint());
      assertEquals(219, tiffField0.getTag());
      assertEquals(219, tiffField0.getDirectoryType());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(1752, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34264, 34264, (FieldType) null, 34264, 600L, byteArray0, byteOrder0, 34712);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(34264, tiffField0.getTag());
      assertEquals(34264, int0);
      assertEquals(34712, tiffField0.getSortHint());
      assertEquals(600, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1546), fieldTypeByte0, 4277L, 4277L, byteArray0, byteOrder0, (-1431655782));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1431655782), tiffField0.getSortHint());
      assertEquals((-1546), int0);
      assertEquals(4277, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1546), fieldTypeByte0, 4277L, 4277L, byteArray0, byteOrder0, 15);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4277, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals((-1546), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2250), (-2250), fieldTypeRational0, (-1L), (-2250), byteArray0, byteOrder0, 324);
      tiffField0.getCount();
      assertEquals((-2250), tiffField0.getOffset());
      assertEquals(324, tiffField0.getSortHint());
      assertEquals((-2250), tiffField0.getTag());
      assertEquals((-2250), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2147483647), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50737, (-2147483647), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).SSHORT).LONG, (-2147483648L), 2274L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2147483647), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(50737, tiffField0.getTag());
      assertEquals(2274, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1832, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1832, tiffField0.getTag());
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(1832, tiffField0.getDirectoryType());
      assertEquals(1832, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2843L), 2165L, byteArray0, byteOrder0, 18246);
      tiffField0.getByteOrder();
      assertEquals(18246, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2165, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1832, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)50, fieldTypeByte0, 446L, (-1629L), byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getByteArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(446, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1629), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(557, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, (byte)0, fieldTypeDouble0, (byte)0, 557, byteArray0, byteOrder0, 1);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2199), (-2199), (FieldType) null, 1L, 0L, (byte[]) null, byteOrder0, 3212);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("s!s)l");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-257), 2140709251, fieldTypeFloat0, 2276L, 2147483647L, byteArray0, byteOrder0, 677);
      MockFile mockFile0 = new MockFile("BX*R", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(677, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(46L, mockFile0.length());
      assertEquals(2140709251, tiffField0.getDirectoryType());
      assertEquals(9104, tiffField0.getBytesLength());
      assertEquals((-257), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(287, 287, fieldTypeAscii0, 287, 287, (byte[]) null, byteOrder0, 287);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2741), (-2741), fieldTypeAscii0.SRATIONAL, (-2741), (-2741), byteArray0, byteOrder0, (-2741));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(258, 258, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, (byte) (-49));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0, 31, 31, (byte[]) null, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-38), (-38), fieldTypeAscii0.SRATIONAL, (-38), (-38), byteArray0, byteOrder0, (-38));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType((byte)9);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1), fieldType0, 561L, (-1459L), byteArray0, byteOrder0, 50832);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-872), (-872), fieldTypeAscii0, (-872), 255L, byteArray0, byteOrder0, (-872));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2371), "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2371), (-2371), fieldTypeDouble0, 1L, 3032L, byteArray0, byteOrder0, 125);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(219, 219, fieldTypeAscii0.SRATIONAL, 219, 219, (byte[]) null, byteOrder0, 219);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2838), (-2838), fieldTypeLong0.SHORT, (-2838), (-2838), byteArray0, byteOrder0, (-2838));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (-2260));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(219, 219, fieldTypeAscii0.SRATIONAL, 219, 219, (byte[]) null, byteOrder0, 219);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-162), (-162), fieldTypeByte0, (-162), (-162), (byte[]) null, byteOrder0, (-162));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(2766, 2766, fieldTypeByte0, (-2147483648L), 2766, byteArray0, (ByteOrder) null, 2766);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(40093, 65510, fieldTypeAscii0.SBYTE, 40093, (-778L), byteArray0, byteOrder0, (-1698));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65377, 65377, fieldTypeAscii0, 65377, 65377, (byte[]) null, byteOrder0, 65377);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeLong0.FLOAT, (byte) (-9), (byte) (-9), byteArray0, byteOrder0, (byte) (-9));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2765, 2765, fieldTypeByte0, 1L, 1L, byteArray0, (ByteOrder) null, 2765);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeRational0, 1L, 1, byteArray0, (ByteOrder) null, 32809);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(20, 20, (FieldType) null, 20, 20, byteArray0, byteOrder0, 20);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-4162), (-4162), fieldTypeByte0, (-4162), (-4162), byteArray0, (ByteOrder) null, (-4162));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0.SRATIONAL, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(40093, 2781, fieldTypeByte0, 2781, (-1829L), byteArray0, (ByteOrder) null, 2781);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1832, 1832, (FieldType) null, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeDouble0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1825);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4109, 4109, fieldTypeAscii0, 4109, 4109, (byte[]) null, byteOrder0, 4109);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[83];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-766), (-766), fieldTypeByte0, (-766), (-766), byteArray0, (ByteOrder) null, (-766));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1925), (-1925), fieldTypeAscii0, (-1925), (-2147483648L), byteArray0, byteOrder0, (-1925));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1946), (-1946), fieldTypeAscii0, (-1946), (-2147483648L), byteArray0, byteOrder0, (-1946));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(")");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, ")");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(232, 232, fieldTypeAscii0, 232, 232, byteArray0, byteOrder0, 232);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeAscii0, (-488L), 37, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-23), (byte) (-23), fieldTypeLong0.FLOAT, (byte) (-23), (byte) (-23), byteArray0, byteOrder0, (byte) (-23));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 1L, (-295L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1546), (-1717986917), (FieldType) null, 1L, (-1717986917), (byte[]) null, byteOrder0, 6);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("s!s)l");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, (byte)1, fieldTypeByte0, (byte)1, (-2322), byteArray0, byteOrder0, 1001);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(56, tiffField0.getTag());
      assertEquals((-2322), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1001, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1886, "... (");
      TiffField tiffField0 = new TiffField(1187, 2140709251, fieldTypeShort0, (byte)50, (byte)110, byteArray0, byteOrder0, (-2452));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2452), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(2140709251, tiffField0.getDirectoryType());
      assertEquals(110, tiffField0.getOffset());
      assertEquals(1187, tiffField0.getTag());
      assertEquals(100, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1832, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)50, fieldTypeByte0, 446L, (-1629L), byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1629), tiffField0.getOffset());
      assertEquals(446, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeLong0, 9, (-1478L), (byte[]) null, (ByteOrder) null, 9);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1847, 1847, fieldTypeFloat0, 1847, 1847, byteArray0, byteOrder0, 1847);
      tiffField0.getFieldType();
      assertEquals(1847, tiffField0.getDirectoryType());
      assertEquals(1847, tiffField0.getTag());
      assertEquals(1847, tiffField0.getOffset());
      assertEquals(1847, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 1L, (-295L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2785, 2785, fieldTypeByte0, 2785, 2785, (byte[]) null, (ByteOrder) null, 27);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1878, 1878, fieldTypeByte0, 1878, 1878, byteArray0, byteOrder0, (-2527));
      int int0 = tiffField0.getOffset();
      assertEquals(1878, tiffField0.getDirectoryType());
      assertEquals(1878, tiffField0.getTag());
      assertEquals((-2527), tiffField0.getSortHint());
      assertEquals(1878, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1546), (-1717986917), (FieldType) null, 1L, (-1717986917), (byte[]) null, byteOrder0, 6);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-1546), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1546), fieldTypeByte0, 4277L, 4277L, byteArray0, byteOrder0, (-1431655782));
      int int0 = tiffField0.getTag();
      assertEquals(4277, tiffField0.getOffset());
      assertEquals((-1546), tiffField0.getDirectoryType());
      assertEquals((-1431655782), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-103), fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1832, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1832, 2125344641, fieldTypeByte0, (-70L), (-2546L), byteArray0, byteOrder0, 1832);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-70), int0);
      assertEquals(1832, tiffField0.getTag());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(2125344641, tiffField0.getDirectoryType());
      assertEquals((-2546), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0.FLOAT, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1828), (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1832, (-1828), fieldTypeByte0, 1832, (-1828), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeDouble0, 25, 25, byteArray0, byteOrder0, 25);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1fc0b158 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeAscii0.SRATIONAL, 32, 32, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(411, 411, fieldTypeDouble0, 411, 411, byteArray0, byteOrder0, 411);
      tiffField0.getDoubleArrayValue();
      assertEquals(411, tiffField0.getOffset());
      assertEquals(411, tiffField0.getDirectoryType());
      assertEquals(3288, tiffField0.getBytesLength());
      assertEquals(411, tiffField0.getTag());
      assertEquals(411, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0.FLOAT, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(7, doubleArray0.length);
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0, (byte)8, (byte)8, byteArray0, (ByteOrder) null, (byte)8);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(7, doubleArray0.length);
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0.SSHORT, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      tiffField0.getDoubleArrayValue();
      assertEquals(1832, tiffField0.getTag());
      assertEquals(3664, tiffField0.getBytesLength());
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(1832, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeAscii0.SRATIONAL, 32, 32, byteArray0, byteOrder0, 32);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3da55692 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeDouble0, 8, 8, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7a3ee6f9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(7, intArray0.length);
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(232, 232, fieldTypeAscii0.SRATIONAL, 232, 232, byteArray0, byteOrder0, 232);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(219, 219, fieldTypeAscii0.SRATIONAL, 219, 219, byteArray0, byteOrder0, 219);
      tiffField0.getIntArrayValue();
      assertEquals(219, tiffField0.getDirectoryType());
      assertEquals(219L, tiffField0.getCount());
      assertEquals(219, tiffField0.getSortHint());
      assertEquals(219, tiffField0.getTag());
      assertEquals(219, tiffField0.getOffset());
      assertEquals(1752, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0.SSHORT, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0.SSHORT, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(3664, tiffField0.getBytesLength());
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(1832, tiffField0.getTag());
      assertEquals(1832, tiffField0.getDirectoryType());
      assertEquals(1832L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0.FLOAT, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@7babd01d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(266, 266, fieldTypeAscii0, 266, 266, byteArray0, byteOrder0, 266);
      String string0 = tiffField0.getStringValue();
      assertEquals(266, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(266, tiffField0.getTag());
      assertEquals(266, tiffField0.getOffset());
      assertEquals(266, tiffField0.getBytesLength());
      assertEquals(266, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0.FLOAT, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      String string0 = tiffField0.getTagName();
      assertEquals(8, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x8)", string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[146];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeDouble0, 272, 272, byteArray0, byteOrder0, 272);
      String string0 = tiffField0.getTagName();
      assertEquals(272, tiffField0.getTag());
      assertEquals(272, tiffField0.getOffset());
      assertEquals(272, tiffField0.getSortHint());
      assertEquals(272, tiffField0.getDirectoryType());
      assertEquals("Model", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0.SSHORT, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "G$>V;;+PFSl\u00039H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0.FLOAT, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      tiffField0.dump();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(275, 275, fieldTypeDouble0.UNDEFINED, 275, 275, byteArray0, byteOrder0, 275);
      String string0 = tiffField0.getValueDescription();
      assertEquals(275, tiffField0.getTag());
      assertEquals(275, tiffField0.getSortHint());
      assertEquals(275L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(275, tiffField0.getDirectoryType());
      assertEquals(275, tiffField0.getBytesLength());
      assertEquals(275, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1852, 1852, fieldTypeFloat0, 1852, 1852, byteArray0, byteOrder0, 1852);
      String string0 = tiffField0.toString();
      assertEquals(1852, tiffField0.getOffset());
      assertEquals("1852 (0x73c: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1852 Float)", string0);
      assertEquals(7408, tiffField0.getBytesLength());
      assertEquals(1852, tiffField0.getDirectoryType());
      assertEquals(1852, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeDouble0, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.dump();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[340];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1912, 4098, fieldTypeLong0, 1912, 4098, byteArray0, byteOrder0, 4098);
      String string0 = tiffField0.toString();
      assertEquals(7648, tiffField0.getBytesLength());
      assertEquals(4098, tiffField0.getDirectoryType());
      assertEquals(4098, tiffField0.getSortHint());
      assertEquals("1912 (0x778: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (85) (1912 IFD)", string0);
      assertEquals(4098, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[156];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0, 46, 46, byteArray0, byteOrder0, 46);
      String string0 = tiffField0.toString();
      assertEquals(46, tiffField0.getOffset());
      assertEquals("46 (0x2e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (46 Long)", string0);
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(275, 532, fieldTypeShort0, 275, 1L, byteArray0, byteOrder0, 275);
      String string0 = tiffField0.toString();
      assertEquals(275, tiffField0.getSortHint());
      assertEquals("275 (0x113: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (112) (275 SShort)", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(532, tiffField0.getDirectoryType());
      assertEquals(550, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(2824, 2824, fieldTypeByte0, 2824, 2824, byteArray0, (ByteOrder) null, 2824);
      String string0 = tiffField0.toString();
      assertEquals(2824, tiffField0.getSortHint());
      assertEquals(2824, tiffField0.getDirectoryType());
      assertEquals(2824, tiffField0.getBytesLength());
      assertEquals("2824 (0xb08: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (2824 Undefined)", string0);
      assertEquals(2824, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeAscii0, 70, 70, byteArray0, byteOrder0, 70);
      tiffField0.toString();
      assertEquals(70, tiffField0.getTag());
      assertEquals(70, tiffField0.getBytesLength());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(70L, tiffField0.getCount());
      assertEquals(70, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65105, 65105, fieldTypeAscii0, 65105, 65105, byteArray0, byteOrder0, 65105);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65105, tiffField0.getOffset());
      assertEquals(65105, tiffField0.getBytesLength());
      assertEquals(65105, tiffField0.getSortHint());
      assertEquals(65105, tiffField0.getTag());
      assertEquals(65105, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[233];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0.SSHORT, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      tiffField0.dump();
      assertEquals(1832L, tiffField0.getCount());
      assertEquals(1832, tiffField0.getTag());
      assertEquals(1832, tiffField0.getDirectoryType());
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(3664, tiffField0.getBytesLength());
      assertEquals(1832, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-95), (-95), fieldTypeFloat0, (-95), (-95), byteArray0, byteOrder0, (-95));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-95), 2147426410);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-95), tiffField0.getOffset());
      assertEquals((-95), tiffField0.getTag());
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals((-95), tiffField0.getDirectoryType());
      assertEquals((-380), tiffField0.getBytesLength());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65380, 65380, fieldTypeAscii0, (-1397L), (-1397L), byteArray0, byteOrder0, 65380);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65380, 65380);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(65380, tiffField0.getTag());
      assertEquals((-1397), tiffField0.getOffset());
      assertEquals(65380, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(65380, tiffField0.getSortHint());
      assertEquals((-1397), tiffField0.getBytesLength());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(2766, 2766, fieldTypeByte0, (-2147483648L), 2766, byteArray0, (ByteOrder) null, 2766);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(2766, tiffField0.getOffset());
      assertEquals(2766, tiffField0.getDirectoryType());
      assertEquals(2766, tiffField0.getSortHint());
      assertEquals(2766, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(428, 428, (FieldType) null, 0L, 428, (byte[]) null, byteOrder0, 428);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(133, 0, fieldTypeByte0, 133, 12640L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(12640, tiffField0.getOffset());
      assertEquals(133, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(133, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1546), fieldTypeByte0, (-1546), (-1546), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1546), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1546), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(1832, 1832, fieldTypeByte0, 1832, 1832, byteArray0, (ByteOrder) null, 1832);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1832 (0x728: Unknown Tag): ", string0);
      assertEquals(1832, tiffField0.getSortHint());
      assertEquals(1832, tiffField0.getOffset());
      assertEquals(1832, tiffField0.getBytesLength());
      assertEquals(1832, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(18, 39, (FieldType) null, 39, (-2147483648L), byteArray0, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0.SSHORT, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeLong0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8L, tiffElement0.offset);
      assertEquals(8, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
  }
}
