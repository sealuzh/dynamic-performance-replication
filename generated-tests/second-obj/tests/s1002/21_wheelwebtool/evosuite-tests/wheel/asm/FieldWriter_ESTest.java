/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:46:05 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      int int0 = Frame.DOUBLE;
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1582));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "RuntimeInvisibleAnotations", "RuntimeInvisibleAnotations", "RuntimeInvisibleAnotations", "RuntimeInvisibleAnotations");
      Attribute attribute0 = new Attribute("k8 9H\"id1ZdlbQ");
      fieldWriter0.getSize();
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnotations", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.lastField = fieldWriter0;
      classWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      classWriter0.lastField.visitAnnotation("RuntimeInvisibleAnnotations", false);
      Attribute attribute0 = new Attribute((String) null);
      classWriter0.lastField.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      Attribute attribute0 = new Attribute("k8 9H\"id1ZdlbQ");
      fieldWriter0.visitAttribute(attribute0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1556), "2d)sHb`20Fa!b3RHI^", "RuntimeInvisibleAnnotations", (String) null, fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      int int0 = Frame.DOUBLE;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("k8 9H\"id1ZdlbQ");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitEnd();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      classWriter0.newConst("RuntimeInvisibleAnnotations");
      classWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      MockJapaneseDate.now();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(1810);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-1556));
      classWriter0.addType("RuntimeInvisibleAnnotations");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      classWriter0.lastField = fieldWriter0;
      fieldWriter0.getSize();
      classWriter0.newLong(36);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      classWriter0.lastField.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "wheel.asm.Type", "wheel.asm.Type");
      int int0 = Frame.DOUBLE;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "wheel.asm.Type", "wheel.asm.Type");
      int int0 = Frame.DOUBLE;
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", true);
      fieldWriter0.put(byteVector0);
      int int1 = fieldWriter0.getSize();
      assertEquals(48, int1);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1556));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1556), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "wheel.asm.Type", "wheel.asm.Type");
      int int0 = Frame.DOUBLE;
      String[] stringArray0 = new String[0];
      classWriter0.visit(16777219, (-978), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "", stringArray0);
      classWriter0.visit((-1556), 7, "", "", "RuntimeInvisibleAnnotations", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = byteVector0.putByte(16777219);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.put(byteVector1);
      classWriter0.visitAnnotation("", true);
      fieldWriter1.put(byteVector1);
      fieldWriter1.getSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitEnd();
      int int1 = fieldWriter1.getSize();
      assertEquals(42, int1);
  }
}
