/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:15:12 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.iapi.services.io.FormatableHashtable;
import org.apache.derby.iapi.types.TypeId;
import org.apache.derby.impl.sql.compile.CreateAliasNode;
import org.apache.derby.impl.sql.compile.CreateIndexNode;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.bean.TypedPropertyMutator;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.Driver;
import org.h2.expression.Function;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = TypeId.CLOB_NAME;
      DBUtil.escape("h2.sortNullsHigh");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.nextLine(simpleResultSet0);
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("CLOB", false, false, false, false, (String) null, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'CLOB.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<jdbcDriver> class0 = jdbcDriver.class;
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("pZ9<", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = Function.LINK_SCHEMA;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      DBUtil.close((Connection) null);
      int int1 = CreateAliasNode.ROUTINE_SECURITY_DEFINER;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "eJsaT<\"3N)1NL=1CY", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.resetMonitors();
      DBUtil.checkReadOnly("", false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = DBUtil.available("DAYOFYEAR", (String) null, (String) null, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.getOpenPreparedStatementCount();
      DBUtil.getOpenStatementCount();
      DBUtil.escape("''*e9~`C");
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("''''*e9~`C", ">}w!g", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: ''''*e9~`C
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "H$S?0QKRm,YF";
      // Undeclared exception!
      try { 
        DBUtil.connect("H$S?0QKRm,YF", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'H$S?0QKRm,YF.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "org.databene.JDBC";
      DBUtil.existsEnvironment("org.databene.JDBC");
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("org.databene.JDBC", "", "");
      // Undeclared exception!
      try { 
        jdbcConnectionPool0.getConnection("", "");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.jdbcx.JdbcConnectionPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.getConnectData("string://");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      DBUtil.getOpenPreparedStatementCount();
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = null;
      stringArray0[4] = "";
      stringArray0[5] = null;
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = defaultDBTable0.getPrimaryKeyConstraint();
      DBUtil.equivalent(dBPrimaryKeyConstraint1, dBPrimaryKeyConstraint1);
      String string0 = "";
      Class<TypedPropertyMutator> class0 = TypedPropertyMutator.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      try { 
        DBUtil.runScript("", stringArray0[3], ';', (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      ErrorHandler.getDefault();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("8l %zWSI|8x8h", "*==@", "*==@", "*==@");
      DBUtil.close((Connection) null);
      try { 
        DBUtil.getMetaData((Connection) null, "ymmVWq|oi-'fB>", "*==@", true, true, true, false, "\"gu;t\u0000N", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil.getOpenPreparedStatementCount();
      CompositeDBObject<DefaultDatabase> compositeDBObject0 = (CompositeDBObject<DefaultDatabase>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/[|#MH0o<k,3s;.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "y\"u^l95@Nc");
      TableContainer tableContainer0 = new TableContainer("y\"u^l95@Nc", compositeDBObject0);
      tableContainer0.getTables();
      DBUtil.dependencyOrderedTables(tableContainer0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("[|#MH0o<k,3s;", false, true, true, false, "[|#MH0o<k,3s;", true, false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 12
         // [|#MH0o<k,3s;
         //             ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "i_YfaKBgRvQ~\\Mwl";
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "i_YfaKBgRvQ~Mwl", true, 25, 25, 90128);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: i_YfaKBgRvQ~Mwl
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      DBUtil.executeUpdate("", (Connection) null);
      try { 
        DBUtil.connect("", "EoV!3xs#:3jGrWb?`", "JDBC version ", "JDBC version ", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      DBUtil.resetMonitors();
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("#]!+U1Q8tQX", "--} '2=oAR+'/zi9X", "SvbL<2D", "i_YfaKBgRvQ~Mwl", "SvbL<2D", "i_YfaKBgRvQ~Mwl");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting --} '2=oAR+'/zi9X failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("W'D$*&_", "", "STRENGTH", "STRENGTH");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/[|#MH0o<k,3s;.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "No JDBC URL specified");
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("org.apache.derby.impl.io.JarStorageFactory", compositeDBObject0);
      tableContainer0.getTables();
      DBUtil.dependencyOrderedTables(tableContainer0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      try { 
        DBUtil.getMetaData("[|#MH0o<k,3s;", false, false, true, false, "No JDBC URL specified", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.getOpenPreparedStatementCount();
      DBUtil.close((Connection) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", (String) null, "_4=vI", "No JDBC URL specified", "No JDBC URL specified", (String) null);
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      DBUtil.executeUpdate((String) null, (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("No JDBC URL specified", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "8l %zWSI|8x:h";
      CompositeDBObject<DBNotNullConstraint> compositeDBObject0 = (CompositeDBObject<DBNotNullConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("Error closing connection", 'A', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "(uc3k_a";
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("(uc3k_a", '(', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "\\l:y(]";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.query("l:y(]", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/[|#MH0o<k,3s;.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Aj)hO.%x$eMY=w_S%s");
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      tableContainer0.getSchema();
      tableContainer0.getTables();
      DBUtil.dependencyOrderedTables(tableContainer0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      try { 
        DBUtil.getMetaData("[|#MH0o<k,3s;", true, true, true, true, (String) null, true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/[|#MH0o<k,3s;.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Aj)hO.%x$eMY=w_S%s");
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("", compositeDBObject0);
      tableContainer0.getSchema();
      DBUtil.dependencyOrderedTables(tableContainer0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "Expected exactly one row, found more.", "Aj)hO.%x$eMY=w_S%s", "4E]SyA\u0000-0|3>Tk`");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "(&uc3k_a&";
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.countRows("(&uc3k_a&", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet0);
      DBUtil.nextLine(simpleResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }
}
