/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 18:16:45 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)97;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SRATIONAL).SHORT, 4L, 4L, byteArray0, byteOrder0, (-2147185509));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2147185509), tiffField0.getSortHint());
      assertEquals(97, int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(97, tiffField0.getTag());
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1186, (-1185), fieldTypeDouble0, (-642L), (-1203L), byteArray0, (ByteOrder) null, (-2513));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(1186, tiffField0.getTag());
      assertEquals((-1185), tiffField0.getDirectoryType());
      assertEquals((-2513), tiffField0.getSortHint());
      assertEquals((-1203), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 1988, fieldTypeShort0, 0L, 1L, byteArray0, byteOrder0, 898);
      tiffField0.dump();
      assertEquals(40092, tiffField0.getTag());
      assertEquals(1988, tiffField0.getDirectoryType());
      assertEquals(898, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-3075), fieldTypeShort0, (-215), (-886L), byteArray0, byteOrder0, 50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3075), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-886), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 1041, fieldTypeRational0, 8900L, 960L, byteArray0, byteOrder0, 1041);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
      assertEquals(960, tiffField0.getOffset());
      assertEquals(1041, tiffField0.getSortHint());
      assertEquals(1041, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1840700253), fieldTypeRational0, 1L, (byte)1, byteArray0, byteOrder0, 32898);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1840700253), tiffField0.getDirectoryType());
      assertEquals(32898, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2745), 377, fieldTypeRational0, (-2745), 4943L, byteArray0, byteOrder0, (-2745));
      int int0 = tiffField0.getTag();
      assertEquals((-2745), tiffField0.getSortHint());
      assertEquals(4943, tiffField0.getOffset());
      assertEquals(377, tiffField0.getDirectoryType());
      assertEquals((-2745), int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte) (-79);
      byteArray0[6] = (byte) (-79);
      TiffField tiffField0 = new TiffField(1394, (-537), fieldTypeDouble0.ASCII, 2792L, 1633L, byteArray0, (ByteOrder) null, 1924);
      String string0 = tiffField0.getStringValue();
      assertEquals(1633, tiffField0.getOffset());
      assertEquals((-537), tiffField0.getDirectoryType());
      assertEquals(2792, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1924, tiffField0.getSortHint());
      assertEquals(1394, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2147065929), 0, fieldTypeRational0, (-2501L), 729, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-2147065929), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(729, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1186, (-1185), fieldTypeDouble0, (-642L), (-1203L), byteArray0, (ByteOrder) null, (-2513));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1185), tiffField0.getDirectoryType());
      assertEquals((-2513), int0);
      assertEquals(1186, tiffField0.getTag());
      assertEquals((-1203), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147242384, "YUx !GcS9T3#@Zr");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(144, 2147387490, fieldTypeAscii0, 2147242384, 4L, byteArray0, byteOrder0, 144);
      int int0 = tiffField0.getOffset();
      assertEquals(4, int0);
      assertEquals(2147387490, tiffField0.getDirectoryType());
      assertEquals(144, tiffField0.getTag());
      assertEquals(144, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (-2147483646), fieldTypeRational0, 657L, (-2147483646), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2147483646), int0);
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)97;
      byteArray0[4] = (byte)97;
      TiffField tiffField0 = new TiffField((byte) (-7), 1195, fieldTypeRational0, (byte)97, (-2894L), byteArray0, byteOrder0, 2560);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2894), tiffField0.getOffset());
      assertEquals(1195, tiffField0.getDirectoryType());
      assertEquals(2560, tiffField0.getSortHint());
      assertEquals(776, tiffField0.getBytesLength());
      assertEquals((-7), tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-28);
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34023, (-1208), fieldTypeByte0, 1L, 52L, byteArray0, byteOrder0, (-1208));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1208), tiffField0.getSortHint());
      assertEquals((-1208), tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getOffset());
      assertEquals(34023, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)68;
      TiffField tiffField0 = new TiffField((byte)68, 1, fieldTypeFloat0, 1, (-700L), byteArray0, byteOrder0, 2312);
      tiffField0.getIntValue();
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2312, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-700), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "DataType");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-27);
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 1L, 0L, byteArray0, (ByteOrder) null, (byte)99);
      tiffField0.getIntValue();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1027), (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1087, 2146200035, fieldTypeRational0, (-1027), 364L, (byte[]) null, byteOrder0, 96);
      tiffField0.getFieldTypeName();
      assertEquals(2146200035, tiffField0.getDirectoryType());
      assertEquals(364, tiffField0.getOffset());
      assertEquals(1087, tiffField0.getTag());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1744, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 1744, 1744, byteArray0, byteOrder0, (byte) (-122));
      tiffField0.getFieldTypeName();
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1744, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, (String) null);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (-1089), fieldTypeShort0, (-1609), 0, byteArray0, byteOrder0, (byte)18);
      tiffField0.getFieldType();
      assertEquals((-1089), tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3715), "BrightnessValue");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3715), 1180, fieldTypeRational0, (-2147483648L), (-1L), byteArray0, byteOrder0, 71);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals((-3715), tiffField0.getTag());
      assertEquals(1180, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)68, 1, fieldTypeFloat0, 1, (-700L), byteArray0, byteOrder0, 2312);
      tiffField0.getFieldType();
      assertEquals(68, tiffField0.getTag());
      assertEquals(2312, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-700), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)115;
      TiffField tiffField0 = new TiffField((byte)68, 1, fieldTypeFloat0, 1, (-700L), byteArray0, byteOrder0, 2312);
      tiffField0.getDoubleValue();
      assertEquals((-700), tiffField0.getOffset());
      assertEquals(2312, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      byteArray0[0] = (byte) (-69);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 401, fieldTypeShort0.UNDEFINED, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(401, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 65569, (byte) (-79), byteArray0, byteOrder0, (byte)97);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals((-79), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1186, (-1185), fieldTypeDouble0, (-642L), (-1203L), byteArray0, (ByteOrder) null, (-2513));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1203), tiffField0.getOffset());
      assertEquals((-2513), tiffField0.getSortHint());
      assertEquals((-1185), int0);
      assertEquals(1186, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(32769, " (0x");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50780, (byte)0, fieldTypeRational0, 0L, 1555L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(50780, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1555, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-718), fieldTypeFloat0, 50, 1L, byteArray0, byteOrder0, 1212);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1212, tiffField0.getSortHint());
      assertEquals((-718), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, (-2256L), (-2256L), byteArray0, byteOrder0, (-2433));
      tiffField0.getCount();
      assertEquals((-2433), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2256), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 41495, fieldTypeRational0, 0, 1019L, byteArray0, byteOrder0, 41495);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1019, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(41495, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(41495, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3194, "r*Y'CsD-HQ_ooHU");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3194, 3194, fieldTypeFloat0, (-214L), 0L, byteArray0, byteOrder0, (byte)97);
      int int0 = tiffField0.getBytesLength();
      assertEquals(3194, tiffField0.getDirectoryType());
      assertEquals(3194, tiffField0.getTag());
      assertEquals((-856), int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(898, (-2065), fieldTypeShort0, 1L, 898, byteArray0, (ByteOrder) null, (-1117));
      tiffField0.getByteOrder();
      assertEquals((-1117), tiffField0.getSortHint());
      assertEquals(898, tiffField0.getTag());
      assertEquals((-2065), tiffField0.getDirectoryType());
      assertEquals(898, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3715), "BrightnessValue");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2353), (-2353), fieldTypeRational0, (byte)0, (-3715), byteArray0, byteOrder0, 629);
      tiffField0.getByteOrder();
      assertEquals((-2353), tiffField0.getDirectoryType());
      assertEquals((-2353), tiffField0.getTag());
      assertEquals((-3715), tiffField0.getOffset());
      assertEquals(629, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147483646, 2147483646, fieldTypeLong0, 41491, 1L, byteArray0, byteOrder0, 118);
      tiffField0.getByteArrayValue();
      assertEquals(165964, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals(2147483646, tiffField0.getDirectoryType());
      assertEquals(118, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-957), (-957), fieldTypeDouble0, 202L, (-957), byteArray0, byteOrder0, (byte) (-79));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-402), (-402), fieldTypeFloat0, (-560L), 868L, (byte[]) null, byteOrder0, (-402));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2759), 2, fieldTypeShort0, (byte) (-19), (byte)50, byteArray0, byteOrder0, (-1817));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1817), (-4601), fieldTypeAscii0, (-4601), (byte) (-79), byteArray0, (ByteOrder) null, (-1817));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3183), "4");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeDouble0, 1L, 65535, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1779), 50, fieldTypeRational0, (byte) (-69), (byte)117, byteArray0, (ByteOrder) null, (byte)15);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2146200035, fieldTypeShort0, (-2352L), 998L, (byte[]) null, byteOrder0, 2146200035);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[170];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, (-657), fieldTypeDouble0.BYTE, (-657), 1512L, byteArray0, byteOrder0, 120);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)98, 65535, (FieldType) null, (byte) (-4), (byte) (-4), byteArray0, byteOrder0, (-2117));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2136527097), (-875), fieldTypeDouble0, 2792L, 0L, byteArray0, byteOrder0, (-2136527097));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-69), fieldTypeShort0, (byte) (-69), 17, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-980), 1079, (FieldType) null, 1L, 4L, byteArray0, byteOrder0, (-3552));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-470), (byte) (-79), fieldTypeLong0, (-680L), (-1471L), byteArray0, byteOrder0, 1329);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-718), fieldTypeFloat0, 50, 1L, byteArray0, byteOrder0, 1212);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3876, 0, (FieldType) null, (-651L), 2276L, byteArray0, (ByteOrder) null, 274);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1027), (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1087, 2146200035, fieldTypeRational0, (-1027), 364L, (byte[]) null, byteOrder0, 96);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1197, (-4177), fieldTypeDouble0.FLOAT, (-4177), 10L, byteArray0, byteOrder0, (-93));
      MockPrintStream mockPrintStream0 = new MockPrintStream("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-980), 1079, (FieldType) null, 1L, 4L, byteArray0, byteOrder0, (-3552));
      tiffField0.getFieldType();
      assertEquals(1079, tiffField0.getDirectoryType());
      assertEquals((-980), tiffField0.getTag());
      assertEquals((-3552), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-125), (byte)0, fieldTypeByte0.FLOAT, 790L, 80L, byteArray0, byteOrder0, (byte) (-107));
      tiffField0.getValue();
      assertEquals(80, tiffField0.getOffset());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(101, (-76), fieldTypeLong0, 1597L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-76), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(101, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(2712);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-1), 2712, fieldTypeByte0, 2712, 2712, byteArray0, byteOrder0, 2712);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2712, tiffField0.getSortHint());
      assertEquals(2712, tiffField0.getOffset());
      assertEquals(2712, tiffField0.getDirectoryType());
      assertEquals(2712, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)68, 1, fieldTypeFloat0, 1, (-700L), byteArray0, byteOrder0, 2312);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(68, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2312, tiffField0.getSortHint());
      assertEquals((-700), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)68, 1, fieldTypeFloat0, 1, (-700L), byteArray0, byteOrder0, 2312);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getTag());
      assertEquals((-700), tiffField0.getOffset());
      assertEquals(2312, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(4615, 2147419926, fieldTypeLong0, 19688L, (byte) (-26), byteArray0, byteOrder0, 2246);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2246, tiffField0.getSortHint());
      assertEquals(4615, tiffField0.getTag());
      assertEquals((-26), tiffField0.getOffset());
      assertEquals(19688L, tiffField0.getCount());
      assertEquals(2147419926, tiffField0.getDirectoryType());
      assertEquals(78752, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-537), 104, fieldTypeDouble0, 1407L, 1407L, byteArray0, (ByteOrder) null, 1394);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7b534949 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 303, fieldTypeShort0.ASCII, 4, 1, byteArray0, byteOrder0, 303);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2710), (byte)1, fieldTypeFloat0, 425L, (-1840700253), byteArray0, byteOrder0, (-1840700253));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2710), tiffField0.getTag());
      assertEquals(425L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1840700253), tiffField0.getOffset());
      assertEquals(1700, tiffField0.getBytesLength());
      assertEquals((-1840700253), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-718), fieldTypeFloat0, 50, 1L, byteArray0, byteOrder0, 1212);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals((-718), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1212, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-79), (-957), fieldTypeDouble0, 3L, 202L, byteArray0, (ByteOrder) null, (byte) (-79));
      tiffField0.getDoubleArrayValue();
      assertEquals((-957), tiffField0.getDirectoryType());
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals(202, tiffField0.getOffset());
      assertEquals((-79), tiffField0.getTag());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(3L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[111];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-46), (byte)0, fieldTypeShort0, 9576L, 9576L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-46), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(9576L, tiffField0.getCount());
      assertEquals(19152, tiffField0.getBytesLength());
      assertEquals(9576, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4029, (-2134624463), fieldTypeRational0, 653L, 2792L, byteArray0, byteOrder0, (byte) (-79));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2134624463), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-79), tiffField0.getSortHint());
      assertEquals(2792, tiffField0.getOffset());
      assertEquals(653L, tiffField0.getCount());
      assertEquals(5224, tiffField0.getBytesLength());
      assertEquals(4029, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(115, "-!c F_/*4&VQ]m4?6");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3, (byte) (-23), fieldTypeLong0, 1L, 3, byteArray0, byteOrder0, (byte) (-23));
      tiffField0.getDoubleArrayValue();
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147483646, 2147483646, fieldTypeLong0, 41491, 1L, byteArray0, byteOrder0, 118);
      tiffField0.getDoubleArrayValue();
      assertEquals(118, tiffField0.getSortHint());
      assertEquals(41491L, tiffField0.getCount());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals(2147483646, tiffField0.getDirectoryType());
      assertEquals(165964, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1193, 1193, fieldTypeShort0.IFD, 251L, (-192L), byteArray0, byteOrder0, 1193);
      tiffField0.getIntArrayValue();
      assertEquals(1193, tiffField0.getSortHint());
      assertEquals(1193, tiffField0.getDirectoryType());
      assertEquals(1193, tiffField0.getTag());
      assertEquals((-192), tiffField0.getOffset());
      assertEquals(1004, tiffField0.getBytesLength());
      assertEquals(251L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4043, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1609), 1189, fieldTypeRational0.SSHORT, 1461, 4L, byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1189, tiffField0.getDirectoryType());
      assertEquals((-1609), tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(2922, tiffField0.getBytesLength());
      assertEquals(1461L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2146429409, 65535, fieldTypeRational0, (-17177089704L), 1L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(590, 1, fieldTypeRational0, 677, 960L, byteArray0, byteOrder0, 2279);
      tiffField0.getIntArrayValue();
      assertEquals(590, tiffField0.getTag());
      assertEquals(677L, tiffField0.getCount());
      assertEquals(960, tiffField0.getOffset());
      assertEquals(5416, tiffField0.getBytesLength());
      assertEquals(2279, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "DataType");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 1L, 0L, byteArray0, (ByteOrder) null, (byte)99);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getTag());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 561);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@353f58d2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-7), 1195, fieldTypeRational0, (byte)97, (-2894L), byteArray0, byteOrder0, 2560);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@32f7fd1d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147242384, "YUx !GcS9T3#@Zr");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(144, 2147387490, fieldTypeAscii0, 2147242384, 4L, byteArray0, byteOrder0, 144);
      String string0 = tiffField0.getStringValue();
      assertEquals(2147242384, tiffField0.getBytesLength());
      assertEquals(144, tiffField0.getSortHint());
      assertEquals(144, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2147387490, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-125), (byte)0, fieldTypeByte0.FLOAT, 790L, 80L, byteArray0, byteOrder0, (byte) (-107));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffff83)", string0);
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(80, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "Unknown value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 33448, fieldTypeFloat0, (-3632L), 4L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(33448, tiffField0.getDirectoryType());
      assertEquals(33448, tiffField0.getTag());
      assertEquals("MD LabName", string0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1220, 50740, fieldTypeDouble0.FLOAT, 50740, 1220, byteArray0, byteOrder0, 50740);
      String string0 = tiffField0.toString();
      assertEquals(202960, tiffField0.getBytesLength());
      assertEquals(1220, tiffField0.getOffset());
      assertEquals(50740, tiffField0.getSortHint());
      assertEquals(50740, tiffField0.getDirectoryType());
      assertEquals("1220 (0x4c4: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (50740 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 401, fieldTypeShort0.BYTE, 88L, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(401, tiffField0.getDirectoryType());
      assertEquals("17 (0x11: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (88 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-125), (byte)0, fieldTypeByte0.FLOAT, 790L, 80L, byteArray0, byteOrder0, (byte) (-107));
      String string0 = tiffField0.getValueDescription();
      assertEquals(790L, tiffField0.getCount());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getOffset());
      assertEquals(3160, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1222, 1222, fieldTypeDouble0, 1222, 1222, byteArray0, byteOrder0, 1222);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">mw");
      tiffField0.dump((PrintWriter) mockPrintWriter0, ">mw");
      assertEquals(1222, tiffField0.getOffset());
      assertEquals(1222, tiffField0.getTag());
      assertEquals(1222, tiffField0.getSortHint());
      assertEquals(1222, tiffField0.getDirectoryType());
      assertEquals(1222L, tiffField0.getCount());
      assertEquals(9776, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1197, 1197, fieldTypeDouble0, 11L, 1197, byteArray0, byteOrder0, 1197);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1197, tiffField0.getSortHint());
      assertEquals(1197, tiffField0.getDirectoryType());
      assertEquals(1197, tiffField0.getTag());
      assertEquals(1197, tiffField0.getOffset());
      assertEquals(88, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(11L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2588, 50740, fieldTypeDouble0.SLONG, 1461L, 9, byteArray0, byteOrder0, 46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1461L, tiffField0.getCount());
      assertEquals(5844, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(2588, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(50740, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1184, 34018, fieldTypeByte0, 34018, (byte)52, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[111];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-46), (byte)0, fieldTypeShort0, 9576L, 9576L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(19152, tiffField0.getBytesLength());
      assertEquals(9576L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(9576, tiffField0.getOffset());
      assertEquals((-46), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4043, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1609), 3542, fieldTypeRational0.SSHORT, 4L, 363L, byteArray0, byteOrder0, 84);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-804), 1, fieldTypeShort0.ASCII, 66, 1604L, byteArray0, byteOrder0, (-888));
      tiffField0.toString();
      assertEquals(66L, tiffField0.getCount());
      assertEquals(1604, tiffField0.getOffset());
      assertEquals((-804), tiffField0.getTag());
      assertEquals((-888), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(66, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147242384, 50, fieldTypeRational0.ASCII, 4L, 4L, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2147242384, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(898, " (0x");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 898, fieldTypeShort0.ASCII, 4, 1, byteArray0, byteOrder0, 898);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(898, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(898, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(115, "-!c F_/*4&VQ]m4?6");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3, (byte) (-23), fieldTypeLong0, 1L, 3, byteArray0, byteOrder0, (byte) (-23));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-23), tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2136527097), 2147483646, fieldTypeDouble0, 2792L, 0L, byteArray0, byteOrder0, (-2136527097));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147483646, tiffField0.getDirectoryType());
      assertEquals(0L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals((-2136527097), tiffField0.getSortHint());
      assertEquals((-2136527097), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4267), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 561);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(561, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2775), (-2775), fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals((-2775), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2775), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2775), (-2775), fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals((-2775), tiffField0.getDirectoryType());
      assertEquals((-2775), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 561);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(561, tiffField0.getSortHint());
      assertEquals(65535, int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 561);
      int int0 = tiffField0.getSortHint();
      assertEquals(561, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0L, 0L, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(115, "-!c F_/*4&VQ]m4?6");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3, (byte) (-23), fieldTypeLong0, 1L, 3, byteArray0, byteOrder0, (byte) (-23));
      tiffField0.dump();
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "_XF*QgTnovP oDRJ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 774, fieldTypeByte0, 0, 1762L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1762, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(774, tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
  }
}
