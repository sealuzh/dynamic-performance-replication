/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:09:03 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.SkipLexicalActions((Token) null);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("class");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals("class", token0.toString());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 100);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!f!ooMv2}r_DQW");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 62);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(1);
      assertEquals(0, token0.beginColumn);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals("\"continue\"", token0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[8];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, 26);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 26. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = 'm';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$7li@.Y:B^ye+");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaCharStream0.ExpandBuff(false);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.input_stream = javaCharStream0;
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ANkBqfdE5^X<-O*");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 989);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      stringReader0.read();
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<token of kind 7>");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 13);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      bufferedReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[5];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("claDs");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"contue");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[9];
      javaCharStream0.BeginToken();
      bufferedReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\\\"\" (34), after : \"\\'P\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lv7aC,{i5\"");
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\\\"\" (34), after : \"\\'P\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = 'q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark('q');
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*m+\"REoe");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oic>VMS`~KtMGop<s\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      PipedReader pipedReader0 = new PipedReader();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\\\"\" (34), after : \"\\'P\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bI|^c9%");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 989);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      lineNumberReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 7.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!^!goMvOP2}r_ADpQR");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 56);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = 'u';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token.newToken(1);
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[6];
      bufferedReader0.markSupported();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 113);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[3];
      bufferedReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(")'P\"Jox$F$");
      javaParserTokenManager0.MoreLexicalActions();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\\"Jox$F$\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fBMw?K^$JGg/5{1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SkipLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'd';
      charArray0[2] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2aWn]:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2856);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[6];
      charArray0[2] = '?';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      CharArrayReader charArrayReader0 = null;
      try {
        charArrayReader0 = new CharArrayReader(charArray0, 74, 5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DBK=IOQg9(^V00");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 313);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Hqf1WNt5!DVw");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1617));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1617));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1617. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 113);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      charArray0[1] = '!';
      charArray0[2] = '!';
      bufferedReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      MockPrintStream mockPrintStream0 = new MockPrintStream(")'P\"Jox$F$");
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.input_stream = javaCharStream0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      charArrayReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]");
      char[] charArray0 = new char[3];
      charArray0[0] = 'z';
      charArray0[1] = 'b';
      charArray0[2] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = 'p';
      charArray0[3] = '_';
      charArray0[5] = '0';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaCharStream0.ExpandBuff(false);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'd';
      charArray0[2] = 'p';
      charArray0[3] = 'R';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      char[] charArray0 = new char[9];
      charArray0[0] = 'b';
      charArray0[1] = '`';
      charArray0[2] = '|';
      char[] charArray1 = new char[7];
      charArray1[0] = '%';
      charArray1[1] = '`';
      charArray1[2] = '%';
      charArray1[3] = 'b';
      charArray1[4] = 'b';
      charArray1[5] = 'b';
      charArray1[6] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2aWn]:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.SwitchTo(1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 17.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!^!goMvOP2}r_ADpQR");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 56);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedReader0, 1177, 1);
      javaParserTokenManager0.ReInit(javaCharStream1, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1177, column 17.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader1 = new StringReader("s(|5WX9.Q3bQ:x48G]");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 113);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(charArrayReader0);
      charArrayReader0.mark((-971));
      JavaCharStream javaCharStream2 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token.newToken((-1));
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(2804);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2804. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"contue");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      char[] charArray0 = new char[1];
      charArray0[0] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("%");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!^!goMvOP2}r_ADpQR");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 62);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("!");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(charArrayReader0, 2556, (-1823));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 2556, column -1822.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      charArray0[1] = '5';
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      lineNumberReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.curLexState = (-290);
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 210, 107, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      charArray0[5] = 'd';
      charArray0[6] = 'l';
      charArray0[7] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1185), (-1103), 1928);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lv7aC,{i5\"");
      StringReader stringReader0 = new StringReader("Lv7aC,{i5\"");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.jjFillToken();
      stringReader0.ready();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IN_SINGLE_LINE_COMMENT");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fBMw?K^$JGg/5{1");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1005);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-94);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1877, 20, 15);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1877, column 23.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'J';
      charArray0[1] = 'q';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark('q');
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'p';
      charArray0[2] = 'p';
      charArray0[3] = 'p';
      charArray0[4] = 'q';
      charArray0[5] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark((-1082));
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(6);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 6. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      char[] charArray0 = new char[4];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)115;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-3042), 91, (-546));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '0';
      charArray0[1] = 'd';
      charArray0[2] = 'p';
      charArray0[3] = 'R';
      charArray0[5] = 'R';
      charArray0[6] = '0';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte) (-94);
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)53;
      byteArray0[5] = (byte)95;
      byteArray0[6] = (byte)95;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      Token token1 = token_GTToken0.next;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 27);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      Token.newToken(0);
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 31, 31, (-2956));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjimageLen = 31;
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,!>0xa");
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("do");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("do", "dod");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'd';
      charArray0[2] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("do");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      CharArrayReader charArrayReader1 = null;
      try {
        charArrayReader1 = new CharArrayReader(charArray0, 33, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'B';
      charArray0[1] = 'd';
      charArray0[2] = '~';
      charArray0[3] = 'R';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.setDebugStream(javaParserTokenManager1.debugStream);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[6];
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, '>', 23, 189);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[10];
      charArray0[0] = 'm';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 616, (-1327), 51);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 616, column -1325.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 986, 986, 189);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'p';
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 17);
      char[] charArray1 = new char[9];
      charArray1[0] = '_';
      charArray1[1] = 'p';
      charArray1[2] = 'q';
      charArray1[3] = '%';
      charArray1[4] = '/';
      charArray1[5] = '5';
      charArray1[6] = 'k';
      charArray1[7] = '_';
      charArray1[8] = '5';
      bufferedReader0.read(charArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(")'P\"Jox$F$");
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$7li@.Y:B^ye+");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0);
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = '5';
      charArray0[2] = '5';
      lineNumberReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(lineNumberReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'd';
      charArray0[2] = 'p';
      charArray0[3] = 'R';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)95;
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)95;
      byteArray0[7] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)45, 48, (-1885));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)53;
      byteArray0[5] = (byte)74;
      byteArray0[6] = (byte) (-93);
      byteArray0[7] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1115), 74, 72);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((byte)45);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 45. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo(74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[12];
      charArray0[0] = '%';
      charArray0[1] = '>';
      charArray0[3] = '<';
      charArray0[4] = '%';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      StringReader stringReader0 = new StringReader("%");
      stringReader0.ready();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,!>0xa");
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      stringReader0.read();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P\"Jox$F$");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'p';
      charArray0[2] = '%';
      charArray0[3] = '_';
      charArray0[5] = 'p';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", column ");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      bufferedReader0.read();
      charArray0[1] = 'D';
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      CharArrayReader charArrayReader0 = null;
      try {
        charArrayReader0 = new CharArrayReader(charArray0, 85, 87);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("#cYM;T*9!CN-Q");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int int0 = ObjectStreamConstants.baseWireHandle;
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaCharStream0.inBuf = (-1);
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2aWn]:GigGR,>0xa");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[6];
      charArray0[2] = 'D';
      charArray0[1] = ' ';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager2.jjFillToken();
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O");
      char[] charArray0 = new char[4];
      charArray0[0] = 'Y';
      charArray0[1] = 'z';
      charArray0[3] = 'z';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)108;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 91, (byte)108, 128);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaParserTokenManager1.ReInit(javaCharStream0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)125;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)125, 986, (-2521));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("6EK|");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int int0 = ObjectStreamConstants.baseWireHandle;
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaCharStream0.inBuf = (-1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      char[] charArray1 = new char[3];
      charArray1[0] = 'd';
      charArray1[1] = 'd';
      charArray1[2] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@3MuO,sn");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 113);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      bufferedReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"contue");
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 23);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 23. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[2] = '*';
      charArray0[3] = 'd';
      charArray0[4] = 'b';
      charArray0[6] = 'b';
      charArray0[7] = 'd';
      charArray0[8] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@3MuO,sn");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 113);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      bufferedReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"contue");
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(113);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 113. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("#cYM;T*9!CN-Q");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      int int0 = ObjectStreamConstants.baseWireHandle;
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'd';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[4] = 'j';
      charArray0[5] = 'b';
      charArray0[6] = 'd';
      charArray0[7] = 'b';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 17, (-1652), (byte)46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'd';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)47;
      byteArray0[7] = (byte)47;
      byteArray0[8] = (byte)19;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 39, (byte)47, (-83));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 39, column 56.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fBMw?K^$JGg/5{1");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 1005);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '?';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("x7lE4/<N{v");
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager1.getNextToken();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"contue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 3);
      javaParserTokenManager3.SkipLexicalActions(token0);
      javaParserTokenManager1.jjFillToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager3.TokenLexicalActions(token0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("#cYM;T*9!CN-Q");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 1.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bL");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 82);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      bufferedReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 41);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 41. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[0] = 'N';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.next = token0;
      Token token1 = token_GTToken0.next;
      Token.newToken(0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&M$h%yQuF");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = '[';
      charArray0[2] = '\\';
      charArray0[3] = '<';
      charArray0[4] = '(';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      MockFile mockFile0 = new MockFile("&M$h%yQuF");
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,!>0xa");
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(14);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      charArray0[1] = 'P';
      charArray0[2] = 'R';
      charArray0[3] = 'd';
      charArray0[4] = 'd';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '\'';
      charArray0[1] = '6';
      charArray0[2] = '2';
      charArray0[3] = '6';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray1 = new char[5];
      charArray1[1] = '6';
      charArray1[2] = '6';
      charArray1[3] = '6';
      charArray1[4] = '\'';
      stringReader0.read(charArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"2\" (50), after : \"\\'6\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")'P0Jox$F$");
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      charArray0[1] = 'p';
      charArray0[2] = '%';
      charArray0[3] = '_';
      charArray0[5] = 'p';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)59, (byte)59, 74);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 314);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginLine = 3;
      javaParserTokenManager2.SkipLexicalActions(token0);
      javaParserTokenManager2.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xPb7P;Ko<!z(l");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 98);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      bufferedReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("xPb7P;Ko<!z(l");
      javaParserTokenManager0.MoreLexicalActions();
      bufferedReader0.ready();
      javaCharStream0.GetImage();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aWn:GigGR,!>0xa");
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = '<';
      charArray0[5] = '+';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.mark(14);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      charArrayReader0.reset();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"continue\"");
      char[] charArray0 = new char[4];
      charArray0[0] = '5';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("==");
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fEyj! $l98,3");
      char[] charArray0 = new char[4];
      charArray0[0] = '3';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(charArrayReader0, 2556, (-1823));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(61);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 61. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&M$h%yQuF");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 2847);
      char[] charArray0 = new char[5];
      charArray0[0] = 'i';
      charArray0[1] = '[';
      charArray0[2] = '\\';
      charArray0[3] = '<';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(charArrayReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"\\\\\" (92), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
