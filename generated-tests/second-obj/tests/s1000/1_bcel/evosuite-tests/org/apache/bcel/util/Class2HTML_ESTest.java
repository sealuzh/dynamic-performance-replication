/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:07:31 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "-e");
      String[] stringArray0 = new String[4];
      stringArray0[1] = "-e";
      Pattern.quote("-e");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "boolean";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Class2HTML.referenceType("boolean");
      assertEquals("<FONT COLOR=\"#00FF00\">boolean</FONT>", string0);
      
      String string1 = Class2HTML.toHTML("<FONT COLOR=\"#00FF00\">boolean</FONT>");
      assertEquals("&lt;FONT COLOR=\"#00FF00\"&gt;boolean&lt;/FONT&gt;", string1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"";
      Class2HTML.toHTML("_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((java.lang.ClassLoader) null);
      classLoaderRepository0.getClassPath();
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.setClassName("40m.4a>M<c|lx");
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "40m.4a>M<c|lx");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "UFOadTb.|jwq93H9l3";
      ClassPath classPath0 = new ClassPath("java.lang.String$1");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      Class2HTML.referenceType("6z<+sH[A0,7");
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class2HTML.toHTML("_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-+d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "java.time.format.DateTimeFormatter";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class2HTML.toHTML("_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "/";
      stringArray0[2] = "_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"";
      stringArray0[3] = "_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\"&gt;\n&lt;FRAME NAE=\"Methods\" SRC=\"";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      stringArray0[4] = "char";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class2HTML.toHTML("_code.html\"\n MARGINWIDTH=0 MARGINHEIGHT=0 FRAMEBORDER=1 SCROLLING=\"AUTO\">\n<FRAME NAE=\"Methods\" SRC=\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "-d";
      stringArray0[1] = "...";
      stringArray0[2] = "-d";
      stringArray0[4] = "...";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class2HTML.referenceType("-zip");
      Pattern.quote("<A HREF=\"-zip.html\" TARGET=_top>-zip</A>");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      stringArray0[1] = "Q<A HREF=\"-zip.html\" TARGET=_top>-zip</A>E";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-zip");
      stringArray0[2] = "-zip";
      stringArray0[3] = "-zip";
      stringArray0[4] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      stringArray0[5] = "Q<A HREF=\"-zip.html\" TARGET=_top>-zip</A>E";
      stringArray0[6] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // -zip (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "_code.html\"\n MAGINWIDTH=0 MARGNHEIGHT=0 FRAMEBORDER=1 SCRO;LING=\"AUTO\">\n<FRAME NAE=\"Method\" SRC=\"";
      Class2HTML.toHTML("_code.html\"\n MAGINWIDTH=0 MARGNHEIGHT=0 FRAMEBORDER=1 SCRO;LING=\"AUTO\">\n<FRAME NAE=\"Method\" SRC=\"");
      String string1 = "...";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository((java.lang.ClassLoader) null);
      classLoaderRepository0.getClassPath();
      String string2 = "void";
      ClassPath classPath0 = new ClassPath((ClassPath) null, "void");
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.setClassName("void");
      javaClass0.isVarArgs(true);
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass0, "e=M;#m+EY-o>(");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }
}
