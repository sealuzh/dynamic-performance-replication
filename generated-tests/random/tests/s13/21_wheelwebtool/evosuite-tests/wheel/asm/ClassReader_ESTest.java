/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 21:40:21 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.newNameType("e^:wrz24", "wheel.asm.ClassReader");
      classReader0.getSuperName();
      classWriter0.visitSource("M", "wheel.asm.ClassWriter");
      classReader0.copyPool(classWriter0);
      int int0 = 590;
      classReader0.readLong(590);
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(8070);
      classReader0.copyPool(classWriter1);
      // Undeclared exception!
      try { 
        classReader0.readLong((-1921));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.DelegateFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 12);
      int int0 = 197;
      // Undeclared exception!
      try { 
        classReader0.getItem(197);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 197
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      int int0 = 101;
      char[] charArray0 = new char[9];
      charArray0[0] = '2';
      charArray0[1] = '`';
      charArray0[2] = '\'';
      charArray0[3] = 'Y';
      charArray0[4] = 'i';
      charArray0[5] = '-';
      charArray0[6] = 'v';
      charArray0[7] = '4';
      charArray0[8] = '%';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(247, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassAdapter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.copyPool(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(183);
      classReader0.accept((ClassVisitor) classWriter1, 2);
      classReader0.getInterfaces();
      int int0 = (-1391);
      // Undeclared exception!
      try { 
        classReader0.readLong((-1391));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("org/apache/commons/io/filefilter/WildcardFileFilter");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("org/apache/commons/io/filefilter/WildcardFileFilter");
      attributeArray0[1] = attribute1;
      Attribute attribute2 = attribute1.next;
      attributeArray0[2] = null;
      Attribute attribute3 = new Attribute("");
      Attribute attribute4 = attribute3.next;
      attributeArray0[3] = null;
      Attribute attribute5 = attribute1.next;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 768);
      classReader0.getAccess();
      classReader0.copyPool(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(2927);
      classWriter0.visitOuterClass("", "The size must be non-negative", "wheel.asm.ClassReader");
      classWriter0.cr = classReader0;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.getClassName();
      int int0 = classReader0.readInt(2927);
      int int1 = classReader0.readByte(8070);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.getSuperName();
      classReader0.readByte(6);
      Label[] labelArray0 = new Label[6];
      Label label0 = classReader0.readLabel(0, labelArray0);
      labelArray0[0] = label0;
      Label label1 = label0.successor;
      labelArray0[1] = null;
      Label label2 = label0.next;
      labelArray0[2] = null;
      Edge edge0 = new Edge();
      Label label3 = edge0.successor;
      labelArray0[3] = null;
      Label label4 = new Label();
      labelArray0[4] = label4;
      Frame frame0 = new Frame();
      frame0.owner = label0;
      Label label5 = frame0.owner;
      labelArray0[5] = label5;
      // Undeclared exception!
      try { 
        classReader0.readLabel(73, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 73
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "java/lang/Throwable";
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      int int0 = (-3420);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-3420));
      Attribute[] attributeArray0 = new Attribute[0];
      char[] charArray0 = new char[6];
      charArray0[0] = '-';
      charArray0[1] = '9';
      charArray0[2] = '-';
      charArray0[3] = 'M';
      charArray0[4] = 'g';
      charArray0[5] = 'E';
      // Undeclared exception!
      try { 
        classReader0.readConst((-625), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -625
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getSuperName();
      int int0 = 2927;
      ClassWriter classWriter0 = new ClassWriter(2927);
      classWriter0.visitOuterClass("", "The size must be non-negative", "wheel.asm.ClassReader");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 2, 51);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52168
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)5;
      byte byte0 = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte) (-59);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-7), (byte)5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      classReader0.getItem(6);
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = '3';
      charArray0[2] = 'V';
      charArray0[3] = '2';
      charArray0[4] = 'H';
      charArray0[5] = ';';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(36, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)31;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-5), 122);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("org/apache/commons/io/filefilter/WildcardFileFilter");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = new Attribute("org/apache/commons/io/filefilter/WildcardFileFilter");
      attributeArray0[1] = attribute1;
      Attribute attribute2 = attribute1.next;
      attributeArray0[2] = null;
      Attribute attribute3 = new Attribute("");
      Attribute attribute4 = attribute3.next;
      attributeArray0[3] = null;
      Attribute attribute5 = attribute1.next;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 768);
      // Undeclared exception!
      try { 
        classReader0.getItem((-1964));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1964
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getSuperName();
      char[] charArray0 = new char[2];
      charArray0[0] = '/';
      charArray0[1] = '%';
      // Undeclared exception!
      try { 
        classReader0.readClass(2749, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      long long0 = classReader0.readLong(106);
      assertEquals(3065, classReader0.header);
      assertEquals(60808494214860553L, long0);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classWriter0.version = (-497);
      classReader0.copyPool(classWriter0);
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/Type", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter((-1));
      classReader0.getInterfaces();
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.getItem((-1964));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1964
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)118;
      byteArray0[6] = (byte)87;
      byteArray0[7] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-7), 1010);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      classReader0.getClassName();
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      int int0 = 374;
      Label[] labelArray0 = new Label[9];
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      labelArray0[0] = null;
      Label[] labelArray1 = new Label[5];
      labelArray1[0] = null;
      labelArray1[1] = null;
      Label label1 = frame0.owner;
      labelArray1[2] = null;
      labelArray1[3] = null;
      labelArray1[4] = null;
      // Undeclared exception!
      try { 
        classReader0.readLabel(2072, labelArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2072
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-130));
      classReader0.accept((ClassVisitor) classWriter0, (-1));
      classReader0.getClassName();
      ClassWriter classWriter1 = new ClassWriter((-1));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)70;
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte) (-120);
      int int0 = 3661;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 3661, 3661);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("LineNumberTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classWriter0.newFloat((-2408.8F));
      int int0 = 251;
      classReader0.getSuperName();
      Attribute attribute0 = new Attribute("java/lang/Object");
      classWriter0.visitAttribute(attribute0);
      Label[] labelArray0 = new Label[0];
      classReader0.accept((ClassVisitor) classWriter0, 393);
      classReader0.readInt(251);
      char[] charArray0 = new char[7];
      charArray0[0] = 'j';
      charArray0[1] = ',';
      charArray0[2] = '#';
      charArray0[3] = 'K';
      charArray0[4] = 'g';
      charArray0[5] = 'O';
      charArray0[6] = 'P';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-1958), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "LocalVariableTable";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LocalVariableTable");
      try { 
        MockFile.createTempFile("h$T{+r^_[e.tbgD+If", "StackMapTable");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-4);
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte) (-99);
      int int0 = 3189;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 3189, (byte) (-99));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute[] attributeArray0 = new Attribute[1];
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstField = null;
      Attribute attribute0 = new Attribute((String) null);
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      classReader0.readLong(101);
      classReader0.accept((ClassVisitor) classWriter0, 63);
      char[] charArray0 = new char[4];
      charArray0[1] = 'N';
      charArray0[2] = 't';
      charArray0[3] = 'z';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
