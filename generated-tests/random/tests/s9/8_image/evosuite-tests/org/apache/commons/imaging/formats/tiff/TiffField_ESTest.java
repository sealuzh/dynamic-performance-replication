/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 17:09:58 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50784, tiffField0.getDirectoryType());
      assertEquals(50784, int0);
      assertEquals(50784, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50778, 58, fieldTypeByte0, 50778, 50778, byteArray0, byteOrder0, 58);
      int int0 = tiffField0.getSortHint();
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(50778, tiffField0.getOffset());
      assertEquals(50778, tiffField0.getTag());
      assertEquals(58, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 278, fieldTypeLong0, 1L, 1371L, byteArray0, byteOrder0, (byte)44);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1371, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-3);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, (-905L), byteArray0, byteOrder0, (byte) (-3));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-768), int0);
      assertEquals((-905), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 278, fieldTypeLong0, 1L, 1371L, byteArray0, byteOrder0, (byte)44);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals(1371, tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2024, 2024, fieldTypeFloat0, 2024, 2701L, byteArray0, byteOrder0, (byte)76);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2024, tiffField0.getTag());
      assertEquals(2024, int0);
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(2701, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2527), (-2318), fieldTypeLong0, 1027L, (-1073L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2318), int0);
      assertEquals((-2527), tiffField0.getTag());
      assertEquals((-1073), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeRational0, 103, 2801L, byteArray0, byteOrder0, (byte) (-64));
      tiffField0.getCount();
      assertEquals((-64), tiffField0.getSortHint());
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(2801, tiffField0.getOffset());
      assertEquals(103, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeRational0, 103, 2801L, byteArray0, byteOrder0, (byte) (-64));
      tiffField0.getByteOrder();
      assertEquals((-64), tiffField0.getSortHint());
      assertEquals(2801, tiffField0.getOffset());
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2024, 2024, fieldTypeFloat0, 2024, 2701L, byteArray0, byteOrder0, (byte)76);
      tiffField0.getByteArrayValue();
      assertEquals(2024, tiffField0.getTag());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(2024, tiffField0.getDirectoryType());
      assertEquals(2701, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1757, 1757, fieldTypeLong0, (-115L), 1757, byteArray0, byteOrder0, (byte) (-61));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-5), (FieldType) null, (-5), 1L, byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2299), 65535, (FieldType) null, 0L, 65535, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-662), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146042383, 2146042383, fieldTypeFloat0, 2364L, 0L, byteArray0, byteOrder0, 2146042383);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, (-905L), byteArray0, byteOrder0, (byte) (-3));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-905), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-3), tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3045), "rS/6&A2");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, (-3045));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-3045), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50778, 58, fieldTypeByte0, 50778, 50778, byteArray0, byteOrder0, 58);
      tiffField0.getValue();
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(50778, tiffField0.getTag());
      assertEquals(50778, tiffField0.getOffset());
      assertEquals(58, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeRational0, 103, 2801L, byteArray0, byteOrder0, (byte) (-64));
      tiffField0.getTagInfo();
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
      assertEquals(2801, tiffField0.getOffset());
      assertEquals((-64), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1857), (-2146143981), fieldTypeRational0, (-2146143981), 24256L, byteArray0, byteOrder0, 2146499015);
      int int0 = tiffField0.getTag();
      assertEquals((-1857), int0);
      assertEquals((-2146143981), tiffField0.getDirectoryType());
      assertEquals(2146499015, tiffField0.getSortHint());
      assertEquals(24256, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 278, fieldTypeLong0, 1L, 1371L, byteArray0, byteOrder0, (byte)44);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(1371, tiffField0.getOffset());
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeRational0, 103, 2801L, byteArray0, byteOrder0, (byte) (-64));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1217, 1217, fieldTypeByte0, 568L, 3580L, byteArray0, byteOrder0, 50832);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5b58bc6b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (-2071), fieldTypeLong0, 4, (-2071), byteArray0, byteOrder0, (-3831));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3831), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-2071), tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-2071), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-70);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1717986918, fieldTypeRational0, 1717986918, 0L, byteArray0, byteOrder0, 34264);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(34264, tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145948634, 2145948634, fieldTypeAscii0, 2145948634, 2484L, byteArray0, byteOrder0, (byte) (-121));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@506ac7da for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1335), "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(600, (-1335), fieldTypeLong0, 268L, 0L, byteArray0, byteOrder0, 2666);
      tiffField0.getDoubleArrayValue();
      assertEquals(2666, tiffField0.getSortHint());
      assertEquals(268L, tiffField0.getCount());
      assertEquals(600, tiffField0.getTag());
      assertEquals((-1335), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(8, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 8, 2, byteArray0, byteOrder0, (byte)11);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1857), (-2146143981), fieldTypeRational0, (-2146143981), 24256L, byteArray0, byteOrder0, 2146499015);
      assertEquals(10717336, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(24256, tiffField0.getOffset());
      assertEquals(2146499015, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1857), tiffField0.getTag());
      assertEquals((-2146143981), tiffField0.getDirectoryType());
      assertEquals((-2146143981L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34018, "CameraCalibration2");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33452, 33452, fieldTypeShort0, 1L, (-1L), byteArray0, byteOrder0, 33452);
      tiffField0.getDoubleArrayValue();
      assertEquals(33452, tiffField0.getTag());
      assertEquals(33452, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(33452, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2024, 2024, fieldTypeFloat0, 2024, 2701L, byteArray0, byteOrder0, (byte)76);
      tiffField0.getDoubleArrayValue();
      assertEquals(2701, tiffField0.getOffset());
      assertEquals(8096, tiffField0.getBytesLength());
      assertEquals(2024L, tiffField0.getCount());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(2024, tiffField0.getDirectoryType());
      assertEquals(2024, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-279), "*RBoRp");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(332, 2069, fieldTypeFloat0, (-2147483648L), 2147483647L, byteArray0, byteOrder0, 2295);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4a2859b1 for: 332 (0x14c: InkSet): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(3233L, tiffField0.getCount());
      assertEquals(50784, tiffField0.getOffset());
      assertEquals(50784, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(6466, tiffField0.getBytesLength());
      assertEquals(50784, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)24;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 59, fieldTypeRational0, 2191L, 131070L, byteArray0, byteOrder0, 9);
      tiffField0.getIntArrayValue();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(131070, tiffField0.getOffset());
      assertEquals(2191L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(17528, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-15), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-97), 5, fieldTypeLong0, 5, 437L, byteArray0, byteOrder0, 3680);
      tiffField0.getIntArrayValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(3680, tiffField0.getSortHint());
      assertEquals(5L, tiffField0.getCount());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(437, tiffField0.getOffset());
      assertEquals(20, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 0L, (-2147483648L), byteArray0, byteOrder0, 3695);
      String string0 = tiffField0.getStringValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(3695, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1938), 33432, fieldTypeLong0, 2755L, 33432, byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@76fac506
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, (-905L), byteArray0, byteOrder0, (byte) (-3));
      String string0 = tiffField0.getTagName();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xffff)", string0);
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals((-905), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-5), (FieldType) null, (-5), 1L, byteArray0, byteOrder0, (-5));
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getOffset());
      assertEquals("GPSVersionID", string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-5), tiffField0.getDirectoryType());
      assertEquals((-5), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50778, 58, fieldTypeByte0, 50778, 50778, byteArray0, byteOrder0, 58);
      tiffField0.dump();
      assertEquals(50778, tiffField0.getOffset());
      assertEquals(50778, tiffField0.getBytesLength());
      assertEquals(50778, tiffField0.getTag());
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals(50778L, tiffField0.getCount());
      assertEquals(58, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "ImageColorValue");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2145948634, fieldTypeDouble0, 20L, 1L, byteArray0, byteOrder0, (byte)5);
      String string0 = tiffField0.toString();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(2145948634, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("1 (0x1: Unknown Tag): 0.0 (20 ImageColorValue)", string0);
      assertEquals(160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2527), (-2318), fieldTypeLong0, 1027L, (-1073L), byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals((-1073), tiffField0.getOffset());
      assertEquals((-2318), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-2527), tiffField0.getTag());
      assertEquals(4108, tiffField0.getBytesLength());
      assertEquals(1027L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(8, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 8, 2, byteArray0, byteOrder0, (byte)11);
      MockFileWriter mockFileWriter0 = new MockFileWriter("v{!7>X/A;E]^q4");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, (-905L), byteArray0, byteOrder0, (byte) (-3));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-905), tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(131070, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, "d:mH!-njHHqSq");
      TiffField tiffField0 = new TiffField(4, 5, fieldTypeAscii0, (byte)3, 1542L, byteArray0, byteOrder0, (-1559));
      tiffField0.toString();
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals(1542, tiffField0.getOffset());
      assertEquals((-1559), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(3L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3488), "&fE");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3488), (-3488), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (byte)63);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("~mXz(2GhF-W3", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "BlackLevelRepeatDim");
      assertEquals((-3488), tiffField0.getDirectoryType());
      assertEquals((-3488), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(63, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, "d:mH!-njHHqSq");
      TiffField tiffField0 = new TiffField(4, 5, fieldTypeAscii0, (byte)3, 1542L, byteArray0, byteOrder0, (-1559));
      tiffField0.toString();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(3L, tiffField0.getCount());
      assertEquals((-1559), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals(1542, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (byte) (-15));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 278, fieldTypeLong0, 1L, 1371L, byteArray0, byteOrder0, (byte)44);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals(1371, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)106, 114);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(50784, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(6466, tiffField0.getBytesLength());
      assertEquals(50784, tiffField0.getTag());
      assertEquals(50784, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)106, 114);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50784, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Alias Layer Metadata, fieldType: n+AC", string0);
      assertEquals(3233L, tiffField0.getCount());
      assertEquals(50784, tiffField0.getOffset());
      assertEquals(50784, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50784, tiffField0.getDirectoryType());
      assertEquals(50784, tiffField0.getTag());
      assertEquals(50784L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(6466, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50784, "n+AC");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50784, 50784, fieldTypeShort0, 3233L, 50784, byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals(50784, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50784, tiffField0.getOffset());
      assertEquals(3233L, tiffField0.getCount());
      assertEquals(50784, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, (-905L), byteArray0, byteOrder0, (byte) (-3));
      int int0 = tiffField0.getSortHint();
      assertEquals((-905), tiffField0.getOffset());
      assertEquals((-3), int0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(32803, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeDouble0, 0, (-1L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("-1 (0xffffffff: Unknown Tag): ", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2024, 2024, fieldTypeFloat0, 2024, 2701L, byteArray0, byteOrder0, (byte)76);
      tiffField0.dump();
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(8096, tiffField0.getBytesLength());
      assertEquals(2024, tiffField0.getDirectoryType());
      assertEquals(2024L, tiffField0.getCount());
      assertEquals(2701, tiffField0.getOffset());
      assertEquals(2024, tiffField0.getTag());
  }
}
