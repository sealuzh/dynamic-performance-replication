/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 22:41:32 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1032));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(61903, "2T[;;4r,De*\"%1jt", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      classWriter0.version = 479;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3644));
      classWriter0.index = (-3851);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3644), "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3657));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "->Vd}1tyZP>Z9p7.C9";
      stringArray0[1] = "7";
      stringArray0[2] = "WheelCa4m.ByteVeMctr";
      stringArray0[3] = "7";
      stringArray0[4] = "7";
      stringArray0[5] = "7";
      stringArray0[6] = "7";
      stringArray0[7] = "WheelCa4m.ByteVeMctr";
      classWriter0.visit(1749, (-3657), "WheelCa4m.ByteVeMctr", "WheelCa4m.ByteVeMctr", "7", stringArray0);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3657), "WheelCa4m.ByteVeMctr", "WheelCa4m.ByteVeMctr", "WheelCa4m.ByteVeMctr", "WheelCa4m.ByteVeMctr");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3644));
      classWriter0.index = (-3851);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3644), "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("eQKd^a}h>7ko(");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        classWriter0.firstField.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1032));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(61903, "2T[;;4r,De*\"%1jt", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2269, "#KU*k{-} hezu&ETd5", "0Ic'N", (String) null, "]B x(nEe7g999");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 1515, "f^YWJ!iI", "f^YWJ!iI", "f^YWJ!iI", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAnnotation("wheel.asm.ByteVector", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65528);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65528, "qu5zo<d{kiM^=", "qu5zo<d{kiM^=", "qu5zo<d{kiM^=", (Object) null);
      classWriter0.version = 49;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5, "", "", "", (Object) null);
      Attribute attribute0 = new Attribute("eQKd^a}h>7ko(");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.firstField.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      fieldWriter0.visitAnnotation("//j", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3594));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3594), "heel.asm.ByteVetor", "heel.asm.ByteVetor", (String) null, "heel.asm.ByteVetor");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65528);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65528, "qu5zo<d{kiM^=", "qu5zo<d{kiM^=", "qu5zo<d{kiM^=", (Object) null);
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      fieldWriter0.visitAnnotation("wheel.asm.ByteVector", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      fieldWriter0.visitAnnotation("wheel.asm.ByteVector", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(2269, "#KU*k{-} hezu&ETd5", "0Ic'N", (String) null, "]B x(nEe7g999");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "97'>Qy`9b0-%o8RR", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@38376823
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-3587), "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector");
      fieldVisitor0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3644));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-3644), "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr", "WheelCa4m.ByteVectr");
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
