/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:02:19 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.Frame;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.markSupported();
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      Object object0 = new Object();
      classReader0.getAccess();
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      int int0 = Frame.BASE_VALUE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classReader0.getItem(1000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1000
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ClassReader classReader0 = new ClassReader(byteArray0);
      Object object0 = new Object();
      classReader0.readShort(8);
      int int0 = 149;
      // Undeclared exception!
      try { 
        classReader0.readByte(149);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 149
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader(classReader0.b, 1, 8);
      Label label0 = new Label();
      classReader1.getInterfaces();
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, 8, 10);
      byteArrayInputStream0.skip(0L);
      Label[] labelArray0 = new Label[2];
      Edge edge0 = new Edge();
      Label label1 = edge0.successor;
      labelArray0[0] = null;
      labelArray0[1] = label0;
      classReader0.readLabel(1, labelArray0);
      byte[] byteArray2 = new byte[2];
      byteArray0[21] = (byte)106;
      // Undeclared exception!
      try { 
        classReader1.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "wheel.asm.MethodWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      Object object0 = new Object();
      int int0 = (-895);
      ClassWriter classWriter0 = new ClassWriter(23);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      ClassWriter classWriter2 = new ClassWriter(7802);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      Object object0 = new Object();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader0.readLong(0);
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(126);
      ClassWriter classWriter2 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (-2880));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      Object object0 = new Object();
      classReader0.readLong(10);
      ClassWriter classWriter0 = new ClassWriter(48);
      ClassWriter classWriter1 = new ClassWriter(48);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      ClassWriter classWriter2 = new ClassWriter(1);
      ClassWriter classWriter3 = new ClassWriter(48);
      ClassWriter classWriter4 = new ClassWriter((-560));
      classReader0.accept((ClassVisitor) classWriter2, 1);
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2571, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 30305
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader1.readLong(313);
      ClassWriter classWriter0 = new ClassWriter(8);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter(2147483645);
      ClassWriter classWriter2 = new ClassWriter(7802);
      ClassWriter classWriter3 = new ClassWriter(7802);
      classReader0.accept((ClassVisitor) classWriter0, 3710);
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      int int0 = Frame.DOUBLE;
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      Object object0 = new Object();
      classReader0.readLong(10);
      ClassWriter classWriter0 = new ClassWriter(23);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter2 = new ClassWriter((-114));
      ClassAdapter classAdapter1 = new ClassAdapter(classWriter0);
      ClassWriter classWriter3 = new ClassWriter(31);
      ClassWriter classWriter4 = new ClassWriter(23);
      ClassWriter classWriter5 = new ClassWriter(7802);
      classReader0.accept((ClassVisitor) classWriter0, (-21));
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-2496), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
          Object object0 = new Object();
          classReader0.readLong(10);
          ClassWriter classWriter0 = new ClassWriter(23);
          ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
          ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
          ClassWriter classWriter2 = new ClassWriter(95);
          classReader0.readLong(14);
          classReader0.accept((ClassVisitor) classWriter1, 956);
          // Undeclared exception!
          try { 
            classReader0.readUTF8(95, (char[]) null);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
          
          } catch(ArrayIndexOutOfBoundsException e) {
             //
             // no message in exception (getMessage() returned null)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      classReader0.readLong(2);
      ClassWriter classWriter0 = new ClassWriter((-831));
      classReader1.readLong(15);
      ClassWriter classWriter1 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      char char0 = 'J';
      ClassReader classReader2 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[1] = '2';
      char char1 = '9';
      classReader2.accept((ClassVisitor) classAdapter0, 1961);
      charArray0[2] = '9';
      charArray0[3] = '2';
      // Undeclared exception!
      try { 
        classReader2.readConst(8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      Object object0 = new Object();
      ClassReader classReader1 = new ClassReader(byteArray0);
      classReader1.getInterfaces();
      classReader0.getInterfaces();
      ClassReader classReader2 = new ClassReader(classReader0.b);
      ClassReader classReader3 = new ClassReader("wheel.asm.ClassReader");
      // Undeclared exception!
      try { 
        classReader3.readByte((-2365));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2365
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64077
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      classReader0.readLong(250);
      ClassWriter classWriter0 = new ClassWriter((-831));
      classReader1.readLong(15);
      ClassWriter classWriter1 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      char char0 = 'J';
      ClassReader classReader2 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[4];
      charArray0[0] = '2';
      charArray0[1] = '2';
      char char1 = '9';
      charArray0[2] = '9';
      charArray0[3] = '2';
      // Undeclared exception!
      try { 
        classReader2.readConst(250, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      classReader0.readLong(250);
      ClassWriter classWriter0 = new ClassWriter(1568);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassWriter classWriter1 = new ClassWriter((-1359));
      ClassWriter classWriter2 = new ClassWriter(1568);
      ClassWriter classWriter3 = new ClassWriter(1302);
      classReader1.accept((ClassVisitor) classWriter3, 2);
      char[] charArray0 = null;
      int int0 = 75;
      classReader0.readUTF8(int0, charArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readLong(2);
      ClassWriter classWriter0 = new ClassWriter((-831));
      classReader1.readLong(15);
      ClassWriter classWriter1 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      ClassWriter classWriter2 = new ClassWriter(4);
      ClassWriter classWriter3 = new ClassWriter(5926);
      ClassWriter classWriter4 = new ClassWriter(1300);
      classReader1.accept((ClassVisitor) classWriter3, 8);
      char[] charArray0 = null;
      int int0 = 2;
      classReader0.readUTF8(int0, charArray0);
      int int1 = 2802;
      Label[] labelArray0 = new Label[3];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = new Label();
      labelArray0[1] = label1;
      Frame frame0 = new Frame();
      Label label2 = frame0.owner;
      labelArray0[2] = label2;
      classReader1.readLabel(int1, labelArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      Object object0 = new Object();
      ClassWriter classWriter0 = new ClassWriter(23);
      classReader0.getInterfaces();
      ClassWriter classWriter1 = new ClassWriter(classReader0, (-2000));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      ClassWriter classWriter2 = new ClassWriter(1021);
      char[] charArray0 = new char[2];
      charArray0[0] = 'o';
      charArray0[1] = '`';
      classReader0.readConst(2, charArray0);
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readUTF8(23, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getInterfaces();
      classReader0.readLong(250);
      ClassWriter classWriter0 = new ClassWriter((-831));
      classReader1.readLong(15);
      ClassWriter classWriter1 = new ClassWriter(2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter1);
      ClassWriter classWriter2 = new ClassWriter(4);
      ClassWriter classWriter3 = new ClassWriter(5926);
      ClassWriter classWriter4 = new ClassWriter(1300);
      classReader1.accept((ClassVisitor) classWriter3, 250);
      char[] charArray0 = null;
      int int0 = 2;
      classReader0.readUTF8(int0, charArray0);
  }
}
