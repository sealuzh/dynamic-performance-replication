/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:23:32 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.ReInit((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, (-1757));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1757. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R.lG");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#o/");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XtFu");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.prevCharIsCR = true;
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "not");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".FVasa");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XFu");
      stringReader0.read();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*E( b<");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream0, (byte)110, (byte)113);
      byteArrayInputStream0.mark((byte)113);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte) (-128);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream0, (-397), (-397));
      byteArrayInputStream0.mark(697);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      StringReader stringReader1 = new StringReader("C5:kQ'-FyM9/E");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte) (-56);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R.lG");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("R.lG");
      simpleCharStream0.backup((-3236));
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*E( b:<");
      int int0 = ObjectStreamConstants.baseWireHandle;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XFu");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)113;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark(84);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("false");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ancestor-or-self::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = '?';
      charArray0[2] = '?';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = ':';
      charArray0[7] = '?';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((-479));
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = '?';
      charArray0[2] = '?';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = 'A';
      charArray0[7] = '?';
      charArray0[8] = '?';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 61, 53, 85);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"node\"");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(I");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream2);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 35, 45);
      SimpleCharStream simpleCharStream3 = new SimpleCharStream(byteArrayInputStream3, 47, 47);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0(I");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'H';
      charArray0[2] = '\u0000';
      charArray0[3] = '=';
      charArray0[4] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'H';
      charArray0[1] = 'A';
      charArray0[2] = '\\';
      charArray0[3] = 'H';
      charArray0[4] = 'H';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*E(b<");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<Extender>");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XVOFu");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)60;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"n*dL\"");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XFu");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)104;
      byteArray0[0] = (byte)104;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((byte)67);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendant::");
      stringReader0.read();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R5Ttu6q2O0m|jxf<xpD&");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[1] = '=';
      charArray0[2] = '&';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)50;
      byteArray0[0] = (byte)50;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = '?';
      charArray0[2] = '?';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = ':';
      charArray0[7] = '?';
      charArray0[8] = '?';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0, 531, 53, 85);
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C5:kQ'-FyM9/E");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)121;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char char0 = 'S';
      StringReader stringReader0 = new StringReader(":%");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = "\"<z`";
      StringReader stringReader0 = new StringReader("\"<z`");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("\"<z`");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader2);
      stringReader2.skip((-1));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W^V@XVOFu");
      stringReader0.reset();
      byte[] byteArray0 = new byte[3];
      stringReader0.markSupported();
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)113;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      StringReader stringReader0 = new StringReader("32]Lz8NcwS");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      char[] charArray0 = new char[9];
      charArray0[0] = '4';
      charArray0[1] = 'S';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = 'A';
      charArray0[6] = 'A';
      charArray0[7] = 'A';
      charArray0[8] = 'A';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("not");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-56);
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte) (-56);
      byteArray0[4] = (byte) (-56);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ow^p");
      byte[] byteArray0 = new byte[9];
      stringReader0.read();
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ow^p");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      stringReader0.read();
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream0, 32, 79);
      byteArrayInputStream0.mark((-1));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FVasa");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = SimpleCharStream.staticFlag;
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'B';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)117;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)111;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ow^p");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      StringReader stringReader0 = new StringReader("%%");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      byte[] byteArray0 = new byte[8];
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "Lexical error at line ";
      StringReader stringReader0 = new StringReader("Lexical error at line ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader(", column ");
      char[] charArray0 = new char[5];
      charArray0[0] = 'H';
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)107;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)64;
      byteArray0[6] = (byte)103;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(dataInputStream0, 111, 1546);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendant::");
      stringReader0.read();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y{6:+R+71YS");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-116);
      byteArray0[2] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("false");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)107;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*E( b<");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W^V@XVOFu");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lexical error at line ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 4943, 4943);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader("inot");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'A';
      charArray0[3] = 'H';
      charArray0[4] = 'S';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'S';
      charArray0[1] = '>';
      charArray0[2] = '>';
      StringReader stringReader0 = new StringReader("Lexical error at line ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)123;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W^V@XVOFu");
      StringReader stringReader1 = new StringReader("W^V@XVOFu");
      stringReader0.reset();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)119;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GBC^lMSySQ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)53;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@t3Fu");
      stringReader0.read();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = simpleCharStream0.prevCharIsCR;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XFu");
      stringReader0.read();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte) (-44);
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte) (-71);
      byteArray0[6] = (byte) (-92);
      byteArray0[7] = (byte) (-126);
      byteArray0[8] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream1);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[23];
      charArray0[0] = 'H';
      charArray0[1] = 'J';
      charArray0[2] = 'P';
      charArray0[3] = '=';
      charArray0[4] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      StringReader stringReader0 = new StringReader("32]Lz8NcwS");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^V@XFu");
      stringReader0.read();
      stringReader0.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("falsGe");
      stringReader0.mark(968);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("following-sibling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("6[q1pi{)WX=]xbh");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Rtu6q2O0m|jxf<xpD&");
      stringReader0.mark(3775);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lRW$S7z6rAvA7[");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("falsGe");
      stringReader0.mark(968);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("followings?bling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.jxpath.ri.parser.XPathParserConstants");
      String string0 = "^V@t3Fu";
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = ';';
      charArray0[2] = 'w';
      charArray0[3] = '\\';
      charArray0[4] = 'i';
      charArray0[5] = '\\';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)49;
      byteArray0[3] = (byte)119;
      byteArray0[5] = (byte)49;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = "T#|(B+; %wFS7u]\\";
      StringReader stringReader0 = new StringReader("T#|(B+; %wFS7u]");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[9];
      charArray0[0] = 'S';
      charArray0[1] = '.';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "boolean");
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lexical error at line ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.read();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte)111;
      byteArray0[5] = (byte)111;
      byteArray0[6] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[19] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, (byte)34, (byte) (-47));
      byteArrayInputStream0.mark((byte) (-47));
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ow^'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ow^'");
      StringReader stringReader1 = new StringReader("followings?bling::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8+<k@?b)k2*5#6GPt]");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }
}
