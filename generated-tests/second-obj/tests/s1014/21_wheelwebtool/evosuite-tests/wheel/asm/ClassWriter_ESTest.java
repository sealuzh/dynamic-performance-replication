/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:34:12 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import java.lang.reflect.Method;
import java.time.DateTimeException;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1107));
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      // Undeclared exception!
      try { 
        classWriter0.visitField((-1107), "]r/I*%(t;s", "]r/I*%(t;s", "]r/I*%(t;s", mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@6f5f68fe
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, (-793));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(0, "[]", "[]", "", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean.compare(true, true);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      Item item0 = classWriter0.newDouble(0.0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[2] = null;
      stringArray0[3] = "hW8_Jy^Lop#H!Cqmak";
      stringArray0[4] = null;
      stringArray0[5] = "The list of prefixes must not be null";
      stringArray0[6] = "The list of prefixes must not be null";
      stringArray0[7] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(33, 1337, "The list of prefixes must not be null", (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1043);
      classWriter0.newLong(1L);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1024, 240, "SourceDebugExtension", "SourceDebugExtension", "SourceDebugExtension", stringArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(1270);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      classWriter0.visit(268435455, 1270, "W=KOOiM3M*%):]$", "W=KOOiM3M*%):]$", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", stringArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.visitInnerClass("", "", "", 131072);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1909));
      String string0 = "InnerClasses";
      classWriter0.threshold = (-1909);
      classWriter0.addUninitializedType("InnerClasses", 46);
      Long long0 = Long.valueOf((long) 1);
      classWriter0.newConstItem(long0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("InnerClasses", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'InnerClasses.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212682);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "<u*q:K_w?D\"|s}#/\"");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(465);
      Item item0 = classWriter0.key3;
      Item item1 = new Item();
      classWriter0.visitSource("E\"&]ILgpIfiA", (String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(26);
      classWriter0.version = 9;
      classWriter0.toByteArray();
      classWriter0.newClass("");
      classWriter0.toByteArray();
      classWriter0.newFloat((-1.0F));
      classWriter0.newLong((-2649L));
      classWriter0.newLong((-2649L));
      byte[] byteArray0 = classWriter0.toByteArray();
      classWriter0.visitAnnotation("", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      classWriter0.addType("");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "System";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 2, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1233
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3337));
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@5aaac2fe
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Boolean boolean0 = Boolean.FALSE;
      int int0 = Type.BYTE;
      Boolean boolean1 = new Boolean("P.6WoOX:6)UZ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P.6WoOX:6)UZ");
      Boolean.getBoolean("P.6WoOX:6)UZ");
      classWriter0.newConstItem(boolean0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newMethod("P.6WoOX:6)UZ", "~hNM5rrWL ", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      classWriter0.newConstItem("Hq]dYI");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("Hq]dYI", "4bvtOIZC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Hq]dYI.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      ClassWriter classWriter0 = new ClassWriter((-876));
      classWriter0.visitSource("$cqd=v", "$cqd=v");
      classWriter0.visitAnnotation("$cqd=v", false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-590));
      String string0 = "";
      String string1 = null;
      classWriter0.visitOuterClass("", (String) null, "");
      String string2 = "X/r7X8";
      String string3 = "";
      String string4 = "";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1659));
      classWriter0.visitInnerClass("", "", (String) null, 1066);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(100);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(465);
      Double double0 = new Double(1);
      classWriter0.newConst(double0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2202));
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1659));
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      ZoneOffset zoneOffset1 = ZoneOffset.MAX;
      MockHijrahDate.now((ZoneId) zoneOffset1);
      Type type0 = Type.INT_TYPE;
      classWriter0.visitField((-1659), "g_]2imK?WBK3}", "Deprecated", "ZLJ.j&5x1<TT[6", type0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2202));
      String string0 = "~Hs3L8U";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("", "", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.newField("vQ:_e@", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(2468);
      String string0 = null;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, (-1994));
      classWriter0.thisName = null;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 2468);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitEnd();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(46, 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1695));
      Short short0 = new Short((short)172);
      classWriter0.visitField((-109), "~:SBa{~Ol<[ O]3R", "~:SBa{~Ol<[ O]3R", "org.apache.commons.io.filefilter.DirectoryFileFilter", short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      classWriter0.newMethod("xV3:@$UGq", "xV3:@$UGq", "xV3:@$UGq", true);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1649));
      ZoneOffset.ofTotalSeconds(1);
      Type type0 = Type.INT_TYPE;
      Item item0 = classWriter0.key2;
      classWriter0.visitField((-1649), "ZLJ.j&5x1<TT[6", "Deprecated", "ZLJ.j&5x1<TT[6", type0);
      System.setCurrentTimeMillis((-21L));
      classWriter0.visitEnd();
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.threshold = 1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newDouble((-2971.2908F));
      classWriter0.visitAnnotation("org.apache.commons.io.filefilter.EmptyFileFilter", false);
      classWriter0.visitInnerClass((String) null, "", "org.apache.commons.io.filefilter.EmptyFileFilter", 1);
      classWriter0.toByteArray();
      int int0 = Frame.DIM;
      System.setCurrentTimeMillis(1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.threshold = 1;
      Float.isFinite((-2971.2908F));
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter((-307));
      String string0 = "RuntimeVisibleAnnotations";
      classWriter0.visitSource((String) null, "value ");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "N_LXrH{9@%P-h\"&aMFux");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1659));
      classWriter0.visit(132, 6215, "TiLC", "TiLC", "TiLC", (String[]) null);
      Boolean boolean0 = new Boolean("TiLC");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TiLC");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TiLC");
      Item item0 = new Item((-1659));
      byte[] byteArray0 = classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 132, (-457));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 140
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitAnnotation("Signature", true);
      classWriter0.newNameType("Signature", "Y?88/!~#~>vtbJLhr&");
      classWriter0.newClassItem("Signature");
      classWriter0.addUninitializedType("_A", (-640));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/z,vG@>";
      classWriter0.visit(1, (-1385), "", "/z,vG@>", "", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1659));
      String string0 = "";
      classWriter0.addUninitializedType("float", (-1659));
      classWriter0.visit(1, 6215, "TiLC", "", "float", (String[]) null);
      Boolean boolean0 = new Boolean("float");
      Boolean.getBoolean("");
      Item item0 = new Item((-1659));
      byte[] byteArray0 = classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 1, (-457));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 88
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitAnnotation("Signature", true);
      classWriter0.newNameType("Signature", "Y?88/!~#~>vtbJLhr&");
      classWriter0.newClassItem("Signature");
      classWriter0.addUninitializedType("_A", (-640));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Signature";
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(256, 49, "", "", "", stringArray0);
      classWriter0.toByteArray();
      classWriter0.newFloat(49);
      classWriter0.newFloat(2);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitAnnotation("Signature", true);
      Integer integer0 = new Integer(2);
      classWriter0.newConst(integer0);
      classWriter0.newNameType("Signature", "Y?88/!~#~>vtbJLhr&");
      classWriter0.newClassItem("Signature");
      classWriter0.addUninitializedType("_A", (-640));
      classWriter0.newClass("Signature");
      classWriter0.newDouble(5);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2224));
      classWriter0.newConstItem("XJI%)mHdEH|cQ");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4096, "XJI%)mHdEH|cQ", "XJI%)mHdEH|cQ", "wheel.asm.ClassWriter", (String[]) null, true, true);
      Attribute attribute0 = new Attribute("wheel.asm.ClassWriter");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod(1005, "xI;Q7U`nrI@W=F>1X'", "R)TF&Y^MU:F<*SFrV", "The wildcard must not be null", stringArray0);
      boolean boolean0 = ClassReader.WRITER;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newClassItem("org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 142);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.addUninitializedType("Gdk(j{pD}2$7?Tz", 1);
      Item item0 = new Item();
      classWriter0.newLong(0L);
      int int0 = Double.SIZE;
      classWriter0.toByteArray();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("R)TF&Y^MU:F<*SFrV", 64);
      classWriter0.newInteger(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(64, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1567));
      classWriter0.visitSource("", "");
      classWriter0.visitInnerClass("", "", "", (-4196));
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-4196), (-1567));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2464);
      classWriter0.newNameType("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      classWriter0.newDouble(2464);
      Byte byte0 = new Byte((byte) (-50));
      classWriter0.newConstItem(byte0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "Signature";
      classWriter0.newDouble(0);
      classWriter0.newDouble(0.0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(13);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      Float float0 = new Float((double) 11);
      classWriter0.newConst(float0);
      classWriter0.visit(1262, 11, "", "pO`%gOzW66=TtY", (String) null, (String[]) null);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[17];
      stringArray0[1] = "java/lang/String";
      classWriter0.addUninitializedType("java/lang/String", (-640));
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.addUninitializedType("3.WWH#H%m?b\"l_7y ", 1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4225);
      Item item0 = classWriter0.newInteger(4225);
      Item item1 = new Item(2);
      Item item2 = new Item(4225, item0);
      item2.set((-1.0));
      classWriter0.addType("hu");
      classWriter0.addType("hu");
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.newConst(boolean0);
      Boolean boolean1 = new Boolean("P.6WoOX:6)UZ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Boolean.getBoolean((String) null);
      classWriter0.newConstItem(boolean0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newMethod("P.6WoOX:6)UZ", "~hNM5rrWL ", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(15);
      Character character0 = Character.valueOf('.');
      classWriter0.newConstItem(character0);
      classWriter0.newMethodItem("#-vBx", "?", ".;@", true);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(229);
      classWriter0.newFloat(229);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newFloat(229);
      Item item0 = new Item(1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      classWriter0.newInteger(256);
      classWriter0.newFieldItem("", "dJvU9tvACh0=6 Ga{", "");
      classWriter0.newNameType("dJvU9tvACh0=6 Ga{", "");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-755));
      classWriter0.toByteArray();
      String string0 = "java/lang/Object";
      Item item0 = classWriter0.key3;
      Type type0 = Type.INT_TYPE;
      Class<Method> class0 = Method.class;
      Type type1 = Type.getType(class0);
      Class<Long> class1 = Long.class;
      Type.getInternalName(class1);
      type1.toString();
      String string1 = "";
      classWriter0.visitField(9, "", ":mu]{1W%ib)@", "t[r7VyN;MVNS`>^.", type1);
      ClassWriter classWriter1 = new ClassWriter(1);
      Type type2 = Type.LONG_TYPE;
      int int0 = 1317;
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        ZoneOffset.ofHoursMinutes(4969, (-1790));
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value 4969 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-755));
      classWriter0.toByteArray();
      int int0 = Frame.BOOLEAN;
      classWriter0.addUninitializedType("Ro,9}Eq[P|]", 0);
      int int1 = Float.MAX_EXPONENT;
      classWriter0.addUninitializedType("Ro,9}Eq[P|]", 0);
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 16777225);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      Boolean boolean0 = Boolean.TRUE;
      Boolean.compare(true, true);
      classWriter0.newFieldItem(";YR0D<w'", ";YR0D<w'", "&6{8)6tQHp|;sqe-");
      String string0 = "N&4";
      classWriter0.visitSource("&6{8)6tQHp|;sqe-", "N&4");
      Boolean.logicalXor(false, true);
      classWriter0.newConst(boolean0);
      classWriter0.addUninitializedType("-_NO6", (-3));
      String string1 = "";
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3346));
      classWriter0.toByteArray();
      int int0 = Frame.BOOLEAN;
      String string0 = "";
      int int1 = ObjectStreamConstants.baseWireHandle;
      int int2 = Float.MAX_EXPONENT;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      classWriter0.newLong(0L);
      classWriter0.addUninitializedType("D;yF", 2634);
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-891));
      classWriter0.newConst("");
      classWriter0.newConstItem("");
      Character.valueOf('.');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">{g\"a8");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.newFloat((-677.453F));
      classWriter0.newInteger((-891));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType('.', (-905));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = 1;
      ClassWriter classWriter0 = new ClassWriter(1);
      String string0 = "=";
      classWriter0.addUninitializedType("=", (-128));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Float.isFinite(1);
      Float.isFinite(0.0F);
      int int1 = Member.PUBLIC;
      classWriter0.newClassItem("IMV@*Syolta}");
      classWriter0.visitOuterClass("", "~QqeE4ZFA@-fL@", (String) null);
      int int2 = 1145;
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("", (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(720);
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.toByteArray();
      classWriter0.newFieldItem("java/lang/Object", "java/lang/Object", "java/lang/Object");
      classWriter0.version = 2;
      classWriter0.newField("java/lang/Object", "java/lang/Object", "java/lang/Object");
      boolean boolean1 = ClassReader.FRAMES;
      int int0 = Type.FLOAT;
      int int1 = Frame.ELEMENT_OF;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("IXi");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.newFloat(2);
      int int0 = Frame.BASE_VALUE;
      int int1 = Double.SIZE;
      Float.isFinite((-2972.54F));
      classWriter0.newLong(0L);
      int int2 = Double.SIZE;
      classWriter0.addUninitializedType("wheel.asm.Frame", 64);
      classWriter0.toByteArray();
      classWriter0.newInteger(1);
      int int3 = Short.SIZE;
      classWriter0.getMergedType(1, 1);
      classWriter0.newLong(2);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@190053ef
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.threshold = 1;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(1, 1, "org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter", "", stringArray0);
      classWriter0.newDouble((-2971.2908F));
      int int0 = Frame.CHAR;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Attribute attribute0 = new Attribute("");
      byte[] byteArray0 = new byte[0];
      attribute0.value = byteArray0;
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      Float.isFinite((-2971.2908F));
      String string0 = "Gdk(j{pD}2$7X?Tz";
      int int1 = Frame.FLOAT;
      classWriter0.toByteArray();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("", 75);
      classWriter0.toByteArray();
      classWriter0.newInteger(26);
      int int2 = Short.SIZE;
      classWriter0.newMethodItem("Gdk(j{pD}2$7X?Tz", "0..T:[4\"hZMM", "XS#9cAzu3\"Yv6mHGu'N", true);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Item item0 = classWriter0.key3;
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 142);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Float.isFinite(1);
      classWriter0.addUninitializedType("Gdk(j{pD}2$7?Tz", 1);
      Item item1 = new Item();
      Integer integer0 = new Integer(2);
      classWriter0.toByteArray();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("wheel.asm.Frame", (int) integer0);
      Integer.min((-2341), 1764);
      classWriter0.toByteArray();
      classWriter0.newInteger(1);
      int int0 = Type.CHAR;
      classWriter0.getMergedType(1, 3);
      Item item2 = classWriter0.key2;
      classWriter0.getMergedType(1, 3);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 1);
      int int0 = Double.SIZE;
      boolean boolean0 = ClassReader.RESIZE;
      classWriter0.newLong(2);
      int int1 = Double.SIZE;
      classWriter0.addUninitializedType("wheel.asm.Frame", 64);
      classWriter0.toByteArray();
      classWriter0.newInteger(1);
      int int2 = Frame.SHORT;
      classWriter0.getMergedType(1, 2);
      classWriter0.newLong(3);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newClassItem("org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 139);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Float.isFinite((-2972.54F));
      classWriter0.addUninitializedType("Tk.rs%VY^Ar", 1);
      classWriter0.newLong(0L);
      int int0 = Double.SIZE;
      classWriter0.version = (-9);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("wheel.asm.Frame", 64);
      Item item0 = classWriter0.key3;
      classWriter0.getMergedType(1, 3);
      classWriter0.newLong(4);
      classWriter0.addType("wheel.asm.Frame");
      classWriter0.newLong(914L);
      classWriter0.addType("Tk.rs%VY^Ar");
      classWriter0.getMergedType(1, 4);
      classWriter0.visitAnnotation("org.apache.commons.io.filefilter.EmptyFileFilter", true);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      classWriter0.newClassItem("org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.newFieldItem("org.apache.commons.io.filefilter.EmptyFileFilter", "yYQZL`-Y\"vvDZ!=?", "org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 139);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = ClassReader.RESIZE;
      Float.isFinite((-2972.54F));
      classWriter0.addUninitializedType("org.apache.commons.io.filefilter.EmptyFileFilter", 1);
      classWriter0.newLong(2);
      classWriter0.version = 2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("wheel.asm.Frame", 1);
      Item item0 = new Item();
      classWriter0.getMergedType(1, 3);
      classWriter0.newLong(4);
      classWriter0.invalidFrames = true;
      classWriter0.addType("wheel.asm.Frame");
      classWriter0.newLong(896L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      classWriter0.visitAnnotation("BHh>{Kvh&9[hc_3oL", true);
      classWriter0.newMethodItem("org.apache.commons.io.filefilter.EmptyFileFilter", "EnclosingMethod", "|+.|a_", true);
      classWriter0.addType("Du");
      classWriter0.newMethodItem("org.apache.commons.io.filefilter.EmptyFileFilter", "EnclosingMethod", "|+.|a_", true);
  }
}
