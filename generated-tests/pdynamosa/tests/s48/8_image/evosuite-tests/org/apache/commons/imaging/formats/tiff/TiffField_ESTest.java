/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 12:43:40 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1754), "~WTs.");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)43;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1754), (-1754), fieldTypeShort0, 50733L, (-2216L), byteArray0, byteOrder0, (byte) (-38));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(43, int0);
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-1754), tiffField0.getDirectoryType());
      assertEquals((-1754), tiffField0.getTag());
      assertEquals((-2216), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 65535, fieldTypeByte0.SSHORT, 1L, 40095, byteArray0, byteOrder0, 1579);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1579, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(40095, tiffField0.getTag());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(40095, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3851), 0, fieldTypeByte0, 0, (-3851), byteArray0, byteOrder0, (byte) (-100));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals((-3851), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-3851), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1675), (FieldType) null, (-1061L), 14L, byteArray0, byteOrder0, (-1675));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1675), tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-1675), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(400, (-3225), fieldTypeShort0, 1L, 282L, byteArray0, byteOrder0, 37);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3225), tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getTag());
      assertEquals(282, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeFloat0, (-1L), 1L, byteArray0, byteOrder0, (-1530));
      int int0 = tiffField0.getTag();
      assertEquals((-1530), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1107), 96, fieldTypeFloat0.IFD, 841L, 96, byteArray0, byteOrder0, (-1107));
      int int0 = tiffField0.getTag();
      assertEquals((-1107), tiffField0.getSortHint());
      assertEquals((-1107), int0);
      assertEquals(96, tiffField0.getOffset());
      assertEquals(96, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(48129, "`Ux`v%kgX.");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)11;
      TiffField tiffField0 = new TiffField(48129, 2479, fieldTypeAscii0, 96258L, 1L, byteArray0, byteOrder0, (byte)11);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(2479, tiffField0.getDirectoryType());
      assertEquals(48129, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeByte0.SSHORT, 2, 2, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2109, (byte)24, fieldTypeRational0, 0L, 8L, byteArray0, byteOrder0, (byte) (-69));
      int int0 = tiffField0.getSortHint();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(2109, tiffField0.getTag());
      assertEquals((-69), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1844, 1844, fieldTypeByte0, 1844, 1844, byteArray0, byteOrder0, 1410);
      int int0 = tiffField0.getOffset();
      assertEquals(1410, tiffField0.getSortHint());
      assertEquals(1844, tiffField0.getDirectoryType());
      assertEquals(1844, tiffField0.getTag());
      assertEquals(1844, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3851), 0, fieldTypeByte0, 0, (-3851), byteArray0, byteOrder0, (byte) (-100));
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3851), tiffField0.getTag());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals((-3851), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-83);
      byteArray0[7] = (byte) (-83);
      TiffField tiffField0 = new TiffField((-2146114078), (-1), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).DOUBLE).SRATIONAL, (-2146114078), 2127031392, byteArray0, byteOrder0, 2127031392);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2127031392, tiffField0.getOffset());
      assertEquals((-2146114078), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(2127031392, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-69);
      TiffField tiffField0 = new TiffField(6, (-1920), fieldTypeLong0, (byte)127, 65521, byteArray0, byteOrder0, 322);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1920), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(65521, tiffField0.getOffset());
      assertEquals(322, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2042, 1, fieldTypeFloat0, 1, (-2147483648L), byteArray0, byteOrder0, 661);
      tiffField0.getIntValue();
      assertEquals(661, tiffField0.getSortHint());
      assertEquals(2042, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-6);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-2227));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2227), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-128);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3226, 2660, fieldTypeByte0, 1L, 622L, byteArray0, byteOrder0, (-2146158857));
      tiffField0.getIntValue();
      assertEquals(2660, tiffField0.getDirectoryType());
      assertEquals(622, tiffField0.getOffset());
      assertEquals((-2146158857), tiffField0.getSortHint());
      assertEquals(3226, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeByte0.SSHORT, 2, 2, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-3578), "");
      TiffField tiffField0 = new TiffField(73, 2147317240, fieldTypeFloat0, 2147317240, 210L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(73, tiffField0.getTag());
      assertEquals(210, tiffField0.getOffset());
      assertEquals(2147317240, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147441316, 2127031422, (FieldType) null, 2147441316, 2147441316, byteArray0, byteOrder0, 2146735135);
      tiffField0.getFieldType();
      assertEquals(2127031422, tiffField0.getDirectoryType());
      assertEquals(2147441316, tiffField0.getOffset());
      assertEquals(2147441316, tiffField0.getTag());
      assertEquals(2146735135, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-472), (-472), fieldTypeByte0, 3106L, 1L, byteArray0, byteOrder0, 711);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-472), tiffField0.getDirectoryType());
      assertEquals(711, tiffField0.getSortHint());
      assertEquals((-472), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1920), (-1920), fieldTypeLong0, (byte)127, 1528L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-1920), tiffField0.getDirectoryType());
      assertEquals(1528, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1920), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1920), 1765, fieldTypeLong0, 1L, 2740L, byteArray0, byteOrder0, (-357));
      tiffField0.getDoubleValue();
      assertEquals(1765, tiffField0.getDirectoryType());
      assertEquals((-1920), tiffField0.getTag());
      assertEquals(2740, tiffField0.getOffset());
      assertEquals((-357), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)11;
      TiffField tiffField0 = new TiffField((-836), 5, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-836), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-128);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3226, 2660, fieldTypeByte0, 1L, 622L, byteArray0, byteOrder0, (-2146158857));
      tiffField0.getDoubleValue();
      assertEquals(2660, tiffField0.getDirectoryType());
      assertEquals(622, tiffField0.getOffset());
      assertEquals((-2146158857), tiffField0.getSortHint());
      assertEquals(3226, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2109, (byte)24, fieldTypeRational0, 0L, 8L, byteArray0, byteOrder0, (byte) (-69));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(24, int0);
      assertEquals(2109, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-69), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146735127, (-2146875122), fieldTypeByte0, (byte)121, 971L, byteArray0, byteOrder0, (-2144902536));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2144902536), tiffField0.getSortHint());
      assertEquals((-2146875122), int0);
      assertEquals(971, tiffField0.getOffset());
      assertEquals(2146735127, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2167, ">WTsuq^NvxZb=%{");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2167, 2167, fieldTypeShort0, 1L, (-1031L), byteArray0, byteOrder0, (-2521));
      tiffField0.getCount();
      assertEquals((-1031), tiffField0.getOffset());
      assertEquals(2167, tiffField0.getTag());
      assertEquals((-2521), tiffField0.getSortHint());
      assertEquals(2167, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, (-1L), 2, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48320, (byte) (-69), fieldTypeRational0, 0, 2147483647L, byteArray0, byteOrder0, 65535);
      tiffField0.getBytesLength();
      assertEquals(48320, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-69), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1107), 96, fieldTypeFloat0.IFD, 841L, 96, byteArray0, byteOrder0, (-1107));
      tiffField0.getBytesLength();
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals((-1107), tiffField0.getSortHint());
      assertEquals((-1107), tiffField0.getTag());
      assertEquals(96, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 1L, (-963L), byteArray0, byteOrder0, (-1419));
      tiffField0.getByteOrder();
      assertEquals((-963), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1419), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeAscii0, 550, 2143L, byteArray0, byteOrder0, 550);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(550, tiffField0.getSortHint());
      assertEquals(2143, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 0, 65535, byteArray0, byteOrder0, 559);
      tiffField0.getByteArrayValue();
      assertEquals(559, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1920), 4591, fieldTypeLong0, 3202L, (-1920), byteArray0, byteOrder0, (byte) (-37));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("`c");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "l()^{e");
      assertEquals((-1920), tiffField0.getOffset());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals((-1920), tiffField0.getTag());
      assertEquals(4591, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1610612735), 1, fieldTypeByte0, (-235L), 1163L, byteArray0, byteOrder0, 1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1445), (-1445), fieldTypeRational0, (-43L), (-1L), byteArray0, byteOrder0, 1322);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1846L), (-1453L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoAsciiOrRational");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3216), (-126), fieldTypeShort0, (-126), (-3216), byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1606, 0, fieldTypeFloat0.BYTE, (-87L), (byte)3, byteArray0, byteOrder0, (-1052));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeFloat0, (-1), (-1), (byte[]) null, byteOrder0, (-2053));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-827), (-827), fieldTypeByte0, (-827), (-827), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1675), (FieldType) null, (-1061L), 14L, byteArray0, byteOrder0, (-1675));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2578, 2578, (FieldType) null, 2578, 4L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2143628201, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      TiffField tiffField0 = new TiffField(513, 46, fieldTypeFloat0, (-7768L), 1254L, byteArray0, byteOrder0, (-1784));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-7092), 0, (FieldType) null, 2085L, 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147441316, 2127031422, (FieldType) null, 2147441316, 2147441316, byteArray0, byteOrder0, 2146735135);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-157), "/4/y+2n~Aq~uFF%Mh?");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1389), 1098, fieldTypeLong0, (-2104L), (-1830L), byteArray0, byteOrder0, (byte) (-98));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag):  (0 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1273, 1273, fieldTypeShort0, (-1L), (-1L), byteArray0, (ByteOrder) null, 1273);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeAscii0, 550, 2143L, byteArray0, byteOrder0, 550);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2143, tiffField0.getOffset());
      assertEquals(550, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(97, (-1270), fieldTypeByte0, 97, (-1270), byteArray0, byteOrder0, (-3943));
      tiffField0.getValue();
      assertEquals((-1270), tiffField0.getDirectoryType());
      assertEquals((-3943), tiffField0.getSortHint());
      assertEquals(97, tiffField0.getTag());
      assertEquals((-1270), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(359, 359, fieldTypeDouble0, 359, (-5092L), byteArray0, byteOrder0, 1396);
      int int0 = tiffField0.getTag();
      assertEquals(1396, tiffField0.getSortHint());
      assertEquals(359, tiffField0.getDirectoryType());
      assertEquals((-5092), tiffField0.getOffset());
      assertEquals(359, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), fieldTypeByte0, (-2387L), (-1L), byteArray0, byteOrder0, (-1713));
      tiffField0.getBytesLength();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1713), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1920), (-1920), fieldTypeLong0, (byte)127, 1528L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37381, (-2144902536), fieldTypeLong0, (-2144902536), 429, byteArray0, byteOrder0, (byte) (-36));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1283), 108, fieldTypeByte0, 108, (-1283), byteArray0, byteOrder0, (byte) (-27));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6f05fce2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2146735135, 2, fieldTypeByte0.SHORT, 689L, 2, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2146735135, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-97), (byte)51, fieldTypeFloat0, (byte)1, (-2147483648L), byteArray0, byteOrder0, 41487);
      tiffField0.getIntValueOrArraySum();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(41487, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(359, 359, fieldTypeDouble0, 359, (-5092L), byteArray0, byteOrder0, 1396);
      tiffField0.getDoubleArrayValue();
      assertEquals(359, tiffField0.getDirectoryType());
      assertEquals(1396, tiffField0.getSortHint());
      assertEquals((-5092), tiffField0.getOffset());
      assertEquals(359, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1396, 0, fieldTypeByte0, 258L, (-557L), byteArray0, byteOrder0, 1396);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@444e6fd0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1920), 4591, fieldTypeLong0, 3202L, (-1920), byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getDoubleArrayValue();
      assertEquals(4591, tiffField0.getDirectoryType());
      assertEquals((-1920), tiffField0.getTag());
      assertEquals((-1920), tiffField0.getOffset());
      assertEquals((-37), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)11, (byte)0, fieldTypeFloat0, 8L, (-1382L), byteArray0, byteOrder0, (-885));
      tiffField0.getDoubleArrayValue();
      assertEquals((-885), tiffField0.getSortHint());
      assertEquals((-1382), tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1920), ")Z^r5|9<fX.bF]\"!");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2146114078), (byte)127, fieldTypeLong0.SRATIONAL, (-2146114078), (-1852L), byteArray0, byteOrder0, (byte)127);
      assertEquals(10956560, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getSortHint());
      assertEquals((-1852), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-2146114078), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeByte0, 1L, 2, byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeDouble0.SSHORT, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      tiffField0.getDoubleArrayValue();
      assertEquals(30, tiffField0.getOffset());
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getTag());
      assertEquals(30L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1478), (byte)11, fieldTypeLong0, (byte)3, 2273L, byteArray0, byteOrder0, (byte) (-36));
      tiffField0.getIntArrayValue();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals((-1478), tiffField0.getTag());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(2273, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2146735135, 2, fieldTypeByte0.SSHORT, 689L, 2, byteArray0, byteOrder0, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(689L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(1378, tiffField0.getBytesLength());
      assertEquals(2146735135, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48320, (byte) (-69), fieldTypeRational0, 0, 2147483647L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(48320, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-69), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2001, 2001, fieldTypeByte0.RATIONAL, 2001, 96L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(400, (-3225), fieldTypeShort0, 1L, 282L, byteArray0, byteOrder0, 37);
      tiffField0.getIntArrayValue();
      assertEquals((-3225), tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(400, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3851), 0, fieldTypeByte0, 0, (-3851), byteArray0, byteOrder0, (byte) (-100));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5dfb2c8d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3343, (byte)2, fieldTypeAscii0, 1194L, 2334L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertEquals(1194, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3343, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2334, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1258, 1258, fieldTypeShort0, 1258, 1258, byteArray0, byteOrder0, 1258);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@5041e893
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeAscii0, 141L, 70, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.getTagName();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xf)", string0);
      assertEquals(70, tiffField0.getOffset());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(141L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2146114078), fieldTypeByte0, (-4416L), (-2783), (byte[]) null, byteOrder0, (-2146114078));
      String string0 = tiffField0.getTagName();
      assertEquals((-2146114078), tiffField0.getDirectoryType());
      assertEquals("GPSVersionID", string0);
      assertEquals((-2146114078), tiffField0.getSortHint());
      assertEquals((-4416L), tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2783), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeFloat0, (-1), (-1), (byte[]) null, byteOrder0, (-2053));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("W`Ib[P9-lJ.2(2BKq");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-69), (byte) (-69), fieldTypeByte0.FLOAT, 1232L, 2220L, byteArray0, byteOrder0, 48129);
      String string0 = tiffField0.getValueDescription();
      assertEquals(48129, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-69), tiffField0.getTag());
      assertEquals((-69), tiffField0.getDirectoryType());
      assertEquals(4928, tiffField0.getBytesLength());
      assertEquals(2220, tiffField0.getOffset());
      assertEquals(1232L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(821, 75, fieldTypeByte0, 821, 821, byteArray0, byteOrder0, 75);
      String string0 = tiffField0.getValueDescription();
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(821, tiffField0.getOffset());
      assertEquals(821L, tiffField0.getCount());
      assertEquals(75, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(821, tiffField0.getBytesLength());
      assertEquals(821, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1154), (-1154), fieldTypeFloat0, 1378L, 1378L, byteArray0, byteOrder0, (-1154));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1154), tiffField0.getSortHint());
      assertEquals((-1154), tiffField0.getDirectoryType());
      assertEquals(1378L, tiffField0.getCount());
      assertEquals(5512, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1378, tiffField0.getOffset());
      assertEquals((-1154), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)47, "Wl,IgIzC+*");
      TiffField tiffField0 = new TiffField((-1730), 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, (byte)47);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals((-1730), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(3089, 3089, fieldTypeLong0, 3089, 3089, byteArray0, byteOrder0, (-3392));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3089, tiffField0.getDirectoryType());
      assertEquals(3089L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(3089, tiffField0.getOffset());
      assertEquals((-3392), tiffField0.getSortHint());
      assertEquals(12356, tiffField0.getBytesLength());
      assertEquals(3089, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)30, (byte)30, fieldTypeDouble0.SSHORT, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      String string0 = tiffField0.getValueDescription();
      assertEquals(30, tiffField0.getOffset());
      assertEquals(30L, tiffField0.getCount());
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getTag());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1258, 1258, fieldTypeShort0, 1258, 1258, byteArray0, byteOrder0, 1258);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1258, tiffField0.getOffset());
      assertEquals(2516, tiffField0.getBytesLength());
      assertEquals(1258L, tiffField0.getCount());
      assertEquals(1258, tiffField0.getDirectoryType());
      assertEquals(1258, tiffField0.getSortHint());
      assertEquals(1258, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeAscii0, 141L, 70, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(15, tiffField0.getTag());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(141, tiffField0.getBytesLength());
      assertEquals(70, tiffField0.getOffset());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[203];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(746, 746, fieldTypeDouble0, 746, 746, byteArray0, byteOrder0, 746);
      String string0 = tiffField0.getValueDescription();
      assertEquals(746, tiffField0.getTag());
      assertEquals(746, tiffField0.getDirectoryType());
      assertEquals(746L, tiffField0.getCount());
      assertEquals(5968, tiffField0.getBytesLength());
      assertEquals(746, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(746, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1501), 2021161080, fieldTypeByte0.ASCII, 0, 50733L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2021161080, tiffField0.getDirectoryType());
      assertEquals(50733, tiffField0.getOffset());
      assertEquals((-1501), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-836), 5, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-836), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2109, (byte)24, fieldTypeRational0, 0L, 8L, byteArray0, byteOrder0, (byte) (-69));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2109, tiffField0.getTag());
      assertEquals((-69), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      CharBuffer charBuffer0 = CharBuffer.allocate(818);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1499, 70, fieldTypeLong0, 818, (byte)61, byteArray0, byteOrder0, (byte)61);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1499, tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(61L, tiffElement0.offset);
      assertEquals(818L, tiffField0.getCount());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1412, 992, fieldTypeLong0, 876L, 1L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertNotNull(string0);
      assertEquals(992, tiffField0.getDirectoryType());
      assertEquals(1412, tiffField0.getTag());
      assertEquals(876L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-97), (byte)51, fieldTypeFloat0, (byte)1, (-2147483648L), byteArray0, byteOrder0, 41487);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-97), tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(41487, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1283), 108, fieldTypeByte0, 108, (-1283), byteArray0, byteOrder0, (byte) (-27));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(108, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals((-1283), tiffField0.getTag());
      assertEquals((-1283), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1396, (String) null);
      TiffField tiffField0 = new TiffField(1396, 2146735135, fieldTypeDouble0, 160L, 1396, (byte[]) null, byteOrder0, 1396);
      tiffField0.getFieldTypeName();
      assertEquals(1396, tiffField0.getSortHint());
      assertEquals(2146735135, tiffField0.getDirectoryType());
      assertEquals(1396, tiffField0.getTag());
      assertEquals(1280, tiffField0.getBytesLength());
      assertEquals(1396, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (-1610612735), fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, 50829);
      tiffField0.getOffset();
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(50829, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2109, (byte)24, fieldTypeRational0, 0L, 8L, byteArray0, byteOrder0, (byte) (-69));
      tiffField0.dump();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2109, tiffField0.getTag());
      assertEquals((-69), tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(821, 75, fieldTypeByte0, 821, 821, byteArray0, byteOrder0, 75);
      int int0 = tiffField0.getSortHint();
      assertEquals(75, int0);
      assertEquals(821L, tiffField0.getCount());
      assertEquals(821, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(821, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)11, (byte)0, fieldTypeFloat0, 8L, (-1382L), byteArray0, byteOrder0, (-885));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1382), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("11 (0xb: ProcessingSoftware): ", string0);
      assertEquals(8L, tiffField0.getCount());
      assertEquals((-885), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(888, (-1), fieldTypeByte0, (-322L), 888, byteArray0, byteOrder0, (-59));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1273, 1273, fieldTypeShort0, (-1L), (-1L), byteArray0, (ByteOrder) null, 1273);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1273, tiffField0.getTag());
      assertEquals(1273, tiffField0.getSortHint());
      assertEquals(1273, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3851), 0, fieldTypeByte0, 0, (-3851), byteArray0, byteOrder0, (byte) (-100));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-1), 2311);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3851), tiffField0.getTag());
      assertEquals((-3851), tiffField0.getOffset());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }
}
