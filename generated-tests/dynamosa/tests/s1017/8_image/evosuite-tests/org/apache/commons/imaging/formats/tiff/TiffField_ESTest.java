/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 00:36:44 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-87);
      byteArray0[4] = (byte)84;
      TiffField tiffField0 = new TiffField((byte)84, 1530, fieldTypeRational0, 1530, (-1L), byteArray0, byteOrder0, (byte)12);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12240, tiffField0.getBytesLength());
      assertEquals(84, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1530, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)84;
      TiffField tiffField0 = new TiffField((byte)84, 1530, fieldTypeRational0, 1530, (-1L), byteArray0, byteOrder0, (byte)12);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(12240, tiffField0.getBytesLength());
      assertEquals(1530, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SpectralSensitivity");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField((byte) (-80), 2147418121, fieldTypeByte0, (byte)4, 2146985507, byteArray0, byteOrder0, 283);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147418121, tiffField0.getDirectoryType());
      assertEquals(283, tiffField0.getSortHint());
      assertEquals((-80), tiffField0.getTag());
      assertEquals(2146985507, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40093, 127, fieldTypeShort0, 0L, 127, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals("40093 (0x9c9d: XPAuthor): Invalid value: Text field not encoded as bytes. (0 Short)", string0);
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      tiffField0.dump();
      assertEquals(297, tiffField0.getOffset());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(297, tiffField0.getTag());
      assertEquals(2376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 34L, byteArray0, byteOrder0, (-3165));
      String string0 = tiffField0.getValueDescription();
      assertEquals(34, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50217, tiffField0.getTag());
      assertEquals((-3165), tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1619), (-3640), fieldTypeAscii0, 3589L, (-11100L), byteArray0, byteOrder0, 55);
      tiffField0.getValue();
      assertEquals((-1619), tiffField0.getTag());
      assertEquals((-3640), tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals((-11100), tiffField0.getOffset());
      assertEquals(3589, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(28, (-260), fieldTypeFloat0, (-260), (-2235L), byteArray0, (ByteOrder) null, 2143247980);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-260), tiffField0.getDirectoryType());
      assertEquals(2143247980, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-2235), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(51, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 7, fieldTypeByte0, 51, 4L, byteArray0, byteOrder0, 41);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tagInfo0.tag);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertTrue(tagInfo0.isOffset());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-51), fieldTypeFloat0, (byte)0, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-51), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, (-1747), fieldTypeShort0, 2048L, (-1128L), byteArray0, byteOrder0, (byte) (-82));
      int int0 = tiffField0.getTag();
      assertEquals(50, int0);
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals((-1747), tiffField0.getDirectoryType());
      assertEquals((-1128), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      TiffField tiffField0 = new TiffField(2147308156, 474, fieldTypeAscii0, 32776L, 1306L, byteArray0, byteOrder0, 2508);
      String string0 = tiffField0.getStringValue();
      assertEquals(32776, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1306, tiffField0.getOffset());
      assertEquals(2508, tiffField0.getSortHint());
      assertEquals(474, tiffField0.getDirectoryType());
      assertEquals(2147308156, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1025, 1025, fieldTypeByte0, 1L, 1025, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(1025, tiffField0.getTag());
      assertEquals(1025, tiffField0.getDirectoryType());
      assertEquals(1025, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-267), fieldTypeLong0, 0L, 0L, (byte[]) null, byteOrder0, (-184));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-184), int0);
      assertEquals((-267), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5378), 2135748764, fieldTypeLong0, (-5378), 0L, byteArray0, byteOrder0, 711);
      int int0 = tiffField0.getOffset();
      assertEquals(711, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2135748764, tiffField0.getDirectoryType());
      assertEquals((-5378), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeAscii0, (byte) (-1), (-1L), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((-196), 1620, fieldTypeLong0, 1620, (-196), byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-196), tiffField0.getTag());
      assertEquals((-196), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(6480, tiffField0.getBytesLength());
      assertEquals(1620, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-543), 0, fieldTypeShort0, 2157L, (-1L), byteArray0, byteOrder0, (-1500));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-543), tiffField0.getTag());
      assertEquals((-256), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1500), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4314, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, 2133071006, fieldTypeShort0, (byte)1, (-1712L), byteArray0, byteOrder0, 65535);
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2133071006, tiffField0.getDirectoryType());
      assertEquals((-1712), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(4, (byte)1, fieldTypeLong0, (byte)1, 4, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-113);
      TiffField tiffField0 = new TiffField(50934, 50934, fieldTypeLong0, 1, 26L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50934, tiffField0.getTag());
      assertEquals(50934, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1777), (String) null);
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeAscii0, 2485, 2147483647L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(92, "");
      TiffField tiffField0 = new TiffField((-1), 34677, fieldTypeDouble0, 2640, (-65L), byteArray0, byteOrder0, 92);
      tiffField0.getFieldTypeName();
      assertEquals(34677, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-65), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147308156, 19, (FieldType) null, 3377L, 2055L, byteArray0, byteOrder0, (-1619));
      tiffField0.getFieldType();
      assertEquals(2147308156, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(2055, tiffField0.getOffset());
      assertEquals((-1619), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SpectralSensitivity");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeByte0, 124L, 124L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(124, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-1), "f2mPOn`H.Oxfb{1");
      TiffField tiffField0 = new TiffField(3257, 3257, fieldTypeAscii0, 3918L, 1L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getFieldType();
      assertEquals(3257, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(3257, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-235), (-2146587742), fieldTypeLong0, (byte)1, 567L, byteArray0, byteOrder0, (-2146587742));
      tiffField0.getDoubleValue();
      assertEquals(567, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-235), tiffField0.getTag());
      assertEquals((-2146587742), tiffField0.getSortHint());
      assertEquals((-2146587742), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3318, "/c{&hVG=D42DQXn~97");
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-63);
      TiffField tiffField0 = new TiffField(286, 0, fieldTypeFloat0, 1L, (-1417L), byteArray0, byteOrder0, (byte) (-63));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-1417), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(286, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)1, 0, fieldTypeShort0, 919L, 1901L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1901, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3082), 421, fieldTypeDouble0, 4L, 255L, byteArray0, byteOrder0, (byte)39);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals((-3082), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(421, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2546, "O'^8;iw:N");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-2123L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2123), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1415, (-434), fieldTypeRational0, 332L, 1185L, byteArray0, byteOrder0, (byte)1);
      long long0 = tiffField0.getCount();
      assertEquals(1185, tiffField0.getOffset());
      assertEquals((-434), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(332L, long0);
      assertEquals(1415, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)91);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-2147483648L), (-2848L), byteArray0, byteOrder0, (byte)91);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2848), tiffField0.getOffset());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(38, 20, fieldTypeRational0, 38, 38, byteArray0, byteOrder0, (byte)10);
      int int0 = tiffField0.getBytesLength();
      assertEquals(38, tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(304, int0);
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(780, 780, fieldTypeShort0, 1143L, 0L, byteArray0, (ByteOrder) null, (byte) (-33));
      tiffField0.getByteOrder();
      assertEquals(780, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(780, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147377907, (byte)1, fieldTypeShort0, (byte)1, 1450L, byteArray0, byteOrder0, (-1025));
      tiffField0.getByteOrder();
      assertEquals(1450, tiffField0.getOffset());
      assertEquals(2147377907, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1025), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.UNDEFINED, 1075L, 2612, byteArray0, byteOrder0, 35);
      tiffField0.getByteArrayValue();
      assertEquals(2612, tiffField0.getOffset());
      assertEquals(1070, tiffField0.getDirectoryType());
      assertEquals(1075, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(1070, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeRational0.UNDEFINED, 12240L, (-2058L), byteArray0, byteOrder0, (byte)10);
      tiffField0.getByteArrayValue();
      assertEquals(12240, tiffField0.getBytesLength());
      assertEquals(20, tiffField0.getTag());
      assertEquals((-2058), tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1619), (-3640), fieldTypeAscii0, 3589L, (-11100L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(117, 117, fieldTypeShort0, 117, 117, (byte[]) null, byteOrder0, 117);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-55), (-55), fieldTypeRational0, (-55), (-55), byteArray0, byteOrder0, (-55));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeRational0, 1L, 9504L, byteArray0, byteOrder0, 303);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(248, 248, fieldTypeByte0, 3918L, 2371L, (byte[]) null, byteOrder0, 248);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3201), (-3201), fieldTypeShort0, (-3201), (-3201), byteArray0, byteOrder0, (-3201));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1002), fieldTypeLong0, (byte)58, (-1002), byteArray0, byteOrder0, (byte)58);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-529), (-529), fieldTypeRational0, (-529), (-529), byteArray0, byteOrder0, (-529));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1617), fieldTypeRational0, 1, (-1273L), byteArray0, byteOrder0, (-1617));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(308, 308, fieldTypeRational0, 308, 308, (byte[]) null, byteOrder0, 308);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-18), (byte) (-18), fieldTypeShort0, (byte) (-18), (byte) (-18), byteArray0, byteOrder0, (byte) (-18));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3994), (-3994), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-3994));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeRational0, 303, 303, (byte[]) null, byteOrder0, 303);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(312, 312, fieldTypeRational0, 312, 312, (byte[]) null, (ByteOrder) null, 312);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-109), (byte) (-109), fieldTypeShort0, (byte) (-109), (byte) (-109), byteArray0, byteOrder0, (byte) (-109));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(230, 230, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 230);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(40095);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40095, 40095, (FieldType) null, 904L, 40095, byteArray0, byteOrder0, 518);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-3008), (-3008), fieldTypeRational0, 297, (-3008), (byte[]) null, byteOrder0, (-3008));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-3117), (-3117), fieldTypeRational0, (-3117), (-3117), byteArray0, byteOrder0, (-3117));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(310, 1785, fieldTypeRational0, 1L, 310, byteArray0, byteOrder0, 1785);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1902), (-1902), fieldTypeShort0, (-1902), (-1902), (byte[]) null, byteOrder0, (-1902));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3027), (-3027), fieldTypeLong0, (-3027), (-3027), byteArray0, byteOrder0, (-3027));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2772, 2772, (FieldType) null, 2772, 2772, byteArray0, byteOrder0, (byte)59);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, (byte[]) null, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-10), (byte) (-10), fieldTypeShort0, (byte) (-10), (byte) (-10), byteArray0, byteOrder0, (byte) (-10));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (-3171L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeShort0, (byte)107, (byte)107, (byte[]) null, byteOrder0, (byte)107);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeShort0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 34852);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2899, 2899, (FieldType) null, 152L, (-1L), byteArray0, byteOrder0, (byte) (-94));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4180), (-4180), fieldTypeShort0, (-4180), (-4180), byteArray0, byteOrder0, (-4180));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(269, 433, fieldTypeRational0, 1L, (-4L), byteArray0, byteOrder0, 433);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Sh%Zarlwi0\"j{E");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Sh%Zarlwi0\"j{E");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)24, (-1320), fieldTypeShort0, (-1320), (-1320), byteArray0, byteOrder0, (byte)24);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BestQualityScale");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 215, fieldTypeRational0, 1, 215, byteArray0, byteOrder0, (-548));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("w");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1273), (-1273), fieldTypeRational0, (-1273), 1337L, byteArray0, byteOrder0, (-1273));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 27);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-589), (-196), fieldTypeLong0.SSHORT, (-3640), 255L, byteArray0, byteOrder0, (-2146507961));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("I#/K_\"oS\"");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3165), "4+#u");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50217, 50217, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-3165));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(50217, tiffField0.getDirectoryType());
      assertEquals((-3165), tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "SpectralSensitivity");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 5078L, 4L, byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeShort0, (byte)8, (byte)8, (byte[]) null, byteOrder0, (byte)8);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1771), (-1771), fieldTypeFloat0, (-1771), (-1771), (byte[]) null, byteOrder0, (-1771));
      tiffField0.getFieldType();
      assertEquals((-1771), tiffField0.getSortHint());
      assertEquals((-1771), tiffField0.getDirectoryType());
      assertEquals((-1771), tiffField0.getTag());
      assertEquals((-1771), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1619), (-3640), fieldTypeAscii0, 4314L, (-221L), byteArray0, byteOrder0, (-95));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3640), int0);
      assertEquals((-1619), tiffField0.getTag());
      assertEquals((-221), tiffField0.getOffset());
      assertEquals((-95), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeShort0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2045222521, 2045222521, fieldTypeRational0, 2045222521, (-1231L), (byte[]) null, byteOrder0, 2045222521);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4714, 4714, fieldTypeFloat0, (-1L), 4714, byteArray0, byteOrder0, 34019);
      int int0 = tiffField0.getOffset();
      assertEquals(4714, tiffField0.getDirectoryType());
      assertEquals(34019, tiffField0.getSortHint());
      assertEquals(4714, int0);
      assertEquals(4714, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 231, fieldTypeShort0, 921L, 921L, byteArray0, byteOrder0, 231);
      int int0 = tiffField0.getTag();
      assertEquals(921, tiffField0.getOffset());
      assertEquals(231, tiffField0.getDirectoryType());
      assertEquals(231, tiffField0.getSortHint());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-276), (-276), fieldTypeByte0, (-276), (-276), byteArray0, byteOrder0, (-2343));
      long long0 = tiffField0.getCount();
      assertEquals((-276), tiffField0.getOffset());
      assertEquals((-276), tiffField0.getTag());
      assertEquals((-2343), tiffField0.getSortHint());
      assertEquals((-276), tiffField0.getDirectoryType());
      assertEquals((-276L), long0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)91, (byte)91, fieldTypeShort0, (-8L), 3739L, byteArray0, byteOrder0, 8);
      int int0 = tiffField0.getBytesLength();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(3739, tiffField0.getOffset());
      assertEquals(91, tiffField0.getDirectoryType());
      assertEquals((-16), int0);
      assertEquals(91, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, byteOrder0, 269);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.DOUBLE, 1070, 1070, byteArray0, byteOrder0, 1070);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1dc69cf2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.DOUBLE, 1070, 1070, byteArray0, byteOrder0, 1070);
      tiffField0.getDoubleArrayValue();
      assertEquals(1070, tiffField0.getTag());
      assertEquals(1070, tiffField0.getSortHint());
      assertEquals(1070, tiffField0.getDirectoryType());
      assertEquals(8560, tiffField0.getBytesLength());
      assertEquals(1070, tiffField0.getOffset());
      assertEquals(1070L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1165, 1165, fieldTypeFloat0, 1165, 1165, byteArray0, byteOrder0, 1165);
      tiffField0.getDoubleArrayValue();
      assertEquals(1165L, tiffField0.getCount());
      assertEquals(4660, tiffField0.getBytesLength());
      assertEquals(1165, tiffField0.getDirectoryType());
      assertEquals(1165, tiffField0.getOffset());
      assertEquals(1165, tiffField0.getTag());
      assertEquals(1165, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      tiffField0.getDoubleArrayValue();
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(136, 136, fieldTypeLong0.RATIONAL, 136, 136, byteArray0, byteOrder0, 136);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1088, tiffField0.getBytesLength());
      assertEquals(136, tiffField0.getDirectoryType());
      assertEquals(136L, tiffField0.getCount());
      assertEquals(136, tiffField0.getTag());
      assertEquals(136, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(136, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      tiffField0.getDoubleArrayValue();
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getTag());
      assertEquals(2376, tiffField0.getBytesLength());
      assertEquals(297L, tiffField0.getCount());
      assertEquals(297, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeByte0, 273, 273, byteArray0, byteOrder0, 273);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@396152d0 for: 273 (0x111: PreviewImageStart): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeLong0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      tiffField0.getIntArrayValue();
      assertEquals(297, tiffField0.getOffset());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(297, tiffField0.getTag());
      assertEquals(2376, tiffField0.getBytesLength());
      assertEquals(297L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.DOUBLE, 1070, 1070, byteArray0, byteOrder0, 1070);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@149ef0f6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(928, (byte)40, fieldTypeAscii0, (byte)40, (byte)40, byteArray0, (ByteOrder) null, (byte)40);
      String string0 = tiffField0.getStringValue();
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(928, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeShort0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@6fa29df8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeRational0, 303, 303, byteArray0, byteOrder0, 303);
      String string0 = tiffField0.getTagName();
      assertEquals(303, tiffField0.getDirectoryType());
      assertEquals(303, tiffField0.getSortHint());
      assertEquals(303, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x12f)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeRational0, 297, 297, byteArray0, byteOrder0, 297);
      String string0 = tiffField0.getTagName();
      assertEquals("PageNumber", string0);
      assertEquals(297, tiffField0.getTag());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(297, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[315];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1162, 1162, fieldTypeFloat0, 1162, (-1455L), byteArray0, byteOrder0, 1162);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1162, tiffField0.getTag());
      assertEquals(4648, tiffField0.getBytesLength());
      assertEquals(1162L, tiffField0.getCount());
      assertEquals(1162, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1162, tiffField0.getDirectoryType());
      assertEquals((-1455), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeByte0, (byte)23, (byte)23, byteArray0, byteOrder0, (byte)23);
      String string0 = tiffField0.getValueDescription();
      assertEquals(23, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getTag());
      assertEquals(23L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3291, 3291, fieldTypeByte0, 3291, 3291, byteArray0, byteOrder0, 3291);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3291L, tiffField0.getCount());
      assertEquals(3291, tiffField0.getBytesLength());
      assertEquals(3291, tiffField0.getDirectoryType());
      assertEquals(3291, tiffField0.getTag());
      assertEquals(3291, tiffField0.getSortHint());
      assertEquals(3291, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeDouble0, 1840L, 1840L, byteArray0, byteOrder0, (-3));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(1840L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-3), tiffField0.getTag());
      assertEquals(1840, tiffField0.getOffset());
      assertEquals(14720, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1070, 1070, fieldTypeLong0.DOUBLE, 1070, 1070, byteArray0, byteOrder0, 1070);
      String string0 = tiffField0.toString();
      assertEquals(8560, tiffField0.getBytesLength());
      assertEquals(1070, tiffField0.getDirectoryType());
      assertEquals("1070 (0x42e: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1070 Double)", string0);
      assertEquals(1070, tiffField0.getSortHint());
      assertEquals(1070, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50986, 50986, fieldTypeLong0, 50986, 1397L, byteArray0, byteOrder0, 1024);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1397, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(203944, tiffField0.getBytesLength());
      assertEquals(50986L, tiffField0.getCount());
      assertEquals(50986, tiffField0.getDirectoryType());
      assertEquals(50986, tiffField0.getTag());
      assertEquals(1024, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[90];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (65535 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1868), (-1868), fieldTypeLong0.SHORT, 95, 95, byteArray0, byteOrder0, 95);
      String string0 = tiffField0.getValueDescription();
      assertEquals(95, tiffField0.getOffset());
      assertEquals((-1868), tiffField0.getTag());
      assertEquals((-1868), tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
      assertEquals(95L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(95, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[69];
      TiffField tiffField0 = new TiffField(3291, 3291, fieldTypeByte0.FLOAT, 3291, 3291, byteArray0, byteOrder0, 3291);
      String string0 = tiffField0.toString();
      assertEquals("3291 (0xcdb: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3291 Float)", string0);
      assertEquals(13164, tiffField0.getBytesLength());
      assertEquals(3291, tiffField0.getOffset());
      assertEquals(3291, tiffField0.getDirectoryType());
      assertEquals(3291, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(216, "uQRl>E");
      TiffField tiffField0 = new TiffField(216, 1, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, 216);
      String string0 = tiffField0.getValueDescription();
      assertEquals(216, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(216, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1093, 1093, fieldTypeShort0.RATIONAL, 1093, (-1655L), byteArray0, byteOrder0, 1093);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1093, 1093);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(1093, tiffField0.getSortHint());
      assertEquals(1093, tiffField0.getTag());
      assertEquals((-1655), tiffField0.getOffset());
      assertEquals(1093, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50255, "KEUVx@cd,(vR#");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50255, 50255, fieldTypeFloat0, (-161L), 0L, byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50255, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-161L), tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50255, tiffField0.getTag());
      assertEquals(50255, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeRational0, 303, 303, byteArray0, byteOrder0, 303);
      tiffField0.getFieldTypeName();
      assertEquals(303, tiffField0.getOffset());
      assertEquals(303, tiffField0.getTag());
      assertEquals(303, tiffField0.getDirectoryType());
      assertEquals(303, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, (-2915), fieldTypeDouble0, 28, 28, byteArray0, byteOrder0, (-2915));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-776), "KGE2.(2~2q 4)");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(82, 82, fieldTypeLong0, 2274L, 82, byteArray0, byteOrder0, 970);
      int int0 = tiffField0.getSortHint();
      assertEquals(82, tiffField0.getOffset());
      assertEquals(970, int0);
      assertEquals(2274L, tiffField0.getCount());
      assertEquals(82, tiffField0.getTag());
      assertEquals(82, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(313, 313, fieldTypeRational0, 313, 313, byteArray0, byteOrder0, 313);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("313 (0x139: Unknown Tag): ", string0);
      assertEquals(313, tiffField0.getSortHint());
      assertEquals(313, tiffField0.getOffset());
      assertEquals(313, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(227, 227, fieldTypeRational0, 227, 227, (byte[]) null, byteOrder0, 227);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[59];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, (ByteOrder) null, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeRational0, 303, 303, byteArray0, byteOrder0, 303);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(303, tiffField0.getSortHint());
      assertEquals(303, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(303L, tiffElement0.offset);
      assertEquals(303, tiffField0.getDirectoryType());
  }
}
