/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:30:21 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.sharedCopy();
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.limit = 0;
      Segment segment1 = segment0.unsharedCopy();
      segment0.writeTo(segment1, 297);
      assertFalse(segment1.equals((Object)segment0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(4915);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.owner = false;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8194);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.limit = (-1749);
      segment0.prev.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment(byteArray0, (-1749), (-2011), true, true);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.limit = (-1749);
      segment0.pos = (-2011);
      segment1.sharedCopy();
      segment1.unsharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-113);
      Segment segment0 = new Segment(byteArray0, (byte) (-113), 0, false, false);
      // Undeclared exception!
      try { 
        segment0.split(76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Segment segment0 = new Segment(byteArray0, (-1749), (-2011), true, true);
      Segment segment1 = new Segment();
      segment0.prev = segment0;
      segment0.limit = (-1749);
      Segment segment2 = new Segment();
      segment0.prev.pos = (-2011);
      segment2.owner = true;
      segment2.pos = 3642;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8194);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      int int0 = 3280;
      Segment segment1 = new Segment();
      segment0.next = segment0;
      segment0.pos = 3280;
      SegmentPool.next = segment0;
      Segment segment2 = segment0.sharedCopy();
      segment2.unsharedCopy();
      Segment segment3 = segment0.push(segment2);
      Segment segment4 = segment0.sharedCopy();
      segment3.push(SegmentPool.next);
      Segment segment5 = segment3.sharedCopy();
      segment5.sharedCopy();
      SegmentPool.next.pop();
      // Undeclared exception!
      try { 
        segment4.compact();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 8197;
      Segment segment0 = new Segment();
      boolean boolean0 = true;
      Segment segment1 = new Segment(byteArray0, 8197, 8197, true, true);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8197);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment((byte[]) null, (-1749), 4906, true, false);
      // Undeclared exception!
      try { 
        segment1.split(4906);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-1749);
      Segment segment0 = new Segment(byteArray0, (-1749), (-1996), false, false);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.limit = (-1749);
      Segment segment2 = new Segment();
      segment0.prev.pos = (-1996);
      segment2.owner = false;
      segment0.prev = segment2;
      segment2.pos = 3620;
      segment0.compact();
      // Undeclared exception!
      try { 
        segment2.push(segment0.prev);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.limit = 0;
      int int0 = 8194;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      int int1 = 1224;
      boolean boolean0 = false;
      boolean boolean1 = true;
      Segment segment1 = new Segment(byteArray0, 1224, 0, false, true);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 8194);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
