/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 17:19:50 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Site;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Site_ESTest extends Site_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUserAgent(">*@`iBrFxtZ,G_");
      Site site2 = site1.addHeader(">*@`iBrFxtZ,G_", ">*@`iBrFxtZ,G_");
      Site site3 = site1.setUseGzip(true);
      Site site4 = site2.setTimeOut(920);
      Site site5 = site2.setRetrySleepTime(1);
      Site site6 = site5.setUserAgent(">*@`iBrFxtZ,G_");
      Site site7 = site6.setSleepTime(0);
      site7.setUseGzip(true);
      site7.setSleepTime(0);
      site2.getRetryTimes();
      Site site8 = site5.setTimeOut((-1694));
      site8.addHeader("", "z$0RP+~e;G");
      site2.setTimeOut(0);
      site4.addHeader(">*@`iBrFxtZ,G_", ", sleepTime=");
      site3.getCharset();
      site6.setDomain("");
      assertEquals(0, site6.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.addCookie("pC%O8AlqOg", "$Q$~+b1/", "si8q");
      Site site2 = site1.setRetrySleepTime((-3836));
      Site site3 = site1.setTimeOut((-3836));
      site3.setCycleRetryTimes(0);
      site2.setCycleRetryTimes(693);
      Site site4 = site3.setUseGzip(false);
      site4.toTask();
      Set<Integer> set0 = site4.getAcceptStatCode();
      site3.setAcceptStatCode(set0);
      Site site5 = site2.setUseGzip(false);
      Site site6 = site5.setCycleRetryTimes((-3836));
      site6.addCookie("si8q", "$Q$~+b1/", "pC%O8AlqOg");
      Site site7 = site0.setRetryTimes(61);
      site7.setSleepTime((-3836));
      site3.setCharset("M^9S-8kaPYJSW'=");
      site2.getHeaders();
      assertEquals((-3836), site0.getRetrySleepTime());
      assertEquals((-3836), site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Site site0 = Site.me();
      site0.addCookie("", "", "");
      site0.hashCode();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setDomain("");
      Site site2 = site1.addCookie("", ", userAgent='");
      Site site3 = site2.setRetrySleepTime(0);
      Site site4 = site3.setTimeOut(1062);
      site4.setDomain("}Dr5+C'?:_");
      Site.me();
      site4.addCookie("", "");
      Site site5 = site2.setCharset("");
      site5.setRetrySleepTime(1808);
      Site site6 = site3.setDisableCookieManagement(false);
      Site site7 = site6.addHeader(", userAgent='", "");
      site7.toTask();
      site1.setDisableCookieManagement(true);
      site7.toString();
      site7.getDomain();
      site6.equals(site0);
      site2.isUseGzip();
      site7.toString();
      site7.setRetryTimes(0);
      assertTrue(site7.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Site site0 = Site.me();
      Object object0 = new Object();
      boolean boolean0 = site0.equals(object0);
      assertFalse(boolean0);
      
      site0.getCookies();
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUseGzip(true);
      Site site2 = site1.setRetryTimes((-319));
      Site site3 = site2.setTimeOut((-319));
      Set<Integer> set0 = site3.getAcceptStatCode();
      Site site4 = site3.setAcceptStatCode(set0);
      site3.addCookie("8:loteeo-oI!kDNUu~", "8:loteeo-oI!kDNUu~", "IE?6g");
      site3.setRetrySleepTime(31);
      site4.setDomain("IE?6g");
      Site site5 = site4.setDomain("G)Qm'YMXk9*(4u?");
      site5.isDisableCookieManagement();
      Site.me();
      site1.getAllCookies();
      assertEquals(31, site1.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.addCookie("A9ZB=rC", "A9ZB=rC", "A9ZB=rC");
      Site site2 = site1.setCharset("A9ZB=rC");
      Site site3 = site2.setAcceptStatCode((Set<Integer>) null);
      Site site4 = site3.setTimeOut((-1705));
      Site site5 = site4.setRetryTimes(0);
      int int0 = site5.getTimeOut();
      assertEquals((-1705), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setRetrySleepTime(0);
      Site site2 = site1.setSleepTime(0);
      site2.toTask();
      site0.toTask();
      Site site3 = Site.me();
      site3.toString();
      Site site4 = site0.setUseGzip(false);
      Site site5 = site4.setRetrySleepTime(0);
      site4.setSleepTime(0);
      site0.toTask();
      Site site6 = site2.addHeader("", "");
      site6.getCookies();
      site6.getCharset();
      site5.getRetrySleepTime();
      Site.me();
      site1.getCharset();
      site6.setRetrySleepTime(0);
      site6.setCycleRetryTimes(125);
      site2.getRetryTimes();
      assertEquals(125, site2.getCycleRetryTimes());
      
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Site site7 = site3.setAcceptStatCode(linkedHashSet0);
      assertEquals(1000, site7.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Site site0 = Site.me();
      site0.setUseGzip(false);
      site0.getRetryTimes();
      site0.setUseGzip(false);
      Site site1 = site0.setSleepTime(1);
      site1.setDomain("");
      site0.getCharset();
      site0.getDomain();
      site0.addCookie("", "");
      Site site2 = site0.setUseGzip(true);
      int int0 = site2.getSleepTime();
      assertTrue(site0.isUseGzip());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertTrue(boolean0);
      
      site1.hashCode();
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setAcceptStatCode((Set<Integer>) null);
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.addCookie("k>a^d#;", "8ls", "k>a^d#;");
      site1.hashCode();
      Site site2 = site1.setRetryTimes(584);
      Site site3 = site1.setUserAgent("");
      Site site4 = site1.setSleepTime(39);
      site3.getCookies();
      site4.setDomain("@`7b*MY53tZ|l$FeY");
      site0.toString();
      site0.toString();
      site3.toString();
      Site.me();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      linkedHashSet0.containsAll(linkedHashSet1);
      Site site5 = site3.setAcceptStatCode(linkedHashSet0);
      Site site6 = Site.me();
      Site site7 = site2.setDomain("");
      Site site8 = site7.addHeader("k>a^d#;", "8ls");
      Site site9 = site8.setAcceptStatCode(linkedHashSet0);
      Site site10 = site6.setDomain("^wkCXZ<ow@u[");
      site10.setDomain("<q");
      site9.toTask();
      site5.getRetrySleepTime();
      site2.getCycleRetryTimes();
      site5.getDomain();
      site2.getSleepTime();
      site9.equals("@`7b*MY53tZ|l$FeY");
      assertEquals(584, site1.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setSleepTime((-1));
      site1.setUserAgent("J:7aD+kCrC)1I:R[");
      Site site2 = site1.setCharset("");
      site2.setUserAgent("");
      Site site3 = site1.setUseGzip(true);
      Site site4 = site1.setDisableCookieManagement(false);
      site4.toTask();
      Site site5 = site3.addHeader("", "%@qK");
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Site site6 = site5.setAcceptStatCode(linkedHashSet0);
      site6.getCookies();
      site1.setRetryTimes((-1));
      Site site7 = site5.setRetrySleepTime(0);
      site3.toTask();
      site6.setUseGzip(false);
      site5.getUserAgent();
      Site.me();
      site7.setDisableCookieManagement(false);
      site1.getHeaders();
      Site site8 = site7.setCycleRetryTimes(1931);
      site8.setTimeOut((-261));
      site4.addCookie("2^^Jl", "2^^Jl");
      assertFalse(site4.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.addCookie((String) null, (String) null);
      Site site2 = site0.addCookie("", (String) null, "t6ZE.9");
      site2.setTimeOut((-437));
      Site site3 = site1.setDisableCookieManagement(false);
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      Site site4 = site3.setAcceptStatCode(linkedHashSet0);
      site4.addCookie("", "", "");
      Site.me();
      Site site5 = Site.me();
      site5.setRetryTimes((-1130));
      Site site6 = site4.addCookie(":[_;<Tw?\"khjYmUKeuV", (String) null);
      Site site7 = site6.setTimeOut(1000);
      site7.setUserAgent((String) null);
      site4.setDomain((String) null);
      Integer integer0 = new Integer((-437));
      Integer.toUnsignedString((-437));
      linkedHashSet0.add(integer0);
      site4.getRetrySleepTime();
      site3.getSleepTime();
      Site site8 = site6.setDomain("");
      Site site9 = site8.setRetrySleepTime((-1412));
      site9.setUseGzip(true);
      site0.getDomain();
      site3.getSleepTime();
      site8.getCookies();
      assertEquals(1000, site6.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("");
      Site site2 = site0.setRetrySleepTime((-828));
      site2.addCookie("", "");
      site2.setUseGzip(true);
      Site site3 = site2.addHeader("", "");
      Site site4 = site1.addHeader("", "");
      Site site5 = site4.setUseGzip(false);
      Site site6 = site1.setCharset("");
      site6.setAcceptStatCode((Set<Integer>) null);
      Site site7 = new Site();
      site7.setCharset("");
      site3.isDisableCookieManagement();
      site5.hashCode();
      assertFalse(site4.isUseGzip());
      
      site7.toTask();
      assertEquals(5000, site7.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setRetrySleepTime(1066);
      Site site2 = site1.addCookie("", "UBQ/(HqfTp(')Tf{");
      Site site3 = site2.setUseGzip(true);
      Site site4 = site3.addHeader((String) null, ", retryTimes=");
      Site site5 = site4.addCookie("UBQ/(HqfTp(')Tf{", "UBQ/(HqfTp(')Tf{", (String) null);
      site4.setAcceptStatCode((Set<Integer>) null);
      Site site6 = new Site();
      Site site7 = site1.setCharset("UBQ/(HqfTp(')Tf{");
      Site.me();
      site7.equals((Object) null);
      site5.equals("");
      assertEquals(1066, site0.getRetrySleepTime());
      
      Site site8 = Site.me();
      assertTrue(site8.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("");
      Site site2 = site1.addHeader("", "");
      Site site3 = site2.setUseGzip(false);
      site1.setCharset("");
      Set<Integer> set0 = site3.getAcceptStatCode();
      site0.setAcceptStatCode(set0);
      Site site4 = new Site();
      site0.setCharset(", cookies=");
      Site site5 = site2.setRetrySleepTime((-1879048190));
      site4.equals(site5);
      assertEquals((-1879048190), site2.getRetrySleepTime());
      
      Object object0 = new Object();
      site4.equals(object0);
      Site site6 = Site.me();
      assertEquals(5000, site6.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setCharset("Xe[?S-n<g9z}r73b");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Site site0 = Site.me();
      site0.addHeader("", "");
      Site site1 = new Site();
      site0.setCharset("");
      Site site2 = Site.me();
      Site site3 = new Site();
      assertTrue(site3.equals((Object)site1));
      
      site3.setCharset("");
      site0.equals(site3);
      assertFalse(site3.equals((Object)site2));
      
      site2.equals("");
      Site site4 = Site.me();
      assertTrue(site4.equals((Object)site1));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Site site0 = Site.me();
      site0.setUseGzip(false);
      Site site1 = site0.setCharset("");
      Site site2 = site1.setAcceptStatCode((Set<Integer>) null);
      Site site3 = new Site();
      site3.setAcceptStatCode((Set<Integer>) null);
      site3.setCharset("");
      site0.equals(site3);
      site2.equals("");
      assertFalse(site0.isUseGzip());
      
      Site site4 = Site.me();
      assertTrue(site4.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setAcceptStatCode((Set<Integer>) null);
      Site site2 = new Site();
      site2.setAcceptStatCode((Set<Integer>) null);
      site0.equals(site2);
      assertTrue(site2.equals((Object)site0));
      
      boolean boolean0 = site1.equals("");
      assertFalse(boolean0);
      
      Site site3 = Site.me();
      assertEquals(5000, site3.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setDomain("<HiD]V");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setUserAgent(", userAgent='");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setDomain("");
      site0.setCharset("");
      Site site2 = new Site();
      Site site3 = site2.setCharset("");
      site2.setDomain("");
      Site site4 = Site.me();
      site0.equals(site2);
      site3.equals(site1);
      boolean boolean0 = site4.equals(site2);
      assertFalse(boolean0);
      assertTrue(site2.equals((Object)site1));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUserAgent("si8q");
      Site site2 = Site.me();
      assertFalse(site2.equals((Object)site1));
      
      Site site3 = site2.setUserAgent("si8q");
      Set<Integer> set0 = site3.getAcceptStatCode();
      Site site4 = site2.setAcceptStatCode(set0);
      boolean boolean0 = site4.equals(site0);
      assertTrue(site2.equals((Object)site1));
      assertTrue(boolean0);
  }
}
