/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 22:59:47 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.nio.ByteOrder;
import java.util.Locale;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2142181218), (-2142181218), fieldTypeDouble0, (-2142181218), (-2142181218), byteArray0, byteOrder1, (-2142181218));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(42419440, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2142181218L), tiffField0.getCount());
      assertEquals((-2142181218), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2142181218), tiffField0.getDirectoryType());
      assertEquals((-2142181218), tiffField0.getTag());
      assertEquals((-2142181218), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3405), (-3405), fieldTypeByte0, (-300L), (-300L), (byte[]) null, byteOrder0, 34016);
      ByteOrder.nativeOrder();
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      fieldTypeByte0.writeData(byteArray0, byteOrder0);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(156, 156, fieldTypeByte0, 156, 1L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getDescriptionWithoutValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, fieldTypeFloat0, (byte)71, (byte)71, byteArray0, byteOrder0, (byte)71);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)55, (byte)55, fieldTypeFloat0, (byte)55, (byte)55, byteArray0, byteOrder0, (byte)55);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, fieldTypeFloat0, (byte)71, (byte)71, byteArray0, byteOrder0, (byte)71);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x47)", string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)71, (byte)71, fieldTypeFloat0, (byte)71, (byte)71, byteArray0, byteOrder0, (byte)71);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(71, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(71L, tiffField0.getCount());
      assertEquals(71, tiffField0.getTag());
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2142181218), (-2142181218), fieldTypeDouble0, (-2142181218), (-2142181218), byteArray0, byteOrder1, (-2142181218));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2142181218L), tiffField0.getCount());
      assertEquals((-2142181218), tiffField0.getOffset());
      assertEquals((-2142181218), tiffField0.getSortHint());
      assertEquals((-2142181218), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-2142181218), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50966, 65533, fieldTypeDouble0, 65533, 50966, byteArray0, byteOrder0, 2392);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(50966, tiffField0.getOffset());
      assertEquals(65533, tiffField0.getDirectoryType());
      assertEquals(2392, tiffField0.getSortHint());
      assertEquals(50966, tiffField0.getTag());
      assertEquals(65533L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte) (-55), 4, fieldTypeLong0, 4, (byte) (-55), byteArray0, byteOrder0, 434);
      int int0 = tiffField0.getOffset();
      assertEquals((-55), int0);
      
      tiffField0.getIntArrayValue();
      assertEquals(434, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-55), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-96);
      ByteOrder byteOrder0 = null;
      TiffField tiffField0 = new TiffField(287, 287, fieldTypeLong0, 287, 287, byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(287 (0x11f: YPosition): ): [I@77487bbe
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte) (-37);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-101);
      byteArray0[6] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50966, (-4301), fieldTypeDouble0, 50966, 0L, byteArray0, byteOrder0, (-4301));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@738d5f20 for: 50966 (0xc716: PreviewApplicationName): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-7);
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50941, 50941, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (-2082));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, (-1346));
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50941, tiffField0.getDirectoryType());
      assertEquals(50941, tiffField0.getTag());
      assertNull(string1);
      assertEquals((-2082), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)113, (byte)113, fieldTypeFloat0, (byte)113, (byte)113, byteArray0, byteOrder0, (byte)113);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)113, (byte)113);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertNotNull(string0);
      assertEquals(113, tiffField0.getTag());
      assertEquals(113, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "^4G<:1eK");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-301), fieldTypeDouble0, (-300L), 1L, byteArray0, byteOrder0, (-301));
      assertEquals(1, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-301), tiffField0.getSortHint());
      
      TiffField tiffField1 = new TiffField(0, (-301), fieldTypeDouble0, 1, 1L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField1.isLocalValue();
      assertFalse(boolean0);
      assertEquals(0, tiffField1.getSortHint());
      assertEquals((-301), tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)73;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(436, 24, (FieldType) null, 436, 24, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(408, (byte)51);
      tiffField_OversizeValueElement0.getElementDescription(true);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(436, tiffField0.getTag());
      assertEquals(24, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-421), "#8]");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-93);
      TiffField tiffField0 = new TiffField(3551, 3551, fieldTypeByte0, 690L, 1234L, byteArray0, byteOrder0, (byte)115);
      tiffField0.getOversizeValueElement();
      tiffField0.getValue();
      tiffField0.getOversizeValueElement();
      ByteOrder.nativeOrder();
      BufferedWriter bufferedWriter0 = null;
      try {
        bufferedWriter0 = new BufferedWriter((Writer) null, (-832));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3128, (-2147385521), fieldTypeRational0, 0, 2252L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      
      tiffField0.getValue();
      assertEquals((-2147385521), tiffField0.getDirectoryType());
      assertEquals(3128, tiffField0.getTag());
      assertEquals(2252, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-421), "#8]");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-421), (-421), fieldTypeAscii0, 690L, (-421), byteArray0, byteOrder0, 526);
      tiffField0.getFieldTypeName();
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-421), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals((-421), tiffField0.getTag());
      assertEquals(526, tiffField0.getSortHint());
      assertEquals((-421), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(464, 464, fieldTypeRational0, 1702L, 1702L, byteArray0, byteOrder0, (-648));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-648), tiffField0.getSortHint());
      assertEquals(1702L, tiffField0.getCount());
      assertEquals(464, tiffField0.getTag());
      assertEquals(1702, tiffField0.getOffset());
      assertEquals(464, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-7);
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50941, 50941, fieldTypeAscii0, 50941, 50941, byteArray0, byteOrder0, (-2082));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50941, tiffField0.getTag());
      assertEquals(50941, tiffField0.getOffset());
      assertEquals((-2082), tiffField0.getSortHint());
      assertNotNull(string0);
      
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField1 = new TiffField((byte)0, (byte) (-7), fieldTypeAscii0, (-300L), (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals((-7), tiffField1.getDirectoryType());
      assertEquals(0, tiffField1.getTag());
      assertEquals(0, tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeLong0, (byte)3, (byte)3, byteArray0, byteOrder0, 665);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(665, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)127;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (byte)127, (-1394L), byteArray0, byteOrder0, (byte)127);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1dc8bcfa for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-421), "#8]");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-421), (-421), fieldTypeAscii0, 690L, (-421), byteArray0, byteOrder0, 526);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2142442605), 526);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: #8]", string0);
      assertEquals((-421), tiffField0.getOffset());
      assertEquals((-421), tiffField0.getDirectoryType());
      assertEquals(526, tiffField0.getSortHint());
      assertEquals((-421), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte)0;
      TiffField tiffField0 = new TiffField(50, 2143621267, fieldTypeLong0, 1005L, 913L, byteArray0, (ByteOrder) null, (-2977));
      tiffField0.getTagName();
      Pattern.quote("Unknown Tag (0x32)");
      TiffField tiffField1 = new TiffField(50, 65536, fieldTypeLong0, (byte)50, (-1497L), byteArray0, (ByteOrder) null, 2144357762);
      tiffField1.getByteOrder();
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField2 = new TiffField(50, (-2602), fieldTypeLong0, (-1934L), (byte)50, byteArray0, (ByteOrder) null, 1084);
      tiffField1.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      long long0 = (-2147483648L);
      TiffField tiffField0 = new TiffField((byte) (-114), 50966, fieldTypeDouble0, (-2147483648L), 2147483647L, byteArray0, byteOrder0, 50966);
      tiffField0.dump();
      fieldTypeDouble0.SBYTE.getValue(tiffField0);
      tiffField0.getBytesLength();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@40892b7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)127;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "PreviewApplicationName");
      TiffField tiffField0 = new TiffField(1, (byte)127, fieldTypeAscii0, 0, (-4042L), byteArray0, byteOrder0, (-1));
      tiffField0.getStringValue();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(526, (byte)71, fieldTypeFloat0, (byte)89, 984L, byteArray0, byteOrder0, (byte)71);
      tiffField0.isLocalValue();
      tiffField0.getDoubleArrayValue();
      String string0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte byte0 = (byte)89;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = 3009;
      TiffField tiffField0 = new TiffField(219, (byte)89, fieldTypeByte0, 559L, 559L, byteArray0, byteOrder0, 3009);
      tiffField0.dump();
      fieldTypeByte0.getValue(tiffField0);
      tiffField0.getBytesLength();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@4de5584d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      System.setCurrentTimeMillis((byte)89);
      TiffField tiffField0 = new TiffField((-984), (byte)71, fieldTypeFloat0, 4L, 338L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(338, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals((-984), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 995, fieldTypeByte0, 0, 995, byteArray0, byteOrder0, 995);
      tiffField0.dump();
      fieldTypeByte0.getValue(tiffField0);
      tiffField0.getBytesLength();
      TiffField tiffField1 = new TiffField(995, 0, fieldTypeByte0, 1L, 995, byteArray0, byteOrder0, 302);
      tiffField1.getOffset();
      TiffField tiffField2 = new TiffField(0, (-2147385521), fieldTypeByte0, (-115L), 1L, byteArray0, byteOrder0, 0);
      tiffField2.getTagName();
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffField2.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-984), (-984), fieldTypeFloat0, (byte)71, (byte)71, byteArray0, byteOrder0, (-1717986885));
      String string0 = tiffField0.toString();
      assertEquals("-984 (0xfffffc28: Unknown Tag): 0.0, 0.0 (71 Float)", string0);
      
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField1 = new TiffField(4, (-1717986885), fieldTypeShort0, 235L, (-984), byteArray0, byteOrder0, (-1069));
      int int0 = tiffField1.getIntValueOrArraySum();
      assertEquals((-984), tiffField1.getOffset());
      assertEquals(0, int0);
      assertEquals((-1717986885), tiffField1.getDirectoryType());
      assertEquals((-1069), tiffField1.getSortHint());
      assertEquals(4, tiffField1.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(345, "");
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 345, 345, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(282, "7X,F-");
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(282, (-1354), fieldTypeRational0, 1777L, 1777L, byteArray0, byteOrder1, 2530);
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleArrayValue();
      assertEquals(282, tiffField0.getTag());
      assertEquals(1777, tiffField0.getOffset());
      assertEquals(2530, tiffField0.getSortHint());
      assertEquals((-1354), tiffField0.getDirectoryType());
      assertEquals(1777L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      System.setCurrentTimeMillis((-1694L));
      TiffField tiffField0 = new TiffField((byte) (-114), (byte) (-114), fieldTypeDouble0, 89L, (-277L), byteArray0, byteOrder1, (-2953));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-114), tiffField0.getTag());
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals(89L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-2953), tiffField0.getSortHint());
      assertEquals((-277), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)89, "DataType");
      TiffField tiffField0 = new TiffField((byte)89, (-1717986885), fieldTypeShort0, 1407L, 3936L, byteArray0, byteOrder0, (-1717986885));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1717986885), tiffField0.getSortHint());
      assertEquals(3936, tiffField0.getOffset());
      assertEquals(89, tiffField0.getTag());
      assertEquals(1407L, tiffField0.getCount());
      assertEquals((-1717986885), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1513, ", fieldType: ");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-9);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte) (-69);
      byteArray0[4] = (byte)95;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)109;
      byteArray0[6] = (byte) (-6);
      byteArray0[8] = (byte) (-2);
      Byte byte0 = new Byte((byte)0);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2331), 5, fieldTypeLong0, (byte)0, 4L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-2331), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-34);
      byteArray0[0] = (byte) (-85);
      TiffField tiffField0 = new TiffField((-97), (-97), fieldTypeShort0, 1702L, 4663L, byteArray0, byteOrder0, 1751);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {36267, 56932}, intArray0);
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1702L, tiffField0.getCount());
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(4663, tiffField0.getOffset());
      assertEquals(1751, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeShort0, (byte)28, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2143469659, " for: ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)79;
      TiffField tiffField0 = new TiffField(7, (-2521), fieldTypeRational0, 1604L, (-3329L), byteArray0, byteOrder1, 345);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("7 (0x7: GPSTimeStamp): ", string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1604L, tiffField0.getCount());
      assertEquals((-3329), tiffField0.getOffset());
      assertEquals((-2521), tiffField0.getDirectoryType());
      assertEquals(345, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2147296535), fieldTypeLong0, (-1717986885L), (-2874L), byteArray0, byteOrder1, (byte) (-97));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2874), tiffField0.getOffset());
      assertEquals((-1717986885L), tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-2147296535), tiffField0.getDirectoryType());
      assertEquals((-97), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }
}
