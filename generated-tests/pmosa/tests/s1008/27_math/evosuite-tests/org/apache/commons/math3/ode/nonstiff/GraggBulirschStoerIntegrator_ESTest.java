/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 13:09:47 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
import org.apache.commons.math3.analysis.function.Atan;
import org.apache.commons.math3.analysis.function.Expm1;
import org.apache.commons.math3.analysis.function.Minus;
import org.apache.commons.math3.analysis.solvers.BisectionSolver;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.EquationsMapper;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondaryEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepInterpolator;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1482.0);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1482.0), 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, 2.0, 0.0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.FIRST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(2.0, fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BisectionSolver bisectionSolver0 = new BisectionSolver(0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 0.0, 0, (UnivariateSolver) bisectionSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-987.979), 4038.784, (-987.979), (-987.979));
      graggBulirschStoerIntegrator0.setControlFactors(1329.4797, 4038.784, 4038.784, 4038.784);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5, 725.76697505, 1728.452, 0.27044451236724854);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1346), (-1346), 0.27044451236724854);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, 1.0E-15, 298.4632991222134, 1.0E-15);
      int int0 = 445;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 445, 445, 2.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 445, 445, 0.0);
      double double0 = 0.01;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.01, fixedStepHandler0, stepNormalizerBounds0);
      StepInterpolator stepInterpolator0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        stepNormalizer0.handleStep((StepInterpolator) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.sampling.StepNormalizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = 4.589506477601956E-9;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3.652892398145774E-153, 3.652892398145774E-153, 3.652892398145774E-153, 4.589506477601956E-9);
      boolean boolean0 = false;
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 4.589506477601956E-9;
      graggBulirschStoerIntegrator0.filterStep((-5.04128025464686E71), false, false);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      int int0 = (-1332);
      double double1 = 0.0;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1332), (-1332), 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1900.5253));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1590.0, 1590.0, 1590.0, 997.1100346846425);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1590.0);
      assertEquals(21, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.1253517584464134E-7, 1.1253517584464134E-7, 1.1253517584464134E-7, 1.1253517584464134E-7);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(10).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      SecondaryEquations secondaryEquations0 = mock(SecondaryEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondaryEquations0).getDimension();
      expandableStatefulODE0.addSecondaryEquations(secondaryEquations0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.01);
      double double0 = 291.385;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-8.822335132515693E-9), (-8.822335132515693E-9), (-8.822335132515693E-9), (-8.822335132515693E-9));
      graggBulirschStoerIntegrator0.setOrderControl((-3670), 1.0E-4, 0.01);
      assertEquals(8.822335132515693E-9, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl((-957), 0.3897167444229126, 0.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 77, 77, (-1727.42188));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, (-1727.42188), 0.0, 0.0);
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, (FixedStepHandler) null, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double double0 = 527.737689918864;
      double double1 = 0.0;
      int int0 = 275;
      RiddersSolver riddersSolver0 = new RiddersSolver();
      int int1 = 0;
      Atan atan0 = new Atan();
      Minus minus0 = new Minus();
      Expm1 expm1_0 = new Expm1();
      DerivativeStructure derivativeStructure0 = null;
      try {
        derivativeStructure0 = new DerivativeStructure((-957), 275);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -957
         //
         verifyException("org.apache.commons.math3.analysis.differentiation.DSCompiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(132.9999761425397, 132.9999761425397, (-279.221025797907), 0.94);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.94);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 4);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2759.3, 2759.3, 2759.3, 2759.3);
      graggBulirschStoerIntegrator0.setInitialStepSize(2759.3);
      graggBulirschStoerIntegrator0.setControlFactors(2759.3, 2759.3, 2759.3, 5710.5);
      graggBulirschStoerIntegrator0.setOrderControl(1210, 1.1375834941864014, 5710.5);
      graggBulirschStoerIntegrator0.setMaxEvaluations(0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 0, 1765.3);
      graggBulirschStoerIntegrator0.setControlFactors(1765.3, 0.0, 0.0, 5710.5);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver(840.5144036, 629.298407169214, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 353.36919245, 0.0, 0, (UnivariateSolver) brentSolver0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = 124.759;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1987.62243853), (-1987.62243853), (-1987.62243853), 124.759);
      boolean boolean0 = true;
      int int0 = (-2269);
      graggBulirschStoerIntegrator0.mainSetDimension = (-2269);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-3670), (-3670), 935.75);
      int int1 = 386;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 124.759);
      double double1 = 0.6553317308425903;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int1, int0, double1);
      boolean boolean1 = true;
      int int2 = expandableStatefulODE0.getTotalDimension();
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean1, int1);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(double0, fixedStepHandler0, stepNormalizerMode0);
      int int3 = 0;
      expandableStatefulODE0.getSecondaryStateDot(int3);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      double double2 = (-2058.43);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double2);
      expandableStatefulODE0.getTotalDimension();
      double double3 = 3707.703472120274;
      double double4 = 0.0;
      double double5 = 0.5;
      double double6 = (-2916.62635555);
      graggBulirschStoerIntegrator0.setControlFactors(double3, double4, double5, double6);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      int int4 = 484;
      double double7 = 0.0;
      graggBulirschStoerIntegrator0.setOrderControl(int4, int2, double7);
      int int5 = (-142);
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int5);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.161437419724;
      doubleArray0[1] = 0.450652539730072;
      doubleArray0[2] = 1.161437419724;
      doubleArray0[3] = 1.161437419724;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.161437419724, 0.450652539730072, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-1322));
      graggBulirschStoerIntegrator0.setOrderControl((-1322), 669.3570538734, 1.161437419724);
      graggBulirschStoerIntegrator0.setControlFactors(1.0730302255093144E-182, 999.9, 1.161437419724, 669.3570538734);
      graggBulirschStoerIntegrator0.setControlFactors(0.450652539730072, (-1322), 2774.1801620305123, 0.0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-266.913549972509), 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      graggBulirschStoerIntegrator0.setControlFactors(2.1226166967029073E57, 2.0, 2.2423186335040668E-8, 2.2423186335040668E-8);
      StepNormalizer stepNormalizer0 = new StepNormalizer((-266.913549972509), fixedStepHandler0, stepNormalizerBounds0);
      EquationsMapper equationsMapper0 = new EquationsMapper(0, 18);
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[2];
      equationsMapperArray0[0] = equationsMapper0;
      FixedStepHandler fixedStepHandler1 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer1 = new StepNormalizer(0, fixedStepHandler1, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer1);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 2695, 2.1226166967029073E57);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 5);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1438, 18, 1438);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 5, (-827), (-266.913549972509));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-266.913549972509), 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      graggBulirschStoerIntegrator0.setControlFactors(2.1226166967029073E57, 2.0, 2.2423186335040668E-8, 2.2423186335040668E-8);
      StepNormalizer stepNormalizer0 = new StepNormalizer((-266.913549972509), fixedStepHandler0, stepNormalizerBounds0);
      double[][] doubleArray1 = new double[0][3];
      EquationsMapper equationsMapper0 = new EquationsMapper(0, 18);
      EquationsMapper[] equationsMapperArray0 = new EquationsMapper[2];
      equationsMapperArray0[0] = equationsMapper0;
      equationsMapperArray0[1] = equationsMapper0;
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator0 = new GraggBulirschStoerStepInterpolator(doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray1, false, equationsMapper0, equationsMapperArray0);
      GraggBulirschStoerStepInterpolator graggBulirschStoerStepInterpolator1 = new GraggBulirschStoerStepInterpolator(graggBulirschStoerStepInterpolator0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 18, 2695, (-147.3882));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2695);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 667024589, 0, 0.0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 343, 667024589, 0.01);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3868.1382295053), (-3868.1382295053), (-3868.1382295053), (-3868.1382295053));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(799.637395, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 2712, 280, (-3868.1382295053));
      PegasusSolver pegasusSolver0 = new PegasusSolver(799.637395);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-862.75069), (-634.5990053705), (-650), (UnivariateSolver) pegasusSolver0);
      graggBulirschStoerIntegrator0.setControlFactors(0.9999, 1200.2, 799.637395, (-2475.0));
      graggBulirschStoerIntegrator0.setOrderControl(0, 607.255999732756, 0.9999);
      assertEquals(3868.1382295053, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-266.913549972509), 0.0, doubleArray0, doubleArray0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.BOTH;
      graggBulirschStoerIntegrator0.setControlFactors(2.1226166967029073E57, 2.0, 2.2423186335040668E-8, 2.2423186335040668E-8);
      StepNormalizer stepNormalizer0 = new StepNormalizer((-266.913549972509), fixedStepHandler0, stepNormalizerBounds0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-3513.21), 2.1226166967029073E57, doubleArray0, doubleArray0);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(expandableStatefulODE1, 0.01);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.161437419724;
      doubleArray0[1] = 0.450652539730072;
      doubleArray0[2] = 1.161437419724;
      doubleArray0[3] = 1.161437419724;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.161437419724, 0.450652539730072, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-1322));
      graggBulirschStoerIntegrator0.setOrderControl((-1322), (-3618.48), 1.161437419724);
      graggBulirschStoerIntegrator0.setControlFactors((-1322), (-1322), 4.0, 1.161437419724);
      graggBulirschStoerIntegrator0.setControlFactors((-740.50003537), 0.450652539730072, 1.161437419724, (-3618.48));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.450652539730072;
      doubleArray0[1] = 0.450652539730072;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.450652539730072, 999.9, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-1322));
      graggBulirschStoerIntegrator0.setMaxEvaluations(395);
      graggBulirschStoerIntegrator0.setControlFactors(999.9, 0.450652539730072, 0.450652539730072, 0.450652539730072);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(313.22541774011387, 0.450652539730072, 0.450652539730072, 0.0);
      graggBulirschStoerIntegrator1.setControlFactors(2.1226166967029073E57, 133.6374710533175, (-3578.0), 0.01);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, (-2145860455), 395, (-7.522074418324674E-8));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setOrderControl(2, 2, 314.0);
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 314.0;
      doubleArray0[1] = (double) 2;
      doubleArray0[2] = 314.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) 2;
      doubleArray0[5] = (double) 2;
      doubleArray0[6] = (double) 2;
      doubleArray0[7] = 2.0;
      doubleArray0[8] = 2.0;
      expandableStatefulODE0.computeDerivatives(2.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1590.0, 1590.0, 1590.0, 997.1100346846425);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(0.6106133959825378);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1093.662470152168);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 3241.9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = (-414.755424253);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-414.755424253), 0.02, 0.02, (-2.2298267863810133E-8));
      graggBulirschStoerIntegrator0.setControlFactors(2793.962, (-2241.03746241), (-3868.1382295053), (-2.2298267863810133E-8));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      SecondaryEquations secondaryEquations0 = mock(SecondaryEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondaryEquations0).getDimension();
      expandableStatefulODE0.addSecondaryEquations(secondaryEquations0);
      double[] doubleArray0 = new double[0];
      expandableStatefulODE0.setSecondaryState(0, doubleArray0);
      expandableStatefulODE0.setTime((-248.01691571));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1590.0, 1590.0, 1590.0, 997.1100346846425);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(590.0814);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.6106133959825378);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 997.1100346846425);
      assertEquals(11, graggBulirschStoerIntegrator0.getEvaluations());
  }
}
