/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 22:20:46 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2819, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-127);
      byteArray0[4] = (byte)51;
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2717, 2717, fieldTypeRational0, 2819, 2717, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(647, int0);
      assertEquals(2717, tiffField0.getDirectoryType());
      assertEquals(2717, tiffField0.getTag());
      assertEquals(2717, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeDouble0.FLOAT, 22720L, (-2356L), byteArray0, byteOrder0, (-3016));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3016), tiffField0.getSortHint());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals((-2356), tiffField0.getOffset());
      assertEquals(47, tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(662, 662, fieldTypeByte0, 662, (-321L), byteArray0, byteOrder0, (-1356));
      tiffField0.getValue();
      assertEquals(662, tiffField0.getDirectoryType());
      assertEquals(662, tiffField0.getTag());
      assertEquals((-1356), tiffField0.getSortHint());
      assertEquals((-321), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-27), fieldTypeDouble0.SHORT, (-27), (-2147291454), byteArray0, byteOrder0, 50341);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals(50341, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2147291454), tiffField0.getOffset());
      assertEquals((-27), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1086, "owMr");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(330, (-1), fieldTypeFloat0, 1507L, (-296L), byteArray0, byteOrder0, 37383);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(37383, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getTag());
      assertEquals((-296), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(330, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1603, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34118, 34118, fieldTypeShort0, 34118, 3152L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(34118, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3152, tiffField0.getOffset());
      assertEquals(34118, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-465), 2143247980, fieldTypeShort0, 106L, 268L, byteArray0, (ByteOrder) null, 1687);
      int int0 = tiffField0.getTag();
      assertEquals((-465), int0);
      assertEquals(1687, tiffField0.getSortHint());
      assertEquals(2143247980, tiffField0.getDirectoryType());
      assertEquals(268, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-71);
      FieldType fieldType0 = FieldType.getFieldType((byte)2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1801, (-494), fieldType0, (byte)2, 1L, byteArray0, byteOrder0, (byte) (-71));
      String string0 = tiffField0.getStringValue();
      assertEquals((-494), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1801, tiffField0.getTag());
      assertEquals((-71), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, 1204, fieldTypeDouble0.ASCII, 2092L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(41, tiffField0.getTag());
      assertEquals(1204, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147475455, 2147475455, fieldTypeFloat0, 0L, 40728L, byteArray0, byteOrder0, (-2144842215));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2144842215), int0);
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(40728, tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147080363), (-160), fieldTypeByte0, 4L, 0L, byteArray0, byteOrder0, 119);
      int int0 = tiffField0.getOffset();
      assertEquals((-160), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(119, tiffField0.getSortHint());
      assertEquals((-2147080363), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-883), "TR*eS8s<");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-883), 3032, fieldTypeLong0, 1922L, 3032, byteArray0, byteOrder0, (-1555));
      int int0 = tiffField0.getOffset();
      assertEquals(3032, int0);
      assertEquals((-883), tiffField0.getTag());
      assertEquals((-1555), tiffField0.getSortHint());
      assertEquals(3032, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)7;
      TiffField tiffField0 = new TiffField((-3621), 1597, fieldTypeLong0.SHORT, (byte)7, (-2631L), byteArray0, byteOrder0, 2144224947);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(7, int0);
      assertEquals(1597, tiffField0.getDirectoryType());
      assertEquals((-3621), tiffField0.getTag());
      assertEquals(2144224947, tiffField0.getSortHint());
      assertEquals((-2631), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-122);
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0.SHORT, 268L, 997L, byteArray0, (ByteOrder) null, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(997, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-31232), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)80;
      TiffField tiffField0 = new TiffField((-2876), 2147475455, fieldTypeByte0, 1L, 2147475455, byteArray0, (ByteOrder) null, 6);
      tiffField0.getIntValue();
      assertEquals((-2876), tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)12, (byte) (-1), fieldTypeShort0, 1L, (byte)118, byteArray0, byteOrder0, (-765));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals((-765), tiffField0.getSortHint());
      assertEquals(118, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2312, (byte)118, fieldTypeFloat0, (byte)118, 2312, byteArray0, byteOrder0, 2146817761);
      tiffField0.getFieldTypeName();
      assertEquals(2312, tiffField0.getOffset());
      assertEquals(118, tiffField0.getDirectoryType());
      assertEquals(2146817761, tiffField0.getSortHint());
      assertEquals(2312, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1603, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1603, 1603, fieldTypeShort0, 1603, 1603, byteArray0, (ByteOrder) null, 1603);
      tiffField0.getFieldTypeName();
      assertEquals(1603, tiffField0.getDirectoryType());
      assertEquals(1603, tiffField0.getSortHint());
      assertEquals(1603, tiffField0.getTag());
      assertEquals(1603, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 2147133951, (FieldType) null, 15520L, (byte)50, byteArray0, byteOrder0, 9);
      tiffField0.getFieldType();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(2147133951, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      TiffField tiffField0 = new TiffField(0, 1701, fieldTypeByte0, 402, 1, byteArray0, byteOrder0, 402);
      tiffField0.getFieldType();
      assertEquals(1701, tiffField0.getDirectoryType());
      assertEquals(402, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2347), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(336, 2147380784, fieldTypeFloat0, 0L, (-1023L), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(336, tiffField0.getTag());
      assertEquals((-1023), tiffField0.getOffset());
      assertEquals(2147380784, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-1), fieldTypeLong0.FLOAT, 1L, (byte) (-1), byteArray0, byteOrder0, 50);
      tiffField0.getDoubleValue();
      assertEquals((-45), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-57);
      TiffField tiffField0 = new TiffField(50717, (-2215), fieldTypeByte0, 1L, (-484L), byteArray0, byteOrder0, 747);
      tiffField0.getDoubleValue();
      assertEquals((-484), tiffField0.getOffset());
      assertEquals(747, tiffField0.getSortHint());
      assertEquals((-2215), tiffField0.getDirectoryType());
      assertEquals(50717, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, (byte)76, 4L, byteArray0, byteOrder0, (byte) (-29));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-29), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147291444), (-465), fieldTypeShort0, 268L, 106L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(106, tiffField0.getOffset());
      assertEquals((-465), int0);
      assertEquals((-2147291444), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2558), "{=(n0cDUESdfdYd");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2558), (-2558), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-2558));
      tiffField0.getCount();
      assertEquals((-2558), tiffField0.getSortHint());
      assertEquals((-2558), tiffField0.getDirectoryType());
      assertEquals((-2558), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147450877, (-2811), fieldTypeShort0, 825L, 4L, byteArray0, (ByteOrder) null, 2147450877);
      tiffField0.getCount();
      assertEquals((-2811), tiffField0.getDirectoryType());
      assertEquals(2147450877, tiffField0.getTag());
      assertEquals(2147450877, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(112, 112, fieldTypeFloat0, (-184L), (byte)16, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeLong0, 65535L, (byte)0, byteArray0, byteOrder0, 3);
      tiffField0.getBytesLength();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1576, (-229), fieldTypeShort0, (-11168L), (-229), byteArray0, (ByteOrder) null, 521);
      tiffField0.getBytesLength();
      assertEquals((-229), tiffField0.getDirectoryType());
      assertEquals(521, tiffField0.getSortHint());
      assertEquals(1576, tiffField0.getTag());
      assertEquals((-229), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147450877, (-2811), fieldTypeShort0, 825L, 4L, byteArray0, (ByteOrder) null, 2147450877);
      tiffField0.getByteOrder();
      assertEquals((-2811), tiffField0.getDirectoryType());
      assertEquals(2147450877, tiffField0.getSortHint());
      assertEquals(2147450877, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1772, 1772, fieldTypeLong0, 1L, (-2928L), byteArray0, byteOrder0, (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1772, tiffField0.getDirectoryType());
      assertEquals((-2928), tiffField0.getOffset());
      assertEquals(1772, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146827927, 2146827927, fieldTypeDouble0, 602L, 2146827927, byteArray0, byteOrder0, 2146827927);
      tiffField0.getByteArrayValue();
      assertEquals(2146827927, tiffField0.getOffset());
      assertEquals(2146827927, tiffField0.getTag());
      assertEquals(2146827927, tiffField0.getSortHint());
      assertEquals(2146827927, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1603, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1603, 1603, fieldTypeShort0, 1603, 1603, byteArray0, (ByteOrder) null, 1603);
      tiffField0.getByteArrayValue();
      assertEquals(1603, tiffField0.getTag());
      assertEquals(1603, tiffField0.getSortHint());
      assertEquals(1603, tiffField0.getOffset());
      assertEquals(1603, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)118, (byte)118, fieldTypeFloat0, 3448L, (-3972), byteArray0, byteOrder0, 2147133951);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("UTF-8");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(2147133951, tiffField0.getSortHint());
      assertEquals(118, tiffField0.getTag());
      assertEquals(118, tiffField0.getDirectoryType());
      assertEquals((-3972), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3938), (-92), fieldTypeByte0, (-3938), (-1970L), (byte[]) null, byteOrder0, 1793);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("*?+~o9iwT@ii-");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[255];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3010, 42, fieldTypeDouble0, (-6L), 2592L, byteArray0, byteOrder0, 3010);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, (-1637L), (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2040, 3896, fieldTypeLong0.FLOAT, (-1), (-4644L), byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-27), fieldTypeDouble0.SSHORT, (-27), (-2147291454), byteArray0, byteOrder0, 50341);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-386L), (-386L), byteArray0, byteOrder0, 40091);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, (-1), fieldTypeDouble0.ASCII, 5L, 13, byteArray0, byteOrder0, (byte) (-71));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147475455, 2147074213, fieldTypeFloat0, 2147475455, 255L, byteArray0, (ByteOrder) null, 2921);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(39, (String) null);
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40093, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, 2147473114);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(439, (-362), (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte)67);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeDouble0, 257L, 2146827922, byteArray0, byteOrder0, 2367);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 2147133951, (FieldType) null, 15520L, (byte)50, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2163, (byte) (-66), fieldTypeDouble0.BYTE, (-1238L), 2270L, byteArray0, byteOrder0, (-152));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, 1204, fieldTypeDouble0.ASCII, 2092L, (-1L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "PageNumber");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4346, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2294, 2294, fieldTypeRational0, (-962L), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2147475455, (String) null);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147475455, 2146664310, fieldTypeShort0, (-5679L), (-5679L), byteArray0, (ByteOrder) null, (byte)7);
      MockFileWriter mockFileWriter0 = new MockFileWriter("et", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1801, fieldTypeDouble0.ASCII, (byte)0, 3086L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(3086, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1801, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, (-1637L), (byte[]) null, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-1637), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte)0, fieldTypeLong0, 65535L, (byte)0, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(121, 121, fieldTypeAscii0, 121, (-1L), byteArray0, byteOrder0, 42112);
      int int0 = tiffField0.getOffset();
      assertEquals(121, tiffField0.getDirectoryType());
      assertEquals(42112, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(121, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1801, fieldTypeDouble0.ASCII, (byte)0, 3086L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1801, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(3086, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147475455, 2147475455, fieldTypeFloat0, 0L, 40728L, byteArray0, byteOrder0, (-2144842215));
      tiffField0.getBytesLength();
      assertEquals((-2144842215), tiffField0.getSortHint());
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals(2147475455, tiffField0.getTag());
      assertEquals(40728, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50717, (-2215), fieldTypeByte0, 1L, (-484L), byteArray0, byteOrder0, 747);
      tiffField0.getDoubleValue();
      assertEquals((-2215), tiffField0.getDirectoryType());
      assertEquals(747, tiffField0.getSortHint());
      assertEquals((-484), tiffField0.getOffset());
      assertEquals(50717, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2876), 2147475455, fieldTypeByte0, 1L, 2147475455, byteArray0, (ByteOrder) null, 6);
      tiffField0.getIntValue();
      assertEquals(2147475455, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-2876), tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-3621), 5220, fieldTypeLong0, (byte)7, (-3621), byteArray0, byteOrder0, (-2147291444));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3621), tiffField0.getOffset());
      assertEquals(5220, tiffField0.getDirectoryType());
      assertEquals((-2147291444), tiffField0.getSortHint());
      assertEquals((-3621), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-1265), (-1768), fieldTypeDouble0.UNDEFINED, 2624L, (-1265), byteArray0, (ByteOrder) null, (byte)26);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4fca4e6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[45];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2146827922, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, (-2147189188));
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2147189188), tiffField0.getSortHint());
      assertEquals(2146827922, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), 1022, fieldTypeByte0, (byte)90, 2078L, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@651f7ff6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeDouble0.FLOAT, 22720L, (-2356L), byteArray0, byteOrder0, (-3016));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2356), tiffField0.getOffset());
      assertEquals((-3016), tiffField0.getSortHint());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField((-2147291444), 1289, fieldTypeDouble0.IFD, (-2147291444), 536L, byteArray0, (ByteOrder) null, (-2147291444));
      tiffField0.getDoubleArrayValue();
      assertEquals(536, tiffField0.getOffset());
      assertEquals((-2147291444), tiffField0.getSortHint());
      assertEquals((-2147291444), tiffField0.getTag());
      assertEquals(1289, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147291454), (-2147291454), fieldTypeDouble0.SSHORT, (-2147291454), (-2147291454), byteArray0, byteOrder0, (-660));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147291454), tiffField0.getDirectoryType());
      assertEquals((-660), tiffField0.getSortHint());
      assertEquals((-2147291454), tiffField0.getOffset());
      assertEquals((-2147291454), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(4138, (-778), fieldTypeShort0.SRATIONAL, 2434L, (-778), byteArray0, (ByteOrder) null, 4138);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4138, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(4138, tiffField0.getSortHint());
      assertEquals((-778), tiffField0.getDirectoryType());
      assertEquals((-778), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(6, 0, fieldTypeRational0, (byte)118, 2146801690, byteArray0, byteOrder0, (-222));
      tiffField0.getDoubleArrayValue();
      assertEquals((-222), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2146801690, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-1), fieldTypeLong0.FLOAT, 1L, (byte) (-1), byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-45), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3693), "The array of suffixes must not be null");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5091, 5091, fieldTypeDouble0, 5091, 5091, byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4b287a18 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-2147291444), 1289, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SBYTE).LONG, (-2147291444), 536L, byteArray0, (ByteOrder) null, (-2147291444));
      tiffField0.getIntArrayValue();
      assertEquals((-2147291444), tiffField0.getSortHint());
      assertEquals(536, tiffField0.getOffset());
      assertEquals((-2147291444), tiffField0.getTag());
      assertEquals(1289, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3, "PrintIM");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1492, 32895, fieldTypeRational0, 3, 1492, byteArray0, (ByteOrder) null, (byte)84);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1078), (-1776), fieldTypeRational0, 268L, 268L, byteArray0, byteOrder0, (byte) (-30));
      tiffField0.getIntArrayValue();
      assertEquals((-1078), tiffField0.getTag());
      assertEquals(268, tiffField0.getOffset());
      assertEquals((-1776), tiffField0.getDirectoryType());
      assertEquals((-30), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2146827922, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 2146827922);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(2146827922, tiffField0.getDirectoryType());
      assertEquals(2146827922, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147291454), (-2147291454), fieldTypeDouble0.SHORT, (-2147291454), (-2147291454), byteArray0, byteOrder0, (-660));
      tiffField0.getIntArrayValue();
      assertEquals((-2147291454), tiffField0.getTag());
      assertEquals((-2147291454), tiffField0.getOffset());
      assertEquals((-2147291454L), tiffField0.getCount());
      assertEquals((-2147291454), tiffField0.getDirectoryType());
      assertEquals((-660), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1801, fieldTypeDouble0.ASCII, (byte)0, 3086L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3086, tiffField0.getOffset());
      assertEquals(1801, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147080363), (-160), fieldTypeByte0, 4L, 0L, byteArray0, byteOrder0, 119);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@7164aff8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147080363), (-160), fieldTypeByte0, 4L, 0L, byteArray0, byteOrder0, 119);
      String string0 = tiffField0.getTagName();
      assertEquals(119, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x80062755)", string0);
      assertEquals((-160), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147475455, "UTF-8");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2, (byte) (-44), fieldTypeFloat0, 448L, (-634L), byteArray0, (ByteOrder) null, (-2147080363));
      String string0 = tiffField0.getTagName();
      assertEquals((-634), tiffField0.getOffset());
      assertEquals("InteroperabilityVersion", string0);
      assertEquals(2, tiffField0.getTag());
      assertEquals((-44), tiffField0.getDirectoryType());
      assertEquals((-2147080363), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-1265), (-1768), fieldTypeDouble0.UNDEFINED, 2624L, (-1265), byteArray0, (ByteOrder) null, (byte)26);
      MockFile mockFile0 = new MockFile("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "-1265 (0xfffffb0f: Unknown Tag): ");
      assertEquals((-1768), tiffField0.getDirectoryType());
      assertEquals((-1265), tiffField0.getOffset());
      assertEquals(132L, mockFile0.length());
      assertEquals((-1265), tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2312, (byte)118, fieldTypeFloat0, (byte)118, 2312, byteArray0, byteOrder0, 2146817761);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(118L, tiffField0.getCount());
      assertEquals(2312, tiffField0.getTag());
      assertEquals(2312, tiffField0.getOffset());
      assertEquals(2146817761, tiffField0.getSortHint());
      assertEquals(118, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3282), 2146827922, fieldTypeDouble0.UNDEFINED, 2367, 2146827922, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.toString();
      assertEquals("-3282 (0xfffff32e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (64) (2367 Undefined)", string0);
      assertEquals(2146827922, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(2146827922, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeDouble0.FLOAT, 22720L, (-2356L), byteArray0, byteOrder0, (-3016));
      String string0 = tiffField0.getValueDescription();
      assertEquals(22720L, tiffField0.getCount());
      assertEquals((-3016), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2356), tiffField0.getOffset());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[118];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-487), 0, fieldTypeDouble0, (-2147291454), (-660), byteArray0, byteOrder0, 38);
      String string0 = tiffField0.toString();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-660), tiffField0.getOffset());
      assertEquals("-487 (0xfffffe19: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (-2147291454 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[239];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2499, 71, fieldTypeDouble0.IFD, 71, (-752), byteArray0, byteOrder0, 2499);
      tiffField0.dump();
      assertEquals((-752), tiffField0.getOffset());
      assertEquals(71L, tiffField0.getCount());
      assertEquals(2499, tiffField0.getTag());
      assertEquals(2499, tiffField0.getSortHint());
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-2147291444), 1289, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).BYTE).IFD, (-2147291444), 536L, byteArray0, (ByteOrder) null, (-2147291444));
      String string0 = tiffField0.getValueDescription();
      assertEquals(536, tiffField0.getOffset());
      assertEquals((-2147291444), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-2147291444), tiffField0.getSortHint());
      assertEquals(1289, tiffField0.getDirectoryType());
      assertEquals((-2147291444L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)118, fieldTypeShort0, 40728L, 967L, byteArray0, byteOrder0, (byte)12);
      String string0 = tiffField0.getValueDescription();
      assertEquals(967, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(118, tiffField0.getDirectoryType());
      assertEquals(40728L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2033, 2033, fieldTypeDouble0.ASCII, 787L, 242L, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertEquals(242, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(2033, tiffField0.getDirectoryType());
      assertEquals(2033, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1801, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, (-1), fieldTypeDouble0.ASCII, 5L, 13, byteArray0, byteOrder0, (byte) (-71));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-71), tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2142904791, "\"fytTrJ]'Uq}i|R");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)108;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2142904791, 2142904791, fieldTypeAscii0, 304L, 2142904791, byteArray0, byteOrder0, (byte) (-81));
      tiffField0.toString();
      assertEquals(2142904791, tiffField0.getTag());
      assertEquals(304L, tiffField0.getCount());
      assertEquals(2142904791, tiffField0.getOffset());
      assertEquals(2142904791, tiffField0.getDirectoryType());
      assertEquals((-81), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50717, (-2215), fieldTypeByte0, 1L, (-484L), byteArray0, byteOrder0, 747);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2215), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(50717, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(747, tiffField0.getSortHint());
      assertEquals((-484), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3693), "The array of suffixes must not be null");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5091, 5091, fieldTypeDouble0, 5091, 5091, byteArray0, byteOrder0, (byte) (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3693), (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(5091, tiffField0.getDirectoryType());
      assertEquals(5091, tiffField0.getTag());
      assertEquals(5091, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1L, 582L, byteArray0, byteOrder0, (byte) (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 50);
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147080363), (-160), fieldTypeByte0, 4L, 0L, byteArray0, byteOrder0, 119);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-160), tiffField0.getDirectoryType());
      assertEquals((-2147080363), tiffField0.getTag());
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeAscii0, 65535, 0, (byte[]) null, byteOrder0, (-1681));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals((-1681), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-27), fieldTypeDouble0.SHORT, (-27), (-2147291454), byteArray0, byteOrder0, 50341);
      tiffField0.dump();
      assertEquals(28, tiffField0.getTag());
      assertEquals(50341, tiffField0.getSortHint());
      assertEquals((-27L), tiffField0.getCount());
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals((-2147291454), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147291454), (-2147291454), fieldTypeDouble0.SSHORT, (-2147291454), (-2147291454), byteArray0, byteOrder0, (-660));
      tiffField0.dump();
      assertEquals((-2147291454L), tiffField0.getCount());
      assertEquals((-2147291454), tiffField0.getTag());
      assertEquals((-660), tiffField0.getSortHint());
      assertEquals((-2147291454), tiffField0.getDirectoryType());
      assertEquals(384388, tiffField0.getBytesLength());
      assertEquals((-2147291454), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2876), 2147475455, fieldTypeByte0, 1L, 2147475455, byteArray0, (ByteOrder) null, 6);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147475455, tiffField0.getDirectoryType());
      assertEquals((-2876), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(6, int0);
      assertEquals(2147475455, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      CharBuffer charBuffer0 = CharBuffer.allocate(65535);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, (-1637L), (byte[]) null, byteOrder0, 65535);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1637), tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2142904791, 105, fieldTypeDouble0, 0L, 50, byteArray0, byteOrder0, (byte) (-108));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2142904791, 105, fieldTypeDouble0, 0L, 50, byteArray0, byteOrder0, (byte) (-108));
      tiffField0.getDoubleArrayValue();
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-108), tiffField0.getSortHint());
      assertEquals(2142904791, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(662, 662, fieldTypeByte0, 662, (-321L), byteArray0, byteOrder0, (-1356));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(662, tiffField0.getTag());
      assertEquals((-1356), tiffField0.getSortHint());
      assertEquals((-321L), tiffElement0.offset);
      assertEquals(662, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
  }
}
