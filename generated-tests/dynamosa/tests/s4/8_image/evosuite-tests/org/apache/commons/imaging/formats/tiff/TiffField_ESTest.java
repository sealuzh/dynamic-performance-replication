/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 12:56:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-30);
      byteArray0[4] = (byte) (-60);
      TiffField tiffField0 = new TiffField((-1112), (byte) (-60), fieldTypeRational0, 3066L, (-150L), byteArray0, byteOrder0, 2124878556);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-150), tiffField0.getOffset());
      assertEquals((-1112), tiffField0.getTag());
      assertEquals((-60), tiffField0.getDirectoryType());
      assertEquals(2124878556, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-60);
      TiffField tiffField0 = new TiffField((-1112), (byte) (-60), fieldTypeRational0, 3066L, (-150L), byteArray0, byteOrder0, 2124878556);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-60), tiffField0.getDirectoryType());
      assertEquals((-150), tiffField0.getOffset());
      assertEquals((-1112), tiffField0.getTag());
      assertEquals(2124878556, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(27, (-2294), fieldTypeRational0, 27, 27, byteArray0, byteOrder0, (-1376));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (27 SRational)", string0);
      assertEquals((-2294), tiffField0.getDirectoryType());
      assertEquals((-1376), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 1512L, 0L, byteArray0, byteOrder0, 32);
      tiffField0.dump();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1943, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1943, 1943, fieldTypeShort0, 1943, 1943, byteArray0, byteOrder0, (byte)79);
      tiffField0.getValue();
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(1943, tiffField0.getDirectoryType());
      assertEquals(1943, tiffField0.getTag());
      assertEquals(1943, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-2397), fieldTypeLong0, (byte)79, 302L, byteArray0, byteOrder0, (-1158));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2397), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(302, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1158), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0L, byteArray0, byteOrder0, (byte)85);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65557, 50707, fieldTypeLong0, 50707, 65557, byteArray0, byteOrder0, (byte) (-128));
      int int0 = tiffField0.getTag();
      assertEquals(50707, tiffField0.getDirectoryType());
      assertEquals(65557, tiffField0.getOffset());
      assertEquals(65557, int0);
      assertEquals((-128), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(121, "F6Y");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)63;
      CharBuffer charBuffer0 = CharBuffer.allocate(1817);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4713, 4713, fieldTypeAscii0, 121, 4713, byteArray0, byteOrder0, (-3086));
      String string0 = tiffField0.getStringValue();
      assertEquals(4713, tiffField0.getOffset());
      assertEquals(4713, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4713, tiffField0.getDirectoryType());
      assertEquals((-3086), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65557, 50707, fieldTypeLong0, 50707, 65557, byteArray0, byteOrder0, (byte) (-128));
      int int0 = tiffField0.getSortHint();
      assertEquals(65557, tiffField0.getTag());
      assertEquals(50707, tiffField0.getDirectoryType());
      assertEquals((-128), int0);
      assertEquals(65557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, byteArray0, byteOrder0, 8);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(8L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65557, 50707, fieldTypeLong0, 50707, 65557, byteArray0, byteOrder0, (byte) (-128));
      int int0 = tiffField0.getOffset();
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getTag());
      assertEquals(50707, tiffField0.getDirectoryType());
      assertEquals(65557, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-128), (byte) (-128), fieldTypeLong0, 0L, (-3776L), byteArray0, byteOrder0, 3682);
      int int0 = tiffField0.getOffset();
      assertEquals((-128), tiffField0.getTag());
      assertEquals((-3776), int0);
      assertEquals(3682, tiffField0.getSortHint());
      assertEquals((-128), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1943, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-117);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1943, 1943, fieldTypeShort0, 1943, 1943, byteArray0, byteOrder0, (byte)79);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(139, int0);
      assertEquals(1943, tiffField0.getTag());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(1943, tiffField0.getOffset());
      assertEquals(1943, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1943, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-60);
      TiffField tiffField0 = new TiffField((-1), (byte)50, fieldTypeShort0, 336L, 3066L, byteArray0, byteOrder0, 412);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(412, tiffField0.getSortHint());
      assertEquals((-15360), int0);
      assertEquals(3066, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1940, 1, fieldTypeLong0, 1, 1940, byteArray0, byteOrder0, 7);
      tiffField0.getIntValue();
      assertEquals(1940, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1940, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(427, (byte) (-6), fieldTypeByte0, (byte)1, (-24096L), byteArray0, byteOrder0, (-340));
      tiffField0.getIntValue();
      assertEquals((-340), tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals(427, tiffField0.getTag());
      assertEquals((-24096), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-96);
      TiffField tiffField0 = new TiffField(50720, 50, fieldTypeRational0.SSHORT, 1L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50720, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, (String) null);
      TiffField tiffField0 = new TiffField((byte) (-117), 2147198571, fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, 2145420743);
      tiffField0.getFieldTypeName();
      assertEquals(2147198571, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-117), tiffField0.getTag());
      assertEquals(2145420743, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1943, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1943, 1943, fieldTypeShort0, 1943, 1943, byteArray0, byteOrder0, (byte)79);
      tiffField0.getFieldTypeName();
      assertEquals(1943, tiffField0.getOffset());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(1943, tiffField0.getTag());
      assertEquals(1943, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48320, 48320, (FieldType) null, 48320, 48320, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(48320, tiffField0.getDirectoryType());
      assertEquals(48320, tiffField0.getTag());
      assertEquals(48320, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2872, 0, fieldTypeShort0, 504L, 2872, byteArray0, (ByteOrder) null, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2872, tiffField0.getTag());
      assertEquals(2872, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(848, (-1112), fieldTypeRational0, 1284L, (-1112), byteArray0, byteOrder0, 2146930600);
      tiffField0.getFieldType();
      assertEquals((-1112), tiffField0.getOffset());
      assertEquals(848, tiffField0.getTag());
      assertEquals(2146930600, tiffField0.getSortHint());
      assertEquals((-1112), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-30), (-1028), fieldTypeLong0, 1L, (-1643L), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals((-30), tiffField0.getTag());
      assertEquals((-1028), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(427, (byte) (-6), fieldTypeByte0, (byte)1, (-24096L), byteArray0, byteOrder0, (-340));
      tiffField0.getDoubleValue();
      assertEquals(427, tiffField0.getTag());
      assertEquals((-6), tiffField0.getDirectoryType());
      assertEquals((-340), tiffField0.getSortHint());
      assertEquals((-24096), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-96);
      TiffField tiffField0 = new TiffField(50720, 50, fieldTypeRational0.SHORT, 1L, (-1L), byteArray0, byteOrder0, 0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(50720, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2872, 0, fieldTypeShort0, 504L, 2872, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2872, tiffField0.getOffset());
      assertEquals(2872, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1943, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1943, 65535, fieldTypeShort0, 1943, (-1L), byteArray0, (ByteOrder) null, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1943, tiffField0.getTag());
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-4183), (-4183), fieldTypeLong0.BYTE, 430L, (-4183), byteArray0, byteOrder0, (-26));
      long long0 = tiffField0.getCount();
      assertEquals((-4183), tiffField0.getTag());
      assertEquals((-4183), tiffField0.getDirectoryType());
      assertEquals((-4183), tiffField0.getOffset());
      assertEquals(430L, long0);
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-117), 5, fieldTypeFloat0, (-1432L), (-1), byteArray0, byteOrder0, (byte) (-117));
      long long0 = tiffField0.getCount();
      assertEquals((-1432L), long0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-117), tiffField0.getTag());
      assertEquals((-117), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65557, 50707, fieldTypeLong0, 50707, 65557, byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getBytesLength();
      assertEquals(50707, tiffField0.getDirectoryType());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(65557, tiffField0.getTag());
      assertEquals(65557, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1506), 50, fieldTypeRational0, (-1L), 4L, byteArray0, byteOrder0, 2146930600);
      tiffField0.getBytesLength();
      assertEquals(2146930600, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1506), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(121, "F6Y");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1741, (-3400), fieldTypeAscii0.FLOAT, 1332L, 3080L, byteArray0, byteOrder0, 1264);
      tiffField0.getByteOrder();
      assertEquals(3080, tiffField0.getOffset());
      assertEquals(1264, tiffField0.getSortHint());
      assertEquals((-3400), tiffField0.getDirectoryType());
      assertEquals(1741, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65535, 2412, fieldTypeByte0, 1043L, 1L, byteArray0, (ByteOrder) null, 50735);
      tiffField0.getByteArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2412, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50735, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1112), "fA4ee5RX<<*v']$w\"UA");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "fA4ee5RX<<*v']$w\"UA");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3012), (byte)100, fieldTypeRational0, (-2147483648L), (byte)50, byteArray0, byteOrder0, (byte)50);
      tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(100, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-3012), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1091), (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, 166, fieldTypeRational0, (byte)0, 1488L, byteArray0, byteOrder0, (-1995));
      MockFileWriter mockFileWriter0 = new MockFileWriter("|{rC$2k(n*");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals((-1995), tiffField0.getSortHint());
      assertEquals(166, tiffField0.getDirectoryType());
      assertEquals(1488, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-608), 2744, fieldTypeRational0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, (-2146467807));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("pZ4amb|b");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2744, tiffField0.getDirectoryType());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals((-608), tiffField0.getTag());
      assertEquals((-2146467807), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50851, 50851, (FieldType) null, 50851, 50851, byteArray0, byteOrder0, 50851);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1162), (-1162), fieldTypeRational0, (-1162), (-1162), byteArray0, byteOrder0, (-1162));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1937), 1, fieldTypeRational0, 1, (-1937), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeRational0, 40965, 40965, (byte[]) null, byteOrder0, 40965);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1762), (-1762), fieldTypeRational0, (-1762), (-1762), byteArray0, byteOrder0, (-1762));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(40093, 28, fieldTypeRational0, 3081, (-2317L), byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1337, 1337, (FieldType) null, 1337, 1337, (byte[]) null, byteOrder0, (-4732));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 6, fieldTypeByte0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, (byte[]) null, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1928), 1, fieldTypeRational0, 1, (-1928), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146998791), (-2146998791), fieldTypeShort0, (-2146998791), (-2146998791), (byte[]) null, byteOrder0, (-2146998791));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-10), (-10), fieldTypeDouble0, (-10), (-10), byteArray0, byteOrder0, (-10));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50879, 50879, (FieldType) null, 50879, 50879, byteArray0, byteOrder0, 50879);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2365), (-2365), fieldTypeRational0, (-2365), (-2365), byteArray0, byteOrder0, (-2365));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[80];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4312, 4312, fieldTypeRational0, 1L, 4312, byteArray0, byteOrder0, 4312);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, 36, (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-3981), (-3981), fieldTypeRational0, (-3981), (-3981), byteArray0, byteOrder0, (-3981));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50885, 50885, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 50885);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, (-1597L), 4L, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-60), fieldTypeShort0, 50879, 1199L, byteArray0, byteOrder0, (-60));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36864, 36864, fieldTypeAscii0, 36864, 36864, (byte[]) null, byteOrder0, 36864);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeLong0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-1041), (-1041), fieldTypeShort0, (-1041), (-1L), byteArray0, byteOrder0, (-1041));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeLong0, (-7), (-7), byteArray0, byteOrder0, (-7));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("n>AchX<&sS6XLoc@Asx");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "n>AchX<&sS6XLoc@Asx");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1815, 1815, fieldTypeByte0, (-39L), (-39L), byteArray0, byteOrder0, 1815);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 141);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 1512L, 0L, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 8, (-715L), (byte[]) null, byteOrder0, (-4183));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-715), tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-4183), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(739, 739, fieldTypeFloat0, 739, 0L, byteArray0, (ByteOrder) null, (byte)94);
      tiffField0.getByteOrder();
      assertEquals(739, tiffField0.getTag());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(739, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(951, 951, fieldTypeShort0, 951, 951, (byte[]) null, byteOrder0, 951);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1815, 1815, fieldTypeByte0, (-39L), (-39L), byteArray0, byteOrder0, 1815);
      tiffField0.getFieldType();
      assertEquals(1815, tiffField0.getDirectoryType());
      assertEquals(1815, tiffField0.getSortHint());
      assertEquals(1815, tiffField0.getTag());
      assertEquals((-39), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-73), (-73), fieldTypeByte0, (-73), (-1L), byteArray0, byteOrder0, (byte)57);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-73), int0);
      assertEquals((-73), tiffField0.getTag());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "\"5zh5kh");
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1589, (-599), fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 517);
      tiffField0.getOffset();
      assertEquals((-599), tiffField0.getDirectoryType());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(1589, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(513, 0, fieldTypeShort0, 4294967294L, (-2206L), byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertEquals((-2206), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1191), (-1191), fieldTypeByte0, (-715L), 2613L, (byte[]) null, byteOrder0, 4675);
      int int0 = tiffField0.getTag();
      assertEquals(4675, tiffField0.getSortHint());
      assertEquals((-1191), tiffField0.getDirectoryType());
      assertEquals(2613, tiffField0.getOffset());
      assertEquals((-1191), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1209), "MLC@5fDN=K-@QO,3");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-803), 47, fieldTypeDouble0, 0L, 0L, byteArray0, (ByteOrder) null, (-610));
      tiffField0.getCount();
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals((-803), tiffField0.getTag());
      assertEquals((-610), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 4490, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4490, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeFloat0, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals("79 (0x4f: Unknown Tag): ", string0);
      assertEquals(79, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeLong0, 21, 21, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeShort0, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[129];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(37413, 37413, fieldTypeRational0, 37413, 37413, byteArray0, byteOrder0, 37413);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 32, 32, byteArray0, byteOrder0, 32);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@571cef57 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@42f5b552 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeFloat0, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      tiffField0.getDoubleArrayValue();
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79L, tiffField0.getCount());
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeFloat0.SLONG, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      tiffField0.getDoubleArrayValue();
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getTag());
      assertEquals(79L, tiffField0.getCount());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50938, 50938, fieldTypeDouble0, 50938, 50938, byteArray0, byteOrder0, 50938);
      tiffField0.getDoubleArrayValue();
      assertEquals(50938, tiffField0.getDirectoryType());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals(50938, tiffField0.getSortHint());
      assertEquals(50938, tiffField0.getTag());
      assertEquals(50938, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(804, 804, fieldTypeRational0, 804, 804, byteArray0, byteOrder0, 804);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(804, tiffField0.getSortHint());
      assertEquals(804, tiffField0.getOffset());
      assertEquals(804L, tiffField0.getCount());
      assertEquals(804, tiffField0.getTag());
      assertEquals(804, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(37428, 37428, fieldTypeRational0, 37428, 37428, byteArray0, byteOrder0, 37428);
      tiffField0.getDoubleArrayValue();
      assertEquals(37428, tiffField0.getOffset());
      assertEquals(37428, tiffField0.getDirectoryType());
      assertEquals(37428, tiffField0.getTag());
      assertEquals(37428, tiffField0.getSortHint());
      assertEquals(37428L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[264];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 8, 8, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@496b7ecb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146998778), (-2146998778), fieldTypeShort0, (-2146998778), (-2146998778), byteArray0, byteOrder0, (-2146998778));
      assertEquals(969740, tiffField0.getBytesLength());
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2146998778), tiffField0.getDirectoryType());
      assertEquals((-2146998778L), tiffField0.getCount());
      assertEquals((-2146998778), tiffField0.getTag());
      assertEquals((-2146998778), tiffField0.getOffset());
      assertEquals((-2146998778), tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37428, 37428, fieldTypeShort0.RATIONAL, 37428, 37428, byteArray0, byteOrder0, 37428);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(37428, 37428, fieldTypeRational0, 37428, 37428, byteArray0, byteOrder0, 37428);
      tiffField0.getIntArrayValue();
      assertEquals(37428L, tiffField0.getCount());
      assertEquals(37428, tiffField0.getTag());
      assertEquals(37428, tiffField0.getSortHint());
      assertEquals(37428, tiffField0.getOffset());
      assertEquals(299424, tiffField0.getBytesLength());
      assertEquals(37428, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeLong0, 21, 21, byteArray0, byteOrder0, 21);
      tiffField0.getIntArrayValue();
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21L, tiffField0.getCount());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(84, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(37428, "ProfileLookTableDims");
      TiffField tiffField0 = new TiffField(3237, 3485, fieldTypeAscii0, 37428, 37428, byteArray0, byteOrder0, 3237);
      String string0 = tiffField0.getStringValue();
      assertEquals(37428, tiffField0.getOffset());
      assertEquals(3237, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(3237, tiffField0.getTag());
      assertEquals(37428, tiffField0.getBytesLength());
      assertEquals(3485, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 32, 32, byteArray0, byteOrder0, 32);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@3530970a
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getTagName();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x8)", string0);
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(50879, 50879, fieldTypeRational0, 50879, 50879, byteArray0, byteOrder0, 50879);
      String string0 = tiffField0.getTagName();
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(50879, tiffField0.getTag());
      assertEquals("ColorimetricReference", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeFloat0, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      String string0 = tiffField0.getValueDescription();
      assertEquals(79, tiffField0.getTag());
      assertEquals(79L, tiffField0.getCount());
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(316, tiffField0.getBytesLength());
      assertEquals(79, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[250];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeFloat0, 522, 101764L, byteArray0, byteOrder0, 522);
      String string0 = tiffField0.getValueDescription();
      assertEquals(522, tiffField0.getTag());
      assertEquals(101764, tiffField0.getOffset());
      assertEquals(522, tiffField0.getSortHint());
      assertEquals(522L, tiffField0.getCount());
      assertEquals(2088, tiffField0.getBytesLength());
      assertEquals(522, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[379];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(505, 505, fieldTypeDouble0, 505, 505, byteArray0, byteOrder0, 505);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(285, (-2045), fieldTypeDouble0, 285, 5122L, byteArray0, byteOrder0, 285);
      String string0 = tiffField0.getValueDescription();
      assertEquals(285L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-2045), tiffField0.getDirectoryType());
      assertEquals(2280, tiffField0.getBytesLength());
      assertEquals(5122, tiffField0.getOffset());
      assertEquals(285, tiffField0.getTag());
      assertEquals(285, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50916, (-2), fieldTypeLong0, 50916, (-2), byteArray0, byteOrder0, 922);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50916L, tiffField0.getCount());
      assertEquals(50916, tiffField0.getTag());
      assertEquals((-2), tiffField0.getDirectoryType());
      assertEquals(203664, tiffField0.getBytesLength());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(922, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeFloat0.SLONG, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      String string0 = tiffField0.getValueDescription();
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(79L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4110), 50938, fieldTypeShort0, 50938, 2844, byteArray0, byteOrder0, 2844);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2844, tiffField0.getOffset());
      assertEquals(50938, tiffField0.getDirectoryType());
      assertEquals(101876, tiffField0.getBytesLength());
      assertEquals((-4110), tiffField0.getTag());
      assertEquals(50938L, tiffField0.getCount());
      assertEquals(2844, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(65112, 1022, fieldTypeLong0.ASCII, 1022, 1022, byteArray0, byteOrder0, 1173);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65112, tiffField0.getTag());
      assertEquals(1022, tiffField0.getOffset());
      assertEquals(1022, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1022, tiffField0.getBytesLength());
      assertEquals(1173, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeAscii0, 34, 34, byteArray0, byteOrder0, 34);
      tiffField0.toString();
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34L, tiffField0.getCount());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeFloat0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 2, 2, byteArray0, byteOrder0, 2);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(2, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 8, (-715L), (byte[]) null, byteOrder0, (-4183));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4183), (-4183));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-715), tiffField0.getOffset());
      assertEquals((-4183), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals(8L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-715L), (byte[]) null, byteOrder0, (-4183));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-4183), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-715), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeShort0, (byte)79, (byte)79, byteArray0, byteOrder0, (byte)79);
      tiffField0.getFieldTypeName();
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getTag());
      assertEquals(79, tiffField0.getOffset());
      assertEquals(158, tiffField0.getBytesLength());
      assertEquals(79, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 8, 8, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 32, 0L, byteArray0, byteOrder0, 32);
      int int0 = tiffField0.getSortHint();
      assertEquals(32, int0);
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getTag());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeLong0, 27, 27, byteArray0, byteOrder0, 5240);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-121), (byte) (-121), fieldTypeLong0, (byte) (-121), (byte) (-121), byteArray0, (ByteOrder) null, (byte) (-121));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1379), (-1379), fieldTypeLong0, 1L, (-1379), byteArray0, (ByteOrder) null, (-1379));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-715L), (byte[]) null, byteOrder0, (-4183));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-4183), (-4183));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-4183), tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-715), tiffField0.getOffset());
  }
}
