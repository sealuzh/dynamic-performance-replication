/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 02:15:55 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = new RE2("@D2WO<b07h0\".lPc");
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = new RE2("Thai");
      boolean boolean0 = rE2_0.match("Thai");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = new RE2("can't happen");
      String string0 = rE2_0.find("o");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = RE2.match("0#QM*_byE%'", "0#QM*_byE%'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[5];
      rE2_0.findAllUTF8(byteArray0, 0);
      String string0 = rE2_0.expr;
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("0xe7^r EDi_R");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("0xe7^r EDi_R", 212);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<String> list0 = rE2_0.findAll("", (-1112));
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compile(":d,?!lM{#d#G");
      rE2_0.findUTF8SubmatchIndex(byteArray0);
      // Undeclared exception!
      try { 
        rE2_0.replaceAll((String) null, ":d,?!lM{#d#G");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.RE2", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = new RE2("^CB2E.YeVK");
      int[] intArray0 = rE2_0.findSubmatchIndex("^CB2E.YeVK");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compileImpl(">Oanv+yEjqGL", 1377, true);
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, (byte) (-37));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = new RE2("D");
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte) (-128);
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("ALT");
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      String string0 = rE2_0.replaceAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.find("");
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("lzwp");
      int[] intArray0 = rE2_0.findSubmatchIndex("lzwp");
      assertArrayEquals(new int[] {0, 4}, intArray0);
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[10];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("N");
      byte[] byteArray0 = new byte[11];
      byte[][] byteArray1 = rE2_0.findUTF8Submatch(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("S");
      String string0 = rE2_0.find("S");
      assertEquals("S", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("\"1OZ.Rf");
      List<String[]> list0 = rE2_0.findAllSubmatch("", 32);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = new RE2("com.google.re2j.Parser$Stack");
      String string0 = rE2_0.replaceAll("", "com.google.re2j.Parser$Stack");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = new RE2("Zl");
      String string0 = rE2_0.replaceFirst("Zl", "Zl");
      assertEquals("Zl", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String string0 = rE2_0.replaceFirst("A'GIKn_>4", "A'GIKn_>4");
      assertEquals("A'GIKn_>4A'GIKn_>4", string0);
      
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("l!~pg%~aSo5K");
      rE2_0.replaceAll("l!~pg%~aSo5K", "l!~pg%~aSo5K");
      int int0 = RE2.POSIX;
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RE2 rE2_0 = RE2.compilePOSIX("f\"d%4i2,}^o2X]9gtk");
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllIndex("", 3572);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[1];
      rE2_0.longest = true;
      byteArray0[0] = (byte)1;
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, (byte)1);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 280);
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = new RE2("can't happen");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 3501);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Q0");
      rE2_0.findSubmatch("Q0");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = new RE2("tE8");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl(":2=E", 1065, false);
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, 1065);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, (-729));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = new RE2("@D2WO<b07h0\".lPc");
      rE2_0.findSubmatch("@D2WO<b07h0\".lPc");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-128);
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllSubmatch("", 1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Unified_Ideograph");
      StringBuffer stringBuffer0 = new StringBuffer("!%cKGUiPh/G1(,U5\"%%");
      int[] intArray0 = new int[1];
      intArray0[0] = 2153;
      rE2_0.match(stringBuffer0, 2153, 128, 128, intArray0, 2153);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-102);
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 513);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAll("G", 0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = new RE2(" @_E\"'-~UTMs");
      rE2_0.findAllSubmatchIndex(" @_E\"'-~UTMs", 70);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("fail");
      rE2_0.reset();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte) (-80);
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("RX0.]&@T");
      int[] intArray0 = new int[5];
      intArray0[0] = 4;
      intArray0[1] = 4;
      intArray0[2] = 655358;
      intArray0[3] = 4;
      intArray0[4] = 4;
      rE2_0.match("RX0.]&@T", 4, 4, 4, intArray0, 4);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2.quoteMeta("C)mZ6Ih");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = new RE2("0xe7^r EDi_R");
      rE2_0.findAllIndex("0xe7^r EDi_R", 212);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllSubmatchIndex("", 3572);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[1];
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[2];
      RE2.compilePOSIX("");
      rE2_0.replaceAll("3", "3");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2.quoteMeta("");
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-105);
      byteArray0[1] = (byte) (-44);
      rE2_0.findAllUTF8(byteArray0, 387);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "";
      RE2 rE2_0 = new RE2("");
      rE2_0.prefixRune = 0;
      String string1 = rE2_0.expr;
      int[] intArray0 = rE2_0.findSubmatchIndex("");
      RE2 rE2_1 = RE2.compilePOSIX("");
      Machine machine0 = rE2_0.get();
      rE2_0.put(machine0);
      // Undeclared exception!
      try { 
        rE2_1.match("", 0, 0, 0, intArray0, 206);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RE2 rE2_0 = new RE2("$");
      rE2_0.reset();
      rE2_0.findAllSubmatch("+O2X4i", (-6));
      String string0 = rE2_0.expr;
      rE2_0.findSubmatch("$");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = new RE2("$");
      int[] intArray0 = new int[20];
      intArray0[1] = (-1193);
      intArray0[2] = (-1193);
      rE2_0.replaceAll("CA", (String) null);
      // Undeclared exception!
      try { 
        rE2_0.findUTF8Index((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }
}
