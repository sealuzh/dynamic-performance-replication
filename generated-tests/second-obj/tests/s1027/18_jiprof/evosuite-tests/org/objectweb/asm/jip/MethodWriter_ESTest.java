/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:25:37 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1745), "<ini)>", "4Bcm@9Un0#PR9_d@", "<ini)>", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-26);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-26), (-62));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -26
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Edge edge0 = new Edge();
      Object[] objectArray0 = new Object[3];
      int[] intArray0 = new int[15];
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, (-1170));
      assertEquals((-1170), int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      Item[] itemArray0 = new Item[2];
      stringArray0[1] = "L$Ic{%";
      int[] intArray0 = new int[6];
      intArray0[1] = (-2724);
      intArray0[2] = (-1549);
      intArray0[3] = (-563);
      intArray0[4] = (-1549);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, (-1118), 4355);
      assertEquals(4910, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-475));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "AK?aYn>N<";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "Code", "AK?aYn>N<", "yOU", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3));
      Label label0 = new Label();
      label0.status = (-3);
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
      ClassWriter classWriter1 = new ClassWriter(0);
      MethodWriter.getNewOffset((int[]) null, (int[]) null, label0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, Integer.MAX_VALUE, "AnnotationDefault", "f/f:uO&<1m3ZUr.!v! ", "AnnotationDefault", stringArray0, false, false);
      Object object0 = new Object();
      methodWriter0.visitIincInsn((-845), (-845));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Object object0 = new Object();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "java/lang/Class";
      ClassWriter classWriter0 = new ClassWriter(4);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 340, "java/lang/Class", "", (String) null, stringArray0, false, false);
      methodWriter0.visitLdcInsn("java/lang/Class");
      methodWriter0.visitVarInsn(93, (-1523));
      methodWriter0.visitIincInsn(340, 340);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(72);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 72, "fh[DHgH_~Q`GWB02\"", "LocalVariableTable", "fh[DHgH_~Q`GWB02\"", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      ByteVector byteVector1 = byteVector0.putInt(1);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-4134);
      ClassWriter classWriter0 = new ClassWriter((-4134));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Oy*#", "", "<init>", (String[]) null, false, false);
      methodWriter0.visitAnnotation("Oy*#", true);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypeTable", "java/lang/Class", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "LocalVariableTypeTable");
      classWriter0.toByteArray();
      classWriter0.threshold = 1;
      Label label0 = new Label();
      methodWriter0.visitCode();
      methodWriter0.visitInsn(65280);
      methodWriter0.visitLineNumber(28, label0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypeTable", "java/lang/Class", stringArray0, false, false);
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.threshold = 1;
      methodWriter0.classReaderOffset = 2047;
      int int0 = Frame.BASE;
      methodWriter0.visitLdcInsn("java/lang/Class");
      int int1 = MethodWriter.readUnsignedShort(byteArray0, 3);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, false, true);
      methodWriter0.visitMethodInsn(2, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "6i");
      Integer integer0 = new Integer((-143));
      methodWriter0.visitLdcInsn(integer0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(994);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 994, "L$Ic{%", "Sn", "java/lang/Class", stringArray0, false, false);
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-65), (String) null, "org.objectweb.asm.jip.Type", "JMW?gbp54wc[u!", stringArray0, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[8];
      stringArray1[0] = "L$c{%";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray1[2] = "L$c{%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "L$c{%", "<ini)>", "L$c{%", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1, "", "java/lang/Throwable", "8bM7gRgC1IVh>kl");
      methodWriter0.visitIincInsn((-1330), 203);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      String[] stringArray0 = new String[0];
      boolean boolean0 = ClassReader.SIGNATURES;
      classWriter0.newConst("@Xb5Y@~$X%_0m");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "@Xb5Y@~$X%_0m", "<.ziUni)^", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("_a29=i&~-#", "_a29=i&~-#", "_a29=i&~-#", label0, label0, 2059);
      classWriter0.newDouble((-1414));
      methodWriter0.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "<.ziUni)^", "<.ziUni)^", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      classWriter0.index = 977;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", "", stringArray0, false, false);
      classWriter0.newNameTypeItem("", "");
      Label label0 = new Label();
      Edge edge0 = new Edge();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      methodWriter0.visitLocalVariable("G;4I+-x", "sRucG", "<ini)>", label0, label0, (-4065));
      methodWriter0.visitJumpInsn(115, label0);
      boolean boolean0 = classWriter0.invalidFrames;
      Object object0 = label0.info;
      methodWriter0.visitVarInsn(977, 1532);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1569));
      String[] stringArray0 = new String[0];
      classWriter0.newFloat(0.0F);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1569), "Synthetic", "Synthetic", "Synthetic", stringArray0, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)117);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 117
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      classWriter0.index = 1;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<ini)>";
      stringArray0[1] = "";
      stringArray0[2] = "]3@k)#nA";
      stringArray0[3] = "]3@k)#nA";
      stringArray0[4] = "<ini)>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 7, "<ini)>", "]3@k)#nA", "]3@k)#nA", stringArray0, true, true);
      Label label0 = new Label();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "]3@k)#nA", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "vnrz-uY +tMIbS9", "L$Ic{%", "vnrz-uY +tMIbS9", stringArray0, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.toByteArray();
      methodWriter0.visitFrame(977, (-717), stringArray0, (-717), stringArray0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      classWriter0.newInteger(977);
      Object object0 = new Object();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sn", " I_8Im<Xx6", "f/f:uO&<1m3ZUr.!v! ", stringArray0, false, false);
      methodWriter0.visitLdcInsn("Sn");
      methodWriter0.visitVarInsn((-1523), 2);
      methodWriter0.visitAnnotation("okA7W7X3@i6~TI1S", false);
      methodWriter0.visitInsn(2);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypTabe", "L$Ic{%", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "LocalVariableTypTabe");
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("L$c{%");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1549), "~PTHc", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 990;
      ClassWriter classWriter0 = new ClassWriter(990);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      classWriter0.newLong(0L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LocalVariableTypTabe");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1459), "LocalVariableTypTabe", "k8|xL", "Synthetic", stringArray0, false, false);
      methodWriter0.visitTypeInsn(990, "k8|xL");
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("74uh8jZ^4]CGQoM>U9a", (String) null, (String) null, (Label) null, (Label) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassWriter classWriter0 = new ClassWriter(967);
      String[] stringArray0 = new String[0];
      int int0 = Member.DECLARED;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LeIc{ 45");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 967, "LeIc{ 45", "LeIc{ 45", "LeIc{ 45", stringArray0, false, false);
      methodWriter0.visitTypeInsn(2, "LeIc{ 45");
      classWriter0.threshold = 166;
      methodWriter0.classReaderLength = 1;
      methodWriter0.visitMultiANewArrayInsn("LeIc{ 45", 2719);
      classWriter0.lastMethod.visitIntInsn(2, 2719);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeInvisibleAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypeTable", "StckMap", stringArray0, false, false);
      classWriter0.threshold = 1;
      int int0 = Frame.BASE;
      methodWriter0.visitVarInsn((-1549), 2446);
      int int1 = Integer.sum(2446, 16777216);
      Integer integer0 = new Integer((-4158));
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int1));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleParameterAnnotations", "Label offset position has not been resolved yet", "Label offset position has not been resolved yet", stringArray0, false, false);
      methodWriter0.visitAnnotation("Z", true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      methodWriter0.visitIntInsn((-400), 977);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = (-400);
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      MethodWriter methodWriter1 = methodWriter0.next;
      int int0 = methodWriter0.getSize();
      assertEquals(74, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(970);
      classWriter0.index = 970;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 970, "L$Ic{%", "L$Ic{%", "L$Ic{%", stringArray0, false, false);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "L$Ic{%";
      classWriter0.lastMethod.visitIntInsn(1, 26);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitMethodInsn(2, "L$Ic{%", "L$Ic{%", "L$Ic{%");
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.lastMethod.visitFrame(26, 180, stringArray0, 974, stringArray0);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitTableSwitchInsn((-2358), 2, label0, labelArray0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      int int0 = Type.LONG;
      classWriter0.newNameTypeItem("", "");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<iUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, false, true);
      boolean boolean0 = ClassReader.SIGNATURES;
      methodWriter0.visitMethodInsn(186, "s\u0002mp6s~1LgPvB9`,r", "7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      classWriter0.newNameTypeItem("7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      Frame frame0 = new Frame();
      ByteVector byteVector0 = new ByteVector(977);
      methodWriter0.visitFrame(186, 1, stringArray0, 186, stringArray0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, "m~iH)HB~6?1Bzg#", "Deprecated", "6i");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, false, true);
      methodWriter0.visitMethodInsn(2, "m~iH)HB~6?1Bzg#", "Deprecated", "6i");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = 977;
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[8];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", stringArray1[0], stringArray0, true, true);
      int int1 = 229;
      int int2 = 60;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      methodWriter0.visitIntInsn(16, 2);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(60, 60);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2722, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "SctackMa4", stringArray0, true, false);
      methodWriter0.visitIntInsn(2, 2722);
      methodWriter0.visitIincInsn(2722, 2722);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.getSize();
      methodWriter1.classReaderLength = 1;
      classWriter0.visitAnnotation("m~iH)HB~6?1Bzg#", false);
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      methodWriter1.visitJumpInsn(1, label0);
      methodWriter0.visitFrame(2722, 42, stringArray0, 42, stringArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      String[] stringArray0 = new String[0];
      classWriter0.newConst("@Xb5Y@~$X%_8m");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "@Xb5Y@~$X%_8m", "<.ziUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, true);
      methodWriter0.classReaderLength = 2;
      Item item0 = new Item();
      classWriter0.newDouble((-1414));
      methodWriter0.visitEnd();
      methodWriter0.visitMethodInsn(216, "<.ziUni)>", "<.ziUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "qw}E%C)cCV3(rl`%?P", "<]XUo)>", "qw}E%C)cCV3(rl`%?P", stringArray0, true, true);
      classWriter0.newNameTypeItem("qw}E%C)cCV3(rl`%?P", "qw}E%C)cCV3(rl`%?P");
      Label label0 = new Label();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      methodWriter0.visitIincInsn(1, 24117248);
      methodWriter0.visitLabel(label0);
      Frame frame0 = new Frame();
      methodWriter0.visitLocalVariable("leXysE/xi", "<]XUo)>", "java/lang/bjec", label0, label0, 16777219);
      classWriter0.toByteArray();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("leXysE/xi", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      Label label0 = new Label();
      int[] intArray0 = new int[13];
      Label label1 = label0.getFirst();
      label0.successor = label1;
      intArray0[11] = 2;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4466, "Z2?gj@7nJGE.", "Ljava/lang/Synthetic;", "bc\"-Mr", (String[]) null, false, false);
      methodWriter0.visitIincInsn(679, 4466);
      methodWriter0.visitLocalVariable("EnclosingMethod", "Ljava/lang/Synthetic;", (String) null, label1, label0, (-2828));
      methodWriter0.visitIincInsn(60, 217);
      methodWriter0.visitLocalVariable("long", "long", "Ljava/lang/Synthetic;", label1, label0, 50);
      Integer.valueOf(8);
      Frame frame0 = new Frame();
      Label label2 = frame0.owner;
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Sn";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Sn", " I_8Im<Xx6", "Sn", stringArray0, false, false);
      stringArray0[0] = "Class not found";
      methodWriter0.visitMethodInsn(1351, " I_8Im<Xx6", "Lel7n)a!Q+,", "Sn");
      classWriter0.toByteArray();
      methodWriter0.visitFrame(1, 1, stringArray0, 2, stringArray0);
      methodWriter0.getSize();
      methodWriter0.visitMultiANewArrayInsn(" I_8Im<Xx6", 1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(959);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 959, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = "LocalariableTable";
      methodWriter0.visitFieldInsn(1, "LocalariableTable", "m~iH)HB~6?1Bzg#", "LocalariableTable");
      methodWriter0.visitFrame(2, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzg#");
      methodWriter0.visitFrame(959, 188, stringArray0, 1, stringArray0);
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-692), 25165824);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -692
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(959);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 959, "m~iH)HB~6?1Bzdg#", "m~iH)HB~6?1Bzdg#", "m~iH)HB~6?1Bzdg#", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "LocalariableTable", "m~iH)HB~6?1Bzdg#", "LocalariableTable");
      methodWriter0.visitFrame(2, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzdg#");
      methodWriter0.visitMaxs(959, 1);
      boolean boolean0 = ClassReader.SIGNATURES;
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[9];
      stringArray1[7] = "G%";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray1[2] = "G%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "G%", "<ini)>", stringArray1[0], stringArray0, true, true);
      int int0 = Frame.BASE_KIND;
      classWriter0.newNameTypeItem("G%", "G%");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put11(2, 1097);
      ByteVector byteVector2 = byteVector1.putShort(430);
      methodWriter0.put(byteVector2);
      Attribute attribute0 = new Attribute("G%");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1097, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypeTable", "L$Ic{%", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTypeInsn(1, "LocalVariableTypeTable");
      classWriter0.toByteArray();
      classWriter0.threshold = 1;
      Label label0 = new Label();
      methodWriter0.visitCode();
      methodWriter0.visitInsn(65280);
      methodWriter0.visitLineNumber(28, label0);
      int[] intArray0 = new int[8];
      intArray0[0] = 65280;
      intArray0[1] = 1;
      intArray0[2] = 28;
      intArray0[3] = 28;
      intArray0[4] = (-1549);
      intArray0[5] = 65280;
      intArray0[6] = 28;
      intArray0[7] = 28;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 28, 268435456);
      assertEquals(268565988, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(970);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 970, "L$Ic{%", "Sn", "java/lang/Class", stringArray0, false, false);
      String[] stringArray1 = new String[8];
      stringArray1[5] = "L$Ic{%";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter0.visitMethodInsn(285212675, "", "L$Ic{%", "L$Ic{%");
      stringArray1[2] = "L$Ic{%";
      classWriter0.toByteArray();
      stringArray1[3] = ">M>/-;/(&x3";
      classWriter0.thisName = ">M>/-;/(&x3";
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 60, stringArray1, 1380, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Exceptions";
      stringArray0[1] = "Oo.kwD*@Sw";
      stringArray0[2] = "Oo.kwD*@Sw";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 70, "Exceptions", "Oo.kwD*@Sw", "Oo.kwD*@Sw", stringArray0, false, false);
      methodWriter0.visitMaxs(166, 1);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      classWriter0.version = (-1882616304);
      classWriter0.newFloat(0.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      int int0 = Frame.ELEMENT_OF;
      methodWriter0.visitFrame((-1906), 2, stringArray0, 1, stringArray0);
      classWriter0.newClassItem("m~iH)HB~6?1Bzg#");
      Label label0 = new Label();
      label0.inputStackTop = 22;
      Frame frame0 = label0.frame;
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzg#");
      Label label1 = new Label();
      methodWriter0.visitIntInsn(1, 2);
      Frame frame1 = label0.frame;
      methodWriter0.visitFieldInsn(188, "zD^:6#AO-", "m~iH)HB~6?1Bzg#", "@MV:");
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(166, 2466);
      methodWriter0.visitIincInsn(2063, 24);
      int int1 = methodWriter0.getSize();
      assertEquals(66, int1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.index = 977;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "~z", "<ink|)B", "<ink|)B", stringArray0, true, true);
      classWriter0.newNameTypeItem("<ink|)B", "~z");
      boolean boolean0 = ClassReader.RESIZE;
      methodWriter0.visitIincInsn(1692, 185);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(2, "<ink|)B", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassWriter classWriter0 = new ClassWriter(972);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "/", " I_8I4<Xx6", "/", stringArray0, false, false);
      methodWriter0.visitMethodInsn(16777226, "MqjBXo \"q~lOg(L", "Synthetic", "RuntimeVisibleAnnotations");
      methodWriter0.getSize();
      methodWriter0.visitVarInsn(4, 1);
      classWriter0.visitAnnotation("MqjBXo \"q~lOg(L", false);
      Label label0 = new Label();
      Frame frame0 = label0.frame;
      assertNull(frame0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "<ini)>", (String) null, stringArray0, true, false);
      methodWriter0.visitFrame(977, 49, stringArray0, 131072, stringArray0);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.getSize();
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      Label label2 = new Label();
      methodWriter0.visitLabel(label2);
      methodWriter0.visitTryCatchBlock(label0, label1, label2, (String) null);
      methodWriter0.visitTypeInsn(2869, "");
      Label label3 = new Label();
      ClassWriter classWriter1 = new ClassWriter(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      boolean boolean0 = classWriter0.invalidFrames;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "miH)HB~6?1Bzyg#", "miH)HB~6?1Bzyg#", "miH)HB~6?1Bzyg#", stringArray0, true, false);
      methodWriter0.visitMethodInsn((-1696), "miH)HB~6?1Bzyg#", "miH)HB~6?1Bzyg#", "miH)HB~6?1Bzyg#");
      classWriter0.thisName = "Synthetic";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Type.BOOLEAN;
      Integer integer0 = new Integer(2);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Label label1 = frame0.owner;
      int int1 = Frame.BYTE;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitTypeInsn(185, "");
      classWriter0.newMethodItem("17O>sNnm%e6)bAMd,dt", "miH)HB~6?1Bzyg#", "G%", false);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter0.visitLdcInsn("17O>sNnm%e6)bAMd,dt");
      methodWriter0.visitFrame((-357), 2, stringArray0, (-357), stringArray0);
      Label label2 = new Label();
      methodWriter0.visitMaxs(2773, (-2079));
      methodWriter0.visitIntInsn(17, 1024);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(970);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 970, "L$Ic{%", "Sn", "java/lang/Class", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray1 = new String[9];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = 268435455;
      methodWriter0.visitIntInsn(268435455, 16);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      
      stringArray1[1] = "Sn";
      String string0 = "";
      methodWriter0.classReaderOffset = 970;
      methodWriter0.visitMethodInsn(285212675, "", "L$Ic{%", "L$Ic{%");
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      
      stringArray1[2] = "";
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "~z", "<ini)>", "<ini)>", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(136);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "~z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(2, 977);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(43, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((byte) (-78), "<ini)>", ".\">P,", ".\">P,");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = methodWriter1.next;
      assertNull(methodWriter2);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-78);
      int int1 = 73;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 73
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      classWriter0.visitOuterClass("java/lang/Class", "T^U[j/", "T^U[j/");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "L$Ic{%", "Sn", "java/lang/Class", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      int int0 = Frame.BASE;
      assertEquals(16777216, int0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.status = 127;
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = label0.getOffset();
      assertFalse(int1 == int0);
      assertEquals(0, int1);
      
      methodWriter0.visitFieldInsn(1, "e'BT5)k:", "e'BT5)k:", "L$Ic{%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber((-2), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 977;
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "~z", "<ini)>", "<ini)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitInsn(145);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "~z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "~z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 977);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "/", " I_8I4<Xx6", "/", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "Class not 3found";
      methodWriter0.visitFrame(2, 977, stringArray0, 1427, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(1427);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      methodWriter1.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "Fz", "<ini)>", "<ini)>", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(16, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertArrayEquals(new byte[] {(byte)12, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int int0 = 977;
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      String string0 = "<ini)>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".class", "<ini)>", "<ini)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = 145;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, ".class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 977);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 977;
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      String string0 = "<ini)>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ".class", "<ini)>", "<ini)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = 145;
      methodWriter0.visitInsn(145);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, ".class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 977);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "", "<Uni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      assertNotNull(pushbackInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter0.visitIntInsn(8, (-15));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(974);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[8];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "L$c{%";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray1[2] = "L$c{%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 974, "L$c{%", "<ini)>", "L$c{%", stringArray0, false, true);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(2, 203, stringArray1, 698, stringArray0);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMultiANewArrayInsn("", 698);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "=VgO{)4", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(2);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitTypeInsn(2, "RuntimeInvisibleAnnotaPions");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("m~iH)HB~6?1Bzyg#");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      int int1 = 4287;
      methodWriter0.visitFrame(4287, (-3082), stringArray0, 131072, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(36, 247, stringArray0, 1, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newInteger(990);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(990, 990);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = 2;
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-1732));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1732
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      int int0 = classWriter0.newField("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", "<.ziUni)>", "<.ziUni)>");
      assertEquals(5, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "@Xb5Y@~$X%_wm", "<.ziUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      methodWriter0.classReaderLength = (-1414);
      methodWriter0.exceptionCount = 10;
      Item item0 = classWriter0.newFieldItem("@Xb5Y@~$X%_wm", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "X_P6L7U7cGkLJ}tj", "X_P6L7U7cGkLJ}tj", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEJEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(84);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L$I!%");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "L$I!%", "L$I!%", "L$I!%", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(8, (-1170));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(1, "L$I!%");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(84, "!");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFieldInsn(2, "h;'Bh,b2G,VPE)@", "StackMapTable", "L$I!%");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("L$I!%", 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = methodWriter1.next;
      assertNull(methodWriter2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(59, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4382);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(2, 2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4382, "L$hc{X45", "L$hc{X45", "L$hc{X45", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      methodWriter0.visitFrame((-2651), 1, stringArray0, 4382, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(8, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(2, "L$hc{X45", "L$hc{X45", "L$hc{X45");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = label0;
      labelArray0[0] = label0;
      Item item0 = classWriter0.newNameTypeItem("L$hc{X45", "L$hc{X45");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(8, "L$hc{X45", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?}zNg.", "m~iH)HB~6?}zNg.", "m~iH)HB~6?}zNg.", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.outputStackMax = 990;
      classWriter0.visit(990, 990, "m~iH)HB~6?}zNg.", "m~iH)HB~6?}zNg.", "m~iH)HB~6?}zNg.", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.invalidFrames = false;
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m~iH)HB~6?}zNg.");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      label0.position = 990;
      methodWriter0.visitLocalVariable("HeMR~_E^?3iJy@", "HeMR~_E^?3iJy@", "HeMR~_E^?3iJy@", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(70, "HeMR~_E^?3iJy@");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(3, 1766);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitMethodInsn(178, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      methodWriter0.visitIincInsn(1, 990);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "L$Ic{%";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "L$Ic{%", "<ini)>", "<ini)>", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((-275), 1, stringArray0, (-990), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-275));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -275
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1549));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1549), "L$Ic{%", "LocalVariableTypeTable", "java/lang/Class", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "LocalVariableTypeTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.threshold = 1;
      int int0 = Frame.BASE;
      assertEquals(16777216, int0);
      
      Attribute attribute0 = new Attribute("L$c{%");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newDouble(1005);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1005, "L$Ic{%", "L$Ic{%", "L$Ic{%", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      classWriter0.visitOuterClass("L$Ic{%", "L$Ic{%", "L$Ic{%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newClass("./QpS6fZVVh?Fg");
      assertEquals(7, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Integer.sum(7, 2);
      assertFalse(int1 == int0);
      assertEquals(9, int1);
      
      Item item1 = classWriter0.newMethodItem("&&I+", "./QpS6fZVVh?Fg", "./QpS6fZVVh?Fg", false);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(item1, item0);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 1005, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 990;
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      classWriter0.index = 990;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2722, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "StackMap", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIntInsn(2, 2722);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(36, int1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      Integer integer0 = new Integer(2722);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertNotNull(integer0);
      assertEquals(2722, (int)integer0);
      
      int int2 = (-2724);
      int int3 = Integer.compare(2437, (-2724));
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertEquals(1, int3);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int3));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-2482), "org.objectweb.asm.jip.Frame", "efzEtx09", "Ot[G|");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "~z", "<ini)>", "<ini)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitFieldInsn((-1139), "<ini)>", "17O>sNnm%e6)bAMd,dt", "LocalVariableTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 2175);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2175
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yV^/pf#2,;>");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", "MwdbTKE`Qh*&g", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newLong(977);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Attribute attribute0 = new Attribute("<ini)>");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      int int1 = 185;
      ByteVector byteVector0 = new ByteVector(185);
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "StackMap", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-1693), "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitFrame(54, 184, stringArray0, 3698, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      methodWriter2.visitIntInsn(184, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitFrame(70, 70, stringArray0, 54, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter2.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(54, 180, label2, labelArray0);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
      
      methodWriter0.visitLineNumber(987, label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter2);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(label2, label1);
      assertNotSame(label2, label0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Zf)Bs~fh$B4E", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("rFe,r^r~CP}%.,+", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitIntInsn(60, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label1.next = label0;
      label1.successor = label0;
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 60;
      intArray0[3] = 1;
      intArray0[4] = 2;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label1;
      methodWriter0.visitLookupSwitchInsn(label1.successor, intArray0, labelArray0);
      assertFalse(label1.equals((Object)label0));
      assertArrayEquals(new int[] {2, 60, 0, 1, 2}, intArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label1, label0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(96, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[8];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[7] = "";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", stringArray1[0], stringArray0, true, true);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(1, 63);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      int int0 = classWriter0.addType("Exceptions");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newNameTypeItem("Exceptions", "");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label1);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLocalVariable("", "M'", "c{i @=n9tZJ}j", label1, label0, 268435456);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("", "SourceDebugExtension", "M'", label0, (Label) null, (-213));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "StackMap", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-1693), "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = new Integer(2);
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitTypeInsn(2, "RuntimeInvisibleAnnotaPions");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = edge0.successor;
      assertNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(1, (-1693));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = 1000;
      ClassWriter classWriter0 = new ClassWriter(1000);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      classWriter0.index = 1000;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1000, "<XUo)>", "<XUo)>", "<XUo)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("AK?aYn>N<", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      Item item1 = classWriter0.key3;
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertNotSame(item1, item0);
      
      methodWriter0.visitVarInsn(17, 17);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-1580), (-1580), stringArray0, 17, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("char");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitIincInsn((-428), 1005);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -428
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
      
      methodWriter0.visitFrame((-1961), 2, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, (-2127));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = null;
      boolean boolean2 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LocalariableTable");
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.Item@b
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      String string0 = "RuntimeInvisibleParameterAnnotations";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "", "^Zf)Bs~fh$B4E", "RuntimeInvisibleParameterAnnotations", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label2);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      methodWriter0.visitTryCatchBlock(label2, label0, label0, "");
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertSame(label1, label2);
      assertNotSame(label1, label0);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-1), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "0?I", "Yni)>", "StackMap", (String[]) null, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn((byte)1, "<Q*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("-(r04mk S,ZNXGPDkM", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      short short0 = MethodWriter.readShort(byteArray0, 24);
      assertEquals((short)256, short0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(970);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = 970;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 970, "L$Ic{%", "L$Ic{%", "L$Ic{%", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray1 = new String[5];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "L$Ic{%";
      classWriter0.lastMethod.visitIntInsn(1, 26);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMethodInsn(2, "L$Ic{%", "L$Ic{%", "L$Ic{%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      byte[] byteArray0 = ClassWriter.TYPE;
      assertNotNull(byteArray0);
      
      classWriter0.lastMethod.visitFrame(3, 180, stringArray0, 974, stringArray0);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.threshold = 977;
      String[] stringArray0 = new String[0];
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "o", "<]XUo)>", "o", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean2 = ClassReader.RESIZE;
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      methodWriter0.visitJumpInsn(172, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("%Y1Z?(EI", true);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean3 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 977);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      classWriter0.version = 185;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "L$Ic{%";
      stringArray0[1] = "L$Ic{%";
      stringArray0[2] = "";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Zf)Bs~fh$B4E", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = 185;
      methodWriter0.visitVarInsn(68, (-605274158));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Label offset position has not been resolved yet", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)0;
      int int1 = 68;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1005);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.addToSubroutine(0L, 2);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4, "L$Ic{%", "java/lang/Class", "(nYdsE[7/O@", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(8, 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("Xd", false);
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Xd");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newDouble((-1908.9049226032));
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 1, stringArray0, 1005, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "`";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "`", "^Zf)Bs~fh$B4E", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "`");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitMaxs((-1), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label2 = label0.getFirst();
      assertNotNull(label2);
      assertSame(label0, label1);
      assertSame(label0, label2);
      assertSame(label2, label0);
      assertSame(label2, label1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, (-1871), stringArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Item item0 = classWriter0.newNameTypeItem("", "");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "", "<iUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.exceptionCount = 3;
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      methodWriter0.visitMethodInsn(186, "X_P6L7U7cGkLJ}tj", "7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newNameTypeItem("7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(item1, item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("7O@be{|9y7gPo");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int1 = methodWriter0.getSize();
      assertFalse(int1 == int0);
      assertEquals(67, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      methodWriter1.visitFrame(440, 218, stringArray0, 3, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitTableSwitchInsn(64, 1, label0, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "L$Ic{%";
      stringArray0[1] = "L$Ic{%";
      Item item0 = classWriter0.newNameTypeItem("", "Exceptions");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[2] = "";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Zf)Bs~fh$B4E", "", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.SHORT;
      assertEquals(16777228, int0);
      
      methodWriter0.visitVarInsn(68, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("Label offset position has not been resolved yet", true);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)0;
      methodWriter0.visitFrame(3530, (byte) (-32), stringArray0, (-7), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(3, (byte)0, stringArray0, (byte)0, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<init>");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "<init>";
      stringArray0[3] = "Label offset position has not been resolved yet";
      stringArray0[4] = "^Zf)Bs~fh$Bz4E";
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Zf)Bs~fh$Bz4E", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Label label2 = label1.getFirst();
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      int int0 = Type.VOID;
      assertEquals(0, int0);
      
      label2.outputStackMax = (-774);
      methodWriter0.visitLabel(label2);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      
      Item item0 = classWriter0.newClassItem("^Zf)Bs~fh$Bz4E");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn("<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(0, 0, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2, stringArray0, 49, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[24];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[7] = "";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", stringArray1[0], stringArray0, true, true);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BASE_KIND;
      assertEquals(267386880, int0);
      
      Item item0 = classWriter0.newNameTypeItem("", "");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter0.visitMethodInsn(2, "", "", "Q=O1|6,9o");
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      Attribute attribute0 = new Attribute("");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitVarInsn(172, 1);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[7];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "L$c{%";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray1[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "", "<ini)>", "L$c{%", stringArray0, true, true);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 229, stringArray1, 83, stringArray0);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      methodWriter0.visitIntInsn(16, 84);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      label1.info = (Object) null;
      Attribute attribute0 = new Attribute("");
      assertNotNull(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      
      methodWriter0.visitMethodInsn(16, "", "RuntimeVisibleParameterAnnotations", "<ini)>");
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      
      methodWriter0.visitLocalVariable("f/f:uO&<1m3ZUr.!v! ", "J.;e+)@YhI", "f/f:uO&<1m3ZUr.!v! ", label1, label0, 247);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      assertSame(label0, label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(185);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 16777227, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "StackMap", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIntInsn(2, 16777227);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitIincInsn(16777227, 16777227);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(42, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      
      methodWriter0.visitVarInsn(2, 16777221);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("m~iH)HB~6?1Bzg#", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter2.visitJumpInsn(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Attribute attribute0 = new Attribute("LocalV,iablGTypgable");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      methodWriter2.visitMaxs(16777227, 16777221);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean1 = ClassReader.RESIZE;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "imo)TAKG");
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeInviJibleParameterAnnotations";
      stringArray0[1] = "RuntimeInviJibleParameterAnnotations";
      stringArray0[2] = "`";
      stringArray0[3] = "RuntimeInviJibleParameterAnnotations";
      stringArray0[4] = "RuntimeInviJibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "`", "^Zf)Bs~fh$B4E", "RuntimeInviJibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label1.visitSubroutine(label0, 1, 1);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      
      boolean boolean3 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      label0.line = 2;
      Label label2 = label1.getFirst();
      assertFalse(label2.equals((Object)label0));
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      
      label2.successor = label0;
      String string0 = classWriter0.thisName;
      assertNull(string0);
      
      label2.outputStackMax = 1;
      methodWriter0.visitLabel(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      
      methodWriter0.visitTryCatchBlock(label2, label0, label0, "`");
      assertFalse(label2.equals((Object)label0));
      assertFalse(label0.equals((Object)label2));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertNotSame(label0, label2);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      
      int int0 = methodWriter0.getSize();
      assertEquals(46, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(46, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      Item[] itemArray0 = new Item[1];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn((-1693), "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-1), "zUn7ND!N", "m~iH)HB~6?1Bzyg#", "D`6'o.");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 1448;
      methodWriter0.visitFrame((-1693), (-1693), stringArray0, 1448, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzyg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int1 = 74;
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn((-1), 74);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      classWriter0.visitSource("^Zf)Bs~fh$B4E", "m9sRDfF!K'#x`Y#H");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      stringArray0[0] = "^Zf)Bs~fh$B4E";
      stringArray0[1] = "^Zf)Bs~fh$B4E";
      stringArray0[2] = "m9sRDfF!K'#x`Y#H";
      stringArray0[3] = "^Zf)Bs~fh$B4E";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      classWriter0.visitInnerClass("m9sRDfF!K'#x`Y#H", "<3`_4'", "<3`_4'", 772);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.status = (-3859);
      label0.info = (Object) label0;
      classWriter0.visitOuterClass("<3`_4'", "org.objectweb.asm.jip.Label", "AK?aYnN<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "m9sRDfF!K'#x`Y#H", "^Zf)Bs~fh$B4E", "^Zf)Bs~fh$B4E", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitMultiANewArrayInsn("^Zf)Bs~fh$B4E", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn((-1118), (-1118));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.newField("AK?aYnN<", "#PrXXhv", "#PrXXhv");
      assertEquals(13, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      boolean boolean0 = label0.resolve(methodWriter0, (-1118), byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2452, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn((byte)0, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-1118), 772);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "~z", "<ini)>", "<ini)>", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 145;
      methodWriter0.visitInsn(145);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      methodWriter0.visitIincInsn(69, 69);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "~z");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = true;
      boolean boolean1 = true;
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-230), "LocalVariableTypeTable", (String) null, "<ini)>", stringArray0, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-1414));
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Item item0 = classWriter0.newNameTypeItem("", "");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "", "<Uni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.SIGNATURES;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      
      methodWriter0.visitMethodInsn(186, "X_P6L7U7cGkLJ}tj", "7O@be{|9y7gPo", "7O@be{|9y7gPo");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(2, "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newNameTypeItem("7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(item1, item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("7O@be{|9y7gPo");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame(1, 2, stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(191);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(2, 2419);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "^Zf)Bs~fh$B4E";
      stringArray0[1] = "m9sRDfF!K'#x`Y#H";
      stringArray0[2] = "^Zf)Bs~fh$B4E";
      stringArray0[3] = "^Zf)Bs~fh$B4E";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "m9sRDfF!K'#x`Y#H", "^Zf)Bs~fh$B4E", "^Zf)Bs~fh$B4E", stringArray0, false, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(1, "^Zf)Bs~fh$B4E", "m9sRDfF!K'#x`Y#H", "[Ka6\"[0p");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitInnerClass("^Zf)Bs~fh$B4E", "^Zf)Bs~fh$B4E", "m9sRDfF!K'#x`Y#H", (-1118));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.info = (Object) "^Zf)Bs~fh$B4E";
      methodWriter0.visitMultiANewArrayInsn("6l%6", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.inputStackTop = 1;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLineNumber(1, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitJumpInsn(4, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      String string0 = classWriter0.thisName;
      assertNull(string0);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertSame(methodWriter0, methodWriter1);
      
      int int0 = Frame.BOOLEAN;
      assertEquals(16777225, int0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertNotNull(classWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter1);
      assertSame(methodWriter2, methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter2.visitMaxs(1, 860);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(987);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      String string0 = "m~iH)HB~6?1Bzyg#";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1Bzyg#", "m~iH)HB~6?1Bzyg#", "StackMap", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      Integer integer0 = new Integer(2);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(integer0);
      assertEquals(2, (int)integer0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      int[] intArray0 = new int[0];
      frame0.inputLocals = intArray0;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = frame0.owner;
      assertNull(label1);
      
      int int1 = Frame.BYTE;
      assertFalse(int1 == int0);
      assertEquals(16777226, int1);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      String string1 = "'*dO.J#>'IgAT0";
      methodWriter1.visitMethodInsn((-2055), "'*dO.J#>'IgAT0", "'*dO.J#>'IgAT0", "Z)J 9:fq");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label2 = new Label();
      assertFalse(label2.equals((Object)label0));
      assertNotNull(label2);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      methodWriter0.visitFrame(1, (-361), stringArray0, (-1228), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitLineNumber(987, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "^Zf)rsfh$BE";
      stringArray0[1] = "Ljava/lang/Synthetic;";
      stringArray0[2] = "Ljava/lang/Synthetic;";
      stringArray0[3] = "Ljava/lang/Synthetic;";
      stringArray0[4] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Zf)rsfh$BE", "^Zf)rsfh$BE", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(83, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      String string0 = label1.toString();
      assertNotNull(string0);
      assertEquals("L6", string0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label1, "$/at``w.)r}|-");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(methodWriter0, methodWriter1);
      assertSame(label1, label0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(73, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs(73, 83);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int1 = methodWriter1.getSize();
      assertTrue(int1 == int0);
      assertEquals(73, int1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertNotNull(methodWriter2);
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      
      Attribute attribute0 = new Attribute("Ljava/lang/Synthetic;");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertNotNull(methodWriter3);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      
      AnnotationVisitor annotationVisitor0 = methodWriter3.visitParameterAnnotation(50, "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 73;
      intArray0[1] = (-538);
      intArray0[3] = (-1118);
      intArray0[4] = 2;
      intArray0[5] = (-2);
      int int2 = MethodWriter.getNewOffset(intArray0, intArray0, 132, (-1118));
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-785), int2);
      assertArrayEquals(new int[] {73, (-538), 0, (-1118), 2, (-2)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1414));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      Item item0 = classWriter0.newNameTypeItem("", "");
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1414), "", "<iUni)>", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE", stringArray0, true, true);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.exceptionCount = 3;
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      methodWriter0.visitMethodInsn(186, "X_P6L7U7cGkLJ}tj", "7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newNameTypeItem("7O@be{|9y7gPo", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEFEEEEEEDDEEDDEE");
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(item1, item0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitLdcInsn("7O@be{|9y7gPo");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.classReaderLength = 1359;
      methodWriter1.visitFrame(1, 218, stringArray0, 3, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitInsn(172);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-4068);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<init>");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[5];
      int int0 = classWriter0.newNameType("RuntimeIvisibleParameterAnnotations", "^Z;!f)Bsf=$Bz4E");
      assertEquals(3, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "<init>";
      stringArray0[3] = "L$Ic{%";
      stringArray0[4] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "L$Ic{%", "^Z;!f)Bsf=$Bz4E", "RuntimeInvisibleParameterAnnotations", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod = methodWriter0;
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      String string0 = label1.toString();
      assertNotNull(string0);
      assertEquals("L21", string0);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label0.visitSubroutine(label1, 3074L, 90);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      Item item0 = classWriter0.newMethodItem("<init>", "<init>", "RuntimeIvisibleParameterAnnotations", true);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = label1.info;
      assertNull(object0);
      
      methodWriter0.visitFrame(348, 1, stringArray0, 1914, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1125));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "^Zq)rhfh$BE";
      stringArray0[1] = "m9sRDfF!K'#x`Y#H";
      stringArray0[2] = "m9sRDfF!K'#x`Y#H";
      stringArray0[3] = "m9sRDfF!K'#x`Y#H";
      stringArray0[4] = "m9sRDfF!K'#x`Y#H";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1125), "L$I4%c:[_5", "^Zq)rhfh$BE", "^Zq)rhfh$BE", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-1125), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = 1068;
      methodWriter1.visitLineNumber(1068, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMaxs((-1125), 49);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      methodWriter1.visitLabel(label1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn(1, 49);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-28);
      label1.status = (-1125);
      boolean boolean1 = label0.resolve(methodWriter0, 514, byteArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertArrayEquals(new byte[] {(byte) (-28)}, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label1, "^Zq)rhfh$BE");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertSame(methodWriter0, methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitMaxs(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m~iH)HB~6?1}zNg.", "m~iH)HB~6?1}zNg.", "m~iH)HB~6?1}zNg.", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      classWriter0.invalidFrames = true;
      methodWriter0.visitTypeInsn(70, "sR");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.exceptionCount = 1;
      boolean boolean2 = classWriter0.invalidFrames;
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      boolean boolean3 = ClassReader.ANNOTATIONS;
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(57, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1137));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String[] stringArray0 = new String[5];
      classWriter0.visitSource("^Zf)Bs~fh$B4E", "m9sRDfF!K'#x`Y#H");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      stringArray0[0] = "^Zf)Bs~fh$B4E";
      stringArray0[1] = "^Zf)Bs~fh$B4E";
      stringArray0[2] = "m9sRDfF!K'#x`Y#H";
      stringArray0[3] = "^Zf)Bs~fh$B4E";
      stringArray0[4] = "^Zf)Bs~fh$B4E";
      classWriter0.visitInnerClass("m9sRDfF!K'#x`Y#H", "<3`_4'", "<3`_4'", 772);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.status = 178;
      label0.info = (Object) label0;
      classWriter0.visitOuterClass("<3`_4'", "^Zf)Bs~fh$B4E", "AK?aYnN<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1137), "m9sRDfF!K'#x`Y#H", "^Zf)Bs~fh$B4E", "^Zf)Bs~fh$B4E", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter0.visitMultiANewArrayInsn("^Zf)Bs~fh$B4E", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((-1137), (-1137));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newField("AK?aYnN<", "#PrXXhv", "#PrXXhv");
      assertEquals(12, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      boolean boolean0 = label0.resolve(methodWriter0, (-1137), byteArray0);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2452, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn((byte)0, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-1137), 772);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(977);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String[] stringArray0 = new String[0];
      String[] stringArray1 = new String[35];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[7] = "<init>";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      stringArray1[2] = "<init>";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 977, "<init>", "<ini)>", stringArray1[0], stringArray0, true, true);
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.BASE_KIND;
      assertEquals(267386880, int0);
      
      Item item0 = classWriter0.newNameTypeItem("<init>", "<init>");
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter0.visitMethodInsn(2, "<init>", "<init>", "Q=O1|6,9o");
      assertFalse(stringArray0.equals((Object)stringArray1));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(stringArray0, stringArray1);
      assertNotSame(stringArray1, stringArray0);
      
      Attribute attribute0 = new Attribute("<init>");
      assertNotNull(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 172;
      intArray0[2] = 267386880;
      intArray0[3] = 172;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 267386880;
      intArray0[7] = 1;
      intArray0[8] = 1;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {1, 172, 267386880, 172, 2, 1, 267386880, 1, 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1118));
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<init>");
      assertFalse(boolean0);
      
      boolean boolean1 = classWriter0.invalidFrames;
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String[] stringArray0 = new String[5];
      int int0 = Type.DOUBLE;
      assertEquals(8, int0);
      
      stringArray0[0] = "Z;!f)Bsf=B4";
      stringArray0[1] = "<init>";
      stringArray0[2] = "<init>";
      stringArray0[3] = "<init>";
      stringArray0[4] = "Z;!f)Bsf=B4";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1118), "<init>", "Z;!f)Bsf=B4", "c(=%}", stringArray0, false, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[7];
      label0.position = 1;
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[5] = 8;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = ClassReader.SIGNATURES;
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
      
      boolean boolean3 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#s<7#!5");
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      boolean boolean4 = classWriter0.invalidFrames;
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4);
      
      label0.visitSubroutine(label0, 8, 90);
      methodWriter0.classReaderOffset = 16777220;
      Item item0 = new Item(1);
      assertNotNull(item0);
      
      methodWriter0.visitIntInsn(2, 8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean5 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5);
      
      methodWriter0.visitFrame((-1), 2, stringArray0, 0, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(990);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-32768), "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      methodWriter0.visitMaxs(3, 990);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitMethodInsn(178, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      methodWriter0.visitMethodInsn(990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(990, 178, stringArray0, 186, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(15, "G4", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.version = (-1882616304);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.ELEMENT_OF;
      assertEquals((-268435456), int0);
      
      methodWriter0.visitFrame((-1906), 2, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item1 = classWriter0.newClassItem("m~iH)HB~6?1Bzg#");
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(item1, item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.inputStackTop = 22;
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame1 = label0.frame;
      assertNull(frame1);
      
      methodWriter0.visitVarInsn(22, 1574);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(188, "zD^:6#AO-", "m~iH)HB~6?1Bzg#", "@MV:");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(166, 2466);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.version = (-1882616304);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", "m~iH)HB~6?1Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.ELEMENT_OF;
      assertEquals((-268435456), int0);
      
      methodWriter0.visitFrame((-1906), 2, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.newClassItem("m~iH)HB~6?1Bzg#");
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(item1, item0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.inputStackTop = 22;
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter0.visitTypeInsn(188, "m~iH)HB~6?1Bzg#");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      label0.position = 1;
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter0.visitIntInsn(1, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame1 = label0.frame;
      assertNull(frame1);
      
      methodWriter0.visitFieldInsn(188, "zD^:6#AO-", "m~iH)HB~6?1Bzg#", "@MV:");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(166, 2466);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(256);
      assertNotNull(byteVector1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.put11((-764), 521);
      assertNotNull(byteVector2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      ByteVector byteVector3 = byteVector2.put12((-1906), (-764));
      assertNotNull(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
      
      methodWriter0.put(byteVector3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector1);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(959);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 959, "m~iH)HB~6?1Bzdg#", "m~iH)HB~6?1Bzdg#", "m~iH)HB~6?1Bzdg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(180, "LocalariableTable", "m~iH)HB~6?1Bzdg#", "LocalariableTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 180;
      Label[] labelArray0 = new Label[7];
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)20;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 180, 990);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 188
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(990);
      assertNotNull(classWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newInteger(990);
      assertNotNull(item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", stringArray0, true, false);
      assertNotNull(methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-32768), "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      methodWriter0.visitMaxs(3, 990);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.WRITER;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitMethodInsn(186, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      methodWriter0.visitMethodInsn(990, "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#", "miiw)5B~6?19Bzg#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(990, 186, stringArray0, 186, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(15, "G4", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }
}
