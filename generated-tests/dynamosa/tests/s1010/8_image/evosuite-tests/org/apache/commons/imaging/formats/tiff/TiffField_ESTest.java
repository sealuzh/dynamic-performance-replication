/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 13:17:34 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)37;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3462), 1535, fieldTypeRational0.SHORT, 1535, (-1064L), byteArray0, byteOrder0, (byte)37);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1535, tiffField0.getDirectoryType());
      assertEquals((-3462), tiffField0.getTag());
      assertEquals(37, int0);
      assertEquals(3070, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals((-1064), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      byteArray0[1] = (byte)37;
      byteArray0[4] = (byte)37;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), 5, fieldTypeRational0, 1937L, 2145695568, byteArray0, byteOrder0, 209);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-455), (-902), fieldTypeByte0, 4L, 1192L, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1192, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-902), tiffField0.getDirectoryType());
      assertEquals((-455), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1345), fieldTypeRational0, 1154L, 27, byteArray0, byteOrder0, (-146));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1345), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-146), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(673, 673, fieldTypeShort0, 673, 673, byteArray0, byteOrder0, 673);
      tiffField0.dump();
      assertEquals(673, tiffField0.getTag());
      assertEquals(1346, tiffField0.getBytesLength());
      assertEquals(673, tiffField0.getSortHint());
      assertEquals(673, tiffField0.getOffset());
      assertEquals(673, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-73), 0, fieldTypeRational0, 1292L, (-1L), byteArray0, (ByteOrder) null, 2225);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2225, tiffField0.getSortHint());
      assertEquals(10336, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-73), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1508), "");
      TiffField tiffField0 = new TiffField((-1508), (-1), fieldTypeRational0, 152L, (-256L), byteArray0, byteOrder0, 41728);
      tiffField0.getValue();
      assertEquals((-256), tiffField0.getOffset());
      assertEquals((-1508), tiffField0.getTag());
      assertEquals(1216, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(41728, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, 628, fieldTypeShort0, 143296L, (-2147483648L), byteArray0, byteOrder0, (byte)42);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(1, tagInfo0.length);
      assertEquals(628, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "WtDL");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-97), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-1061));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-1061), tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1268, 1, fieldTypeByte0, (-831L), (-1444L), byteArray0, byteOrder0, (-129));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1444), tiffField0.getOffset());
      assertEquals(1268, int0);
      assertEquals((-129), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(617, "uBa~?&_k[`WP`U.");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(617, 617, fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)45);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(617, tiffField0.getTag());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(617, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(301, "|p.9B H>)&oZS }rm3");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeLong0, (-1L), 0, byteArray0, byteOrder0, 608);
      int int0 = tiffField0.getSortHint();
      assertEquals(608, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-307), 1, fieldTypeShort0, (-307), (-307), byteArray0, byteOrder0, (-307));
      int int0 = tiffField0.getSortHint();
      assertEquals((-307), tiffField0.getTag());
      assertEquals((-307), tiffField0.getOffset());
      assertEquals((-307), int0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1535, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1782, 1725, fieldTypeFloat0, 642L, (byte) (-86), byteArray0, byteOrder0, (byte) (-86));
      int int0 = tiffField0.getOffset();
      assertEquals(1725, tiffField0.getDirectoryType());
      assertEquals(1782, tiffField0.getTag());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals((-86), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(301, "|p.9B H>)&oZS }rm3");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-52);
      TiffField tiffField0 = new TiffField((-3115), (byte) (-57), fieldTypeLong0, (byte)8, (byte)118, byteArray0, byteOrder0, 301);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-57), tiffField0.getDirectoryType());
      assertEquals(301, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(118, tiffField0.getOffset());
      assertEquals((-3115), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-88);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)15, (byte)15, fieldTypeByte0, 1L, (byte)50, byteArray0, byteOrder0, 2796);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2796, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      byteArray0[4] = (byte)37;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-102), fieldTypeRational0, 1L, 1856L, byteArray0, byteOrder0, 11);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1856, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals((-102), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)22;
      TiffField tiffField0 = new TiffField((-1), 3882, fieldTypeRational0.SHORT, 1L, (-1), byteArray0, byteOrder0, (-744));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(3882, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-744), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(65535, 147, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)57);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(147, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(48, (String) null);
      TiffField tiffField0 = new TiffField(1005, 50, fieldTypeRational0, 24L, (-2147483648L), byteArray0, byteOrder0, 3950);
      tiffField0.getFieldTypeName();
      assertEquals(3950, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1005, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(640, 640, fieldTypeShort0, 640, 640, byteArray0, byteOrder0, 640);
      tiffField0.getFieldTypeName();
      assertEquals(640, tiffField0.getDirectoryType());
      assertEquals(640, tiffField0.getOffset());
      assertEquals(640, tiffField0.getTag());
      assertEquals(640, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1508), "");
      TiffField tiffField0 = new TiffField((-1508), (-1), fieldTypeRational0, 152L, (-256L), byteArray0, byteOrder0, 41728);
      tiffField0.getFieldTypeName();
      assertEquals(41728, tiffField0.getSortHint());
      assertEquals((-1508), tiffField0.getTag());
      assertEquals((-256), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(562, 50, (FieldType) null, 50, 0L, byteArray0, byteOrder0, (byte) (-45));
      tiffField0.getFieldType();
      assertEquals(562, tiffField0.getTag());
      assertEquals((-45), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "WtDL");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte) (-97), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (-1061));
      tiffField0.getFieldType();
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1061), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2691), "");
      TiffField tiffField0 = new TiffField((-3580), (byte)89, fieldTypeDouble0, 110L, 1204L, byteArray0, (ByteOrder) null, (-1875));
      tiffField0.getFieldType();
      assertEquals((-3580), tiffField0.getTag());
      assertEquals(1204, tiffField0.getOffset());
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals((-1875), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145817640, (-2147355736), fieldTypeFloat0.SSHORT, 1L, 158, byteArray0, byteOrder0, (-2040109464));
      tiffField0.getDoubleValue();
      assertEquals(2145817640, tiffField0.getTag());
      assertEquals(158, tiffField0.getOffset());
      assertEquals((-2040109464), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2147355736), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2091), ":3A}a{dK mKA\"");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2091), (-2091), fieldTypeShort0, 1L, 724L, byteArray0, byteOrder0, (byte)5);
      tiffField0.getDoubleValue();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-2091), tiffField0.getTag());
      assertEquals(724, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2091), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(65535, 147, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)57);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(147, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(33550, "Z/D`");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-1875), fieldTypeAscii0.DOUBLE, 6, (byte) (-52), byteArray0, byteOrder0, (byte) (-78));
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(48, tiffField0.getBytesLength());
      assertEquals((-1875), tiffField0.getDirectoryType());
      assertEquals(6L, tiffField0.getCount());
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals((-52), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(938, (byte)0, fieldTypeRational0, 2542L, 32771, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(938, tiffField0.getTag());
      assertEquals(32771, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(33550, "\"SD`");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-79), 2893, fieldTypeAscii0, 4776L, (-914L), byteArray0, byteOrder0, (byte) (-78));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-914), tiffField0.getOffset());
      assertEquals(2893, int0);
      assertEquals((-79), tiffField0.getTag());
      assertEquals((-78), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1535, fieldTypeRational0, 0, (byte)37, byteArray0, byteOrder0, (byte)37);
      tiffField0.getCount();
      assertEquals(1535, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(301, "|p.9B H>)&oZS }rm3");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeLong0, (-1L), 0, byteArray0, byteOrder0, 608);
      long long0 = tiffField0.getCount();
      assertEquals((-1L), long0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(608, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1535, fieldTypeRational0, 0, (byte)37, byteArray0, byteOrder0, (byte)37);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1535, tiffField0.getDirectoryType());
      assertEquals(37, tiffField0.getOffset());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(76, (-3115), fieldTypeFloat0, 203L, 203L, byteArray0, byteOrder0, (-3115));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-3115), tiffField0.getDirectoryType());
      assertEquals((-3115), tiffField0.getSortHint());
      assertEquals(812, int0);
      assertEquals(203, tiffField0.getOffset());
      assertEquals(76, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1524, (byte)15, fieldTypeByte0, (byte) (-92), 0L, byteArray0, byteOrder0, (-2412));
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2412), tiffField0.getSortHint());
      assertEquals((-92), int0);
      assertEquals(1524, tiffField0.getTag());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-2117237398), (byte)37, fieldTypeRational0.DOUBLE, (-2117237398), (byte) (-86), byteArray0, (ByteOrder) null, (-1875));
      tiffField0.getByteOrder();
      assertEquals((-2117237398), tiffField0.getTag());
      assertEquals((-1875), tiffField0.getSortHint());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals((-86), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-73), 0, fieldTypeRational0, 1292L, (-1L), byteArray0, (ByteOrder) null, 2225);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(10336, tiffField0.getBytesLength());
      assertEquals((-73), tiffField0.getTag());
      assertEquals(2225, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2146965053, (byte)0, fieldTypeShort0, (byte)0, (-207L), byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals((-207), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2146965053, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, (FieldType) null, 14, 14, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2621), (-2621), fieldTypeRational0, (-2621), (-2621), byteArray0, byteOrder0, (-2621));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(541, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(32, (-2917), fieldTypeLong0.ASCII, (-2917), (-2917), (byte[]) null, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2592), (-2592), fieldTypeRational0, (-2592), (-2592), byteArray0, byteOrder0, (-2592));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2357), "O^#L+dB");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-2357), fieldTypeLong0, (-2017L), (-2357), byteArray0, byteOrder0, (byte) (-78));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1445), (-1445), fieldTypeFloat0, (-1445), (-1445), byteArray0, byteOrder0, (-1445));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-3541), 72, fieldTypeRational0, 1L, (-3541), byteArray0, byteOrder0, 72);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50933, 50933, (FieldType) null, 50933, 50933, byteArray0, byteOrder0, 50933);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeRational0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(48, 1, fieldTypeRational0, 1, 48, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(55, 55, (FieldType) null, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(602, 602, fieldTypeShort0, 602, 602, (byte[]) null, byteOrder0, 602);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2592), (-2592), fieldTypeRational0, (-2592), (-2592), byteArray0, byteOrder0, (-2592));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(535, 535, fieldTypeRational0, 535, 535, (byte[]) null, byteOrder0, 535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-360), (-360), fieldTypeRational0, (-360), (-360), byteArray0, byteOrder0, (-360));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(64, 1, fieldTypeLong0.SRATIONAL, 1, 1, byteArray0, (ByteOrder) null, 64);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeRational0, 17, 17, (byte[]) null, byteOrder0, 17);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2525), (-2525), fieldTypeRational0, (-2525), (-2525), byteArray0, byteOrder0, (-2525));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeRational0, 1L, 38, byteArray0, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 799, fieldTypeRational0, 799, 799, byteArray0, byteOrder0, 40091);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(723, 723, fieldTypeRational0, 723, 723, (byte[]) null, byteOrder0, 723);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1833, 1833, fieldTypeRational0, 1L, 1833, byteArray0, byteOrder0, 1833);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, (FieldType) null, 23, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-2525), (-2525), fieldTypeByte0, (-2525), (-2525), byteArray0, byteOrder0, (-2525));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-8), 50831, fieldTypeRational0, (-8), 50831, byteArray0, byteOrder0, 50831);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("D&31c!7[W):w].Y'V");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(68, (-1343), fieldTypeByte0, (-1343), (-1343), byteArray0, byteOrder0, (-1343));
      File file0 = MockFile.createTempFile("RawFile", "RawFile");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-241), (-241), fieldTypeShort0, (-241), (-241), byteArray0, byteOrder0, (-241));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-792), 0, fieldTypeRational0, 1L, 14128L, byteArray0, byteOrder0, 132);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-565), 648, fieldTypeShort0, (-565), (-565), byteArray0, byteOrder0, 44);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32996, 0, fieldTypeShort0, (-33L), 0L, byteArray0, byteOrder0, (byte)68);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(32996, tiffField0.getTag());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1535, 1535, fieldTypeRational0, 651L, 651L, byteArray0, byteOrder0, (byte)24);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1535, tiffField0.getTag());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(651, tiffField0.getOffset());
      assertEquals(1535, tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(76, (-3115), fieldTypeFloat0, 203L, 203L, byteArray0, byteOrder0, (-3115));
      tiffField0.getByteOrder();
      assertEquals(76, tiffField0.getTag());
      assertEquals(203, tiffField0.getOffset());
      assertEquals((-3115), tiffField0.getDirectoryType());
      assertEquals((-3115), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(57, 57, fieldTypeShort0, 57, 57, (byte[]) null, byteOrder0, 2448);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(301, "|p.9B H>)&oZS }rm3");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeLong0, (-1L), 0, byteArray0, byteOrder0, 608);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(608, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(76, (-3115), fieldTypeFloat0, 203L, 203L, byteArray0, byteOrder0, (-3115));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3115), int0);
      assertEquals(76, tiffField0.getTag());
      assertEquals((-3115), tiffField0.getSortHint());
      assertEquals(203, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeRational0, 48, 48, byteArray0, byteOrder0, 48);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(647, 647, fieldTypeShort0, 647, 647, (byte[]) null, byteOrder0, 301);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1849, 3220, fieldTypeRational0, (-529L), 4735L, byteArray0, byteOrder0, (byte)28);
      int int0 = tiffField0.getOffset();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(4735, int0);
      assertEquals(1849, tiffField0.getTag());
      assertEquals(3220, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1345), fieldTypeRational0, 1154L, 27, byteArray0, byteOrder0, (-146));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1345), tiffField0.getDirectoryType());
      assertEquals((-146), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1443), 2144829156, fieldTypeFloat0, 2145817640, (-1L), byteArray0, byteOrder0, (-3115));
      int int0 = tiffField0.getTag();
      assertEquals((-3115), tiffField0.getSortHint());
      assertEquals((-1443), int0);
      assertEquals(2144829156, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1), "+5p*M,s]J");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2144829156, (-1), fieldTypeDouble0, 812L, 954L, byteArray0, (ByteOrder) null, (-1568));
      long long0 = tiffField0.getCount();
      assertEquals(812L, long0);
      assertEquals(954, tiffField0.getOffset());
      assertEquals(2144829156, tiffField0.getTag());
      assertEquals((-1568), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(659, 659, fieldTypeShort0, 659, 659, byteArray0, byteOrder0, 659);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("659 (0x293: Unknown Tag): ", string0);
      assertEquals(659, tiffField0.getOffset());
      assertEquals(659, tiffField0.getSortHint());
      assertEquals(659, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(653, 653, fieldTypeShort0, 653, 653, byteArray0, byteOrder0, 653);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, fieldTypeLong0, 265, 265, byteArray0, byteOrder0, 265);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 25, 25, byteArray0, byteOrder0, 25);
      tiffField0.getIntValueOrArraySum();
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeLong0.FLOAT, 72, 72, byteArray0, byteOrder0, 72);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@65c949e7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeRational0, 52, 52, byteArray0, byteOrder0, 52);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(52, tiffField0.getTag());
      assertEquals(416, tiffField0.getBytesLength());
      assertEquals(52L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals(52, tiffField0.getOffset());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(24, 108, fieldTypeByte0, 108, 24, byteArray0, byteOrder0, 108);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5f356e66 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[247];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0.DOUBLE, 50, 50, byteArray0, byteOrder0, 50);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(30, doubleArray0.length);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 25, 25, byteArray0, byteOrder0, 25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(24, doubleArray0.length);
      assertEquals(25L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(653, 653, fieldTypeShort0, 653, 653, byteArray0, byteOrder0, 653);
      tiffField0.getDoubleArrayValue();
      assertEquals(653, tiffField0.getOffset());
      assertEquals(653L, tiffField0.getCount());
      assertEquals(653, tiffField0.getDirectoryType());
      assertEquals(653, tiffField0.getTag());
      assertEquals(653, tiffField0.getSortHint());
      assertEquals(1306, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(512, 512, fieldTypeFloat0, 512, 512, byteArray0, byteOrder0, 512);
      tiffField0.getDoubleArrayValue();
      assertEquals(512, tiffField0.getTag());
      assertEquals(2048, tiffField0.getBytesLength());
      assertEquals(512, tiffField0.getOffset());
      assertEquals(512, tiffField0.getSortHint());
      assertEquals(512, tiffField0.getDirectoryType());
      assertEquals(512L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2561), (-2561), fieldTypeRational0, 1L, (-2561), byteArray0, byteOrder0, (-2561));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2561), tiffField0.getOffset());
      assertEquals((-2561), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2561), tiffField0.getTag());
      assertEquals((-2561), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeRational0, 48, 48, byteArray0, byteOrder0, 48);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(48L, tiffField0.getCount());
      assertEquals(48, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 25, 25, byteArray0, byteOrder0, 25);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(24, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(653, 653, fieldTypeShort0, 653, 653, byteArray0, byteOrder0, 653);
      tiffField0.getIntArrayValue();
      assertEquals(653, tiffField0.getOffset());
      assertEquals(1306, tiffField0.getBytesLength());
      assertEquals(653, tiffField0.getTag());
      assertEquals(653, tiffField0.getSortHint());
      assertEquals(653L, tiffField0.getCount());
      assertEquals(653, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeRational0, 37, 37, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeRational0, 48, 48, byteArray0, byteOrder0, 48);
      tiffField0.getIntArrayValue();
      assertEquals(48L, tiffField0.getCount());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getTag());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2392, 2392, fieldTypeShort0, 1L, 2392, byteArray0, byteOrder0, 2392);
      tiffField0.getIntArrayValue();
      assertEquals(2392, tiffField0.getDirectoryType());
      assertEquals(2392, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2392, tiffField0.getSortHint());
      assertEquals(2392, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(653, 653, fieldTypeShort0, 653, 653, byteArray0, byteOrder0, 653);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@476e92d0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeRational0.ASCII, 62, 62, byteArray0, byteOrder0, 62);
      String string0 = tiffField0.getStringValue();
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(62, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(622, 622, fieldTypeShort0, 622, 622, byteArray0, byteOrder0, 622);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x26e)", string0);
      assertEquals(622, tiffField0.getSortHint());
      assertEquals(622, tiffField0.getOffset());
      assertEquals(622, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeRational0, 50712, 50712, byteArray0, byteOrder0, 50712);
      String string0 = tiffField0.getTagName();
      assertEquals("LinearizationTable", string0);
      assertEquals(50712, tiffField0.getSortHint());
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals(50712, tiffField0.getTag());
      assertEquals(50712, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147311365), (-2147311365), fieldTypeByte0, 1L, (-51L), byteArray0, byteOrder0, 48130);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "^7:9;@R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeFloat0, 72, 72, byteArray0, byteOrder0, 72);
      String string0 = tiffField0.getValueDescription();
      assertEquals(72L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(72, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53)", string0);
      assertEquals(72, tiffField0.getOffset());
      assertEquals(72, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeByte0, 47, 47, byteArray0, byteOrder0, 47);
      String string0 = tiffField0.toString();
      assertEquals(47, tiffField0.getOffset());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals("47 (0x2f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (47 Undefined)", string0);
      assertEquals(47, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(8, 1275, fieldTypeByte0, 1275, 1408L, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.toString();
      assertEquals(1275, tiffField0.getDirectoryType());
      assertEquals(1275, tiffField0.getBytesLength());
      assertEquals(1408, tiffField0.getOffset());
      assertEquals("8 (0x8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (1275 Undefined)", string0);
      assertEquals(24, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[430];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(185, (-2581), fieldTypeFloat0.DOUBLE, 1428L, 277552L, byteArray0, byteOrder0, (-1713));
      String string0 = tiffField0.toString();
      assertEquals(11424, tiffField0.getBytesLength());
      assertEquals("185 (0xb9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1428 Double)", string0);
      assertEquals(277552, tiffField0.getOffset());
      assertEquals((-1713), tiffField0.getSortHint());
      assertEquals((-2581), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeLong0.DOUBLE, 27, 27, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(27L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeLong0, 56, 56, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56)", string0);
      assertEquals(56L, tiffField0.getCount());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[391];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(647, 647, fieldTypeShort0, 647, 647, byteArray0, byteOrder0, 647);
      String string0 = tiffField0.toString();
      assertEquals("647 (0x287: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (195) (647 SShort)", string0);
      assertEquals(647, tiffField0.getSortHint());
      assertEquals(647, tiffField0.getDirectoryType());
      assertEquals(1294, tiffField0.getBytesLength());
      assertEquals(647, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeLong0.ASCII, 1678L, (-7), byteArray0, byteOrder0, (-7));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-7), tiffField0.getTag());
      assertEquals((-7), tiffField0.getSortHint());
      assertEquals((-7), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1678, tiffField0.getBytesLength());
      assertEquals((-7), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeFloat0, 31, 31, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertNotNull(string0);
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeFloat0.ASCII, 56, 56, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeRational0, 62, 4L, byteArray0, byteOrder0, 62);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(62, 62);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62L, tiffField0.getCount());
      assertNull(string0);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeRational0, 62, 4L, byteArray0, byteOrder0, 62);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(62, 62);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(62, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals(62, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(496, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1769, 2127, (FieldType) null, 1769, 1171, byteArray0, byteOrder0, 1171);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-307), 1, fieldTypeShort0, (-307), (-307), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-307), tiffField0.getTag());
      assertEquals((-614), tiffField0.getBytesLength());
      assertEquals((-307), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-23), fieldTypeShort0, 2390, 27, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, (FieldType) null, 23, 23, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(4138, 4138, fieldTypeDouble0, 4138, 4138, byteArray0, (ByteOrder) null, 4138);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@3b849768 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeRational0, 48, 48, byteArray0, byteOrder0, 48);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(48, tiffField0.getTag());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(48L, tiffElement0.offset);
  }
}
