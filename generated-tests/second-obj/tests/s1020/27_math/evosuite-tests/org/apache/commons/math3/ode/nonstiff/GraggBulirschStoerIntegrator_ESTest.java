/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:07:43 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.FirstOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1001.0037;
      doubleArray0[1] = 1001.0037;
      doubleArray0[2] = 1001.0037;
      doubleArray0[3] = 1001.0037;
      doubleArray0[4] = 1001.0037;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1001.0037, 1001.0037, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0972476870931676E-268, 1001.0037, 1001.0037, (-2742.6457293349767));
      assertEquals(1001.0037, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.040196798741817474;
      doubleArray0[1] = 0.040196798741817474;
      double[] doubleArray1 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1099.366), 0.040196798741817474, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1, 1, 4.5);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2081.6274764131, 0.0, 0.0, 2081.6274764131);
      graggBulirschStoerIntegrator0.setControlFactors(2081.6274764131, 0.0, (-1065.216015945), 2081.6274764131);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1062950721), 16, 1244.45427);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1423.51749767;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1732.0), 1423.51749767, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 1423.51749767, (-1233.94912243332), 26, (UnivariateSolver) null);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1398.681199), 5.5524866689108584E-8, 2.291259288787842, 2.291259288787842);
      graggBulirschStoerIntegrator0.setControlFactors(3591.256121, 2.291259288787842, 486.900467613944, 293.55);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn((-1)).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepSizeControl(744.0, (-148.51570752511), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 3);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3014.3816), (-1664.0), 9.770510970673519E-8, (-3014.3816));
      graggBulirschStoerIntegrator0.setControlFactors(0.65, 1.0E-15, 0.65, (-1666.8974073507));
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-1664.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1569.581453433716);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1569.581453433716), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 1547);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1398.681199), 5.5524866689108584E-8, 2.291259288787842, 2.291259288787842);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(87).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 5.5524866689108584E-8);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-205.2605644168943), (-205.2605644168943), (-205.2605644168943), (-205.2605644168943));
      graggBulirschStoerIntegrator0.setOrderControl(7, 0.8585133308482417, 36.2098757554079);
      graggBulirschStoerIntegrator0.setOrderControl((-2462), 844.7226027143757, 7);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(602.276404613944, 8.77739983046304E-4, 8.77739983046304E-4, (-441.1063072447));
      graggBulirschStoerIntegrator0.setControlFactors(8.77739983046304E-4, 8.77739983046304E-4, 602.276404613944, 8.77739983046304E-4);
      graggBulirschStoerIntegrator0.setControlFactors(602.276404613944, 602.276404613944, 848.0635, 848.0635);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      FilterType filterType2 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType2);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 10.0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1398.681199), 5.5524866689108584E-8, 2.291259288787842, 2.291259288787842);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setControlFactors(2829.2879467, 2526.06991, 2526.06991, 2526.06991);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 121);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 121);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(121).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 118.6659977);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 3331.30988244257;
      doubleArray0[1] = 3331.30988244257;
      doubleArray0[2] = (-4464.46977341726);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3331.30988244257, (-4464.46977341726), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1385), 10, 0.07800586702927492);
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setStepSizeControl(744.0, (-148.51570752511), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-36));
      graggBulirschStoerIntegrator0.setOrderControl(476, (-36), (-4987.5398));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      PegasusSolver pegasusSolver0 = new PegasusSolver(744.0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(602.276404613944, 602.276404613944, 602.276404613944, 602.276404613944);
      graggBulirschStoerIntegrator0.setInitialStepSize(602.276404613944);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0.94, 0.94);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 7, 2626, 2602.201956194);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, 1208.9);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1244.45427;
      doubleArray0[1] = 0.5607312917709351;
      doubleArray0[2] = 0.5607312917709351;
      doubleArray0[3] = 1244.45427;
      doubleArray0[4] = 1244.45427;
      doubleArray0[5] = 1244.45427;
      doubleArray0[6] = 0.5607312917709351;
      doubleArray0[7] = 0.5607312917709351;
      doubleArray0[8] = (-1.1326936872620137E-8);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.5607312917709351, 1244.45427, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(3202.9071068074004, 3202.9071068074004, 0.5607312917709351, (-1.1326936872620137E-8));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.345551464945955E-59, 2.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 115.375937, 2.345551464945955E-59, 0.0);
      graggBulirschStoerIntegrator1.setInitialStepSize(1.0E-4);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 1);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setControlFactors(2.345551464945955E-59, 2.345551464945955E-59, 2.345551464945955E-59, 340.57435284003);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 1, 784, 5.759440286608551E-191);
      expandableStatefulODE0.setTime(0.01);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = 8.77739983046304E-4;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(602.276404613944, 8.77739983046304E-4, 8.77739983046304E-4, (-441.1063072447));
      graggBulirschStoerIntegrator0.setControlFactors(8.77739983046304E-4, 8.77739983046304E-4, 602.276404613944, 8.77739983046304E-4);
      graggBulirschStoerIntegrator0.setControlFactors(602.276404613944, 602.276404613944, 848.0635, 848.0635);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, 602.276404613944);
      double double1 = 1640.75432;
      graggBulirschStoerIntegrator0.setControlFactors(1640.75432, 848.0635, (-1866.0), 6.677001433789373);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 4, 4, (-441.1063072447));
      expandableStatefulODE0.setTime(8.77739983046304E-4);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-441.1063072447));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (6.02E02) reached, integration needs 1.85E-03
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = 2.345551464945955E-59;
      double double1 = (-4464.46977341726);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-4464.46977341726), 2.345551464945955E-59, (-4464.46977341726));
      graggBulirschStoerIntegrator0.setInitialStepSize(1.0E-4);
      double double2 = 10.0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1019).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      int int0 = 1;
      int int1 = (-871);
      boolean boolean0 = false;
      int int2 = (-84);
      double double3 = 5948.57074;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-84), 1, 5948.57074);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(3603).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2442975.8549354165);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(double3, fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.setControlFactors(double0, double1, int2, int1);
      double double4 = 350.22800625028725;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, double4);
      int int3 = 454;
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int3, int0, double2);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.02, 2.345551464945955E-59, 0.0, (-2666.07745720022));
      graggBulirschStoerIntegrator0.setInitialStepSize(7.020668578160457E-251);
      double double0 = 115.375937;
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2.345551464945955E-59, 115.375937, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setControlFactors(0.2324748933315277, 908.74, 0.65, 0.02);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 908.74;
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 115.0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.345551464945955E-59, 2.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 115.375937, 2.345551464945955E-59, 0.0);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 1);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator1.setControlFactors(Double.POSITIVE_INFINITY, 2.0, (-1.0), 0.9);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 402, 1, (-272.0));
      expandableStatefulODE0.setTime(2.345551464945955E-59);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, (-1.0));
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer(1, fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.345551464945955E-59);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.02, (-4464.46977341726), 0.0, (-2666.07745720022));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.02, 2.345551464945955E-59, 1.0E15, 115.375937);
      graggBulirschStoerIntegrator0.setInitialStepSize(7.020668578160457E-251);
      double double0 = 2526.06991;
      double double1 = 115.375937;
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator((-4464.46977341726), 115.375937, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator2.setControlFactors(0.2324748933315277, 908.74, 0.65, 0.02);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator2.integrate((FirstOrderDifferentialEquations) firstOrderConverter0, (-3049.6703813), doubleArray0, 618.3151152428802, doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2.0, 2.0, 2.345551464945955E-59, 2.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 115.375937, 2.345551464945955E-59, 0.0);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 1);
      graggBulirschStoerIntegrator1.setInterpolationControl(false, 1);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(1).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator1.setControlFactors(Double.POSITIVE_INFINITY, 2.0, (-1.0), 0.9);
      graggBulirschStoerIntegrator1.setStabilityCheck(true, 402, 1, (-272.0));
      expandableStatefulODE0.setTime(2.345551464945955E-59);
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 115.375937);
      graggBulirschStoerIntegrator1.setInterpolationControl(true, (-1));
      BrentSolver brentSolver0 = new BrentSolver(5.1500902632092514E-8, 0.31560879945755005);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 115.375937, (double) 1, (-1), (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-1183));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 4757, (-1987), 5.580150382645343);
  }
}
