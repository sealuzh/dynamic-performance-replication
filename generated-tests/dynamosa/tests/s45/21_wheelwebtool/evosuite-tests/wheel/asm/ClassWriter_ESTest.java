/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 12:59:14 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      classWriter0.addType("Lb%dD^}:[)VL!I3@*");
      int int0 = classWriter0.addUninitializedType("wheel.asm.Frame", (-618));
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3025);
      classWriter0.index = (-1262);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wheel.asm.Frame";
      classWriter0.visit(2, 3025, "wheel.asm.Frame", "wheel.asm.Frame", "wheel.asm.Frame", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(3082, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(224);
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.invalidFrames = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "JSR/RET are not supported with computeFrames option";
      stringArray0[2] = "|pQX^@zu>Cgn$Z";
      stringArray0[3] = "";
      classWriter0.visit(0, (-32), "", "", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(172, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "java/lang/Object";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(171, "java/lang/Object", "", "java/lang/Object", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-546));
      classWriter0.index = (-546);
      int int0 = classWriter0.newUTF8("@'vw9c}'9");
      assertEquals((-546), int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3293));
      classWriter0.index = (-3293);
      int int0 = classWriter0.newNameType("", "x1uR@]S/#cUY");
      assertEquals((-3291), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-546));
      classWriter0.index = (-546);
      int int0 = classWriter0.newClass(":+Z<H*9");
      assertEquals((-545), int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visitSource("fd;]Ulm,}IY3Q5T(m1", "fd;]Ulm,}IY3Q5T(m1");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      classWriter0.visitOuterClass("", "", "value ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      classWriter0.visitOuterClass("", "YLH]Crrg}=<_q", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(68, (String) null, (String) null, "", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-1), "fR", "wheel.asm.Frame", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField(1148, "", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@796590aa
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1213);
      Byte byte0 = new Byte((byte)10);
      // Undeclared exception!
      try { 
        classWriter0.visitField(33554432, (String) null, (String) null, (String) null, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-224), "", "", "", "");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-302));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-302), "-Xl@g", "-Xl@g", "", (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3098));
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3025);
      String[] stringArray0 = new String[0];
      classWriter0.visit(8, Integer.MAX_VALUE, "", "", "wheel.asm.Frame", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3491));
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        classWriter0.visit(4, (-4183), (String) null, (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit((-1679), 0, "wheel.asm.Frame", "The list of prefixes must not be null", "org.apache.coGmons.io.filefilter.NameFileFilter", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      int int0 = classWriter0.newUTF8("V|pBRy8d\"KpgCKOk");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(335);
      int int0 = classWriter0.newUTF8("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(335);
      int int0 = classWriter0.newNameType("", "");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2453);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, "", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      Item item0 = classWriter0.newMethodItem(" 4?TqBbX$a<$", "EnclosingMethod", "EnclosingMethod", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      Item item0 = classWriter0.newMethodItem("", "|%b6/3aHmC$k/\"n\u0004HQ", "", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(84);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      int int0 = classWriter0.newMethod("", "", "", true);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      int int0 = classWriter0.newMethod("PULprc>`vFVU", "PULprc>`vFVU", "PULprc>`vFVU", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1428);
      Item item0 = classWriter0.newLong(4294967295L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      Item item0 = classWriter0.newLong((-2109L));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-302));
      Item item0 = classWriter0.newInteger(2865);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1144));
      Item item0 = classWriter0.newInteger((-1144));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      Item item0 = classWriter0.newFloat((-2014));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 29);
      Item item0 = classWriter0.newFieldItem("org.apache.commons.io.filefilter.PrefixFileFilter", "&", "org.apache.commons.io.filefilter.PrefixFileFilter");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      Item item0 = classWriter0.newFieldItem("", "", "");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      int int0 = classWriter0.newField("Invalid IOCase name: ", "", "");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1628));
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "+", "Gbs1`6?Cc1eH5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      int int0 = classWriter0.newField("", "wheel.asm.ClassWriter", "");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Item item0 = classWriter0.newDouble(0.0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3098));
      Item item0 = classWriter0.newDouble((-3098));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3501));
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Item item0 = classWriter0.newClassItem("org.apache.commons.io.filefilter.NameFileFilter");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      Item item0 = classWriter0.newClassItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      int int0 = classWriter0.newClass(")d[dz5ACt[0r8s");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      int int0 = classWriter0.newClass("");
      assertEquals(68, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-954), (-224));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3025);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2000));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-2000), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass(" 4?TqBbX$a<$", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class ' 4?TqBbX$a<$.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4669));
      int int0 = classWriter0.addUninitializedType("", 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      int int0 = classWriter0.addType("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "org.apache.commons.io.filefilter.PrefixFileFilter", "org.apache.commons.io.filefilter.PrefixFileFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2541);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(3025, "", "Ju\"p^.*O~*J41j", "wheel.asm.Frame", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      // Undeclared exception!
      try { 
        classWriter0.visitField(2254, "wheel.asm.Frame", "wheel.asm.Frame", "wheel.asm.Frame", classReader0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassReader@1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4919);
      // Undeclared exception!
      try { 
        classWriter0.newUTF8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2000));
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, "5Y@nYG)h)\"e", "5Y@nYG)h)\"e", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1605));
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("E.i~d'5Z.T_.&yw", "E.i~d'5Z.T_.&yw", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = classWriter0.newDouble(14);
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3128);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4919);
      // Undeclared exception!
      try { 
        classWriter0.newClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      classWriter0.addType(" 4?TqBbX$a<$");
      classWriter0.addUninitializedType(" 4?TqBbX$a<$", 3477);
      classWriter0.addUninitializedType(" 4?TqBbX$a<$", (-1259));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class ' 4?TqBbX$a<$.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3025);
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2438);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("4Y((|e,w/g\"r", "4Y((|e,w/g\"r");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '4Y((|e,w/g\"r.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3334);
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 3334);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(204);
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3025);
      Item[] itemArray0 = new Item[1];
      classWriter0.addType("HC<`[es&ag3|*,");
      classWriter0.typeTable = itemArray0;
      // Undeclared exception!
      try { 
        classWriter0.addType("wheel.asm.Frame");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 231);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2433);
      byte[] byteArray0 = classWriter0.toByteArray();
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter(classReader0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      classWriter0.visitOuterClass("_", "YLH]Crrg}=<_q", "fO=fqL");
      int int0 = classWriter0.newNameType("YLH]Crrg}=<_q", "fO=fqL");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(3025);
      classReader0.accept((ClassVisitor) classWriter0, 40);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.CanReadFileFilter", "java/lang/Object");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.PrefixFileFilter", "org.apache.commons.io.filefilter.PrefixFileFilter");
      assertEquals("org.apache.commons.io.filefilter.PrefixFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3025);
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.AndFileFilter", "wheel.asm.Frame");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      classWriter0.addUninitializedType("", 2323);
      int int0 = classWriter0.addUninitializedType("", 2323);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1428);
      Item item0 = classWriter0.newDouble(1428);
      Item item1 = classWriter0.newDouble(1428);
      assertNotNull(item1);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      Item item0 = classWriter0.newFloat(4);
      Item item1 = classWriter0.newFloat(4);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3025);
      Class<String> class0 = String.class;
      Type type0 = Type.getType(class0);
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      Type type0 = Type.LONG_TYPE;
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2552, "yV_8Tss", "yV_8Tss", "yV_8Tss", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1676));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@37ceb64c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2014));
      Double double0 = new Double(2);
      Item item0 = classWriter0.newConstItem(double0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      Long long0 = new Long(1);
      Item item0 = classWriter0.newConstItem(long0);
      Item item1 = classWriter0.newConstItem(long0);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      Float float0 = new Float((float) 256);
      Item item0 = classWriter0.newConstItem(float0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(819);
      Boolean boolean0 = Boolean.TRUE;
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(53);
      Boolean boolean0 = new Boolean("");
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(224);
      Short short0 = new Short((short)244);
      int int0 = classWriter0.newConst(short0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4919);
      Character character0 = Character.valueOf('0');
      Item item0 = classWriter0.newConstItem(character0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-224));
      Byte byte0 = new Byte((byte)70);
      Item item0 = classWriter0.newConstItem(byte0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.AbstractFileFilter");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitInnerClass("", "", "", (-2068));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(61, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visitInnerClass("wheel.asm.Frame", "wheel.asm.Frame", (String) null, (-1869));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(534);
      classWriter0.visitInnerClass((String) null, (String) null, "", 534);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      classWriter0.visitInnerClass("~ly9v2a1djj&48B8fw", (String) null, "~e)%]uE", 2043);
      classWriter0.visitInnerClass("C", "Deprecated", "C", 12);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3293));
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("Deprecated", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(703);
      classWriter0.visitAnnotation("SourceDebugExtension", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(89, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitOuterClass("wheel.asm.Frame", "wheel.asm.Frame", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(168);
      classWriter0.visitOuterClass("yQ(U,pi", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(98, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(404);
      classWriter0.visitOuterClass("F!h=RnR-g", (String) null, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1676));
      classWriter0.visitSource("", (String) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3293));
      classWriter0.visitSource("", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(77, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classWriter0.visitSource((String) null, "MHcL&i?g!SxQ*>IaFk%");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3477);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "System";
      stringArray0[1] = " 4?TqBbX$a<$";
      classWriter0.visit(3477, (-1259), " 4?TqBbX$a<$", " 4?TqBbX$a<$", "!s yFheT,6]", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(114, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(46);
      classWriter0.visit(46, 46, "SVourceFile", "SVourceFile", "SVourceFile", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3025);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit((-242), 8, "*'f4DVhXc=", "*'f4DVhXc=", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(3025);
      Attribute[] attributeArray0 = new Attribute[10];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(8352, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2431));
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      // Undeclared exception!
      try { 
        classWriter0.newField("1a1", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
