/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:51:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)91;
      byteArray0[4] = (byte)91;
      TiffField tiffField0 = new TiffField(50719, 2483, fieldTypeLong0.SRATIONAL, (byte)91, 2483, byteArray0, (ByteOrder) null, 2483);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2483, tiffField0.getOffset());
      assertEquals(728, tiffField0.getBytesLength());
      assertEquals(50719, tiffField0.getTag());
      assertEquals(2483, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(2483, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)91;
      TiffField tiffField0 = new TiffField(50719, 2483, fieldTypeLong0.RATIONAL, (byte)91, 2483, byteArray0, (ByteOrder) null, 2483);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50719, tiffField0.getTag());
      assertEquals(2483, tiffField0.getDirectoryType());
      assertEquals(2483, tiffField0.getSortHint());
      assertEquals(2483, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(728, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(384, (-2094), fieldTypeLong0, 1L, 1L, byteArray0, (ByteOrder) null, 384);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(384, tiffField0.getTag());
      assertEquals((-2094), tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-212), fieldTypeLong0, (-212), (-212), byteArray0, byteOrder0, (-212));
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-212), tiffField0.getOffset());
      assertEquals((-212), tiffField0.getSortHint());
      assertEquals((-212), tiffField0.getDirectoryType());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3520, ")V'O8Q4E<DW");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3520, 3520, fieldTypeShort0, 3520, 1841L, byteArray0, byteOrder0, 265);
      tiffField0.getValue();
      assertEquals(1841, tiffField0.getOffset());
      assertEquals(265, tiffField0.getSortHint());
      assertEquals(3520, tiffField0.getDirectoryType());
      assertEquals(7040, tiffField0.getBytesLength());
      assertEquals(3520, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-212), fieldTypeLong0, (-212), (-212), byteArray0, byteOrder0, (-212));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-212), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-212), tiffField0.getSortHint());
      assertEquals((-212), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2537, 2147241295, fieldTypeByte0, 2537, 2147241295, byteArray0, byteOrder0, 2147241295);
      int int0 = tiffField0.getTag();
      assertEquals(2147241295, tiffField0.getSortHint());
      assertEquals(2147241295, tiffField0.getOffset());
      assertEquals(2537, int0);
      assertEquals(2147241295, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2162), (-2162), fieldTypeDouble0, (-2162), (-2162), byteArray0, byteOrder0, (-2162));
      int int0 = tiffField0.getTag();
      assertEquals((-2162), tiffField0.getSortHint());
      assertEquals((-2162), tiffField0.getOffset());
      assertEquals((-2162), int0);
      assertEquals((-2162), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte)37;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0.ASCII, 1376L, (-1044L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1376, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1044), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2, (byte)99, fieldTypeLong0, 591L, (byte)41, byteArray0, (ByteOrder) null, (byte)41);
      int int0 = tiffField0.getSortHint();
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(41, int0);
      assertEquals(41, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 4L, (byte)1, byteArray0, byteOrder0, (-49));
      int int0 = tiffField0.getSortHint();
      assertEquals((-49), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(853, 853, fieldTypeLong0, 951L, 853, byteArray0, byteOrder0, (byte)41);
      int int0 = tiffField0.getOffset();
      assertEquals(853, tiffField0.getDirectoryType());
      assertEquals(853, int0);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(853, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(367, "hH:^*q3;a|h=x-T>`{f");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(51, 51, fieldTypeAscii0, 0L, (-2924L), byteArray0, byteOrder0, (-771));
      int int0 = tiffField0.getOffset();
      assertEquals(51, tiffField0.getDirectoryType());
      assertEquals((-771), tiffField0.getSortHint());
      assertEquals(51, tiffField0.getTag());
      assertEquals((-2924), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)99;
      TiffField tiffField0 = new TiffField(2, (byte)99, fieldTypeLong0, 591L, (byte)41, byteArray0, (ByteOrder) null, (byte)41);
      tiffField0.getIntValueOrArraySum();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(2364, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getTag());
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "en");
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-75);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-75), fieldTypeShort0, (byte)63, (byte)0, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(126, tiffField0.getBytesLength());
      assertEquals((-19200), int0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-75), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-7), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1841, 1841, fieldTypeLong0, (byte)1, (-1610612735), byteArray0, (ByteOrder) null, (-548));
      tiffField0.getIntValue();
      assertEquals(1841, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-548), tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getOffset());
      assertEquals(1841, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)91;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-628), fieldTypeShort0, (byte)1, 1127L, byteArray0, byteOrder0, (-3591));
      tiffField0.getIntValue();
      assertEquals((-3591), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-628), tiffField0.getDirectoryType());
      assertEquals(1127, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-125);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34735, 132, fieldTypeByte0, 1L, 132, byteArray0, byteOrder0, 1611);
      tiffField0.getIntValue();
      assertEquals(34735, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(132, tiffField0.getOffset());
      assertEquals(132, tiffField0.getDirectoryType());
      assertEquals(1611, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-530), (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-530), fieldTypeShort0, 3002L, 3002L, byteArray0, byteOrder0, 2);
      tiffField0.getFieldTypeName();
      assertEquals((-530), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(3002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1235, 50, fieldTypeLong0, 50, 1235, byteArray0, byteOrder0, (byte)18);
      tiffField0.getFieldTypeName();
      assertEquals(1235, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1235, tiffField0.getTag());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1722), 2, (FieldType) null, 1376L, 2202L, byteArray0, byteOrder0, 67);
      tiffField0.getFieldType();
      assertEquals(2202, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1722), tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-212), fieldTypeLong0, (-212), (-212), byteArray0, byteOrder0, (-212));
      tiffField0.getFieldType();
      assertEquals((-212), tiffField0.getSortHint());
      assertEquals((-212), tiffField0.getDirectoryType());
      assertEquals((-212), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "en");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeShort0, 2074L, 1376L, byteArray0, byteOrder0, (-518));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1376, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-518), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 2545);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2545, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(4, 2, fieldTypeLong0.SHORT, 1L, (-3362), byteArray0, byteOrder0, (byte)86);
      tiffField0.getDoubleValue();
      assertEquals((-3362), tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      TiffField tiffField0 = new TiffField((-167), 1, fieldTypeShort0, 1, 1L, byteArray0, byteOrder0, (byte) (-27));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-167), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "en");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-7), (byte)0, fieldTypeShort0, (byte)63, (byte)22, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-7), tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(22, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "en");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-75), fieldTypeShort0, (byte)63, (byte)0, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-75), int0);
      assertEquals((-7), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, 50732, fieldTypeFloat0.SHORT, 4313L, (-32864L), byteArray0, (ByteOrder) null, 2146446717);
      long long0 = tiffField0.getCount();
      assertEquals(4313L, long0);
      assertEquals(2146446717, tiffField0.getSortHint());
      assertEquals(50732, tiffField0.getDirectoryType());
      assertEquals((-32864), tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3278, 3278, (FieldType) null, (-17904L), 2439, byteArray0, (ByteOrder) null, 2147241295);
      long long0 = tiffField0.getCount();
      assertEquals((-17904L), long0);
      assertEquals(2439, tiffField0.getOffset());
      assertEquals(3278, tiffField0.getTag());
      assertEquals(2147241295, tiffField0.getSortHint());
      assertEquals(3278, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(866, (-2146429925), fieldTypeByte0, 866, (-35808L), byteArray0, byteOrder0, (-2147483646));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2146429925), tiffField0.getDirectoryType());
      assertEquals(866, tiffField0.getTag());
      assertEquals(866, int0);
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-35808), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(11, "Cs5^J(%/O@3PP");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeAscii0, (-143232L), (-269L), byteArray0, byteOrder0, (byte)79);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-269), tiffField0.getOffset());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
      assertEquals((-143232), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1235, 50, fieldTypeByte0.LONG, 50, 1235, byteArray0, byteOrder0, (byte)18);
      tiffField0.getByteOrder();
      assertEquals(1235, tiffField0.getOffset());
      assertEquals(1235, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1645), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1593), (-1593), fieldTypeFloat0, 491L, 1244L, byteArray0, byteOrder0, 65535);
      tiffField0.getByteArrayValue();
      assertEquals(1964, tiffField0.getBytesLength());
      assertEquals((-1593), tiffField0.getDirectoryType());
      assertEquals(1244, tiffField0.getOffset());
      assertEquals((-1593), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(469, 500, fieldTypeFloat0, (byte)0, 4L, byteArray0, (ByteOrder) null, 4021);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(500, tiffField0.getDirectoryType());
      assertEquals(4021, tiffField0.getSortHint());
      assertEquals(469, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(856, 856, (FieldType) null, 1L, (-1060L), byteArray0, byteOrder0, 856);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-173), 34737, fieldTypeFloat0, 34737, (-173), (byte[]) null, byteOrder0, (-173));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2124), (-2124), fieldTypeRational0.SHORT, (-2124), (-2124), byteArray0, byteOrder0, (-2124));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-837), 1, fieldTypeRational0, 1, (-837), byteArray0, byteOrder0, (-837));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1756), (-1756), (FieldType) null, (-1756), (-1756), byteArray0, byteOrder0, (-1756));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1714), (-1714), fieldTypeAscii0.IFD, (-1714), (-1714), byteArray0, byteOrder0, (-1714));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(74, 74, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 74);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-212), fieldTypeLong0, (-212), (-212), byteArray0, byteOrder0, (-212));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1127), (-1127), fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (-1127));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(90, 1, fieldTypeRational0, 1, 90, byteArray0, byteOrder0, 90);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(169, 169, fieldTypeRational0, 169, 169, (byte[]) null, byteOrder0, 169);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeRational0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(90, 1, fieldTypeRational0, 1, 90, byteArray0, byteOrder0, 90);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-618), (-618), fieldTypeRational0, (-618), (-618), byteArray0, byteOrder0, (-618));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-212), fieldTypeLong0, (-212), (-212), byteArray0, byteOrder0, (-212));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, (byte[]) null, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2582), (-2582), fieldTypeRational0, (-2582), (-2582), byteArray0, byteOrder0, (-2582));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[363];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-4270), fieldTypeRational0, 1, (-4270), byteArray0, byteOrder0, (-4270));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeRational0, 81, 81, (byte[]) null, byteOrder0, 81);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeRational0.SSHORT, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeRational0, 1L, 43, byteArray0, byteOrder0, 43);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(550, 550, fieldTypeRational0, 550, 550, (byte[]) null, byteOrder0, 550);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-426), (-426), fieldTypeRational0, (-426), (-426), byteArray0, byteOrder0, (-426));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 39, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 39);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeRational0, 52, 52, (byte[]) null, byteOrder0, 52);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-283), (-283), fieldTypeRational0.SSHORT, (-283), (-283), byteArray0, byteOrder0, (-283));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-36), (-36), fieldTypeRational0, (-36), (-36), byteArray0, byteOrder0, (-36));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-618), (-618), fieldTypeRational0, (-618), (-618), byteArray0, byteOrder0, (-618));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("SubSecTimeDigitized");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "TUd+@jwJuP 4L/39/7E");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-684), (-684), fieldTypeDouble0, 1L, (-684), byteArray0, byteOrder0, (byte)22);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("E7T\"V:]e~v.ugz)");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1352), 68, fieldTypeRational0, (-1352), 1000L, byteArray0, byteOrder0, (-1352));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ICC_Profile ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3532), (-73), fieldTypeRational0, 1L, (-3532), byteArray0, byteOrder0, (-9));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-985), (-985), fieldTypeDouble0, (-985), (-985), byteArray0, byteOrder0, (-985));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-848), 2139922085, fieldTypeLong0.ASCII, 4L, 248L, byteArray0, byteOrder0, 731);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "en");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146446717, 2, fieldTypeShort0, (-2147483648L), 65, byteArray0, byteOrder0, (byte) (-4));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2146446717, tiffField0.getTag());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(65, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(37397, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37397, 37397, fieldTypeRational0, 331L, 37397, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(37397, tiffField0.getDirectoryType());
      assertEquals(37397, tiffField0.getTag());
      assertEquals(37397, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1, "%#!=t(tc'=/[!");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(469, 500, fieldTypeFloat0, (byte)0, 4L, byteArray0, (ByteOrder) null, 4021);
      tiffField0.getByteOrder();
      assertEquals(4021, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(500, tiffField0.getDirectoryType());
      assertEquals(469, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1349), (-1349), fieldTypeRational0, (-1349), (-1349), (byte[]) null, byteOrder0, (-1349));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1003), fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)20);
      tiffField0.getFieldType();
      assertEquals((-1003), tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1170), 1967, fieldTypeByte0, (-179L), 4L, byteArray0, byteOrder0, (-3177));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1170), tiffField0.getTag());
      assertEquals(1967, int0);
      assertEquals((-3177), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(321, 321, fieldTypeRational0, 321, 321, byteArray0, byteOrder0, 321);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48, 48, (FieldType) null, 48, 48, (byte[]) null, byteOrder0, 48);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3204), "(:");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3252, (-3204), fieldTypeDouble0, (-1L), (-1L), byteArray0, byteOrder0, (byte)2);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tagInfo0.tag);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3252, tiffField0.getTag());
      assertEquals((-3204), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, 2370L, 2668L, byteArray0, byteOrder0, (byte)117);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(2668, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 965L, byteArray0, byteOrder0, 64);
      tiffField0.getCount();
      assertEquals(965, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "BdYO ;?3uKOxo:g=j%");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 332);
      int int0 = tiffField0.getBytesLength();
      assertEquals(332, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals("55 (0x37: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[124];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(972, 972, fieldTypeDouble0, 972, 972, byteArray0, byteOrder0, 972);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@3a21f4a6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.SSHORT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(992, 992, fieldTypeDouble0, 992, 992, byteArray0, byteOrder0, 992);
      tiffField0.getDoubleArrayValue();
      assertEquals(992L, tiffField0.getCount());
      assertEquals(992, tiffField0.getTag());
      assertEquals(992, tiffField0.getDirectoryType());
      assertEquals(992, tiffField0.getSortHint());
      assertEquals(7936, tiffField0.getBytesLength());
      assertEquals(992, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[179];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1744, 1744, fieldTypeFloat0, 1744, 1744, byteArray0, byteOrder0, 1744);
      tiffField0.getDoubleArrayValue();
      assertEquals(1744L, tiffField0.getCount());
      assertEquals(1744, tiffField0.getTag());
      assertEquals(1744, tiffField0.getSortHint());
      assertEquals(6976, tiffField0.getBytesLength());
      assertEquals(1744, tiffField0.getOffset());
      assertEquals(1744, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(936, 936, fieldTypeLong0, 936, 936, byteArray0, byteOrder0, 936);
      tiffField0.getDoubleArrayValue();
      assertEquals(936, tiffField0.getOffset());
      assertEquals(936, tiffField0.getTag());
      assertEquals(936, tiffField0.getSortHint());
      assertEquals(936, tiffField0.getDirectoryType());
      assertEquals(936L, tiffField0.getCount());
      assertEquals(3744, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      tiffField0.getDoubleArrayValue();
      assertEquals(55L, tiffField0.getCount());
      assertEquals(110, tiffField0.getBytesLength());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50942, 50942, fieldTypeRational0, 50942, 50942, byteArray0, byteOrder0, 50942);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(407536, tiffField0.getBytesLength());
      assertEquals(50942, tiffField0.getOffset());
      assertEquals(50942, tiffField0.getSortHint());
      assertEquals(50942, tiffField0.getDirectoryType());
      assertEquals(50942, tiffField0.getTag());
      assertEquals(50942L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      tiffField0.getDoubleArrayValue();
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(440, tiffField0.getBytesLength());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3278, 3278, fieldTypeByte0, 3278, 3278, byteArray0, byteOrder0, 3278);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@15d70793 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(959, 959, fieldTypeLong0, 959, 959, byteArray0, byteOrder0, 959);
      tiffField0.getIntArrayValue();
      assertEquals(959, tiffField0.getSortHint());
      assertEquals(959, tiffField0.getTag());
      assertEquals(959, tiffField0.getDirectoryType());
      assertEquals(959L, tiffField0.getCount());
      assertEquals(3836, tiffField0.getBytesLength());
      assertEquals(959, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55L, tiffField0.getCount());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(110, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(355, 355, fieldTypeRational0, 355, 355, byteArray0, byteOrder0, 355);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      tiffField0.getIntArrayValue();
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(440, tiffField0.getBytesLength());
      assertEquals(55L, tiffField0.getCount());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(213, 1, fieldTypeRational0, 1, 213, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3278, 3278, fieldTypeByte0, 3278, 3278, byteArray0, byteOrder0, 3278);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@55707299 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@7feaeea2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      String string0 = tiffField0.getTagName();
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x37)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(532, 532, fieldTypeRational0, 532, 532, byteArray0, byteOrder0, 532);
      String string0 = tiffField0.getTagName();
      assertEquals(532, tiffField0.getSortHint());
      assertEquals(532, tiffField0.getTag());
      assertEquals("ReferenceBlackWhite", string0);
      assertEquals(532, tiffField0.getDirectoryType());
      assertEquals(532, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[336];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1760, 1760, fieldTypeFloat0, 1760, 1760, byteArray0, byteOrder0, 1760);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1760L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1760, tiffField0.getSortHint());
      assertEquals(1760, tiffField0.getDirectoryType());
      assertEquals(7040, tiffField0.getBytesLength());
      assertEquals(1760, tiffField0.getTag());
      assertEquals(1760, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(332, 332, fieldTypeByte0, 332, 332, byteArray0, byteOrder0, 15);
      String string0 = tiffField0.getValueDescription();
      assertEquals(332L, tiffField0.getCount());
      assertEquals(332, tiffField0.getTag());
      assertEquals(332, tiffField0.getBytesLength());
      assertEquals(332, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(332, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[179];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1744, 1744, fieldTypeFloat0, 1744, 1744, byteArray0, byteOrder0, 1744);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1744L, tiffField0.getCount());
      assertEquals(1744, tiffField0.getSortHint());
      assertEquals(1744, tiffField0.getDirectoryType());
      assertEquals(6976, tiffField0.getBytesLength());
      assertEquals(1744, tiffField0.getTag());
      assertEquals(1744, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[378];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1984, 1984, fieldTypeDouble0, 1984, 1984, byteArray0, byteOrder0, 1984);
      tiffField0.dump();
      assertEquals(1984, tiffField0.getDirectoryType());
      assertEquals(15872, tiffField0.getBytesLength());
      assertEquals(1984, tiffField0.getOffset());
      assertEquals(1984, tiffField0.getTag());
      assertEquals(1984, tiffField0.getSortHint());
      assertEquals(1984L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65505, (-361), fieldTypeLong0, 13904L, 13904L, byteArray0, byteOrder0, 65505);
      String string0 = tiffField0.toString();
      assertEquals((-361), tiffField0.getDirectoryType());
      assertEquals(65505, tiffField0.getSortHint());
      assertEquals("65505 (0xffe1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (13904 Long)", string0);
      assertEquals(13904, tiffField0.getOffset());
      assertEquals(55616, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(959, 959, fieldTypeLong0, 959, 959, byteArray0, byteOrder0, 959);
      String string0 = tiffField0.getValueDescription();
      assertEquals(959, tiffField0.getDirectoryType());
      assertEquals(959, tiffField0.getTag());
      assertEquals(959, tiffField0.getSortHint());
      assertEquals(959L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(959, tiffField0.getOffset());
      assertEquals(3836, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(25, 788, fieldTypeShort0, 959, 788, byteArray0, byteOrder0, 788);
      String string0 = tiffField0.toString();
      assertEquals(1918, tiffField0.getBytesLength());
      assertEquals(788, tiffField0.getDirectoryType());
      assertEquals("25 (0x19: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (60) (959 SShort)", string0);
      assertEquals(788, tiffField0.getSortHint());
      assertEquals(788, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3278, 3278, fieldTypeByte0, 3278, 3278, byteArray0, byteOrder0, 3278);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3278, tiffField0.getBytesLength());
      assertEquals(3278, tiffField0.getTag());
      assertEquals(3278L, tiffField0.getCount());
      assertEquals(3278, tiffField0.getSortHint());
      assertEquals(3278, tiffField0.getOffset());
      assertEquals(3278, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(403, (-1756), fieldTypeAscii0, 403, (-1756), byteArray0, byteOrder0, (-1756));
      String string0 = tiffField0.getValueDescription();
      assertEquals(403, tiffField0.getTag());
      assertEquals(403, tiffField0.getBytesLength());
      assertEquals((-1756), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1756), tiffField0.getDirectoryType());
      assertEquals((-1756), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      String string0 = tiffField0.getValueDescription();
      assertEquals(55L, tiffField0.getCount());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(440, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertEquals(55, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(55, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeAscii0, 22, (-1132L), byteArray0, byteOrder0, 22);
      tiffField0.toString();
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals((-1132), tiffField0.getOffset());
      assertEquals(22, tiffField0.getBytesLength());
      assertEquals(22, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[29];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0.SSHORT, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 74, fieldTypeRational0, 0L, 74, byteArray0, byteOrder0, 1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(74, 74);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertNull(string0);
      assertEquals(74, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(576, 619, fieldTypeRational0, 576, 576, byteArray0, byteOrder0, 576);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(576, 576);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(576, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertEquals(576, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(576, tiffField0.getSortHint());
      assertEquals(619, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(959, 959, fieldTypeLong0, 959, 959, byteArray0, byteOrder0, 959);
      tiffField0.getFieldTypeName();
      assertEquals(959, tiffField0.getOffset());
      assertEquals(959, tiffField0.getTag());
      assertEquals(959, tiffField0.getSortHint());
      assertEquals(959, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 4L, (byte)87, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(87, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeRational0, (-602L), 52, byteArray0, byteOrder0, (-1203));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1984, 1984, fieldTypeDouble0, 1984, 2499, (byte[]) null, byteOrder0, 2499);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[20];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0.SHORT, 55, 55, byteArray0, byteOrder0, 55);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55L, tiffElement0.offset);
  }
}
