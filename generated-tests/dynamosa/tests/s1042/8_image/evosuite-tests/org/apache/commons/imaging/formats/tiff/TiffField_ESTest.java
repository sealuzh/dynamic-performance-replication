/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 20:53:22 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-9);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte) (-9), fieldTypeShort0, 296L, 296L, byteArray0, byteOrder0, 2002);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-9), tiffField0.getDirectoryType());
      assertEquals(296, tiffField0.getOffset());
      assertEquals(36, tiffField0.getTag());
      assertEquals(2002, tiffField0.getSortHint());
      assertEquals(247, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)60;
      byteArray0[4] = (byte) (-79);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeRational0, 2548L, (-1550L), byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1550), tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(86, int0);
      assertEquals(60, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-79);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeRational0, 2548L, (-1550L), byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1550), tiffField0.getOffset());
      assertEquals(5, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 34892, fieldTypeRational0, 544L, (-1L), byteArray0, byteOrder0, 34892);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40094, tiffField0.getTag());
      assertEquals(34892, tiffField0.getSortHint());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(34892, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2137810298, (byte)12, fieldTypeShort0, (byte)89, (-226L), byteArray0, byteOrder0, (-2484));
      tiffField0.getValue();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals((-226), tiffField0.getOffset());
      assertEquals((-2484), tiffField0.getSortHint());
      assertEquals(2137810298, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "BC5");
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeAscii0, (-45L), (-988L), byteArray0, byteOrder0, 4096);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(4096, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-988), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-97), fieldTypeRational0, 0, (byte)0, byteArray0, byteOrder0, (byte)94);
      int int0 = tiffField0.getTag();
      assertEquals((-97), tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4961), (-4961), fieldTypeRational0, (-4961), (-1L), byteArray0, byteOrder0, (byte) (-15));
      int int0 = tiffField0.getTag();
      assertEquals((-4961), tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-4961), int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)15;
      TiffField tiffField0 = new TiffField(1100, 284, fieldTypeRational0.ASCII, 65535, 1100, byteArray0, byteOrder0, (byte)15);
      String string0 = tiffField0.getStringValue();
      assertEquals(1100, tiffField0.getTag());
      assertEquals(1100, tiffField0.getOffset());
      assertEquals(15, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(284, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-889), 0, fieldTypeDouble0, 0, (-889), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-889), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-889), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, (-888));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-888), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 255);
      tiffField0.getOffset();
      assertEquals(255, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2140154352, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147451993, 2147451993, fieldTypeRational0, 2147451993, 2147451993, byteArray0, byteOrder0, 33919);
      int int0 = tiffField0.getOffset();
      assertEquals(2147451993, int0);
      assertEquals(2147451993, tiffField0.getDirectoryType());
      assertEquals(2147451993, tiffField0.getTag());
      assertEquals(33919, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)60;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1552), fieldTypeRational0.LONG, (byte)60, 4L, byteArray0, byteOrder0, (-3343));
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1552), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-3343), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-68);
      TiffField tiffField0 = new TiffField(50964, 2117237399, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte)111);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50964, tiffField0.getTag());
      assertEquals(2117237399, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)67;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeLong0, 1, 0L, byteArray0, byteOrder0, (byte) (-60));
      tiffField0.getIntValue();
      assertEquals(15, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-60), tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-72);
      TiffField tiffField0 = new TiffField((byte) (-72), 1, fieldTypeShort0, 1, (byte) (-72), byteArray0, byteOrder0, 45);
      tiffField0.getIntValue();
      assertEquals(45, tiffField0.getSortHint());
      assertEquals((-72), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-72), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3664, 59932, fieldTypeByte0, (byte)101, 0L, byteArray0, byteOrder0, 1453);
      tiffField0.getFieldTypeName();
      assertEquals(1453, tiffField0.getSortHint());
      assertEquals(3664, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(59932, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2140349150, "");
      byte[] byteArray0 = new byte[2];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((byte)1);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1356, fieldTypeFloat0, (-3531L), 1, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1356, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4961), (-4961), fieldTypeRational0, (-4961), (-1L), byteArray0, byteOrder0, (byte) (-15));
      tiffField0.getFieldType();
      assertEquals((-4961), tiffField0.getDirectoryType());
      assertEquals((-4961), tiffField0.getTag());
      assertEquals((-15), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1447), ": ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1447), (-1589), fieldTypeLong0, (byte)50, (byte)50, byteArray0, byteOrder0, 2719);
      tiffField0.getFieldType();
      assertEquals(2719, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-1447), tiffField0.getTag());
      assertEquals((-1589), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "BC5");
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeAscii0, (-45L), (-988L), byteArray0, byteOrder0, 4096);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(4096, tiffField0.getSortHint());
      assertEquals((-988), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-32), (byte)0, fieldTypeRational0.SBYTE, 1L, 304L, byteArray0, byteOrder0, (byte) (-32));
      tiffField0.getDoubleValue();
      assertEquals(304, tiffField0.getOffset());
      assertEquals((-32), tiffField0.getSortHint());
      assertEquals((-32), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)101, 2004318071, fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, 3664);
      tiffField0.getDoubleValue();
      assertEquals(2004318071, tiffField0.getDirectoryType());
      assertEquals(3664, tiffField0.getSortHint());
      assertEquals(101, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-31);
      TiffField tiffField0 = new TiffField((byte) (-32), (byte)0, fieldTypeRational0.UNDEFINED, 1L, 304L, byteArray0, byteOrder0, (byte) (-32));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(304, tiffField0.getOffset());
      assertEquals((-32), tiffField0.getSortHint());
      assertEquals((-32), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 255);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(255, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, (byte) (-96), fieldTypeByte0, (byte) (-96), (-1712L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals((-1712), tiffField0.getOffset());
      assertEquals((-96), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(272, "DateTime");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50217, 34676, fieldTypeByte0, 272, 272, byteArray0, byteOrder0, (byte)68);
      long long0 = tiffField0.getCount();
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(50217, tiffField0.getTag());
      assertEquals(272L, long0);
      assertEquals(272, tiffField0.getOffset());
      assertEquals(34676, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147), 992, fieldTypeLong0, (-2147), 992, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals((-2147), tiffField0.getTag());
      assertEquals((-2147L), long0);
      assertEquals(992, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(992, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-97), (byte)20, fieldTypeRational0, 0L, 1676L, byteArray0, byteOrder0, (byte)20);
      tiffField0.getBytesLength();
      assertEquals((-97), tiffField0.getTag());
      assertEquals(1676, tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-31), 3664, fieldTypeByte0, (byte)74, 225L, byteArray0, byteOrder0, (byte) (-31));
      tiffField0.getBytesLength();
      assertEquals(225, tiffField0.getOffset());
      assertEquals(3664, tiffField0.getDirectoryType());
      assertEquals((-31), tiffField0.getTag());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, (byte)11, fieldTypeShort0.SLONG, 24L, (-3769), byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals((-3769), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)18, 2223, fieldTypeShort0, (byte)18, (byte)18, byteArray0, byteOrder0, (-1161));
      tiffField0.getByteArrayValue();
      assertEquals((-1161), tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals(2223, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(37510);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 723);
      tiffField0.getByteArrayValue();
      assertEquals(723, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1447), ": ");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1447), (byte)50, fieldTypeLong0.FLOAT, 92800L, 751L, byteArray0, byteOrder0, (byte)111);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("g70Z|[x");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(92800L, tiffField0.getCount());
      assertEquals((-1447), tiffField0.getTag());
      assertEquals(751, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("?o~<(.9,_j1EBR");
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2294, (byte)101, fieldTypeAscii0, (byte)101, 983L, byteArray0, byteOrder0, 1144);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(2294, tiffField0.getTag());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(101L, tiffField0.getCount());
      assertEquals(983, tiffField0.getOffset());
      assertEquals(1144, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, (FieldType) null, 42, (byte)45, byteArray0, byteOrder0, 42);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1984), (-1984), fieldTypeRational0, (-1984), (-1984), byteArray0, byteOrder0, (-1984));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2246, 2246, fieldTypeByte0, 2246, 2246, (byte[]) null, byteOrder0, 2246);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2911), (-2911), fieldTypeShort0, (-2911), (-2911), byteArray0, byteOrder0, (-2911));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (byte)60, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37510, (-2445), fieldTypeRational0, (-2445), 2261, byteArray0, byteOrder0, 37510);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2740), (-2740), fieldTypeRational0, (-2740), (-2740), byteArray0, byteOrder0, (-2740));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, 1L, (byte)74, byteArray0, byteOrder0, 1912);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(875, 875, fieldTypeRational0, 875, 875, (byte[]) null, byteOrder0, 875);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-105), (byte) (-105), fieldTypeRational0, (byte) (-105), (byte) (-105), byteArray0, byteOrder0, (byte) (-105));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1084), (-1084), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)23);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51040, 51040, fieldTypeRational0, 51040, 51040, (byte[]) null, byteOrder0, 51040);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)34, (byte)34, fieldTypeShort0, (byte)34, (byte)34, (byte[]) null, byteOrder0, (byte)34);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-14), (byte) (-14), fieldTypeRational0, (byte) (-14), (byte) (-14), byteArray0, byteOrder0, (byte) (-14));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(857, 857, fieldTypeShort0, 857, 857, (byte[]) null, byteOrder0, 857);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-21), (byte) (-21), fieldTypeRational0, (byte) (-21), (byte) (-21), byteArray0, byteOrder0, (byte) (-21));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 888, byteArray0, byteOrder0, 888);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(934, 934, fieldTypeRational0, 934, 934, (byte[]) null, byteOrder0, 934);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5687), (-5687), fieldTypeShort0, (-5687), (-5687), byteArray0, byteOrder0, (-5687));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147478386, 33, (FieldType) null, 125, (-1L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)27, (-3654), fieldTypeRational0, (byte)27, (-3654), byteArray0, byteOrder0, (byte)27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 875, fieldTypeShort0, 875, 875, (byte[]) null, byteOrder0, 875);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-87), (byte) (-87), fieldTypeRational0, (byte) (-87), (byte) (-87), byteArray0, byteOrder0, (byte) (-87));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, (FieldType) null, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)17);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-24), (byte) (-24), fieldTypeRational0, (byte) (-24), (byte) (-24), byteArray0, byteOrder0, (byte) (-24));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-24), (byte) (-24), fieldTypeRational0, (byte) (-24), (byte) (-24), byteArray0, byteOrder0, (byte) (-24));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 3900L, byteArray0, byteOrder0, 1718);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("?o~<(.9,_j1EBR");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "?o~<(.9,_j1EBR");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(373, (-2980), fieldTypeShort0, (-2980), (-2980), byteArray0, byteOrder0, (-655));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 73);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-7), fieldTypeRational0, (byte) (-7), (byte) (-7), byteArray0, byteOrder0, (byte) (-7));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(51023, 51023, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 51023);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1095, 1095, fieldTypeShort0, (-674L), (-674L), byteArray0, byteOrder0, 1282);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeAscii0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32996, 65535, fieldTypeShort0, 32996, (-1252L), byteArray0, byteOrder0, (-3160));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(32996, tiffField0.getTag());
      assertEquals((-3160), tiffField0.getSortHint());
      assertEquals((-1252), tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1538, 1538, fieldTypeByte0, (-796L), (-796L), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1538, tiffField0.getDirectoryType());
      assertEquals(1538, tiffField0.getTag());
      assertEquals((-796), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, (byte[]) null, (ByteOrder) null, 46);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)101, 345, (FieldType) null, 2630L, 2630L, byteArray0, byteOrder0, 18);
      tiffField0.getFieldType();
      assertEquals(345, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getTag());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(2630, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2055, "1zWxOHY*prS4");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(135, 135, fieldTypeDouble0, 806L, 0L, byteArray0, byteOrder0, (byte)126);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(135, int0);
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(135, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)117, (byte)117, fieldTypeRational0, (byte)117, (byte)117, byteArray0, byteOrder0, (byte)117);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-1130), 50, fieldTypeByte0, (-1130), 50, (byte[]) null, byteOrder0, (-1130));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1108), (-1108), fieldTypeShort0.LONG, 540L, (-1108), byteArray0, byteOrder0, 1421);
      int int0 = tiffField0.getOffset();
      assertEquals((-1108), tiffField0.getDirectoryType());
      assertEquals(1421, tiffField0.getSortHint());
      assertEquals((-1108), tiffField0.getTag());
      assertEquals((-1108), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeByte0, 513, 513, (byte[]) null, byteOrder0, 4);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeRational0, 67844L, 131984L, byteArray0, byteOrder0, (byte) (-79));
      int int0 = tiffField0.getTag();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, int0);
      assertEquals(131984, tiffField0.getOffset());
      assertEquals((-79), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 4L, byteArray0, byteOrder0, 1646);
      tiffField0.getCount();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1646, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-97), 2140154352, fieldTypeRational0, 2140154352, 2742L, byteArray0, byteOrder0, 2147219407);
      tiffField0.getBytesLength();
      assertEquals(2140154352, tiffField0.getDirectoryType());
      assertEquals(2147219407, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(2742, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(875, 875, fieldTypeShort0, 875, 875, byteArray0, byteOrder0, 875);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(875, tiffField0.getDirectoryType());
      assertEquals("875 (0x36b: Unknown Tag): ", string0);
      assertEquals(875, tiffField0.getSortHint());
      assertEquals(875, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(828, 828, fieldTypeShort0, 828, 828, byteArray0, byteOrder0, 828);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2258, 2258, fieldTypeShort0.FLOAT, 2258, 2258, byteArray0, byteOrder0, 2258);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@6cc24d86 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(887, 887, fieldTypeRational0, 887, 887, byteArray0, byteOrder0, 887);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2261, 2261, fieldTypeByte0, 2261, 2261, byteArray0, byteOrder0, 2261);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5ee82ebb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(928, 928, fieldTypeFloat0, 928, 928, byteArray0, byteOrder0, 928);
      tiffField0.getDoubleArrayValue();
      assertEquals(928, tiffField0.getTag());
      assertEquals(928, tiffField0.getSortHint());
      assertEquals(928L, tiffField0.getCount());
      assertEquals(928, tiffField0.getDirectoryType());
      assertEquals(928, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2290, 2290, fieldTypeLong0, 2290, 2290, byteArray0, byteOrder0, 2290);
      tiffField0.getDoubleArrayValue();
      assertEquals(2290, tiffField0.getOffset());
      assertEquals(2290, tiffField0.getSortHint());
      assertEquals(2290, tiffField0.getTag());
      assertEquals(2290, tiffField0.getDirectoryType());
      assertEquals(2290L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(875, 875, fieldTypeShort0, 875, 875, byteArray0, byteOrder0, 875);
      tiffField0.getDoubleArrayValue();
      assertEquals(875, tiffField0.getDirectoryType());
      assertEquals(875L, tiffField0.getCount());
      assertEquals(875, tiffField0.getOffset());
      assertEquals(875, tiffField0.getTag());
      assertEquals(875, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)20, (byte)20, fieldTypeRational0, (byte)20, (byte)20, byteArray0, byteOrder0, (byte)20);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3f29d254 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2236, 2236, fieldTypeShort0, 2236, 2236, byteArray0, byteOrder0, 2236);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(2236, tiffField0.getOffset());
      assertEquals(2236, tiffField0.getSortHint());
      assertEquals(2236, tiffField0.getTag());
      assertEquals(2236, tiffField0.getDirectoryType());
      assertEquals(2236L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeRational0, (byte)23, (byte)23, byteArray0, byteOrder0, (byte)23);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 21);
      String string0 = tiffField0.getStringValue();
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(21, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@31687884
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[320];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50741, 50741, fieldTypeDouble0, 50741, 50741, byteArray0, byteOrder0, 50741);
      String string0 = tiffField0.getTagName();
      assertEquals(50741, tiffField0.getOffset());
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals(50741, tiffField0.getTag());
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals("MakerNoteSafety", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0.FLOAT, 9, 9, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "f`*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(79, 79, fieldTypeFloat0, 79, 79, byteArray0, byteOrder0, 79);
      tiffField0.dump();
      assertEquals(79, tiffField0.getOffset());
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(79, tiffField0.getTag());
      assertEquals(316, tiffField0.getBytesLength());
      assertEquals(79L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2290, 2290, fieldTypeLong0.UNDEFINED, 2290, 2290, byteArray0, byteOrder0, 2290);
      tiffField0.dump();
      assertEquals(2290L, tiffField0.getCount());
      assertEquals(2290, tiffField0.getOffset());
      assertEquals(2290, tiffField0.getTag());
      assertEquals(2290, tiffField0.getSortHint());
      assertEquals(2290, tiffField0.getBytesLength());
      assertEquals(2290, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50817, 50817, fieldTypeDouble0, 50817, 50817, byteArray0, byteOrder0, 50817);
      tiffField0.dump();
      assertEquals(50817, tiffField0.getOffset());
      assertEquals(406536, tiffField0.getBytesLength());
      assertEquals(50817L, tiffField0.getCount());
      assertEquals(50817, tiffField0.getTag());
      assertEquals(50817, tiffField0.getSortHint());
      assertEquals(50817, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2280, 2280, fieldTypeDouble0, 2280, 2280, byteArray0, byteOrder0, 2280);
      tiffField0.dump();
      assertEquals(2280, tiffField0.getSortHint());
      assertEquals(2280, tiffField0.getOffset());
      assertEquals(2280L, tiffField0.getCount());
      assertEquals(2280, tiffField0.getTag());
      assertEquals(2280, tiffField0.getDirectoryType());
      assertEquals(18240, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[320];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50787, 50787, fieldTypeDouble0.SLONG, 50787, (-4637L), byteArray0, byteOrder0, 50787);
      tiffField0.dump();
      assertEquals(50787, tiffField0.getTag());
      assertEquals(50787, tiffField0.getSortHint());
      assertEquals(50787, tiffField0.getDirectoryType());
      assertEquals(203148, tiffField0.getBytesLength());
      assertEquals((-4637), tiffField0.getOffset());
      assertEquals(50787L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2290, 2290, fieldTypeLong0, 2290, 2290, byteArray0, byteOrder0, 2290);
      tiffField0.dump();
      assertEquals(9160, tiffField0.getBytesLength());
      assertEquals(2290, tiffField0.getOffset());
      assertEquals(2290, tiffField0.getSortHint());
      assertEquals(2290, tiffField0.getDirectoryType());
      assertEquals(2290, tiffField0.getTag());
      assertEquals(2290L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[281];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(7, (-1454), fieldTypeShort0, (byte)62, (-1454), byteArray0, byteOrder0, (-1454));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1454), tiffField0.getOffset());
      assertEquals((-1454), tiffField0.getSortHint());
      assertEquals((-1454), tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (62)", string0);
      assertNotNull(string0);
      assertEquals(62L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(875, 875, fieldTypeShort0, 875, 875, byteArray0, byteOrder0, 875);
      String string0 = tiffField0.getValueDescription();
      assertEquals(875, tiffField0.getDirectoryType());
      assertEquals(1750, tiffField0.getBytesLength());
      assertEquals(875, tiffField0.getTag());
      assertEquals(875, tiffField0.getSortHint());
      assertEquals(875, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(875L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[349];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2250, 2250, fieldTypeAscii0, 2250, 28784L, byteArray0, byteOrder0, 2250);
      tiffField0.dump();
      assertEquals(2250, tiffField0.getBytesLength());
      assertEquals(2250, tiffField0.getSortHint());
      assertEquals(2250L, tiffField0.getCount());
      assertEquals(2250, tiffField0.getTag());
      assertEquals(28784, tiffField0.getOffset());
      assertEquals(2250, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)10, (byte)10, fieldTypeRational0, (byte)10, (byte)10, byteArray0, byteOrder0, (byte)10);
      tiffField0.toString();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3069, 3069, fieldTypeByte0, 926L, 926L, byteArray0, byteOrder0, 3069);
      String string0 = tiffField0.getValueDescription();
      assertEquals(926, tiffField0.getOffset());
      assertEquals(3069, tiffField0.getDirectoryType());
      assertEquals(926L, tiffField0.getCount());
      assertEquals(3069, tiffField0.getTag());
      assertEquals(926, tiffField0.getBytesLength());
      assertEquals(3069, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, "~");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 65535, 3160L, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(3160, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (-1065), fieldTypeByte0, 3122L, (-22L), byteArray0, byteOrder0, (-1546));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1065), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1546), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(8, tiffField0.getTag());
      assertEquals((-22), tiffField0.getOffset());
      assertEquals(3122L, tiffField0.getCount());
      assertEquals((-1065), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3664, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, (-1065), fieldTypeByte0, 3122L, (-22L), byteArray0, byteOrder0, (-1546));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1065), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1065), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: GPSSatellites, fieldType: null", string0);
      assertEquals((-1546), tiffField0.getSortHint());
      assertEquals((-22), tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
      assertEquals(3122, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(875, 875, fieldTypeShort0, 875, 875, byteArray0, byteOrder0, 875);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(875, tiffField0.getDirectoryType());
      assertEquals(875L, tiffElement0.offset);
      assertEquals(875, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(875, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2141400124, (-1), fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 1210);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2141400124, tiffField0.getTag());
      assertEquals(1210, int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(905, 905, fieldTypeShort0, 905, 905, (byte[]) null, byteOrder0, 905);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 28, fieldTypeLong0, 0L, (byte) (-103), byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntArrayValue();
      assertEquals((-103), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }
}
