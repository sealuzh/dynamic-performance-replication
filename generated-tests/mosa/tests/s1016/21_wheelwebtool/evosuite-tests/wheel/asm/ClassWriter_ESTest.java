/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:00:03 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Item;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2124);
      Item item0 = classWriter0.newConstItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(126);
      classWriter0.visit(126, 126, "", "N+y0=7ud(#Kon3VU{l:", "", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(26);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit(26, 26, "FY p<^fv", "value ", "value ", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "By";
      classWriter0.visit(44, 44, "NG&Y^`{%2'O{b", "By", "By", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(44, 44);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      classWriter0.toByteArray();
      classWriter0.visitInnerClass("", "", "", 44);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2124);
      Type type0 = Type.DOUBLE_TYPE;
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(78);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(29, 29);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-296));
      classWriter0.newField("", "", "");
      Item item0 = classWriter0.newInteger((-296));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      int int0 = classWriter0.newMethod("", "", "", true);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      int int0 = classWriter0.addType("RuntimeVisibleAnnotations");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1297);
      Item item0 = classWriter0.newFloat(1297);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1924);
      classWriter0.visitSource("5G", "5G");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-426));
      classWriter0.visitField((-426), "", "", "", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-343));
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-343), "v]L_BGc<Q{vuI", "", "", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(296);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("J1]", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      Item item0 = classWriter0.newDouble(2);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1924);
      classWriter0.newInteger(1924);
      classWriter0.toByteArray();
      classWriter0.newInteger(1924);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-546));
      Byte byte0 = new Byte((byte)43);
      classWriter0.newConst(byte0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1039));
      byte[] byteArray0 = classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newConst(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value [B@7f503506
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2952);
      classWriter0.newField("", "", "");
      Byte.toUnsignedInt((byte)1);
      Byte.toUnsignedLong((byte)117);
      Item[] itemArray0 = new Item[9];
      Item item0 = classWriter0.newLong(4);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newFloat(601.05F);
      itemArray0[1] = item1;
      Item item2 = classWriter0.key;
      itemArray0[2] = item2;
      Item item3 = classWriter0.newFloat((-2650.0F));
      item3.strVal2 = "";
      itemArray0[3] = item3;
      Item item4 = classWriter0.newFieldItem("", "", "");
      itemArray0[4] = item4;
      classWriter0.newField("RuntimeInvisibleAnnotations", "", "7)Tl1Y");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      Double double0 = new Double(2);
      classWriter0.newConstItem(double0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1369));
      classWriter0.addUninitializedType("YPH7q4wO#X;!_", (-1369));
      classWriter0.addType("f*RM.yNmShy(w!0%}");
      classWriter0.newDouble(2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1297);
      classWriter0.addUninitializedType("f*RM.yNm]hy(w'05}", 1297);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFieldItem("", "", "");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.visitSource("", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.toByteArray();
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 1431);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      Integer integer0 = new Integer(2536);
      classWriter0.newConstItem(integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(238);
      classWriter0.visitSource((String) null, (String) null);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1528));
      ClassWriter classWriter1 = new ClassWriter((-1528));
      Float float0 = new Float((float) 2);
      classWriter1.newConstItem(float0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2124);
      classWriter0.visitInnerClass("org.apache.commons.io.filefilter.TrueFileFilter", "org.apache.commons.io.filefilter.TrueFileFilter", "Invalid IOCase name: ", 2124);
      classWriter0.addUninitializedType("Invalid IOCase name: ", 2353);
      classWriter0.visitInnerClass("", "", "?", 2124);
      Item item0 = classWriter0.key2;
      classWriter0.newClassItem("?");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1946);
      classWriter0.visitInnerClass("2MA=#~2v=])dJ", "2MA=#~2v=])dJ", "", 1946);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-328));
      classWriter0.newDouble((-328));
      classWriter0.visitOuterClass("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", (String) null);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1449));
      classWriter0.visitAnnotation("bg\"js!D;DRc>Y", true);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(192);
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.TrueFileFilter", "org.apache.commons.io.filefilter.TrueFileFilter");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(1297);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1297, 28, "", "", "}is$e", stringArray0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1919);
      Short short0 = new Short((short)14);
      classWriter0.newConstItem(short0);
      System.setCurrentTimeMillis(1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(306);
      Float float0 = new Float((float) 1);
      classWriter0.newConstItem("zYtyLmMN");
      classWriter0.visitField(306, "zYtyLmMN", "d-:]<2xRs4V9:BrRYi", "d-:]<2xRs4V9:BrRYi", "zYtyLmMN");
      classWriter0.newClassItem("");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      Boolean boolean0 = Boolean.valueOf("cA");
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1911);
      Character character0 = Character.valueOf(']');
      classWriter0.newConstItem(character0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      classWriter0.visitOuterClass("T", "T", "T");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.toByteArray();
      classWriter0.visitOuterClass("org.apache.commons.io.filefilter.EmptyFileFilter", (String) null, "org.apache.commons.io.filefilter.EmptyFileFilter");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2));
      classWriter0.visitAnnotation("<U[I~kR6&z8]:(@;k8Z", false);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      classWriter0.visit(20, 20, "MfC_&-@", "MfC_&-@", (String) null, (String[]) null);
      classWriter0.addType("MfC_&-@");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "3e[g)D0;-";
      stringArray0[1] = "b(ECI}p{A;\"./FCDY";
      classWriter0.visit(44, 44, "3e[g)D0;-", "", "b(ECI}p{A;\"./FCDY", stringArray0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6532);
      Long long0 = new Long(6532);
      classWriter0.newConst(long0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2211);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-Ue.d%'|@";
      classWriter0.visit(2211, 725, "-Ue.d%'|@", (String) null, "-Ue.d%'|@", stringArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1920);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.newConstItem(boolean0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1528));
      ClassWriter classWriter1 = new ClassWriter((-1528));
      Item[] itemArray0 = new Item[1];
      classWriter1.typeTable = itemArray0;
      boolean boolean0 = ClassReader.FRAMES;
      classWriter1.addType("GqSV(Q{UFf");
      classWriter1.newMethod("GqSV(Q{UFf", "GqSV(Q{UFf", "GqSV(Q{UFf", true);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      Class<Type> class0 = Type.class;
      Type type0 = Type.getType(class0);
      classWriter0.newConstItem(type0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.newLong(1297);
      classWriter0.newLong(1297);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      Attribute attribute0 = new Attribute("/)li[l%eM@U(0(u<");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.newFieldItem("g`C*c@39H+AJJ07/", "g`C*c@39H+AJJ07/", "j~E<@Dz");
      classWriter0.addType("j~E<@Dz");
      classWriter0.addType("j~E<@Dz");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1408);
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod((-455), "[|Q03y4:", "PbwB5Ab(", "PbwB5Ab(", stringArray0);
      classWriter0.index = 1408;
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1849);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      classWriter0.newFloat(10);
      classWriter0.newFloat(10);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1143);
      classWriter0.newMethod("", "", "", false);
      classWriter0.newMethod("", "", "", false);
      classWriter0.visitSource("", (String) null);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777228);
      classWriter0.newDouble(16777228);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "^=G~)S<q %_7:";
      stringArray0[1] = "^=G~)S<q %_7:";
      classWriter0.visit((-1941), 16777228, ">b`Ueqv`", ">&$il]3Z#G}", "^=G~)S<q %_7:", stringArray0);
      classWriter0.newDouble(16777228);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FileFileFilter");
      String string0 = classWriter0.thisName;
      classWriter0.addUninitializedType("V_v#9G`n", 10);
      classWriter0.toByteArray();
      classWriter0.addUninitializedType("V_v#9G`n", 10);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, "org.apache.commons.io.filefilter.FileFileFilter", "The array of suffixes must not be null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3085);
      classWriter0.getCommonSuperClass("wheel.asm.Label", "java/lang/Class");
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3085);
      classWriter0.visitAnnotation("value ", true);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      ClassWriter classWriter1 = new ClassWriter((-2442));
      classWriter1.getCommonSuperClass("org.apache.commons.io.filefilter.FileFileFilter", "wheel.asm.Label");
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2464));
      classWriter0.getCommonSuperClass("wheel.asm.Label", "java/lang/Class");
      classWriter0.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
      classWriter0.addType("i");
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.apache.commons.io.filefilter.FileFileFilter";
      stringArray0[1] = "org.apache.commons.io.filefilter.FileFileFilter";
      classWriter0.visit(10, (-889275723), "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", stringArray0);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.FileFileFilter");
      Character.getName(1);
      ClassWriter classWriter1 = new ClassWriter(10);
      classWriter0.toByteArray();
      classWriter0.newUTF8("org.apache.commons.io.filefilter.FileFileFilter");
      classWriter1.getCommonSuperClass("org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter");
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-986));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "\"NYncu\"\"?@x7}}?-*3H";
      stringArray0[5] = "";
      stringArray0[6] = "";
      classWriter0.visit((-986), (-986), "", "", "", stringArray0);
      classWriter0.toByteArray();
      classWriter0.visitOuterClass("]~W,.5f+(c", "wheel.asm.ClassWriter", "");
  }
}
