/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:52:19 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2313));
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-2313), 1330);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777227);
      classWriter0.newUTF8("wo/,O6I.?#]Y");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("wo/,O6I.?#]Y", "wo/,O6I.?#]Y");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'wo/,O6I/?#]Y.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32767);
      classWriter0.index = 21;
      Item item0 = classWriter0.newInteger(32767);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(163);
      classWriter0.visitOuterClass("}AdxvL*>(-Q]?(lku2:", "}AdxvL*>(-Q]?(lku2:", "}AdxvL*>(-Q]?(lku2:");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1687);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockJapaneseDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate@100fe944
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      String string0 = "";
      String string1 = "~mD/[f)]cKY'10wfrG7";
      // Undeclared exception!
      try { 
        classWriter0.newField("wheel.asm.ClassWriter", "i\"Od/^", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter((-1707));
      // Undeclared exception!
      try { 
        classWriter0.visitField((-1238), (String) null, "3z{@+Y", "K=p<Gm `X9bx", "3z{@+Y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(308);
      classWriter0.visitSource("6JQ>3zW8^dshp*Uzi", "");
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(1072);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2253, "Xea`", "Xea`", "Yz|wcMFv MmIvt3.78", (String[]) null);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(396);
      classWriter0.visit(5, 396, "Il~,uSw#", "Il~,uSw#", "Il~,uSw#", (String[]) null);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1071, (-1928));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      String[] stringArray0 = new String[0];
      classWriter0.visit(16, 2345, "", "(r8/K|", "", stringArray0);
      System.setCurrentTimeMillis(5);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(22);
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      stringArray0[1] = "jr7ZU,TH";
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "jr7ZU,TH";
      stringArray0[5] = "jr7ZU,TH";
      stringArray0[6] = null;
      stringArray0[7] = "SourceDebugExtension";
      // Undeclared exception!
      try { 
        classWriter0.visit(22, (-3343), "jr7ZU,TH", "jr7ZU,TH", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-249));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit((-249), 1713, "", "", "", stringArray0);
      classWriter0.visitAnnotation("", true);
      Item item0 = classWriter0.newDouble((-249));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.visitInnerClass("InnerClasses", "InnerClasses", "InnerClasses", (-3978));
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2135);
      classWriter0.visitSource((String) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      int int0 = Double.BYTES;
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.newConst(boolean0);
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1783));
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.TRUE;
      Boolean.logicalXor(true, true);
      Boolean.logicalAnd(true, false);
      classWriter0.newConstItem(boolean0);
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
      
      classWriter0.newFloat((-1783));
      int int1 = classWriter0.newClass("");
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      classWriter0.addType("The array of names must not be null");
      classWriter0.visitInnerClass((String) null, (String) null, "8`\"'1/d-g#hq],", 115);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(16, (-90));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(4294967295L);
      ClassWriter classWriter0 = new ClassWriter((-2470));
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("void", (String) null, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.visitOuterClass("", (String) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)44;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classWriter0.toByteArray();
      Item item0 = classWriter0.newClassItem("");
      item0.set(2, "", "[]", "");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ClassWriter classWriter0 = new ClassWriter((-2055));
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte)68);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Double double0 = new Double(2269.930433331131);
      Item item0 = new Item(3);
      Short short0 = new Short((byte)68);
      Item item1 = classWriter0.newConstItem(short0);
      assertNotNull(item1);
      
      Item item2 = classWriter0.newDouble(32L);
      assertNotNull(item2);
      assertNotSame(item2, item1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1625));
      classWriter0.visitEnd();
      String string0 = "";
      classWriter0.newMethod("", "", "", false);
      classWriter0.newMethod("", "", "", false);
      classWriter0.newClassItem("");
      String string1 = "+";
      String[] stringArray0 = new String[0];
      Attribute attribute0 = null;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      classWriter0.newMethod("The wildcard array must not be null", "The wildcard array must not be null", "The wildcard array must not be null", true);
      Item item0 = new Item(4);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2703);
      Float float0 = new Float((double) 2703);
      int int0 = classWriter0.newConst(float0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = classWriter0.addUninitializedType("X", 0);
      int int1 = classWriter0.addType("X");
      assertEquals(2, int1);
      
      int int2 = classWriter0.newUTF8("X");
      assertTrue(int2 == int0);
      assertEquals(1, int2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2518));
      String string0 = "@l;2L6yLZUx";
      classWriter0.index = 1415;
      classWriter0.version = 24;
      String string1 = "CB2/q[L=";
      classWriter0.newNameType("@l;2L6yLZUx", "CB2/q[L=");
      classWriter0.addUninitializedType("@l;2L6yLZUx", 754);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(558);
      Short short0 = new Short((short)101);
      Short.toUnsignedLong((short)33);
      classWriter0.newConstItem("L|\"");
      classWriter0.visitField(16777218, "2P", "L|\"", "L|\"", short0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(1522);
      classWriter0.newClassItem("");
      Boolean boolean0 = new Boolean(false);
      classWriter0.newConst(boolean0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      classWriter0.version = 3;
      classWriter0.visitSource("=$CJX]YBTyAWVbvPlps", "=$CJX]YBTyAWVbvPlps");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-249));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit((-249), 1713, "", "", "", stringArray0);
      classWriter0.newDouble((-249));
      classWriter0.toByteArray();
      classWriter0.visitSource((String) null, "");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 2;
      ClassWriter classWriter0 = new ClassWriter(2);
      Item item0 = classWriter0.key3;
      boolean boolean0 = true;
      int int1 = Type.LONG;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.invalidFrames = true;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int2 = 749;
      classWriter0.addType("");
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newFloat(0.0F);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Item item0 = new Item(2);
      String string0 = "";
      classWriter0.addType("Q");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string1 = "StackMap";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "i+:");
      classWriter0.addType("");
      Byte byte0 = new Byte((byte)4);
      Float float0 = new Float((float) 0);
      classWriter0.newConstItem(float0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((byte) (-5), 1000);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newDouble(2);
      Item item0 = classWriter0.key3;
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      classWriter0.newDouble(2);
      classWriter0.addType("O`JR#)Ly|I=lo");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(115);
      classWriter0.index = 115;
      classWriter0.visitInnerClass((String) null, (String) null, (String) null, 115);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(352);
      classWriter0.toByteArray();
      Type type0 = Type.getType("J/WrGK`h`t");
      Item item0 = classWriter0.newConstItem(type0);
      classWriter0.newConstItem("J/WrGK`h`t");
      int int0 = Frame.UNINITIALIZED_THIS;
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "wheel.asm.Edge";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.Edge");
      ClassWriter classWriter0 = new ClassWriter((-56));
      String string1 = "h{!-VNg";
      String string2 = "ZR0I+";
      Type type0 = Type.getObjectType("ZR0I+");
      classWriter0.newConst(type0);
      classWriter0.newNameType("h{!-VNg", "");
      classWriter0.visitSource("", "h{!-VNg");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)32;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-249));
      Short short0 = new Short((short)9);
      Short.toUnsignedLong((short)1939);
      Character character0 = Character.valueOf('3');
      classWriter0.newConstItem(character0);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        classWriter0.visitField(6, "", "", "J;?E|i$Xwc9", mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@73229079
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      Long long0 = new Long(0L);
      classWriter0.newConstItem(long0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.addType("");
      classWriter0.thisName = "Mph$f)";
      classWriter0.newFieldItem("]H*4hBbf7", "]H*4hBbf7", "");
      classWriter0.newNameType("]H*4hBbf7", "");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte)13);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Double double0 = new Double(0.0);
      Item item0 = new Item((byte)13);
      Short short0 = new Short((byte)13);
      classWriter1.newConstItem(byte0);
      classWriter1.newDouble(1);
      classWriter1.visitAnnotation("\"RTpFEsDvb8^u3D0qy", true);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Frame.DOUBLE;
      Item item0 = new Item(0);
      classWriter0.addType("");
      classWriter0.addUninitializedType("&fL.`%P~<FRV$l66{S]V", 1);
      classWriter0.addType("");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1812));
      classWriter0.newConst("]hFM");
      classWriter0.newUTF8("]hFM");
      classWriter0.toByteArray();
      classWriter0.newConst("]hFM");
      classWriter0.newDouble(1.0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3oikJ'SnA%[ ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Type.LONG;
      int int1 = Frame.DOUBLE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!Wu_.nK`g+lX7r&WP:");
      Byte byte0 = new Byte((byte)80);
      int int2 = Frame.BASE_KIND;
      Byte byte1 = new Byte((byte)80);
      int int3 = Frame.BASE_KIND;
      int int4 = Character.BYTES;
      int int5 = Frame.CHAR;
      int int6 = Short.BYTES;
      System.setCurrentTimeMillis(0L);
      ClassWriter classWriter0 = new ClassWriter(267386880);
      classWriter0.visitInnerClass("3oikJ'SnA%[ ", "java/lang/Object", "!Wu_.nK`g+lX7r&WP:", (-400));
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "";
      // Undeclared exception!
      try { 
        classWriter0.visit(2, 11, "", (String) null, "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1334));
      classWriter0.visitEnd();
      Integer integer0 = new Integer(2);
      classWriter0.newConstItem(integer0);
      classWriter0.newDouble((-107.0));
      classWriter0.newClassItem("Z!");
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = Type.LONG;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!Wu_.nK`g+lX7Nr&WP:");
      int int1 = Frame.DOUBLE;
      int int2 = Frame.CHAR;
      ClassWriter classWriter0 = new ClassWriter(2283);
      classWriter0.visitOuterClass("!Wu_.nK`g+lX7Nr&WP:", "LocalVariableTypeTable", (String) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1813));
      Item[] itemArray0 = new Item[1];
      Long long0 = Long.getLong("6?ZSHIGtJi^\"GcY>tN2", (long) 1);
      Item item0 = classWriter0.newConstItem(long0);
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      String string0 = "InnerClasses";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "InnerClasses");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      String string1 = "C<95PvD";
      classWriter0.addType("C<95PvD");
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      Long long0 = new Long(2);
      classWriter0.newConstItem(long0);
      String string0 = "y@aF+LE'4h39zm_<IdC";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("Mph$f)", "rz^eG[M3ZZt!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Mph$f).class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(159);
      String string0 = "/";
      classWriter0.addUninitializedType("/", 159);
      classWriter0.visitSource("/", "/");
      classWriter0.toByteArray();
      String string1 = null;
      int int0 = Frame.BASE_KIND;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(159, 159);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 159
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Item item0 = classWriter0.key3;
      int int0 = Double.BYTES;
      classWriter0.addType("@``O3S~-%zX");
      classWriter0.visitInnerClass((String) null, "g", (String) null, (-2055));
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte)70);
      classWriter0.newInteger((-2055));
      System.setCurrentTimeMillis((-1));
      classWriter0.visitInnerClass("java/lang/Object", "g", "g", 1);
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ClassWriter classWriter0 = new ClassWriter((-2055));
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte)68);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(32L);
      ClassWriter classWriter1 = new ClassWriter(3);
      Double double0 = new Double(2269.930433331131);
      classWriter1.newConstItem(double0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      int int0 = Frame.BOOLEAN;
      classWriter0.addType("wheel.asm.Frame");
      classWriter0.visitAnnotation("wheel.asm.Frame", true);
      Boolean boolean0 = new Boolean(false);
      Boolean.getBoolean("");
      Boolean.logicalXor(false, false);
      Boolean boolean1 = Boolean.FALSE;
      int int1 = Frame.FLOAT;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Frame");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wY'mVG*G");
      byte[] byteArray0 = classWriter0.toByteArray();
      classWriter0.newClass("[{J\"l");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Double double0 = new Double((-288.19315378043));
      classWriter0.visitEnd();
      classWriter0.newDouble(146.4690164696);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      classWriter0.newLong((-323L));
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.newLong((-323L));
      String string0 = "<init>";
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      Item item0 = classWriter0.key3;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.invalidFrames = true;
      Item item1 = classWriter0.key2;
      classWriter0.addType("1");
      classWriter0.newDouble((-655.1199480631375));
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.addUninitializedType("java/lang/Object", 2);
      Byte byte0 = new Byte((byte)80);
      classWriter0.getMergedType(2, 2);
      classWriter0.getMergedType(2, 2);
      classWriter0.visitSource("1", "SourceDebugExension");
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3oikJ'SnA%[ ");
      Item item0 = classWriter0.key3;
      int int0 = Type.LONG;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitField(2, "~K", "3oikJ'SnA%[ ", "~K", (Object) null);
      Item item1 = new Item(2, item0);
      classWriter0.addType("3oikJ'SnA%[ ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~K");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!Wu_.nK`g+lX7Nr&WP:");
      classWriter0.addUninitializedType("java/lang/Object", 2);
      int int1 = Frame.DOUBLE;
      String string0 = "java/lang/Object";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Object");
      classWriter0.addUninitializedType("java/lang/Object", 2);
      int int2 = Frame.DOUBLE;
      Byte byte0 = new Byte((byte)80);
      classWriter0.newClass("");
      Item item2 = classWriter0.key3;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(46, 46);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 46
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      int int0 = Type.LONG;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.invalidFrames = false;
      classWriter0.visit((-15), (-15), "L", "L", "SourceDebugExtension", (String[]) null);
      classWriter0.addType(" od");
      classWriter0.toByteArray();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newLong(7);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-15), "Signature", " od", "L", (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      String string0 = "3oikJ'SnAw[ ";
      int int0 = Type.LONG;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.invalidFrames = false;
      String[] stringArray0 = null;
      classWriter0.visit(1, (-15), "~K", "~K", "SourceDebugExtension", (String[]) null);
      classWriter0.addType("SourceDebugExtension");
      classWriter0.toByteArray();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.newLong(1);
      // Undeclared exception!
      try { 
        classWriter0.newConst(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value [B@6d4ec8e
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      String string0 = "StackMapTable";
      Item item0 = classWriter0.key3;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newFloat((-288.66F));
      item0.set(255, "StackMapTable", "StackMapTable", "StackMapTable");
      item0.intVal = 329;
      item0.intVal = 2;
      classWriter0.newLong(2);
      int int0 = Type.LONG;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.invalidFrames = true;
      classWriter0.newFieldItem("StackMapTable", "StackMapTable", "StackMapTable");
      int int1 = Frame.DOUBLE;
      classWriter0.newField("StackMapTable", "StackMapTable", "StackMapTable");
      String string1 = "java/lang/Object";
      classWriter0.addUninitializedType("java/lang/Object", 13);
      int int2 = Frame.DOUBLE;
      Byte byte0 = new Byte((byte)4);
      int int3 = Frame.BASE_KIND;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(13, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      classWriter0.invalidFrames = false;
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "Se8^ZNX_/";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "", "", stringArray0, false, false);
      classWriter0.firstMethod = methodWriter0;
      classWriter0.visitAnnotation("", false);
      classWriter0.addType("");
      int int0 = Character.MAX_RADIX;
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.addUninitializedType("java/lang/Object", 2);
      int int1 = Frame.DOUBLE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!Wu_.nK`g+lX7r&WP:");
      Byte byte0 = new Byte((byte)80);
      classWriter0.getMergedType(2, 2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wY'mVG*G");
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.version = 2;
      classWriter0.addType("");
      int int0 = Frame.BOOLEAN;
      classWriter0.addType("wheel.asm.Frame");
      classWriter0.addUninitializedType("java/lang/Object", 2);
      Boolean.getBoolean("/)Z/t$e_5Nuo");
      classWriter0.toByteArray();
      Boolean.getBoolean("");
      boolean boolean0 = ClassReader.RESIZE;
      int int1 = Frame.ELEMENT_OF;
      classWriter0.getMergedType(2, 3);
      classWriter0.toByteArray();
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.firstField = null;
      System.setCurrentTimeMillis(2);
      classWriter0.newFloat((-268435456));
  }
}
