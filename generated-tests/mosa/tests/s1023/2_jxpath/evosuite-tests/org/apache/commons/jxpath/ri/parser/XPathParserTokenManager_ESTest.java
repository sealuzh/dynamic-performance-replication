/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:55:06 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.charset.Charset;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = null;
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, (-480));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -480. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = null;
      XPathParserTokenManager xPathParserTokenManager0 = null;
      try {
        xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, 9);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 9. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.ReInit((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, (-2600));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2600. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(mockFileInputStream0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\r");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIUJ&w14)Y=k");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)106;
      byteArray0[1] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)76, (-1286));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A9B|L~,%");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k8vwFID=D8 C`fR7");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader(">l*?<n_?5SZ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@<f2I 3v^");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("MTVys\"MSL`");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("boolean");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte) (-43);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("zF>d-~");
      stringReader0.ready();
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">!?gG");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("Sl6)-=c#}bg(/s");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descenda=nt::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("descendant::");
      StringReader stringReader1 = new StringReader("descendant::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HM");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A9B|L~,%");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)66;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("2escendant::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      simpleCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$8)}~Xc`fb$.k");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descenda0nt::");
      stringReader0.ready();
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-b");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("-b");
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("2escendant::");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("Ib7kRPl;c");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("boioqan");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      stringReader1.ready();
      char[] charArray0 = new char[3];
      charArray0[1] = ',';
      charArray0[2] = '9';
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("_Ynf");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("_Ynf");
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("normalize-space");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("normalize-space");
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("self::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("number");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("desceda=n::");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      boolean boolean0 = simpleCharStream0.prevCharIsCR;
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("MTVys\"MSL`");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+!?L");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descEOcend<nt::");
      stringReader0.ready();
      byte[] byteArray0 = new byte[8];
      StringReader stringReader1 = new StringReader("descEOcend<nt::");
      StringReader stringReader2 = new StringReader("8yZn;");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader2, (byte)103, (byte)0, 1117);
      simpleCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.read();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("descendant::");
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("booleann");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.skip((-1));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("2escendant::");
      char[] charArray0 = new char[3];
      charArray0[0] = '0';
      charArray0[1] = 'N';
      charArray0[2] = 'J';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("norma,ize-space");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("norma,ize-space");
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)112;
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("count");
      stringReader1.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 1117, (byte)100, 84);
      simpleCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader(",UDVMjM{&:m5h*8");
      char[] charArray0 = new char[0];
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("b5pin=QVE9`gEVp!{0");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)100;
      StringReader stringReader0 = new StringReader("SL#$Rds\"'TLZun");
      char[] charArray0 = new char[12];
      charArray0[1] = 'b';
      charArray0[2] = '_';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("A1qAMIFyR4he0");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.read();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("R`h_\"/dg+L");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("R`h_\"/dg+L");
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descEOcend<nt::");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 940, 940, 940);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("t\"\"A3&eP*78c}9 -8J`");
      stringReader0.ready();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)103;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Charset.defaultCharset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("t\"\"A3&eP*78c}9 -8J`");
      stringReader0.ready();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Charset.defaultCharset();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("SL#$Rds\"'TLZun");
      char[] charArray0 = new char[9];
      boolean boolean0 = SimpleCharStream.staticFlag;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("4I2}Y7'0`_#");
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackReader0);
      StringReader stringReader1 = new StringReader("4I2}Y7'0`_#");
      stringReader0.ready();
      simpleCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("descEOcend<nt::");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("K)xCwM,");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("ancestor::");
      stringReader2.ready();
      stringReader1.ready();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringReader stringReader0 = new StringReader("XQ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      stringReader0.ready();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("SL#$Rds\"'TLZun");
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[2] = '(';
      charArray0[3] = 'm';
      charArray0[4] = '(';
      charArray0[5] = '(';
      charArray0[6] = '(';
      charArray0[7] = '(';
      charArray0[8] = '(';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("b5pin=QVE9`gEVp!{0");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.read();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("&l6)-=c#}bg(/E");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.read();
      simpleCharStream0.inputStream = (Reader) stringReader0;
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)112;
      StringReader stringReader0 = new StringReader("xw=:1t$=Ve(\"#iNi");
      stringReader0.ready();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, (byte)112, (byte)112, (byte)108);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`|");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      stringReader0.ready();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIUJ&w14)Y=k");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)17;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("b5pin=QVE9`gEVp!{0");
      char[] charArray0 = new char[4];
      charArray0[0] = 'R';
      charArray0[1] = 'J';
      charArray0[2] = ',';
      charArray0[3] = 'r';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("(i9q");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
      stringReader0.read();
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)68;
      StringReader stringReader0 = new StringReader("b=i?{7j}[khxwSjXT");
      char[] charArray0 = new char[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[zk#QXu");
      charArray0[0] = 'j';
      charArray0[1] = 'G';
      charArray0[2] = '$';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("<=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Charset.defaultCharset();
      Charset.defaultCharset();
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte) (-97);
      byteArray0[3] = (byte)113;
      byteArray0[4] = (byte)2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)118;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[1] = 'w';
      StringReader stringReader1 = new StringReader(" (");
      StringReader stringReader2 = new StringReader("?4sqV.hux");
      stringReader2.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIUJ&w14)Y=k");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("t\"\"A3&eP*78c}9 -8J`");
      stringReader0.ready();
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      charArray0[1] = '2';
      charArray0[2] = '}';
      charArray0[3] = ',';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("$8)}~Xc`fb$.k");
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendanK::");
      byte[] byteArray0 = new byte[8];
      StringReader stringReader1 = new StringReader("");
      stringReader1.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("Ib7kRPl;c");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = '{';
      charArray0[2] = '9';
      charArray0[3] = 'B';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(charArrayReader0, (-1), (byte)80);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[2] = 'w';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendant:");
      StringReader stringReader1 = new StringReader("descendant:");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("org.apache.commons.jxpath.ri.parser.SimpleCharStream");
      char[] charArray0 = new char[7];
      charArray0[1] = 's';
      charArray0[1] = 's';
      charArray0[2] = 's';
      charArray0[3] = 's';
      charArray0[1] = 's';
      charArray0[5] = 's';
      charArray0[6] = 's';
      stringReader1.read(charArray0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("b5pin=QVE9`gEVp!{0");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      charArray0[5] = 'Y';
      charArray0[6] = 'Y';
      charArray0[7] = 'Y';
      charArray0[8] = 'Y';
      stringReader1.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      StringReader stringReader0 = new StringReader("descendanK::");
      char[] charArray0 = new char[7];
      charArray0[0] = '1';
      charArray0[1] = '_';
      charArray0[2] = 'U';
      charArray0[3] = 'd';
      charArray0[4] = ':';
      charArray0[5] = '5';
      charArray0[6] = 'c';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("Ib7kRPl;c");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)110;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)101;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Charset.defaultCharset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      StringReader stringReader0 = new StringReader("1U^/M]S2");
      char[] charArray0 = new char[3];
      charArray0[0] = 't';
      charArray0[1] = '5';
      charArray0[2] = 't';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Charset.defaultCharset();
      StringReader stringReader0 = new StringReader("desceda=n::");
      stringReader0.ready();
      char[] charArray0 = new char[3];
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      stringReader0.read(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }
}
