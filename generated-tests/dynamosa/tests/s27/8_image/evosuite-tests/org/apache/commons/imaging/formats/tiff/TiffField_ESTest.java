/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 16:14:51 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)96;
      TiffField tiffField0 = new TiffField((-35), 1, fieldTypeShort0, (byte)36, 1005L, byteArray0, byteOrder0, (byte)20);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-35), tiffField0.getTag());
      assertEquals(1005, tiffField0.getOffset());
      assertEquals(24576, int0);
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-117);
      byteArray0[4] = (byte) (-117);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-117), (-1157), fieldTypeRational0, 3830L, (byte) (-117), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1157), tiffField0.getDirectoryType());
      assertEquals(256, int0);
      assertEquals((-117), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-117), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-117);
      TiffField tiffField0 = new TiffField((byte) (-117), (-1157), fieldTypeRational0, 3830L, (byte) (-117), byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1157), tiffField0.getDirectoryType());
      assertEquals((-117), tiffField0.getTag());
      assertEquals((-117), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[37];
      TiffField tiffField0 = new TiffField(1544, 1544, fieldTypeByte0, 4L, 3, byteArray0, byteOrder0, 1544);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1544, tiffField0.getTag());
      assertEquals(1544, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1544, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1158), fieldTypeShort0, 28, 3125L, (byte[]) null, byteOrder0, 28);
      tiffField0.dump();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1158), tiffField0.getDirectoryType());
      assertEquals(3125, tiffField0.getOffset());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2606L, 365L, byteArray0, byteOrder0, (byte) (-54));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(365, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1276, (byte)26, fieldTypeLong0, 2595, 571L, byteArray0, byteOrder0, 636);
      tiffField0.getValue();
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(636, tiffField0.getSortHint());
      assertEquals(1276, tiffField0.getTag());
      assertEquals(571, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-79), (byte) (-42), fieldTypeShort0, 4L, (byte)2, byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-79), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
      assertEquals((-42), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeByte0, (-943L), 0L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-11), (byte)106, fieldTypeShort0, 255L, (-1700L), byteArray0, byteOrder0, (byte) (-11));
      int int0 = tiffField0.getTag();
      assertEquals(106, tiffField0.getDirectoryType());
      assertEquals((-11), int0);
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals((-1700), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)84;
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeAscii0, (byte)3, 1739L, byteArray0, (ByteOrder) null, (byte)75);
      assertEquals(3, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1739, tiffField0.getOffset());
      assertEquals(75, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2106965088, 2106965088, fieldTypeRational0, (byte)75, 1171L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1171, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2106965088, tiffField0.getTag());
      assertEquals(2106965088, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 1950L, 100L, byteArray0, byteOrder0, (byte) (-74));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-74), int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(100, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField(2338, 2338, fieldTypeByte0, (byte)52, 0L, byteArray0, byteOrder0, 1295);
      int int0 = tiffField0.getOffset();
      assertEquals(1295, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2338, tiffField0.getTag());
      assertEquals(2338, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1599), (-1599), fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)12);
      int int0 = tiffField0.getOffset();
      assertEquals(12, tiffField0.getSortHint());
      assertEquals((-1599), tiffField0.getTag());
      assertEquals((-1599), tiffField0.getDirectoryType());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)54;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2210, 2156, fieldTypeByte0, 1L, (-2087L), byteArray0, byteOrder0, (byte) (-41));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2087), tiffField0.getOffset());
      assertEquals(2210, tiffField0.getTag());
      assertEquals((-41), tiffField0.getSortHint());
      assertEquals(2156, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-117);
      TiffField tiffField0 = new TiffField(50, 1650, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-117));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1650, tiffField0.getDirectoryType());
      assertEquals((-117), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1347, "o.K9B;e");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (-33), fieldTypeByte0, 1L, (-2857L), byteArray0, byteOrder0, 1347);
      tiffField0.getIntValue();
      assertEquals(1347, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals((-2857), tiffField0.getOffset());
      assertEquals((-33), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-14));
      tiffField0.getIntValue();
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-95);
      TiffField tiffField0 = new TiffField(50, 2134, fieldTypeLong0, 1L, 50, byteArray0, byteOrder0, 37521);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2134, tiffField0.getDirectoryType());
      assertEquals(37521, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50934, (String) null);
      TiffField tiffField0 = new TiffField((-1257), (byte)0, fieldTypeByte0, 2436L, 1112L, byteArray0, (ByteOrder) null, 2327);
      tiffField0.getFieldTypeName();
      assertEquals(2327, tiffField0.getSortHint());
      assertEquals((-1257), tiffField0.getTag());
      assertEquals(1112, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(16, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-4551), 1636, fieldTypeLong0, (-4551), 1872L, byteArray0, byteOrder0, 91);
      tiffField0.getFieldTypeName();
      assertEquals(1872, tiffField0.getOffset());
      assertEquals(1636, tiffField0.getDirectoryType());
      assertEquals(91, tiffField0.getSortHint());
      assertEquals((-4551), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(34030, (-3333), (FieldType) null, 3648L, (byte) (-97), byteArray0, byteOrder0, (byte) (-97));
      tiffField0.getFieldType();
      assertEquals(34030, tiffField0.getTag());
      assertEquals((-97), tiffField0.getOffset());
      assertEquals((-3333), tiffField0.getDirectoryType());
      assertEquals((-97), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 597L, byteArray0, byteOrder0, 2216);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2216, tiffField0.getSortHint());
      assertEquals(597, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-6165), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3007), (-3007), fieldTypeFloat0, (-6165), (-3007), byteArray0, byteOrder0, (-943));
      tiffField0.getFieldType();
      assertEquals((-3007), tiffField0.getTag());
      assertEquals((-3007), tiffField0.getOffset());
      assertEquals((-943), tiffField0.getSortHint());
      assertEquals((-3007), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(19, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1756, 2438, fieldTypeShort0, 1L, 510L, byteArray0, byteOrder0, 818);
      tiffField0.getDoubleValue();
      assertEquals(818, tiffField0.getSortHint());
      assertEquals(510, tiffField0.getOffset());
      assertEquals(1756, tiffField0.getTag());
      assertEquals(2438, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)21;
      TiffField tiffField0 = new TiffField((byte) (-117), 0, fieldTypeRational0.UNDEFINED, 1L, (byte)52, byteArray0, byteOrder0, (byte)52);
      tiffField0.getDoubleValue();
      assertEquals(52, tiffField0.getOffset());
      assertEquals((-117), tiffField0.getTag());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-83);
      TiffField tiffField0 = new TiffField(881, 881, fieldTypeShort0, 1L, 881, byteArray0, byteOrder0, (-1714));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(881, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(881, tiffField0.getDirectoryType());
      assertEquals(881, tiffField0.getOffset());
      assertEquals((-1714), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1636, 1636, fieldTypeRational0, 1636, 1636, byteArray0, byteOrder0, 1636);
      tiffField0.getDoubleArrayValue();
      assertEquals(1636, tiffField0.getDirectoryType());
      assertEquals(1636, tiffField0.getTag());
      assertEquals(1636L, tiffField0.getCount());
      assertEquals(13088, tiffField0.getBytesLength());
      assertEquals(1636, tiffField0.getSortHint());
      assertEquals(1636, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2606L, 365L, byteArray0, byteOrder0, (byte) (-54));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(365, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField(1036, (byte) (-117), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).BYTE).LONG, (byte)12, (-1165L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1036, tiffField0.getTag());
      assertEquals((-1165), tiffField0.getOffset());
      assertEquals((-117), int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2606L, 365L, byteArray0, byteOrder0, (byte) (-54));
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals(365, tiffField0.getOffset());
      assertEquals(2606L, long0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeByte0, (-943L), 0L, byteArray0, byteOrder0, 50);
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-943L), long0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)52, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2044, 34736, fieldTypeDouble0, 0L, (byte)75, byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(34736, tiffField0.getDirectoryType());
      assertEquals(2044, tiffField0.getTag());
      assertEquals(75, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2151), (byte)52, fieldTypeByte0.DOUBLE, 1200L, (-19L), byteArray0, byteOrder0, 1840700269);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1840700269, tiffField0.getSortHint());
      assertEquals(9600, int0);
      assertEquals((-19), tiffField0.getOffset());
      assertEquals((-2151), tiffField0.getTag());
      assertEquals(52, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 2606L, 365L, byteArray0, byteOrder0, (byte) (-54));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(365, tiffField0.getOffset());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4734), (-4734), fieldTypeRational0, 1L, 4L, byteArray0, byteOrder0, 3725);
      tiffField0.getByteArrayValue();
      assertEquals(3725, tiffField0.getSortHint());
      assertEquals((-4734), tiffField0.getDirectoryType());
      assertEquals((-4734), tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-25), (byte)75, fieldTypeRational0, (byte)75, (byte) (-25), byteArray0, byteOrder0, (byte)75);
      tiffField0.getByteArrayValue();
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getTag());
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(600, tiffField0.getBytesLength());
      assertEquals((-25), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(37521, (-477), fieldTypeShort0, (-477), 3279L, byteArray0, byteOrder0, 37521);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(520);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "T0x{qgG&");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 2156, fieldTypeByte0, 255L, (-44L), byteArray0, byteOrder0, 3023);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2156);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(43, byteArrayOutputStream0.size());
      assertEquals("0 (0x0: Unknown Tag): 0, 0 (255 Undefined)\n", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1730, 1730, (FieldType) null, 1730, 1730, byteArray0, byteOrder0, 1730);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146894489, 3450, (FieldType) null, 2146894489, 0L, (byte[]) null, byteOrder0, 3450);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1689, 1689, fieldTypeRational0, 1689, 1689, (byte[]) null, byteOrder0, 1689);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[187];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2137), (-2137), fieldTypeFloat0, (-2137), 2104, byteArray0, byteOrder0, 2104);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), 1774, fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, 1774);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1802, 1338, fieldTypeLong0, 1L, 1338, byteArray0, byteOrder0, 1338);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1674, 1674, fieldTypeRational0, 1674, 1674, (byte[]) null, byteOrder0, 1674);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeShort0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeShort0, 28, 28, (byte[]) null, byteOrder0, (-695));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1689, 1689, fieldTypeRational0, 1689, 1689, (byte[]) null, byteOrder0, 1689);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.SLONG, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1668, 1, fieldTypeRational0, 1, 1668, byteArray0, byteOrder0, (-1365));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1674, 1674, fieldTypeRational0, 1674, 1674, (byte[]) null, byteOrder0, 1674);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1941), (-1941), fieldTypeShort0, (-1941), (-1941), byteArray0, byteOrder0, (-1941));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[162];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, (-1205), fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeShort0, 73, 73, (byte[]) null, byteOrder0, 73);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-71), (-71), fieldTypeRational0, (-71), (-71), byteArray0, byteOrder0, (-71));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1768, 1768, (FieldType) null, 1768, 1768, byteArray0, byteOrder0, 1768);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-964), fieldTypeShort0, 28, (-4769L), byteArray0, byteOrder0, (-1987));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-237), 28, fieldTypeRational0, 28, 28, (byte[]) null, byteOrder0, (-237));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1452), (-1452), fieldTypeRational0, (-1452), (-1452), byteArray0, byteOrder0, (-1452));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1717, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1717);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2050, 2050, fieldTypeShort0, 2050, 2050, (byte[]) null, byteOrder0, 2050);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeDouble0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1674, 1, fieldTypeRational0, 1, 1674, byteArray0, byteOrder0, 1674);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeShort0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1485, 1485, fieldTypeShort0, 1485, 1485, byteArray0, byteOrder0, 1485);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3303, 415, fieldTypeShort0, 1L, (-2019L), byteArray0, byteOrder0, (-4652));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0.SLONG, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte) (-13), (byte) (-13), fieldTypeShort0, (byte) (-11), (byte) (-11), byteArray0, byteOrder0, (-981));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)52, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2044, 34736, fieldTypeDouble0, 0L, (byte)75, byteArray0, byteOrder0, 5);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(75, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(34736, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(2044, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)76, 6, fieldTypeShort0, 1073L, (byte) (-25), byteArray0, byteOrder0, (byte)76);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-25), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(76, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeByte0, 1398L, (byte)0, byteArray0, (ByteOrder) null, 2763);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(43, tiffField0.getTag());
      assertEquals(2763, tiffField0.getSortHint());
      assertEquals(1398L, tiffField0.getCount());
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(18246, 18246, fieldTypeLong0, 18246, (-1L), (byte[]) null, byteOrder0, 18246);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(15, 141, fieldTypeFloat0.SLONG, 141, 141, byteArray0, byteOrder0, 15);
      tiffField0.getFieldType();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(141, tiffField0.getDirectoryType());
      assertEquals(141, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2051), "GPSInfo");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 34712, fieldTypeShort0, 0L, 777L, byteArray0, byteOrder0, 301);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(777, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(301, tiffField0.getSortHint());
      assertEquals(34712, int0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1689, 1689, fieldTypeRational0, (-449L), 1689, byteArray0, byteOrder0, 1689);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1068, 65535, fieldTypeRational0, 1068, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3715, (byte)52, fieldTypeByte0, 4524L, (-1L), byteArray0, byteOrder0, (byte)54);
      int int0 = tiffField0.getOffset();
      assertEquals((-1), int0);
      assertEquals(54, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(3715, tiffField0.getTag());
      assertEquals(4524L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(28, (-1376), fieldTypeShort0, 2016L, 22056L, byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals((-1376), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(22056, tiffField0.getOffset());
      assertEquals(4032, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "yLC;t4j7k`~R8{M");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte) (-106));
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-106), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeRational0, 0L, 20, byteArray0, byteOrder0, (-1099));
      long long0 = tiffField0.getCount();
      assertEquals(20, tiffField0.getTag());
      assertEquals((-1099), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(0L, long0);
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-25), "7");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-117), 1862, fieldTypeByte0, (-456L), 3, byteArray0, byteOrder0, 258);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-117), tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(1862, tiffField0.getDirectoryType());
      assertEquals((-456), int0);
      assertEquals(258, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeShort0, 28, 28, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2050, 2050, fieldTypeLong0, 2050, 2050, byteArray0, byteOrder0, 2050);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2050, tiffField0.getOffset());
      assertEquals(8200, tiffField0.getBytesLength());
      assertEquals(2050, tiffField0.getTag());
      assertEquals(2050, tiffField0.getSortHint());
      assertEquals(2050, tiffField0.getDirectoryType());
      assertEquals(2050L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, byteOrder0, (byte)82);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[32];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1347, 1347, fieldTypeAscii0, 1347, 1347, byteArray0, byteOrder0, 1347);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@9fac4b8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2040, 2040, fieldTypeDouble0, 2040, 2040, byteArray0, byteOrder0, 2040);
      tiffField0.getDoubleArrayValue();
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(2040L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getTag());
      assertEquals(2040, tiffField0.getDirectoryType());
      assertEquals(16320, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2040, 2040, fieldTypeFloat0, 2040, 2040, byteArray0, byteOrder0, 2040);
      tiffField0.getDoubleArrayValue();
      assertEquals(2040, tiffField0.getTag());
      assertEquals(2040L, tiffField0.getCount());
      assertEquals(8160, tiffField0.getBytesLength());
      assertEquals(2040, tiffField0.getOffset());
      assertEquals(2040, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[154];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50932, 50932, fieldTypeLong0, 50932, 50932, byteArray0, byteOrder0, 50932);
      tiffField0.getDoubleArrayValue();
      assertEquals(50932, tiffField0.getOffset());
      assertEquals(203728, tiffField0.getBytesLength());
      assertEquals(50932, tiffField0.getSortHint());
      assertEquals(50932, tiffField0.getDirectoryType());
      assertEquals(50932L, tiffField0.getCount());
      assertEquals(50932, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeShort0, 89, 89, byteArray0, byteOrder0, 89);
      tiffField0.getDoubleArrayValue();
      assertEquals(178, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getOffset());
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals(89, tiffField0.getTag());
      assertEquals(89, tiffField0.getSortHint());
      assertEquals(89L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[32];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1347, 1347, fieldTypeAscii0, 1347, 1347, byteArray0, byteOrder0, 1347);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@79bd65f5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(1674, 1674, fieldTypeRational0, 1674, 1674, byteArray0, byteOrder0, 1674);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1674, tiffField0.getOffset());
      assertEquals(1674L, tiffField0.getCount());
      assertEquals(1674, tiffField0.getTag());
      assertEquals(1674, tiffField0.getDirectoryType());
      assertEquals(13392, tiffField0.getBytesLength());
      assertEquals(1674, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[180];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2090, 2090, fieldTypeLong0, 2090, 2090, byteArray0, byteOrder0, 2090);
      tiffField0.getIntArrayValue();
      assertEquals(2090, tiffField0.getTag());
      assertEquals(8360, tiffField0.getBytesLength());
      assertEquals(2090, tiffField0.getDirectoryType());
      assertEquals(2090L, tiffField0.getCount());
      assertEquals(2090, tiffField0.getOffset());
      assertEquals(2090, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeShort0, 89, 89, byteArray0, byteOrder0, 89);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(89, tiffField0.getTag());
      assertEquals(89L, tiffField0.getCount());
      assertEquals(178, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(89, tiffField0.getOffset());
      assertEquals(89, tiffField0.getSortHint());
      assertEquals(89, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1636, 1636, fieldTypeRational0, 1636, 1636, byteArray0, byteOrder0, 1636);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1636, 1636, fieldTypeRational0, 1636, 1636, byteArray0, byteOrder0, 1636);
      tiffField0.getIntArrayValue();
      assertEquals(13088, tiffField0.getBytesLength());
      assertEquals(1636, tiffField0.getTag());
      assertEquals(1636, tiffField0.getSortHint());
      assertEquals(1636L, tiffField0.getCount());
      assertEquals(1636, tiffField0.getOffset());
      assertEquals(1636, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2040, 2040, fieldTypeRational0, 1L, 2040, byteArray0, byteOrder0, 2040);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[32];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1347, 1347, fieldTypeAscii0, 1347, 1347, byteArray0, byteOrder0, 1347);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4b3207e0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1347, 1874, fieldTypeAscii0, 1347, 1874, byteArray0, byteOrder0, 1347);
      String string0 = tiffField0.getStringValue();
      assertEquals(1874, tiffField0.getDirectoryType());
      assertEquals(1347, tiffField0.getBytesLength());
      assertEquals(1347, tiffField0.getTag());
      assertEquals(1347, tiffField0.getSortHint());
      assertEquals(1874, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@1a5f0f2e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-482), 0, fieldTypeFloat0, 1630L, 1630L, (byte[]) null, byteOrder0, (-549));
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1630, tiffField0.getOffset());
      assertEquals((-549), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffffe1e)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeFloat0, (-943L), (-3355L), (byte[]) null, byteOrder0, 338);
      String string0 = tiffField0.getTagName();
      assertEquals(338, tiffField0.getTag());
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals("ExtraSamples", string0);
      assertEquals(338, tiffField0.getSortHint());
      assertEquals((-3355), tiffField0.getOffset());
      assertEquals((-943L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeShort0, 28, 28, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[64];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1745, 1792, fieldTypeByte0, 1745, 1792, byteArray0, byteOrder0, 1792);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1745, tiffField0.getTag());
      assertEquals(1792, tiffField0.getSortHint());
      assertEquals(1745L, tiffField0.getCount());
      assertEquals(1792, tiffField0.getOffset());
      assertEquals(1792, tiffField0.getDirectoryType());
      assertEquals(1745, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2040, 2040, fieldTypeFloat0, 2040, 2040, byteArray0, byteOrder0, 2040);
      tiffField0.dump();
      assertEquals(8160, tiffField0.getBytesLength());
      assertEquals(2040L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getTag());
      assertEquals(2040, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2049, 2049, fieldTypeDouble0, 2049, 2049, byteArray0, byteOrder0, 2049);
      tiffField0.dump();
      assertEquals(16392, tiffField0.getBytesLength());
      assertEquals(2049L, tiffField0.getCount());
      assertEquals(2049, tiffField0.getTag());
      assertEquals(2049, tiffField0.getSortHint());
      assertEquals(2049, tiffField0.getOffset());
      assertEquals(2049, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[242];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(65541, 37122, fieldTypeLong0, 37122, 65541, byteArray0, byteOrder0, 37122);
      String string0 = tiffField0.toString();
      assertEquals("65541 (0x10005: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (60) (37122 SLong)", string0);
      assertEquals(37122, tiffField0.getSortHint());
      assertEquals(37122, tiffField0.getDirectoryType());
      assertEquals(65541, tiffField0.getOffset());
      assertEquals(148488, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2050, 2050, fieldTypeLong0, 2050, 2050, byteArray0, byteOrder0, 2050);
      tiffField0.dump();
      assertEquals(2050, tiffField0.getSortHint());
      assertEquals(2050, tiffField0.getDirectoryType());
      assertEquals(2050, tiffField0.getTag());
      assertEquals(2050, tiffField0.getOffset());
      assertEquals(2050L, tiffField0.getCount());
      assertEquals(8200, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1509, 1509, fieldTypeShort0, 1509, 1509, byteArray0, byteOrder0, 1509);
      tiffField0.dump();
      assertEquals(1509, tiffField0.getOffset());
      assertEquals(3018, tiffField0.getBytesLength());
      assertEquals(1509L, tiffField0.getCount());
      assertEquals(1509, tiffField0.getTag());
      assertEquals(1509, tiffField0.getDirectoryType());
      assertEquals(1509, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[120];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2050, ",m<t>qJHnt=v");
      TiffField tiffField0 = new TiffField(2050, 2050, fieldTypeAscii0, 2050, 2050, byteArray0, byteOrder0, 2050);
      tiffField0.dump();
      assertEquals(2050, tiffField0.getOffset());
      assertEquals(2050L, tiffField0.getCount());
      assertEquals(2050, tiffField0.getTag());
      assertEquals(2050, tiffField0.getDirectoryType());
      assertEquals(2050, tiffField0.getSortHint());
      assertEquals(2050, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0.ASCII, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[74];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 878L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(878, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-766), (-1), fieldTypeFloat0, (-766), 0L, byteArray0, byteOrder0, 4);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-766), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-766), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-766L), tiffField0.getCount());
      assertEquals((-3064), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "CameraCalibration2");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 61, fieldTypeByte0, (-943L), 1436L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: CameraCalibration2", string0);
      assertEquals((-943L), tiffField0.getCount());
      assertEquals(1436, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeShort0, 48, 48, byteArray0, byteOrder0, 48);
      tiffField0.getFieldTypeName();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getTag());
      assertEquals(48, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(48, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeShort0, 28, (-1), byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      int int0 = tiffField0.getSortHint();
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(75, int0);
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals("75 (0x4b: Unknown Tag): ", string0);
      assertEquals(75, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1717, 1488, fieldTypeRational0, 1717, 1717, (byte[]) null, byteOrder0, 1488);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1717, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1717);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeRational0, (byte)75, (byte)75, byteArray0, byteOrder0, (byte)75);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(75L, tiffElement0.offset);
      assertEquals(75, tiffField0.getSortHint());
  }
}
