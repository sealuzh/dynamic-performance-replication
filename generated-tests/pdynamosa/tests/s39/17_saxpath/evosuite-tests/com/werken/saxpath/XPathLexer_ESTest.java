/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 03:04:53 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`_.>).r(R u48p\"");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("`", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("_.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@H\"");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("asx%!");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ek01cR-t4Z9EU=");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!ea/wf<<L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or");
      Token token0 = xPathLexer0.operatorName();
      assertNotNull(token0);
      assertEquals("or", token0.getTokenText());
      assertEquals(29, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K>>PUD");
      Token token0 = xPathLexer0.identifier();
      assertEquals("K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath(",\"n");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("K|5");
      String string0 = xPathLexer0.getXPath();
      assertEquals("K|5", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C");
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C");
      xPathLexer0.setXPath("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7)");
      int int0 = xPathLexer0.endPosition();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-597));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-597), int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Y3", token0.getTokenText());
      
      char char0 = xPathLexer0.LA(7);
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setPreviousToken((Token) null);
      assertNull(xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3iP|\"q$Vn1d0y0tX]");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(',');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('1');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3iP|\"q$Vn1d0y0tX]");
      boolean boolean0 = xPathLexer0.isIdentifierChar('<');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('1');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3iP|\"q$Vn1d0y0tX]");
      boolean boolean0 = xPathLexer0.isIdentifierChar('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume(0);
      assertNull(xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      char char0 = xPathLexer0.LA(7);
      assertEquals('q', char0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~Ac2${J,TnqC}DT>i?x");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ^ u6o,,T8mc$#E;p");
      xPathLexer0.consume((-1643));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ^ u6o,,T8mc$#E;p");
      xPathLexer0.consume((-2852));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-597));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("XR8K", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("^", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("or");
      Token token0 = xPathLexer0.or();
      assertNotNull(token0);
      assertEquals("or", token0.getTokenText());
      assertEquals(29, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xng_fpiTz?.OBX");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.pipe();
      xPathLexer0.star();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lTt@9\f*z");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("lTt", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ek01cR-t4Z9EU=");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("E", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("k01cR-t4Z9EU", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("[ ", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Me%ZMxhV]r");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("|", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Me", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3iP|\"q$Vn1d0y0tX]");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("3", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("iP", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|Me%ZMxhV]r");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("|", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Me", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".3", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".'d`Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("d`Z", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{p;-AgbX}T[", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zqU96>PlC $");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("zqU96", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("y", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("o", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals("m", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(31, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zv$4},&yp");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ^ u6o,,T8mc$#E;p");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("^", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("u6o", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("Y3", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.not();
      assertEquals("P", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.consume(7);
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("tX", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sW+/~ma`M+u5$J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("sW", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.not();
      assertEquals("e", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("rken.saxpath.Token", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zqU96>PlC $");
      Token token0 = xPathLexer0.comma();
      assertEquals("z", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("qU96", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.slashes();
      assertEquals("{", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("p", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xng_fpiTz?.OBX");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ng_fpiTz", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_l[4!e");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("l", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ek01cR-t4Z9EU=");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("k01cR-t4Z9EU", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z8N<@j]Mh~CID6Cc/S{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Z8N", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("@", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("j]Mh~CID6Cc/S{", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f^ba7h3z");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("b", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("a7", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("h3z", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(";", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("A", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("gbX", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f^ba7h3z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|ke%ZMxS{>r");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("|k", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("e", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2d`");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.star();
      assertEquals("{", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dollar();
      assertEquals(";", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("-", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("bX", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?aJO#M");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("?", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("aJO", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xng_fpiTz?.OBX");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dollar();
      assertEquals("g", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("_fpiTz", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(",X", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("R", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("^'", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("iP", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("|", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(4, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(",", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("XR8K", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_l[4!e");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("_l", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("[", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Y3iP", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W4v9VhS~Dk0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("W4v9VhS", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah.Token");
      xPathLexer0.setXPath("pfPV3c7t_|+S]D1z");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("pf", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("V3c7t_", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zqU96>PlC $");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("zq", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("U96", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lTt@9\f*z");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("}", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Tt", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("X", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("R8K", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yQQFU*apbn");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("QQFU", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3iP|\"q$Vn1d0y0tX]");
      Token token0 = xPathLexer0.plus();
      assertEquals("3", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("P", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xng_fpiTz?.OBX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("xng_fpiTz", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("?.", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("OBX", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.setXPath("Nd)dpQOjpG^LTy|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Nd", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g;L@RTi=#8v.zOWB>q");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("L", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(",", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume(2);
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("K", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JE's2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("JE", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I0~TZA/cA!D7n");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("I0", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bHM@qeRsz$W|bK");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("b", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("HM", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GP6]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("GP6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~Fv=*<>L8H/");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Fv", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ek01cR-t4Z9EU=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ek01cR-t4Z9EU", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E>.PED");
      Token token0 = xPathLexer0.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals(">.P", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CO,yA=E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("CO", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gZVv:qmlB~h=1=");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("Z", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("V", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("v", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(":q", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("B", token6.getTokenText());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~Ac2${J,TnqC}DT>i?x");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Ac2", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z8N<@j]Mh~p6Cc/S{");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?aJO#M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?aJO#M", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("aJO#M", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E>.PED");
      Token token0 = xPathLexer0.comma();
      assertEquals("E", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".PED", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("{p;-AgbX}T[");
      Token token0 = xPathLexer0.star();
      assertEquals("{", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("p", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(";-AgbX}T[", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":9QcwaD$B4Ly5$");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("9", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z8N<@j]Mh~p6Cc/S{");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("Z", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("8", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/-7/&7c(ju&hWYT");
      Token token0 = xPathLexer0.dollar();
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ^ u6o,,T8mc$#E;p");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("Q", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(" ", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("6", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7j5n*");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("Sts;`|n4mce:}1)rh");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Sts", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("`", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("4", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("3", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2s:L@");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P/1n*F2N{J");
      Token token0 = xPathLexer0.slashes();
      assertEquals("P/", token0.getTokenText());
      assertEquals(12, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("1", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.consume(7);
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T/m3>?WcU%v1uH[u-t");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("/", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2d`");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-^M+` x(T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+;e/F+i");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("*M[:c!_\tuldGSBY!T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")ovNvS;^PY%um1Nk");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("ovNvS;^PY%um1Nk", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",XR8K?^'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("XR8K", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";&3rWbAT=~D");
      Token token0 = xPathLexer0.not();
      assertEquals(";", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("&3rWbAT=~D", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|ke%ZMxS{>r");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("ke", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%ZMxS{>r", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Zv$4},&yp");
      xPathLexer0.consume(1);
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("vh#)CQ_1`rU1d!\"oR");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#)CQ_1`rU1d!\"oR", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y3iP|\"q@1d0y0tX\"]");
      xPathLexer0.dots();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!0a/6f}L");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(") (");
      Token token0 = xPathLexer0.star();
      assertEquals(")", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token2);
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/-7/&7c(ju&hWYT");
      xPathLexer0.consume((-676));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":<4_");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xng_fpiTz?.OBX");
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":=SQUXbV|<n");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals(":", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(21, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.not();
      assertEquals("|", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }
}
