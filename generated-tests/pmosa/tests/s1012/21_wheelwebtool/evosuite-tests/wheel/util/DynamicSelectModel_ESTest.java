/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 23:12:23 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.junit.runner.RunWith;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "PMk<A^\\";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("PMk<A^");
      dynamicSelectModel1.empty(dynamicSelectModel0);
      String string1 = "1'WZp#n,VZsoxWkOk)2";
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("i}$),MY _(I#GQD>aJ9");
      dynamicSelectModel0.validate();
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty((Object) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.translator("eO>i5(KP}&wj");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.label("");
      Component component0 = dynamicSelectModel5.getComponent();
      assertNull(component0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("TG");
      int int0 = 0;
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.reset();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("");
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("");
      dynamicSelectModel2.empty(dynamicSelectModel1);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("");
      dynamicSelectModel0.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = " evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel";
      dynamicSelectModel0.enumeration(" evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("");
      dynamicSelectModel0.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getValue((-2448));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "VYRe;";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("VYRe;");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("VYRe;");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.empty("VYRe;");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.value("VYRe;");
      dynamicSelectModel4.collection("\"#2`<wh9^].K*nA");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel2.value("VYRe;");
      dynamicSelectModel0.validate();
      dynamicSelectModel3.value("radio");
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel5.value("colgroup");
      String string1 = "ordinal()";
      // Undeclared exception!
      try { 
        dynamicSelectModel6.translateValue("ordinal()");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression \"#2`<wh9^].K*nA to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.ast.ThisValNode");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.translator("");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.enumeration("");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel5.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("]Q+W}?Mw4!?");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.translator("]Q+W}?Mw4!?");
      dynamicSelectModel2.getTopLevelComponent();
      dynamicSelectModel2.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel1.setComponent((Component) null);
      dynamicSelectModel2.setTopLevelComponent((StandaloneComponent) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression ]Q+W}?Mw4!?.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.value("or|B}Z8f");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("/>j");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression />j evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration(" evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("");
      dynamicSelectModel1.value("or|B}Z8f");
      dynamicSelectModel1.collection("/>j");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.label("/>j");
      dynamicSelectModel3.label("OHc-ju,");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression />j evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
