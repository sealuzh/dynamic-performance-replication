/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 14:36:39 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)31;
      byteArray0[4] = (byte)22;
      TiffField tiffField0 = new TiffField((byte)50, 65109, fieldTypeRational0, 1418, (-2390L), byteArray0, byteOrder0, (byte)29);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(29, tiffField0.getSortHint());
      assertEquals((-2390), tiffField0.getOffset());
      assertEquals(11344, tiffField0.getBytesLength());
      assertEquals(65109, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)22;
      TiffField tiffField0 = new TiffField((byte)50, 65109, fieldTypeRational0, 1418, (-2390L), byteArray0, byteOrder0, (byte)29);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2390), tiffField0.getOffset());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(11344, tiffField0.getBytesLength());
      assertEquals(65109, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeShort0, 2, (-217L), byteArray0, (ByteOrder) null, 3473);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3473, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-217), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(27, (-1410), fieldTypeRational0, 2103657451, 320, byteArray0, (ByteOrder) null, 34);
      String string0 = tiffField0.toString();
      assertEquals((-1410), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (2103657451 Rational)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      tiffField0.dump();
      assertEquals(269, tiffField0.getOffset());
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals(269, tiffField0.getTag());
      assertEquals(269, tiffField0.getSortHint());
      assertEquals(269, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeRational0, 33, 33, byteArray0, (ByteOrder) null, 33);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(264, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertEquals(33, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 0L, (-2712L), byteArray0, (ByteOrder) null, 0);
      tiffField0.getValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2712), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-348), fieldTypeFloat0, 54, (-773L), (byte[]) null, byteOrder0, 54);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-348), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(54, tiffField0.getSortHint());
      assertEquals((-773), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeShort0, 330, 31, byteArray0, (ByteOrder) null, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
      assertEquals(31, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1294, (-2340), fieldTypeShort0, 1294, 1294, byteArray0, byteOrder0, 533);
      int int0 = tiffField0.getTag();
      assertEquals((-2340), tiffField0.getDirectoryType());
      assertEquals(1294, int0);
      assertEquals(533, tiffField0.getSortHint());
      assertEquals(1294, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2398), (-2398), (FieldType) null, 1L, 669L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-2398), tiffField0.getDirectoryType());
      assertEquals(669, tiffField0.getOffset());
      assertEquals((-2398), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-48);
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeAscii0, 1380L, (-3678L), byteArray0, (ByteOrder) null, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(1380, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-3678), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 0L, (-2684L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2684), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1380L, (-2475L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, int0);
      assertEquals((-2475), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeLong0.SBYTE, 2147483647L, 0L, byteArray0, byteOrder0, 3519);
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(3519, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 4L, (-1110L), byteArray0, byteOrder0, (-2109));
      int int0 = tiffField0.getOffset();
      assertEquals((-2109), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1110), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      byteArray0[1] = (byte)50;
      TiffField tiffField0 = new TiffField(2, (byte)50, fieldTypeShort0, 4L, 3228L, byteArray0, (ByteOrder) null, (-2109));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12800, int0);
      assertEquals(2, tiffField0.getTag());
      assertEquals(3228, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2109), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-37);
      TiffField tiffField0 = new TiffField(2966, (byte) (-108), fieldTypeLong0, 1728L, (byte) (-108), byteArray0, (ByteOrder) null, 2140709251);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2140709251, tiffField0.getSortHint());
      assertEquals(6912, tiffField0.getBytesLength());
      assertEquals(2966, tiffField0.getTag());
      assertEquals((-108), tiffField0.getDirectoryType());
      assertEquals((-108), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 2145801985);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2145801985, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)50;
      TiffField tiffField0 = new TiffField(29, 34, fieldTypeShort0, 1L, (-32L), byteArray0, (ByteOrder) null, (-146));
      tiffField0.getIntValue();
      assertEquals((-32), tiffField0.getOffset());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals((-146), tiffField0.getSortHint());
      assertEquals(29, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-69);
      TiffField tiffField0 = new TiffField(30, 399, fieldTypeShort0, 1L, (-16169288632L), byteArray0, byteOrder0, (byte)126);
      tiffField0.getIntValue();
      assertEquals(1010580552, tiffField0.getOffset());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(30, tiffField0.getTag());
      assertEquals(399, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)71, 2824, fieldTypeRational0, 50, (byte)71, byteArray0, (ByteOrder) null, 4210);
      tiffField0.getFieldTypeName();
      assertEquals(2824, tiffField0.getDirectoryType());
      assertEquals(4210, tiffField0.getSortHint());
      assertEquals(71, tiffField0.getTag());
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1566), "");
      TiffField tiffField0 = new TiffField(3642, (-1529), fieldTypeRational0, (-61), 505, byteArray0, byteOrder0, 22);
      tiffField0.getFieldTypeName();
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(3642, tiffField0.getTag());
      assertEquals((-1529), tiffField0.getDirectoryType());
      assertEquals(505, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "): ");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeDouble0, (-1), 2367L, byteArray0, (ByteOrder) null, 34675);
      tiffField0.getFieldType();
      assertEquals(2367, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-981), "P=*U");
      TiffField tiffField0 = new TiffField(34909, (-981), fieldTypeLong0, 80L, (-1L), byteArray0, (ByteOrder) null, 2740);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2740, tiffField0.getSortHint());
      assertEquals((-981), tiffField0.getDirectoryType());
      assertEquals(34909, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeShort0, 2067L, (-15), byteArray0, byteOrder0, (-10));
      tiffField0.getFieldType();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals((-10), tiffField0.getSortHint());
      assertEquals((-15), tiffField0.getTag());
      assertEquals((-15), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField((-3508), 1, fieldTypeShort0, 1, (-17179869184L), byteArray0, (ByteOrder) null, (-2326));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2326), tiffField0.getSortHint());
      assertEquals((-3508), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)31;
      TiffField tiffField0 = new TiffField(2206, 2206, fieldTypeShort0, 1L, 2630L, byteArray0, (ByteOrder) null, (byte)14);
      tiffField0.getDoubleValue();
      assertEquals(2206, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2630, tiffField0.getOffset());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(2206, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      byteArray0[4] = (byte) (-69);
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)25);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "IWyiWGP>N))XE?I");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0, 0L, (-805L), byteArray0, byteOrder0, 65000);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(65000, tiffField0.getSortHint());
      assertEquals((-805), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1738), 0, fieldTypeLong0, 320L, 0L, byteArray0, (ByteOrder) null, 67);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1738), tiffField0.getTag());
      assertEquals(67, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, (String) null);
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1265), (-2963), fieldTypeRational0, 2602, (-1552L), byteArray0, (ByteOrder) null, 85);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2963), int0);
      assertEquals(85, tiffField0.getSortHint());
      assertEquals((-1265), tiffField0.getTag());
      assertEquals((-1552), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, 2966);
      tiffField0.getCount();
      assertEquals(2966, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2021161079), 244, fieldTypeRational0, (-2021161079), 244, byteArray0, byteOrder0, (-2021161079));
      long long0 = tiffField0.getCount();
      assertEquals(244, tiffField0.getOffset());
      assertEquals((-2021161079), tiffField0.getSortHint());
      assertEquals(244, tiffField0.getDirectoryType());
      assertEquals((-2021161079), tiffField0.getTag());
      assertEquals((-2021161079L), long0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(244, 212, fieldTypeRational0, 1874L, 212, byteArray0, (ByteOrder) null, 244);
      int int0 = tiffField0.getBytesLength();
      assertEquals(14992, int0);
      assertEquals(244, tiffField0.getTag());
      assertEquals(212, tiffField0.getOffset());
      assertEquals(244, tiffField0.getSortHint());
      assertEquals(212, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3067, (String) null);
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1717986917), (-1691), fieldTypeByte0, (-3507L), (-3507L), byteArray0, byteOrder0, 3067);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-3507), int0);
      assertEquals((-3507), tiffField0.getOffset());
      assertEquals((-1691), tiffField0.getDirectoryType());
      assertEquals(3067, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2375, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2146813606, 0, fieldTypeRational0, 4L, (byte)21, byteArray0, (ByteOrder) null, (byte)22);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2146813606, tiffField0.getTag());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeShort0, 4056L, (byte)0, byteArray0, byteOrder0, 50);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(8112, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, 2966);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2966, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 320, 320, (byte[]) null, (ByteOrder) null, 1900);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeFloat0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(153);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(153, 50, (FieldType) null, 50, 1L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(146, 146, fieldTypeShort0, 146, 146, (byte[]) null, byteOrder0, 146);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[163];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-5464), (-5464), fieldTypeRational0, (-5464), (-5464), byteArray0, byteOrder0, (-5464));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(28, (-487), fieldTypeRational0, (-1L), (-1L), byteArray0, (ByteOrder) null, 28);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(233, 233, (FieldType) null, 233, 233, byteArray0, byteOrder0, 233);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2107, 2107, fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, 2107);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, (byte[]) null, (ByteOrder) null, 4);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-669), (-669), fieldTypeRational0, (-669), (-669), byteArray0, (ByteOrder) null, (-669));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 1L, 320, byteArray0, (ByteOrder) null, 320);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(985, 985, fieldTypeShort0, 985, 985, (byte[]) null, (ByteOrder) null, 985);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(985, 985, fieldTypeShort0, 985, 985, (byte[]) null, (ByteOrder) null, 985);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((-700), (-700), fieldTypeShort0, (-700), (-700), byteArray0, (ByteOrder) null, (-700));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40092, 2372, fieldTypeRational0, 1551, 40092, byteArray0, (ByteOrder) null, (-120));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(373, 373, fieldTypeRational0, 373, 373, (byte[]) null, (ByteOrder) null, 373);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2985), (-2985), fieldTypeRational0, (-2985), (-2985), byteArray0, (ByteOrder) null, (-2985));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 4L, byteArray0, (ByteOrder) null, 2636);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, (-1291));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 320, 320, (byte[]) null, (ByteOrder) null, 320);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[90];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2146969526, 2146969526, fieldTypeRational0, 2146969526, 2146969526, byteArray0, (ByteOrder) null, 2146969526);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 1L, 320, byteArray0, (ByteOrder) null, 320);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[76];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 2496, (FieldType) null, (-1051), (-1051), byteArray0, byteOrder0, 2496);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(37510, (-1), fieldTypeFloat0, 255L, 1L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(4405, 4405, fieldTypeRational0, 4405, 4405, (byte[]) null, (ByteOrder) null, 4405);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((-1803), (-1803), fieldTypeShort0, (-1803), (-1803), byteArray0, (ByteOrder) null, (-1803));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 1L, 320, byteArray0, (ByteOrder) null, 320);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 320, 320, (byte[]) null, (ByteOrder) null, 320);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-1140), (-1140), fieldTypeShort0, (-1140), 4704L, byteArray0, (ByteOrder) null, (-1140));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(50735, 50735, fieldTypeShort0, (-167L), (-167L), byteArray0, (ByteOrder) null, 50735);
      MockFile mockFile0 = new MockFile("%{o}Z2e>jGF1)\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "%{o}Z2e>jGF1)\"");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 1L, 320, byteArray0, (ByteOrder) null, 320);
      MockFile mockFile0 = new MockFile("PNUdE-7|I");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "PNUdE-7|I");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1817), (-1817), fieldTypeRational0, (-1817), (-1817), byteArray0, (ByteOrder) null, (-1817));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(350, 65535, fieldTypeRational0, 1L, 65535, byteArray0, (ByteOrder) null, 65535);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(244, 212, fieldTypeRational0, 1874L, 212, byteArray0, (ByteOrder) null, 244);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(244, (String) null);
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2021161079), 244, fieldTypeRational0, (-2021161079), 244, byteArray0, byteOrder0, (-2021161079));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(244, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(244, tiffField0.getOffset());
      assertEquals((-2021161079), tiffField0.getSortHint());
      assertEquals((-2021161079), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)100, 2142074369, fieldTypeByte0, (byte)50, 0L, byteArray0, (ByteOrder) null, 2142074369);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(100, tiffField0.getTag());
      assertEquals(2142074369, tiffField0.getDirectoryType());
      assertEquals(2142074369, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, (byte)35);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6334, 50, fieldTypeByte0, 6334, 50, (byte[]) null, byteOrder0, 6334);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 33, (FieldType) null, 4132, 2690, byteArray0, byteOrder0, (-889));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(2690, tiffField0.getOffset());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals((-889), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, (String) null);
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-2963), 50, fieldTypeRational0, 153, 874L, byteArray0, (ByteOrder) null, 12);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(874, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals((-2963), tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(681, 681, fieldTypeRational0, 681, 681, byteArray0, (ByteOrder) null, 681);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(349, (-6181), fieldTypeRational0, (-6181), (-6181), byteArray0, (ByteOrder) null, (-6181));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 153, fieldTypeLong0, (byte)0, 153, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(153, int0);
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 153, fieldTypeLong0, (byte)0, 153, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(153, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(153, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 266, fieldTypeDouble0, 266, 0, byteArray0, byteOrder0, (-462));
      long long0 = tiffField0.getCount();
      assertEquals((-462), tiffField0.getSortHint());
      assertEquals(266L, long0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(266, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(26, tiffField0.getOffset());
      assertEquals("26 (0x1a: Unknown Tag): ", string0);
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[51];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, 18, byteArray0, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[53];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, 4, 4, byteArray0, (ByteOrder) null, 4);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@188ddfdc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[177];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeDouble0, 66, 66, byteArray0, byteOrder0, 66);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(66L, tiffField0.getCount());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(66, tiffField0.getOffset());
      assertEquals(22, doubleArray0.length);
      assertEquals(66, tiffField0.getTag());
      assertEquals(66, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeFloat0, 54, 54, byteArray0, byteOrder0, 54);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(54L, tiffField0.getCount());
      assertEquals(36, doubleArray0.length);
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getSortHint());
      assertEquals(54, tiffField0.getTag());
      assertEquals(54, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[94];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0, 26, 26, byteArray0, (ByteOrder) null, 26);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26L, tiffField0.getCount());
      assertEquals(23, doubleArray0.length);
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(26L, tiffField0.getCount());
      assertEquals(19, doubleArray0.length);
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(505, 505, fieldTypeShort0.SRATIONAL, 505, 505, byteArray0, byteOrder0, 505);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(505, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(4040, tiffField0.getBytesLength());
      assertEquals(505, tiffField0.getTag());
      assertEquals(505, tiffField0.getSortHint());
      assertEquals(505L, tiffField0.getCount());
      assertEquals(505, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(608, 608, fieldTypeByte0, 608, 608, byteArray0, (ByteOrder) null, 608);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@94b3afd for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6, byteArray0, byteOrder0, 6);
      tiffField0.getIntArrayValue();
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(6L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(26, tiffField0.getOffset());
      assertEquals(19, intArray0.length);
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26L, tiffField0.getCount());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      tiffField0.getIntArrayValue();
      assertEquals(269, tiffField0.getTag());
      assertEquals(269L, tiffField0.getCount());
      assertEquals(269, tiffField0.getDirectoryType());
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals(269, tiffField0.getSortHint());
      assertEquals(269, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeByte0, 22, 22, byteArray0, (ByteOrder) null, 22);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@12167d52 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeByte0.ASCII, 0L, 2147483647L, byteArray0, (ByteOrder) null, (-1286));
      String string0 = tiffField0.getStringValue();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-1286), tiffField0.getSortHint());
      assertEquals(22, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeByte0, 22, 22, byteArray0, (ByteOrder) null, 22);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@5b946b95
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[51];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      String string0 = tiffField0.getTagName();
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x1a)", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(320, 320, fieldTypeRational0, 320, 320, byteArray0, (ByteOrder) null, 320);
      String string0 = tiffField0.getTagName();
      assertEquals(320, tiffField0.getDirectoryType());
      assertEquals("ColorMap", string0);
      assertEquals(320, tiffField0.getOffset());
      assertEquals(320, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeRational0, 255, 255, byteArray0, (ByteOrder) null, 255);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeFloat0, 140L, 1451, byteArray0, byteOrder0, 4146);
      String string0 = tiffField0.toString();
      assertEquals(1451, tiffField0.getOffset());
      assertEquals(4146, tiffField0.getSortHint());
      assertEquals(1451, tiffField0.getDirectoryType());
      assertEquals("1451 (0x5ab: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (140 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(34859, 34859, fieldTypeByte0, 34859, 34859, byteArray0, byteOrder0, 34859);
      String string0 = tiffField0.toString();
      assertEquals(34859, tiffField0.getOffset());
      assertEquals("34859 (0x882b: Unknown Tag): 0, 0 (34859 Byte)", string0);
      assertEquals(34859, tiffField0.getBytesLength());
      assertEquals(34859, tiffField0.getDirectoryType());
      assertEquals(34859, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(34859, 34859, fieldTypeByte0, 34859, 34859, byteArray0, byteOrder0, 34859);
      String string0 = tiffField0.toString();
      assertEquals(34859, tiffField0.getBytesLength());
      assertEquals(34859, tiffField0.getDirectoryType());
      assertEquals(34859, tiffField0.getSortHint());
      assertEquals("34859 (0x882b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (257) (34859 Byte)", string0);
      assertEquals(34859, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65535 Double)", string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeDouble0, 66, 66, byteArray0, byteOrder0, 66);
      String string0 = tiffField0.toString();
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getOffset());
      assertEquals("66 (0x42: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (66 Double)", string0);
      assertEquals(66, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[334];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65143, 65143, fieldTypeLong0, 65143, 65143, byteArray0, byteOrder0, 65143);
      String string0 = tiffField0.toString();
      assertEquals("65143 (0xfe77: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (83) (65143 Long)", string0);
      assertEquals(65143, tiffField0.getSortHint());
      assertEquals(65143, tiffField0.getDirectoryType());
      assertEquals(65143, tiffField0.getOffset());
      assertEquals(260572, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[166];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2319, 2319, fieldTypeLong0, 2319, 2319, byteArray0, byteOrder0, 2319);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2319L, tiffField0.getCount());
      assertEquals(2319, tiffField0.getSortHint());
      assertEquals(2319, tiffField0.getTag());
      assertEquals(9276, tiffField0.getBytesLength());
      assertEquals(2319, tiffField0.getOffset());
      assertEquals(2319, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[147];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeFloat0, 54, 54, byteArray0, byteOrder0, 54);
      String string0 = tiffField0.getValueDescription();
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals(54L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(54, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(54, tiffField0.getOffset());
      assertEquals(54, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(35, "~E");
      TiffField tiffField0 = new TiffField(2592, 2592, fieldTypeShort0, 2592, 35, byteArray0, byteOrder0, 2592);
      String string0 = tiffField0.toString();
      assertEquals(2592, tiffField0.getSortHint());
      assertEquals(5184, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getOffset());
      assertEquals("2592 (0xa20: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (2592 ~E)", string0);
      assertEquals(2592, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(41992, 1, fieldTypeAscii0, 41992, 54L, byteArray0, (ByteOrder) null, 41992);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(41992, tiffField0.getTag());
      assertEquals(41992, tiffField0.getBytesLength());
      assertEquals(54, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(41992, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 26, 26, byteArray0, (ByteOrder) null, 26);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(26, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(26L, tiffField0.getCount());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(4424, 4424, fieldTypeAscii0, 1L, 4424, byteArray0, (ByteOrder) null, 4424);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4424, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4424, tiffField0.getSortHint());
      assertEquals(4424, tiffField0.getTag());
      assertEquals(4424, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, (ByteOrder) null, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1360L, 50, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(45, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1360, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1360L, 50, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(45, 43);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertEquals(1360L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2694), (-2694), fieldTypeByte0, (-1555L), (-518L), byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-518), tiffField0.getOffset());
      assertEquals((-2694), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2694), tiffField0.getDirectoryType());
      assertEquals((-1555), tiffField0.getBytesLength());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      tiffField0.getFieldTypeName();
      assertEquals(269, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(269, tiffField0.getOffset());
      assertEquals(269, tiffField0.getDirectoryType());
      assertEquals(269, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField(2, (byte)50, fieldTypeShort0, (byte)0, 3228L, byteArray0, (ByteOrder) null, (-2109));
      int int0 = tiffField0.getSortHint();
      assertEquals(2, tiffField0.getTag());
      assertEquals(3228, tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2109), int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (-1928L), (-1928L), byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4484, 4484, fieldTypeRational0, 1L, 4484, byteArray0, (ByteOrder) null, 4484);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeRational0, 269, 269, byteArray0, (ByteOrder) null, 269);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(269, tiffField0.getSortHint());
      assertEquals(269, tiffField0.getDirectoryType());
      assertEquals(269, tiffField0.getTag());
      assertEquals(269L, tiffElement0.offset);
  }
}
