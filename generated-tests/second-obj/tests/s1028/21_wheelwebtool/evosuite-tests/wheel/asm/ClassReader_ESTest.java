/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:33:55 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getClassName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.getAccess();
      assertEquals(10, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = classReader0.readByte(8);
      assertEquals(10, classReader0.header);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassReader classReader0 = new ClassReader(byteArray0);
      // Undeclared exception!
      try { 
        classReader0.getItem((-2036));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2036
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ClassReader classReader0 = new ClassReader(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      int int0 = Member.DECLARED;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.readShort((byte)0);
      Label[] labelArray0 = new Label[2];
      classReader0.readLabel((byte)0, labelArray0);
      classReader0.readLabel((byte)0, labelArray0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 389);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      char[] charArray0 = new char[9];
      charArray0[0] = ')';
      classReader1.getSuperName();
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 1706);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      char[] charArray0 = new char[9];
      char char0 = ')';
      charArray0[0] = ')';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      String string0 = "wheel.asm.Type";
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader1.getInterfaces();
      ClassReader classReader3 = new ClassReader(classReader2.b);
      ClassReader classReader4 = new ClassReader(classReader3.b);
      String string1 = File.separator;
      ClassWriter classWriter0 = new ClassWriter(classReader1, 2);
      ClassReader classReader5 = null;
      try {
        classReader5 = new ClassReader(">:NcbU?6V{+wJ:v");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader1.accept((ClassVisitor) classAdapter0, 1);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readClass(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      char[] charArray0 = new char[0];
      String string0 = File.pathSeparator;
      classReader0.readShort(24);
      int int0 = 298;
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 298, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17435
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(3);
      classReader0.getInterfaces();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 2);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      ClassWriter classWriter1 = new ClassWriter((-2512));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u9)Yl,,%!");
      classReader0.getSuperName();
      classReader1.getAccess();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = new ClassWriter(3);
      classReader0.getInterfaces();
      FieldWriter fieldWriter0 = classWriter0.firstField;
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      Attribute[] attributeArray0 = null;
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = '3';
      charArray0[2] = 'y';
      charArray0[3] = '0';
      charArray0[4] = '[';
      charArray0[5] = 'f';
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, 132);
      charArray0[6] = 'J';
      charArray0[7] = 'm';
      charArray0[8] = '=';
      classReader1.readConst(1, charArray0);
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, classWriter0.COMPUTE_FRAMES);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      int int0 = (-2512);
      ClassWriter classWriter1 = new ClassWriter(int0);
      classReader0.getSuperName();
      int int1 = 293;
      classReader1.readByte(int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Type");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.getInterfaces();
      ClassReader classReader2 = new ClassReader(classReader1.b);
      ClassReader classReader3 = new ClassReader(classReader1.b);
      classReader1.getSuperName();
      classWriter0.visitSource("wheel.asm.Type", "wheel.asm.Type");
      classReader2.accept((ClassVisitor) classWriter0, 158);
      classReader2.getSuperName();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Type");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassReader classReader2 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader1, 1706);
      classReader1.accept((ClassVisitor) classWriter0, 158);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassReader classReader1 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.getInterfaces();
      ClassReader classReader2 = new ClassReader(classReader1.b);
      classReader2.accept((ClassVisitor) classWriter0, 8);
      ClassReader classReader3 = new ClassReader(classReader1.b);
      char[] charArray0 = new char[22];
      charArray0[0] = 'N';
      charArray0[1] = 't';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = '^';
      charArray0[3] = 'V';
      charArray0[4] = 'O';
      charArray0[5] = 'K';
      charArray0[6] = 'W';
      charArray0[7] = 'Q';
      classWriter0.newUTF8("LocalVariableTypeTable");
      charArray0[8] = 'W';
      classReader3.readConst(298, charArray0);
      classReader1.getSuperName();
      classReader3.readLong(1);
      classReader3.readInt((-1370));
  }
}
