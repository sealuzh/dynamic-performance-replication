/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:18:43 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CodingErrorAction;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[12];
      charArray0[2] = '4';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[12];
      charArray0[2] = '4';
      charArray0[1] = '\u008F';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      char[] charArray0 = new char[12];
      charArray0[2] = '4';
      charArray0[1] = '\u008F';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 2, 46, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[12];
      charArray0[2] = '4';
      charArray0[1] = '\u008F';
      int int0 = IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      assertEquals(2, int0);
      
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray1 = new char[0];
      int int2 = IOUtils.decodeUTF8(byteArray0, (-1), (-2176), charArray1);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("%/c");
      assertArrayEquals(new byte[] {(byte) (-3)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("utf8 decode error, ");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.replaceChars, 0, 0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.properties", (-4264), 4);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte byte0 = (byte)121;
      byte[] byteArray0 = IOUtils.decodeBase64("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)121, (byte)121, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 121
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('B');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)12, (int) (byte)12, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = IOUtils.stringSize(2334);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.close((Closeable) null);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = IOUtils.stringSize(1000000000L);
      assertEquals(10, int0);
      
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("<~T&,n|ElbP~z{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("b1");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-4283), (-4283));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8567
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Charset.defaultCharset();
      char[] charArray0 = new char[1];
      IOUtils.getChars((long) 1, 1, charArray0);
      assertArrayEquals(new char[] {'\u0004'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils.isIdent('\u00CF');
      IOUtils.getStringProperty("co.alibaba.fastjson.util.IOUtils");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 17;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars(17, 17, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils.firstIdentifier('\u00FE');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      assertEquals("\uFFFD", uTF8Decoder0.replacement());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.decodeBase64(".Q<=");
      assertArrayEquals(new byte[] {(byte) (-1)}, byteArray0);
      
      stringWriter0.write(55);
      stringWriter0.append('v');
      char[] charArray0 = new char[9];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = 'v';
      charArray0[1] = '}';
      charArray0[4] = '}';
      charArray0[5] = 'v';
      boolean boolean0 = IOUtils.isValidJsonpQueryParam(".Q<=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-4283), (-4283));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8567
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("A", (-4281), (-4281));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('$');
      assertFalse(boolean0);
      
      StringReader stringReader0 = new StringReader("w9uO>F%bVs06");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      String string0 = IOUtils.readAll(bufferedReader0);
      assertEquals("w9uO>F%bVs06", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '_';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-912L), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.IOUtils", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      Object object0 = new Object();
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      byte[] byteArray2 = IOUtils.decodeBase64(";w>o?qaX%L");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray2);
      
      int int0 = IOUtils.stringSize((-1911L));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)16, (int) (byte)16);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 60, (-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 57
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)10, (int) (byte)10);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(".gO#ylOPJ{sbam(C}U", (int) (byte)10, 42);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOUtils.stringSize(3);
      IOUtils.isValidJsonpQueryParam("");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("encodeUTF8 error", 15, 23);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((String) null, 3968, (-3111));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[12];
      charArray0[2] = '4';
      charArray0[11] = '\u008F';
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.getStringProperty("fastjson.properties");
      IOUtils.firstIdentifier('\u008F');
      IOUtils.getChars(1, 1, charArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = '[';
      charArray0[1] = 'A';
      charArray0[3] = 'A';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2147237121), (int) 'A', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, (int) (byte)10, (int) (byte)10);
      IOUtils.firstIdentifier('L');
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 21, (int) (byte)10);
      IOUtils.isValidJsonpQueryParam("");
      // Undeclared exception!
      try { 
        IOUtils.getChars((int) (byte)10, 1, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      iOUtils0.UTF8.encode("fastjson.properties");
      IOUtils.loadPropertiesFromFile();
      IOUtils.getChars((byte) (-97), 82, iOUtils0.replaceChars);
      PipedReader pipedReader0 = new PipedReader();
      IOUtils.getStringProperty("fastjson.compatibleWithFieldName");
      boolean boolean0 = IOUtils.firstIdentifier('4');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U&TF-8");
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("U&TF-8");
      char[] charArray0 = new char[1];
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHJAVABEAN;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("vsBQo}hT$9-4AaXK7");
      char[] charArray0 = new char[5];
      charArray0[1] = ']';
      charArray0[2] = ']';
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_doubleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.getChars((-13), 22, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      charArray0[2] = '\u008F';
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = IOUtils.decodeBase64("g");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, '\u008F', byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.ASCII_CHARS);
      String string0 = IOUtils.readAll(charArrayReader0);
      assertEquals("0001020304\u0004\u0004060\u0004\u00018090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F\u0004021222324252627\u0004\u0001292A2B2C2D2E2F", string0);
      
      IOUtils.decodeBase64("000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F");
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      boolean boolean0 = IOUtils.isIdent('8');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("n=_~vSZ");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      assertEquals(7, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.stringSize((long) (byte)10);
      assertEquals(2, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 21, (int) (byte)10);
      assertArrayEquals(new byte[] {(byte) (-74), (byte)17, (byte)98, (byte)122, (byte)87, (byte)77, (byte)106}, byteArray0);
      
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("NJh:BW7suh=v8OYZB");
      StringWriter stringWriter0 = new StringWriter();
      IOUtils.stringSize((-614L));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IOUtils.decodeBase64("`GiFj gDeJ6/x>@._M", 1, 1);
      String string0 = IOUtils.getStringProperty("%,/j{oj@");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOUtils.decodeBase64("NJh:BW7suh=v8OYZB");
      StringWriter stringWriter0 = new StringWriter();
      IOUtils.stringSize((-614L));
      IOUtils.close(stringWriter0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("com.alibaba.fastjson.util.UTF8Decoder");
      Charset charset1 = uTF8Decoder0.charset();
      CharBuffer charBuffer0 = charset1.decode(byteBuffer0);
      charset0.encode(charBuffer0);
      String string0 = "agi9Bm}6q";
      ByteBuffer byteBuffer1 = charset1.encode("agi9Bm}6q");
      charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars(1000000000L, 4557, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("fastjson.properties");
      IOUtils.getChars((byte)20, (int) (byte)20, iOUtils0.replaceChars);
      // Undeclared exception!
      try { 
        IOUtils.getChars(1044, 25, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 24
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4V78}dSF9*O");
      IOUtils.firstIdentifier('1');
      IOUtils.firstIdentifier('1');
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-3570L), 49, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[10];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[6] = '~';
      int int0 = ObjectStreamConstants.baseWireHandle;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-32);
      byteArray0[0] = (byte) (-32);
      IOUtils.getChars((int) (byte) (-32), 5, charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-2760));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      char[] charArray1 = new char[6];
      charArray1[5] = 'C';
      charArray1[2] = '\u0000';
      int int0 = (-860);
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483652L, (-860), charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -861
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("NJh:BW7suh=v8OYZB");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      IOUtils.close(stringWriter1);
      int int0 = 5;
      char[] charArray0 = new char[4];
      IOUtils.decodeUTF8(byteArray0, 5, 5, charArray0);
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64("");
      int int1 = 668;
      // Undeclared exception!
      try { 
        IOUtils.getChars(95, 256, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 255
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IOUtils.isIdent('\u00CF');
      IOUtils.stringSize(2147483647L);
      char[] charArray0 = new char[3];
      String string0 = "co.alibaba.fastjson.util.IOUtils";
      IOUtils.decodeBase64("co.alibaba.fastjson.util.IOUtils", 10, 10);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 10, 3047, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3046
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Charset.defaultCharset();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset.defaultCharset();
      IOUtils.decodeBase64(".'SQ<=");
      String string0 = IOUtils.getStringProperty("OH:/");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IOUtils.stringSize(2147483635L);
      byte[] byteArray0 = IOUtils.decodeBase64("gJ%:}E/NK[h5qsPZ");
      char[] charArray0 = new char[15];
      IOUtils.decodeUTF8(byteArray0, 10, 363, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 26, 363, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("NJh:BW7suh=v8OYZB");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.close();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter2.write("NJh:BW7suh=v8OYZB");
      IOUtils.close(stringWriter1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[4];
      int int0 = 3;
      stringWriter2.write("NJh:BW7suh=v8OYZB", 5, 3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NJh:BW7suh=v8OYZB");
      IOUtils.decodeUTF8(byteArray0, 3, 3, charArray0);
      stringWriter1.toString();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 1624);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("U&TF-8");
      char[] charArray0 = new char[7];
      charArray0[1] = 'N';
      charArray0[3] = '6';
      int int1 = 2876;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, 2876, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IOUtils.isIdent('\u010A');
      IOUtils iOUtils0 = new IOUtils();
      Charset charset0 = IOUtils.UTF8;
      charset0.encode("fastjson.compatibleWithJavaBean");
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = '\u010A';
      // Undeclared exception!
      try { 
        IOUtils.getChars(3641, 91, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 90
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("vjb2x]%#nSyo_%N$");
      char[] charArray0 = new char[8];
      charArray0[1] = 'N';
      charArray0[3] = '6';
      IOUtils.decodeUTF8(byteArray0, 1, 2876, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 1, 2876);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2876
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IOUtils.firstIdentifier('\u0104');
      char[] charArray0 = new char[7];
      charArray0[0] = '\u0104';
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      int int0 = ObjectStreamConstants.baseWireHandle;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", 8257536, 363);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
