/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 21:00:19 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-34);
      byteArray0[4] = (byte)67;
      TiffField tiffField0 = new TiffField(1425, (-1620), fieldTypeRational0, 3, 1425, byteArray0, byteOrder0, (byte) (-107));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3, int0);
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(1425, tiffField0.getOffset());
      assertEquals((-1620), tiffField0.getDirectoryType());
      assertEquals(1425, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)67;
      TiffField tiffField0 = new TiffField(1425, (-1620), fieldTypeRational0, 3, 1425, byteArray0, byteOrder0, (byte) (-107));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1425, tiffField0.getTag());
      assertEquals((-1620), tiffField0.getDirectoryType());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1425, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(522, tiffField0.getTag());
      assertEquals(522, tiffField0.getDirectoryType());
      assertEquals((-1153), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 273, 273, byteArray0, byteOrder0, 273);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(273, tiffField0.getOffset());
      assertEquals(273, tagInfo0.tag);
      assertEquals(273, tiffField0.getTag());
      assertEquals(273, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(836, "JPEGInterchangeFormat");
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 836, fieldTypeFloat0, 0L, (-1731L), byteArray0, byteOrder0, 1787);
      int int0 = tiffField0.getTag();
      assertEquals(836, tiffField0.getDirectoryType());
      assertEquals((-1731), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1787, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;X3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1153), (-1153), fieldTypeDouble0, 0, (-1933L), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals((-1153), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1153), int0);
      assertEquals((-1933), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50719, "Expected String value(");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-114);
      TiffField tiffField0 = new TiffField(50719, 50719, fieldTypeAscii0, 3721L, (-963L), byteArray0, byteOrder0, 33448);
      String string0 = tiffField0.getStringValue();
      assertEquals(33448, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50719, tiffField0.getDirectoryType());
      assertEquals((-963), tiffField0.getOffset());
      assertEquals(50719, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2, 2281, fieldTypeDouble0, 2281, 50, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2281, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3226), "Expected String value(");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3226), 65535, fieldTypeAscii0, 65535, (-3226), byteArray0, byteOrder0, (-1462));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1462), int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3226), tiffField0.getTag());
      assertEquals((-3226), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(797, 43, fieldTypeByte0, 43, 43, byteArray0, (ByteOrder) null, 50709);
      int int0 = tiffField0.getOffset();
      assertEquals(50709, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(797, tiffField0.getTag());
      assertEquals(43, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3201), "Expected String value(");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2965, 2965, fieldTypeAscii0, 2965, (-3201), byteArray0, byteOrder0, 16);
      int int0 = tiffField0.getOffset();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(2965, tiffField0.getDirectoryType());
      assertEquals(2965, tiffField0.getTag());
      assertEquals((-3201), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1425, 1425, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).RATIONAL).SHORT, 1425, (-1620), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1425, tiffField0.getDirectoryType());
      assertEquals(1425, tiffField0.getTag());
      assertEquals(256, int0);
      assertEquals((-1620), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(53, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(24, 419, fieldTypeLong0, 1L, 419, byteArray0, byteOrder0, (byte)30);
      tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getTag());
      assertEquals(419, tiffField0.getDirectoryType());
      assertEquals(419, tiffField0.getOffset());
      assertEquals(30, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, 928L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(928, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-7);
      TiffField tiffField0 = new TiffField(1, 2146969034, fieldTypeRational0.FLOAT, 1, 2146969034, byteArray0, (ByteOrder) null, 50718);
      tiffField0.getIntValue();
      assertEquals(2146969034, tiffField0.getDirectoryType());
      assertEquals(50718, tiffField0.getSortHint());
      assertEquals(2146969034, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-416), 1899, fieldTypeFloat0, 132L, (-1643L), byteArray0, byteOrder0, 102);
      tiffField0.getFieldTypeName();
      assertEquals(102, tiffField0.getSortHint());
      assertEquals((-1643), tiffField0.getOffset());
      assertEquals((-416), tiffField0.getTag());
      assertEquals(1899, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, (-774L), 4L, byteArray0, byteOrder0, (byte)76);
      tiffField0.getFieldTypeName();
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "},V^3wd<AaBfnm");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 586, fieldTypeShort0, 1907L, 0, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(586, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2177), (-1610612735), fieldTypeByte0, (-2177), (-2177), (byte[]) null, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals((-2177), tiffField0.getTag());
      assertEquals((-2177), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3226), "Expected String value(");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3226), (-3226), fieldTypeAscii0, (-3226), (-3226), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-3226), tiffField0.getOffset());
      assertEquals((-3226), tiffField0.getTag());
      assertEquals((-3226), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-292), 9, fieldTypeShort0, 1L, 0L, byteArray0, (ByteOrder) null, 34855);
      tiffField0.getDoubleValue();
      assertEquals((-292), tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34855, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 137, fieldTypeShort0, (byte)1, 0L, byteArray0, byteOrder0, (-1143));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1143), tiffField0.getSortHint());
      assertEquals(137, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(53, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(24, 419, fieldTypeLong0, 1L, 419, byteArray0, byteOrder0, (byte)30);
      tiffField0.getDoubleValue();
      assertEquals(419, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals(419, tiffField0.getOffset());
      assertEquals(24, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-485), "org.apache.commons.io.filefilter.DelegateFileFilter");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1717986917), 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)96);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(797, 43, fieldTypeByte0, 43, 43, byteArray0, (ByteOrder) null, 50709);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(43, int0);
      assertEquals(50709, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(797, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 522, fieldTypeDouble0.SLONG, 0, 1230L, byteArray0, byteOrder0, 2147350602);
      tiffField0.getCount();
      assertEquals(2147350602, tiffField0.getSortHint());
      assertEquals(1230, tiffField0.getOffset());
      assertEquals(522, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3, "");
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1114, 2146466365, fieldTypeLong0, (byte)88, 1863L, byteArray0, byteOrder0, (byte) (-93));
      tiffField0.getCount();
      assertEquals(2146466365, tiffField0.getDirectoryType());
      assertEquals(1114, tiffField0.getTag());
      assertEquals(1863, tiffField0.getOffset());
      assertEquals((-93), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 61, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getBytesLength();
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1972), fieldTypeFloat0, (-1643L), 50, byteArray0, byteOrder0, (byte)15);
      tiffField0.getBytesLength();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1972), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField((-1610612735), 925, fieldTypeDouble0, 925, 5L, byteArray0, (ByteOrder) null, (-1610612735));
      tiffField0.getByteOrder();
      assertEquals(925, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getOffset());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals((-1610612735), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeLong0, 0L, 1L, byteArray0, byteOrder0, (-2910));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2910), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;X3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      TiffField tiffField0 = new TiffField((-1153), (-1153), fieldTypeDouble0, 0, (-1933L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": -1153 (0xfffffb7f: Unknown Tag):  (0 ]x;X3)\n", stringWriter0.toString());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-305), (-230), fieldTypeShort0, (-442L), 928L, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36868, 36868, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1483), (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(744, (-1483), fieldTypeFloat0, (-452L), (-1337L), byteArray0, byteOrder0, (byte) (-114));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-255), "]x;3");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, 2586, fieldTypeLong0, 34L, 1570L, byteArray0, (ByteOrder) null, 522);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(5367, (-3061), fieldTypeByte0, 4L, (-714L), (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-776), (-776), fieldTypeDouble0, (-776), (-776), byteArray0, byteOrder0, 242);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(4540, (-1477), fieldTypeDouble0.LONG, (-1L), 16L, byteArray0, byteOrder0, 1555);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1488, (-2028178999), fieldTypeRational0, 710L, (-2731), byteArray0, byteOrder0, (byte)54);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, (-692), fieldTypeFloat0, 0L, 1280L, byteArray0, byteOrder0, 475);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("od");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(145, tiffField0.getTag());
      assertEquals((-692), tiffField0.getDirectoryType());
      assertEquals(1280, tiffField0.getOffset());
      assertEquals(475, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)1, fieldTypeDouble0, 65535, (byte)1, byteArray0, byteOrder0, (-2627));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2627), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3226), fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (-4619));
      tiffField0.getByteOrder();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-4619), tiffField0.getSortHint());
      assertEquals((-3226), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(484, (-1249), fieldTypeAscii0, 484, (-1249), byteArray0, byteOrder0, 1895);
      tiffField0.getByteArrayValue();
      assertEquals(1895, tiffField0.getSortHint());
      assertEquals((-1249), tiffField0.getOffset());
      assertEquals((-1249), tiffField0.getDirectoryType());
      assertEquals(484, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2360), 33, (FieldType) null, 0L, 14504L, (byte[]) null, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(14504, tiffField0.getOffset());
      assertEquals((-2360), tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, (-692), fieldTypeFloat0, 0L, 1280L, byteArray0, byteOrder0, 475);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-692), int0);
      assertEquals(475, tiffField0.getSortHint());
      assertEquals(145, tiffField0.getTag());
      assertEquals(1280, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3226), fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, (-4619));
      tiffField0.getValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-4619), tiffField0.getSortHint());
      assertEquals((-3226), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(522, tiffField0.getTag());
      assertEquals((-1153), tiffField0.getSortHint());
      assertEquals(522, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(27, (-66), fieldTypeFloat0, 65521, 1L, byteArray0, byteOrder0, (-66));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      int int0 = tiffField0.getTag();
      assertEquals(522, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1153), tiffField0.getSortHint());
      assertEquals(522, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-1506), (FieldType) null, (-1506), 0L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1506), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(554, 554, fieldTypeByte0, 554, 0L, byteArray0, byteOrder0, 92);
      tiffField0.getBytesLength();
      assertEquals(554, tiffField0.getTag());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(554, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40094, 282, fieldTypeDouble0, (-1220L), (-1220L), byteArray0, byteOrder0, 50940);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("40094 (0x9c9e: XPKeywords): ", string0);
      assertEquals((-1220), tiffField0.getOffset());
      assertEquals(50940, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50, fieldTypeByte0, 1L, 9, byteArray0, byteOrder0, 4311);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(339, tiffField0.getTag());
      assertEquals(4311, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(522, (byte) (-73), fieldTypeDouble0.LONG, 524280L, 255L, byteArray0, byteOrder0, (byte)61);
      tiffField0.getIntValueOrArraySum();
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-73), tiffField0.getDirectoryType());
      assertEquals(522, tiffField0.getTag());
      assertEquals(524280L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@77b35324 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;X3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1153), (-1153), fieldTypeDouble0, 0, (-1933L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1153), tiffField0.getTag());
      assertEquals((-1153), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-1933), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147350602, 475, fieldTypeRational0.FLOAT, 5L, (-2712), byteArray0, byteOrder0, 475);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147350602, tiffField0.getTag());
      assertEquals(475, tiffField0.getDirectoryType());
      assertEquals(475, tiffField0.getSortHint());
      assertEquals(5L, tiffField0.getCount());
      assertEquals((-2712), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3, "");
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-951), 3, fieldTypeLong0, 1863L, (-951), byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(1863L, tiffField0.getCount());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-951), tiffField0.getOffset());
      assertEquals((-951), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3201), "Expected String value(");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2965, 2965, fieldTypeAscii0, 2965, (-3201), byteArray0, byteOrder0, 16);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, (-3664), fieldTypeShort0.SRATIONAL, 1863L, (-539L), byteArray0, byteOrder0, 278);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-539), tiffField0.getOffset());
      assertEquals(278, tiffField0.getSortHint());
      assertEquals((-3664), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(12, tiffField0.getTag());
      assertEquals(1863L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 2146969034, fieldTypeRational0.FLOAT, 1, 2146969034, byteArray0, (ByteOrder) null, 50718);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2146969034, tiffField0.getOffset());
      assertEquals(50718, tiffField0.getSortHint());
      assertEquals(2146969034, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 273, 273, byteArray0, byteOrder0, 273);
      tiffField0.getDoubleArrayValue();
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(273, tiffField0.getTag());
      assertEquals(273L, tiffField0.getCount());
      assertEquals(273, tiffField0.getOffset());
      assertEquals(273, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(744, 2474, fieldTypeLong0, 744, 744, byteArray0, (ByteOrder) null, (byte) (-87));
      tiffField0.getIntArrayValue();
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals(744, tiffField0.getTag());
      assertEquals(744, tiffField0.getOffset());
      assertEquals(2474, tiffField0.getDirectoryType());
      assertEquals(744L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1425, 1425, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).SRATIONAL).SSHORT, 1425, (-1620), byteArray0, byteOrder0, (byte)1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1425L, tiffField0.getCount());
      assertEquals(1425, tiffField0.getTag());
      assertEquals(1425, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1620), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)90, (byte) (-82), fieldTypeRational0, 0L, 402L, byteArray0, byteOrder0, 0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(402, tiffField0.getOffset());
      assertEquals((-82), tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(492, 492, fieldTypeDouble0, 492, 492, byteArray0, byteOrder0, (-1153));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1b2d18e6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(32809, (byte) (-77), fieldTypeRational0.SSHORT, 1L, 1L, byteArray0, byteOrder0, 2617);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-77), tiffField0.getDirectoryType());
      assertEquals(2617, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(32809, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-66), 2146792026, fieldTypeDouble0.SRATIONAL, 492, (byte) (-66), byteArray0, byteOrder0, 48320);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50719, "Expected String value(");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50719, 50719, fieldTypeAscii0, 3721L, (-963L), byteArray0, byteOrder0, 33448);
      String string0 = tiffField0.getStringValue();
      assertEquals(3721, tiffField0.getBytesLength());
      assertEquals(50719, tiffField0.getDirectoryType());
      assertEquals((-963), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(33448, tiffField0.getSortHint());
      assertEquals(50719, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@5c9c5274
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(522, 522, fieldTypeDouble0, 522, 0L, byteArray0, byteOrder0, (-1153));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x20a)", string0);
      assertEquals((-1153), tiffField0.getSortHint());
      assertEquals(522, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(50736);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50736, 610, fieldTypeShort0, 50736, 610, byteArray0, byteOrder0, 50736);
      String string0 = tiffField0.getTagName();
      assertEquals(610, tiffField0.getOffset());
      assertEquals(50736, tiffField0.getSortHint());
      assertEquals(50736, tiffField0.getTag());
      assertEquals(610, tiffField0.getDirectoryType());
      assertEquals("DNGLensInfo", string0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TiffField tiffField0 = new TiffField((-942), (-272), (FieldType) null, 586L, (-2624L), (byte[]) null, (ByteOrder) null, (-942));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "F5YTS-g;k~{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65541, 65541, fieldTypeFloat0, 65541, 65541, byteArray0, byteOrder0, 65541);
      String string0 = tiffField0.toString();
      assertEquals(65541, tiffField0.getSortHint());
      assertEquals(262164, tiffField0.getBytesLength());
      assertEquals(65541, tiffField0.getDirectoryType());
      assertEquals(65541, tiffField0.getOffset());
      assertEquals("65541 (0x10005: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (65541 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(797, 43, fieldTypeByte0, 43, 43, byteArray0, (ByteOrder) null, 50709);
      tiffField0.dump();
      assertEquals(43, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(797, tiffField0.getTag());
      assertEquals(50709, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(43L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(509, 509, fieldTypeDouble0.BYTE, 509, 509, byteArray0, byteOrder0, 509);
      String string0 = tiffField0.toString();
      assertEquals(509, tiffField0.getOffset());
      assertEquals("509 (0x1fd: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (509 Byte)", string0);
      assertEquals(509, tiffField0.getDirectoryType());
      assertEquals(509, tiffField0.getBytesLength());
      assertEquals(509, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeLong0, 68, 68, byteArray0, byteOrder0, 68);
      String string0 = tiffField0.getValueDescription();
      assertEquals(68, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53)", string0);
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(486, 486, fieldTypeDouble0.SLONG, 486, 486, byteArray0, byteOrder0, 486);
      String string0 = tiffField0.toString();
      assertEquals(486, tiffField0.getOffset());
      assertEquals(486, tiffField0.getSortHint());
      assertEquals("486 (0x1e6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (486 SLong)", string0);
      assertEquals(486, tiffField0.getDirectoryType());
      assertEquals(1944, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(897, 897, fieldTypeDouble0.SHORT, 383L, 4L, byteArray0, byteOrder0, 897);
      String string0 = tiffField0.getValueDescription();
      assertEquals(897, tiffField0.getDirectoryType());
      assertEquals(897, tiffField0.getSortHint());
      assertEquals(383L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(897, tiffField0.getTag());
      assertEquals(766, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[36];
      TiffField tiffField0 = new TiffField(806, 806, fieldTypeDouble0.SSHORT, 3605, 3605, byteArray0, (ByteOrder) null, 509);
      String string0 = tiffField0.getValueDescription();
      assertEquals(806, tiffField0.getTag());
      assertEquals(806, tiffField0.getDirectoryType());
      assertEquals(3605L, tiffField0.getCount());
      assertEquals(7210, tiffField0.getBytesLength());
      assertEquals(509, tiffField0.getSortHint());
      assertEquals(3605, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(484, (-1249), fieldTypeAscii0, 484, (-1249), byteArray0, byteOrder0, 1895);
      String string0 = tiffField0.getValueDescription();
      assertEquals(484, tiffField0.getTag());
      assertEquals(484, tiffField0.getBytesLength());
      assertEquals((-1249), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1895, tiffField0.getSortHint());
      assertEquals((-1249), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3253), "Expected String value(");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 1094, fieldTypeAscii0, 1L, 1094, byteArray0, byteOrder0, (-3253));
      tiffField0.toString();
      assertEquals(1094, tiffField0.getDirectoryType());
      assertEquals((-3253), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1094, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50, fieldTypeByte0, 1L, 9, byteArray0, byteOrder0, 4311);
      tiffField0.toString();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(339, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4311, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-1L), byteArray0, byteOrder0, 40091);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(40091, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, (-3517), fieldTypeRational0, (-1551), (-1551), (byte[]) null, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1255, 2101792506);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3517), tiffField0.getDirectoryType());
      assertEquals((-1551), tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-1551), fieldTypeDouble0.SRATIONAL, 50, (-1551), (byte[]) null, byteOrder0, 2);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-455), 319);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1551), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertEquals(50, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-1551), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(5367, (-3061), fieldTypeByte0, 4L, (-714L), (byte[]) null, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(5367, tiffField0.getTag());
      assertEquals((-714), tiffField0.getOffset());
      assertEquals((-3061), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3, "");
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-951), 3, fieldTypeLong0, 1863L, (-951), byteArray0, byteOrder0, 3);
      tiffField0.getFieldTypeName();
      assertEquals((-951), tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(7452, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-951), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3226), "Expected String value(");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3226), (-3226), fieldTypeAscii0, (-3226), (-3226), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, int0);
      assertEquals((-3226), tiffField0.getTag());
      assertEquals((-3226), tiffField0.getDirectoryType());
      assertEquals((-3226), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(27, (-66), fieldTypeFloat0, 65521, 1L, byteArray0, byteOrder0, (-66));
      String string0 = tiffField0.getValueDescription();
      assertFalse(tiffField0.isLocalValue());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, (-692), fieldTypeFloat0, 0L, 1280L, byteArray0, byteOrder0, 475);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(145, tiffField0.getTag());
      assertEquals((-692), tiffField0.getDirectoryType());
      assertEquals(1280, tiffField0.getOffset());
      assertEquals(475, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(509, 509, fieldTypeDouble0, 509, 509, byteArray0, byteOrder0, 509);
      String string0 = tiffField0.toString();
      assertEquals("509 (0x1fd: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (509 Double)", string0);
      assertEquals(4072, tiffField0.getBytesLength());
      assertEquals(509, tiffField0.getDirectoryType());
      assertEquals(509, tiffField0.getOffset());
      assertEquals(509, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "]x;3");
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(40091, 88, fieldTypeDouble0, 4L, 0L, byteArray0, byteOrder0, (-652));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0L, tiffElement0.offset);
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-652), tiffField0.getSortHint());
  }
}
