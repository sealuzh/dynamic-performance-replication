/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 15:41:29 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = new RE2("UTF-8");
      String string0 = rE2_0.toString();
      assertEquals("UTF-8", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = RE2.match("3+<]d", "3+<]d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("c;&V38%");
      // Undeclared exception!
      try { 
        rE2_0.findUTF8SubmatchIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("^MV");
      int[] intArray0 = rE2_0.findSubmatchIndex("IDS_Trinary_Operator");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceFirst("", "");
      Machine machine0 = rE2_0.get();
      assertNotNull(machine0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      RE2 rE2_0 = RE2.compilePOSIX("^Np0xGry!#");
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, 1808);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = new RE2("lsm3AZPM5&");
      rE2_0.numberOfCapturingGroups();
      byte[] byteArray0 = new byte[4];
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      List<String> list0 = rE2_0.findAll("", (-694));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", (byte)36);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("$E>dsp36Qr");
      List<String> list0 = rE2_0.findAll("$E>dsp36Qr", 128);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, 449);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findSubmatchIndex("");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("com.google.re2.Regexp$1");
      rE2_0.findAllSubmatchIndex("com.google.re2.Regexp$1", (-2441));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2.quoteMeta("D]");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("UTF");
      rE2_0.replaceFirst("UTF", "UTF");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = new RE2("z k?i");
      rE2_0.replaceAll("z k?i", "z k?i");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.reset();
      rE2_0.findIndex("");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findSubmatch("");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("lsm3AZPM5&");
      rE2_0.numberOfCapturingGroups();
      rE2_0.findAll("lsm3AZPM5&", 0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)16;
      byteArray0[5] = (byte)52;
      rE2_0.findAllUTF8(byteArray0, (byte)1);
      try { 
        RE2.compileImpl(":{`}(r|r%!", 12, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing closing ): `:{`}(r|r%!`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("[:alnum:]");
      byte[] byteArray0 = new byte[5];
      rE2_0.findAllUTF8Submatch(byteArray0, (byte) (-32));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("n");
      rE2_0.findIndex("CONCAT");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("5]qDs`;6F");
      rE2_0.findSubmatch("can't happen");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("VERTICAL_BAR");
      rE2_0.findAllSubmatch(">U MM", (-293));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        rE2_0.match("", 1603, 1603, 22, intArray0, 1603);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RE2 rE2_0 = RE2.compileImpl("", 1331, false);
      int[] intArray0 = new int[0];
      rE2_0.match("", 1331, (-6), (-6), intArray0, (-8));
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2.quoteMeta("");
      RE2 rE2_0 = RE2.compileImpl("", 1953, false);
      rE2_0.findAllIndex("", 1953);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("com.google.re2j.Regexp$1");
      rE2_0.findAllIndex("41M@st", (-2441));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("VERTICAL_BAR");
      rE2_0.reset();
      rE2_0.findAllSubmatch("VERTICAL_BAR", (-293));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 1223, true);
      rE2_0.findAllSubmatch("", 1223);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("&]Kx{nv$0<#1{y@\"");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte) (-30);
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.find("");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.prefixUTF8 = byteArray0;
      rE2_0.findAllUTF8Index(byteArray0, 14);
      // Undeclared exception!
      try { 
        rE2_0.findSubmatch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Nl");
      byte[] byteArray0 = new byte[20];
      rE2_0.findAllUTF8(byteArray0, 1);
      Machine machine0 = new Machine(rE2_0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("hin<x|v");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, 14);
      // Undeclared exception!
      try { 
        rE2_0.findSubmatch((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2.match("com.google.re2j.RE2", "com.google.re2j.RE2");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      RE2 rE2_0 = RE2.compilePOSIX("Pi0X#|xX{2;N");
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Submatch(byteArray0, 3564);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("UTF-8");
      rE2_0.replaceAll("UTF-8", "UTF-8");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Arabic");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-60);
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = new RE2("'");
      rE2_0.find("RadLl");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)1;
      rE2_0.match("", (byte)1, (byte)1, (byte)1, intArray0, (byte)1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllUTF8(byteArray0, 12);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = new RE2("|");
      rE2_0.replaceAll("|", "|");
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.replaceFirst("Radical", "");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findAllIndex("Q\u0007,S$otdoF#9&,H,", 0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      rE2_0.match("");
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (int) (byte)0;
      intArray0[2] = (int) (byte)0;
      intArray0[3] = 0;
      intArray0[4] = 128;
      intArray0[5] = (int) (byte)0;
      intArray0[7] = 0;
      rE2_0.match("", (byte)0, (byte)0, (byte)0, intArray0, 0);
      boolean boolean0 = rE2_0.longest;
      RE2.quoteMeta("");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RE2 rE2_0 = new RE2("(?-m:$)");
      byte[] byteArray0 = new byte[3];
      rE2_0.toString();
      rE2_0.reset();
      byteArray0[1] = (byte)0;
      rE2_0.replaceAll("(?-m:$)", "(?-m:$)");
      rE2_0.matchUTF8(byteArray0);
      rE2_0.findAllSubmatch("(?-m:$)", (byte)0);
      try { 
        RE2.compilePOSIX("(?-m:$)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing argument to repetition operator: `?`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("z");
      rE2_0.findAllSubmatchIndex("z", 88);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.prefix = "";
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)121;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)121;
      byteArray0[5] = (byte)50;
      rE2_0.findUTF8(byteArray0);
      rE2_0.findSubmatch("");
      rE2_0.findUTF8Submatch(byteArray0);
      rE2_0.replaceAll("\u0007,S$doF#9&,H,", "[:^xdigit:]");
      rE2_0.match("", (byte)0, 0, (byte)121, (int[]) null, 2767);
  }
}
