/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:19:28 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1832);
      String string0 = "rVr#ia:;[";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 47, "x", "9A", "rVr#ia:;[", "9A");
      classWriter0.lastField = fieldWriter0;
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 2, "", "", "rVr#ia:;[", mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@3f3761ff
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(130);
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "?mi", "", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      classWriter0.thisName = "nQ?:\"'VH3";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Synthetic", "");
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("nQ?:\"'VH3");
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(101);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "VWAab.]/; BwR?dCE", "f$e_lk", "The filter must not be null", "f$e_lk");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("VWAab.]/; BwR?dCE", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("z(}=~&4l7O3a}", true);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "3x", "3x", "-x\"ez)", "");
      fieldWriter0.visitAnnotation("a7", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-144));
      classWriter0.newFieldItem("Synthetic", "J5G@?w'm0", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-144), "VT_GQJ6(k:U3S3~", "The array of prefixes must not be null", "VT_GQJ6(k:U3S3~", (Object) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      classWriter0.thisName = "nQ?:\"'VH3";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-31), "nQ?:\"'VH3", "nQ?:\"'VH3", "Synthetic", "nQ?:\"'VH3");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      fieldWriter0.getSize();
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.put12(36, 1137);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      classWriter0.thisName = "nQ?:\"'V3";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-38), "nQ?:\"'V3", "nQ?:\"'V3", "Synthetic", "nQ?:\"'V3");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      classWriter0.version = 65535;
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.getSize();
      fieldWriter0.visitAttribute(attribute0);
      Attribute attribute1 = new Attribute("nQ?:\"'V3");
      System.setCurrentTimeMillis(2059L);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-38), "nQ?:\"'V3", "nQ?:\"'V3", "Synthetic", "nQ?:\"'V3");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      classWriter0.version = 65535;
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("'H");
      System.setCurrentTimeMillis((-2725L));
  }
}
