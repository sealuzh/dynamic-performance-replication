/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:22:30 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectStreamConstants;
import java.io.OutputStreamWriter;
import java.io.PipedInputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOUtils.isIdent('-');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-934L), (-3075), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3076
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize((-1L));
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 1, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils.decodeBase64("tB");
      String string0 = IOUtils.getStringProperty("tB");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils.decodeBase64("*T~mXns(");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 94, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 94
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize(21);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.stringSize(2);
      char[] charArray0 = new char[3];
      IOUtils.decodeBase64(charArray0, 1, 1);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = IOUtils.stringSize((-2858L));
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("%m).|5.as$?)X)i>'", (-2291), 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 727, (-4395));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = 727;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.DIGITS, 727, 56, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 727
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.firstIdentifier('G');
      assertTrue(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 29, 3);
      assertArrayEquals(new byte[] {(byte)19, (byte)65}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.stringSize(8257536);
      char[] charArray0 = new char[14];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 7, 7);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 521;
      // Undeclared exception!
      try { 
        IOUtils.getChars(521, 521, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(3712);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-921), 3712, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3711
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = null;
      int int0 = (-3959);
      IOUtils.decodeBase64((char[]) null, (-3959), 0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((char[]) null, 136, (-3959));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("|-K%hV|p{cc3I");
      boolean boolean1 = IOUtils.firstIdentifier('y');
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils.getStringProperty("`991G9;~bz0@");
      IOUtils.isValidJsonpQueryParam("ob");
      int int0 = ObjectStreamConstants.baseWireHandle;
      assertEquals(8257536, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('\u00E4');
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      boolean boolean1 = IOUtils.isValidJsonpQueryParam(".D;~>@=k&lD>4@b");
      assertTrue(boolean1 == boolean0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".D;~>@=k&lD>4@b");
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("O{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[0];
      IOUtils.encodeUTF8(charArray0, '\u0000', '\u0000', byteArray0);
      IOUtils.decodeUTF8(byteArray0, 0, 0, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)6, 2665, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2664
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-13), (int) (byte) (-13), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("r>\"g4EY>hJ1H9Uq9u");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.isIdent('F');
      StringReader stringReader0 = new StringReader("fastjson.compatibleWithFieldName");
      char[] charArray0 = new char[8];
      charArray0[0] = 'F';
      charArray0[1] = 'f';
      charArray0[2] = 'F';
      charArray0[3] = 'f';
      charArray0[4] = 'F';
      charArray0[5] = 'f';
      charArray0[7] = 'f';
      IOUtils.readAll(stringReader0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOUtils.stringSize((-2600L));
      IOUtils.stringSize(5);
      char[] charArray0 = new char[5];
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      // Undeclared exception!
      try { 
        IOUtils.getChars((-566L), 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)3, 28, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = IOUtils.stringSize(10L);
      assertEquals(2, int0);
      
      boolean boolean0 = IOUtils.isIdent('}');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[0];
      IOUtils.encodeUTF8(charArray0, '\u0000', '\u0000', byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 0, 61, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 80);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      IOUtils.decodeUTF8(byteArray0, 4, 113, iOUtils0.ASCII_CHARS);
      InputStreamReader inputStreamReader0 = null;
      try {
        inputStreamReader0 = new InputStreamReader((InputStream) null, iOUtils0.UTF8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.CA, (-433), (-433), iOUtils0.specicalFlags_doubleQuotes);
      IOUtils.getChars((-433), 10, iOUtils0.ASCII_CHARS);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 10, (-32), iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -33
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")/e|/JH:>x");
      int int0 = IOUtils.stringSize(521);
      assertEquals(3, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64(")/e|/JH:>x");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      CharBuffer charBuffer1 = uTF8Decoder2.decode(byteBuffer0);
      charBuffer0.read(charBuffer1);
      ByteBuffer byteBuffer1 = iOUtils0.UTF8.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOUtils.stringSize(0);
      IOUtils.decodeBase64("");
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockFile mockFile0 = new MockFile("tB");
      IOUtils.getStringProperty("}88/3+39XS@I");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils iOUtils0 = new IOUtils();
      char char0 = 'l';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)24, 1, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[6];
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.stringSize((long) 2);
      IOUtils.getChars(1, 1, charArray0);
      IOUtils.getStringProperty("}88/3+39XS@I");
      IOUtils.getChars((byte)45, 2, charArray0);
      assertArrayEquals(new char[] {'4', '5', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 80);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.decodeBase64(iOUtils0.DIGITS, 6, 6);
      IOUtils.getChars((byte) (-16), 6, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'z';
      charArray0[2] = ';';
      IOUtils.decodeBase64("tB");
      IOUtils.getChars((long) 2, 2, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2147268706, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147268706
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[3];
      IOUtils.isValidJsonpQueryParam(";2Za!@_9mbB?");
      IOUtils.getStringProperty("com.alibaba.fastjson.util.UTF8Decoder");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      uTF8Decoder1.onUnmappableCharacter(codingErrorAction0);
      int int0 = 160;
      // Undeclared exception!
      try { 
        IOUtils.getChars(2146867440, (-429884), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -429885
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = IOUtils.stringSize(0);
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.JSONException");
      IOUtils iOUtils0 = new IOUtils();
      int int1 = IOUtils.decodeUTF8(byteArray0, (byte)6, 1, iOUtils0.replaceChars);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZbcdefghjkmnopqrstuwxyz123456789+/", 1, 56);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 56, 56, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 386;
      int int1 = (-274);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("_%.;Le!", 386, (-274));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOUtils.firstIdentifier('\u008F');
      FileSystemHandling.shouldAllThrowIOExceptions();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", 2, 2);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      assertFalse(uTF8Decoder1.isAutoDetecting());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("wI=");
      assertArrayEquals(new byte[] {(byte) (-64)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.close((Closeable) null);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      char[] charArray0 = new char[6];
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.getChars(1, 1, charArray0);
      IOUtils.getStringProperty("}88/3+39XS@I");
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 13, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[6];
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils.stringSize((long) 128);
      char char0 = 'h';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 3, (byte)105, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 8257536, 21, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.isIdent('}');
      IOUtils.stringSize((-2600L));
      char char0 = 'h';
      char[] charArray0 = new char[5];
      charArray0[0] = 'h';
      charArray0[3] = '}';
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)105;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 'h', byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-23);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte)45;
      IOUtils.stringSize(34);
      int int0 = 3;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 3, 1773, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'J';
      charArray0[1] = '%';
      charArray0[2] = 'L';
      charArray0[3] = 'u';
      charArray0[4] = 'X';
      // Undeclared exception!
      try { 
        IOUtils.getChars(100000000000L, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      IOUtils.decodeBase64("}Ym\"Hjig;OQu\"\"V", 2, 2);
      int int2 = ObjectStreamConstants.baseWireHandle;
      PipedInputStream pipedInputStream0 = new PipedInputStream(8257536);
      assertEquals(0, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = "z|I=";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("z|I=", 1, 52);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      char[] charArray0 = new char[2];
      charArray0[1] = '\u00A2';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 2345, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZbcdefghjkmnopqrstuwxyz123456789+/", 1, 56);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils.decodeBase64("?}6j");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isValidJsonpQueryParam("");
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-2490L), 51, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int int0 = IOUtils.stringSize(0);
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64(".");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IOUtils.stringSize(2147483602L);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = IOUtils.decodeBase64("}Ym\"jig;OQu\"\"V", 2, 10);
      char[] charArray0 = new char[5];
      IOUtils.decodeUTF8(byteArray0, 2, 'z', charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)61, (int) (byte)61, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 60
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IOUtils.stringSize(2147483647L);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[5];
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      byte[] byteArray0 = IOUtils.decodeBase64("}Ym\"HjageQ@\"\"V", 2, 10);
      IOUtils.getChars(10006, 5, charArray0);
      IOUtils.getStringProperty("}Ym\"HjageQ@\"\"V");
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils.decodeUTF8(byteArray0, 2, 2, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)4, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 80);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      IOUtils.decodeUTF8(byteArray0, 4, 2, iOUtils0.ASCII_CHARS);
      InputStreamReader inputStreamReader0 = null;
      try {
        inputStreamReader0 = new InputStreamReader((InputStream) null, iOUtils0.UTF8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      char[] charArray0 = new char[3];
      charArray0[1] = '\u0000';
      IOUtils.decodeUTF8(byteArray0, 10, 1, charArray0);
      IOUtils iOUtils0 = new IOUtils();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = ObjectStreamConstants.baseWireHandle;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = IOUtils.decodeBase64("}Ym\"Hjig;OQu\"\"V");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      char[] charArray0 = new char[6];
      IOUtils.decodeUTF8(byteArray0, 2, 't', charArray0);
      int int2 = (-1);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CharsetEncoder charsetEncoder0 = iOUtils0.UTF8.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(byteArrayOutputStream0, charsetEncoder0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(outputStreamWriter0, 3368);
      IOUtils.close(bufferedWriter0);
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.CA, 30, 30);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.decodeBase64("z|I=", 2, 2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      assertEquals(1.0F, uTF8Decoder1.averageCharsPerByte(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      IOUtils.stringSize(2147483647L);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = IOUtils.decodeBase64("}Ym\"HjageQ@\"\"V");
      int int1 = 9999;
      IOUtils.getStringProperty("}Ym\"HjageQ@\"\"V");
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      IOUtils.decodeUTF8(byteArray0, 2, 9999, charArray0);
      IOUtils iOUtils0 = new IOUtils();
      uTF8Decoder0.charset();
      String string1 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream("UTF-8");
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-1), (-1), iOUtils0.specicalFlags_doubleQuotes);
      try { 
        MockURI.URI("fastjson.compatibleWithFieldName", "MejB", "MejB", (-1), "UTF-8", (String) null, "Xr~3`kZhI");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: fastjson.compatibleWithFieldName://MejB@MejBUTF-8#Xr~3%60kZhI
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      uTF8Decoder0.onMalformedInput(codingErrorAction0);
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("com.alibaba.fastjson.JSONException");
      byteBuffer0.getLong();
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      IOUtils.stringSize(7165065578140166498L);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte) (-89);
      byteArray0[5] = (byte)104;
      char[] charArray0 = new char[3];
      charArray0[0] = 'N';
      charArray0[1] = 'e';
      charArray0[2] = '.';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)6, (byte)104, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, 0, 71, charArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char char0 = '=';
      char[] charArray0 = new char[6];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[3] = '=';
      charArray0[5] = '=';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 1, 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char char0 = '=';
      char[] charArray0 = new char[6];
      charArray0[2] = '=';
      charArray0[1] = '=';
      charArray0[3] = '=';
      charArray0[5] = '\u0000';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 1, 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
