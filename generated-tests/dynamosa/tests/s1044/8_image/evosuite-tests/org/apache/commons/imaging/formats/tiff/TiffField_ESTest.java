/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 23:21:10 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.CharArrayWriter;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-21);
      byteArray0[4] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2217, fieldTypeRational0, 65535, (byte) (-21), byteArray0, byteOrder0, (byte) (-94));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 3, fieldTypeRational0, 640L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-1717986917), fieldTypeRational0.BYTE, 4L, 225L, byteArray0, byteOrder0, (-874));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-874), tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(225, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), 40, fieldTypeRational0, 0, 40, byteArray0, byteOrder0, (byte)5);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-37), tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(145, "): ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(145, 145, fieldTypeByte0, 4L, 205L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(145, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(145, tiffField0.getTag());
      assertEquals(205, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(27, (-4402), fieldTypeDouble0, (-333), (-333), byteArray0, byteOrder0, (-1776));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-333), tiffField0.getOffset());
      assertEquals((-4402), tiffField0.getDirectoryType());
      assertEquals((-1776), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1320), (-1320), fieldTypeRational0, (-1L), (-2039L), byteArray0, byteOrder0, (byte)51);
      tiffField0.getTagInfo();
      assertEquals(51, tiffField0.getSortHint());
      assertEquals((-1320), tiffField0.getDirectoryType());
      assertEquals((-2039), tiffField0.getOffset());
      assertEquals((-1320), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)0, fieldTypeRational0, 1596L, 737L, byteArray0, byteOrder0, (-956));
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(737, tiffField0.getOffset());
      assertEquals((-956), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-956), 2146429409, fieldTypeShort0, 737L, 1596L, byteArray0, byteOrder0, 212);
      int int0 = tiffField0.getTag();
      assertEquals(212, tiffField0.getSortHint());
      assertEquals(1596, tiffField0.getOffset());
      assertEquals((-956), int0);
      assertEquals(2146429409, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-110);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(94, 20, fieldTypeAscii0, 94, 1L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertEquals(20, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(94, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1402), (-956), fieldTypeRational0, 0, (byte)0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1402), tiffField0.getTag());
      assertEquals((-956), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-690), (-690), fieldTypeByte0, 431L, (-1L), byteArray0, byteOrder0, (-690));
      int int0 = tiffField0.getSortHint();
      assertEquals((-690), tiffField0.getDirectoryType());
      assertEquals((-690), tiffField0.getTag());
      assertEquals((-690), int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(434, 34856, fieldTypeRational0, 434, 434, byteArray0, byteOrder0, (byte) (-22));
      int int0 = tiffField0.getOffset();
      assertEquals(34856, tiffField0.getDirectoryType());
      assertEquals((-22), tiffField0.getSortHint());
      assertEquals(434, int0);
      assertEquals(434, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2816), ";2#\"DE3sp;2");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (-3933), fieldTypeShort0, 2253L, (-769L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-769), int0);
      assertEquals((-3933), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "<g^FWh,");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(85, (-265), fieldTypeShort0, 3472L, (-265), byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getTag());
      assertEquals(233, int0);
      assertEquals((-265), tiffField0.getOffset());
      assertEquals((-265), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-127);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-91), (byte)50, fieldTypeLong0, (byte)46, (-1437L), byteArray0, byteOrder0, (byte) (-119));
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-91), tiffField0.getTag());
      assertEquals((-1437), tiffField0.getOffset());
      assertEquals((-119), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34, "k\"z,");
      TiffField tiffField0 = new TiffField(683, 683, fieldTypeShort0, 1L, 4640L, byteArray0, byteOrder0, (-3987));
      tiffField0.getIntValue();
      assertEquals((-3987), tiffField0.getSortHint());
      assertEquals(683, tiffField0.getDirectoryType());
      assertEquals(4640, tiffField0.getOffset());
      assertEquals(683, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)73;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 1L, 145L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(145, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1595, 1594, fieldTypeLong0, 1L, 1595, byteArray0, byteOrder0, 21);
      tiffField0.getIntValue();
      assertEquals(1595, tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(1594, tiffField0.getDirectoryType());
      assertEquals(1595, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 520L, 50, byteArray0, byteOrder0, (byte) (-106));
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-106), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-31), "");
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1225, 1225, fieldTypeShort0, 1225, (-31), byteArray0, byteOrder0, (byte)23);
      tiffField0.getFieldTypeName();
      assertEquals(1225, tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals((-31), tiffField0.getOffset());
      assertEquals(1225, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, (-913), (FieldType) null, 50, 50, byteArray0, byteOrder0, 10);
      tiffField0.getFieldType();
      assertEquals((-913), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "<g^FWh,");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)80, (byte)80, fieldTypeShort0, 0L, (byte)80, byteArray0, byteOrder0, (byte)76);
      tiffField0.getFieldType();
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getTag());
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2209), "}EBK^(0Dl#'|(|'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1835), (byte) (-125), fieldTypeLong0, 0, (-2209), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-1835), tiffField0.getTag());
      assertEquals((-125), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2209), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(145, "): ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-23), 1717986918, fieldTypeByte0, 1L, (byte) (-23), byteArray0, byteOrder0, 5);
      tiffField0.getDoubleValue();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-23), tiffField0.getTag());
      assertEquals((-23), tiffField0.getOffset());
      assertEquals(1717986918, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-21);
      CharBuffer charBuffer0 = CharBuffer.allocate(37522);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(404, 0, fieldTypeRational0, 1L, (byte) (-21), byteArray0, byteOrder0, 1019);
      tiffField0.getDoubleValue();
      assertEquals(404, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1019, tiffField0.getSortHint());
      assertEquals((-21), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-51);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, (-1766L), byteArray0, byteOrder0, 2038);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2038, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1766), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, "): ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeShort0, 37391, 37391, byteArray0, (ByteOrder) null, 85);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(37391, tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(37391, int0);
      assertEquals(37391, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2209), "}EBK^(0Dl#'|(|'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (-317), fieldTypeLong0.BYTE, (byte) (-37), (byte) (-37), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-317), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-37), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), 40, fieldTypeRational0, 0, 40, byteArray0, byteOrder0, (byte)5);
      long long0 = tiffField0.getCount();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-37), tiffField0.getTag());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(0L, long0);
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1035, 1022, fieldTypeLong0, 1035, (-1442L), byteArray0, byteOrder0, (byte) (-123));
      long long0 = tiffField0.getCount();
      assertEquals((-1442), tiffField0.getOffset());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(1035, tiffField0.getTag());
      assertEquals(1035L, long0);
      assertEquals(1022, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1592, "ProfileLookTableData");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1592, 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (-817));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1592, tiffField0.getTag());
      assertEquals((-817), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(37391, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoBytes");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(978, (byte)104, fieldTypeRational0, (byte)50, 5716L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(978, tiffField0.getTag());
      assertEquals(400, int0);
      assertEquals(5716, tiffField0.getOffset());
      assertEquals(104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(145, "): ");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-23), 65535, fieldTypeByte0, 737L, 4L, byteArray0, byteOrder0, (byte) (-23));
      tiffField0.getByteOrder();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getTag());
      assertEquals((-23), tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, "): ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeShort0, 37391, 37391, byteArray0, (ByteOrder) null, 85);
      tiffField0.getByteArrayValue();
      assertEquals(37391, tiffField0.getTag());
      assertEquals(37391, tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 1060L, byteArray0, byteOrder0, (byte) (-102));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-102), tiffField0.getSortHint());
      assertEquals(1060, tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1396), fieldTypeRational0, 506L, (byte)0, byteArray0, byteOrder0, 324);
      MockPrintStream mockPrintStream0 = new MockPrintStream("ProfileHueSatMapData1");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(506L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(324, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1396), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1607, "ProfileLookTableData");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1607, 0, fieldTypeFloat0, 0L, 0, byteArray0, byteOrder0, (-817));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ProfileLookTableData");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1607, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-817), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1145), (-1145), fieldTypeShort0, (-1145), (-1145), (byte[]) null, byteOrder0, (-1145));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeRational0, (-17), (-17), byteArray0, byteOrder0, (-17));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147120589), (-2147120589), (FieldType) null, (-2147120589), (-2147120589), byteArray0, byteOrder0, (byte)21);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(499, 499, fieldTypeShort0, 499, 499, (byte[]) null, byteOrder0, 499);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(94, 94, fieldTypeRational0, 1L, 94, byteArray0, byteOrder0, 94);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-2140), fieldTypeShort0, (-2140), (-2140), byteArray0, byteOrder0, (-2140));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5354), (-5354), fieldTypeRational0, (-5354), (-5354), byteArray0, byteOrder0, (-5354));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(32, (-396), fieldTypeDouble0, 1L, 32, byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, (FieldType) null, 10, 10, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-19), (-19), fieldTypeRational0, (-19), (-19), byteArray0, byteOrder0, (-19));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[281];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33450, 48, (FieldType) null, 48, 33450, byteArray0, byteOrder0, 48);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeShort0, 53, 53, (byte[]) null, byteOrder0, 53);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeRational0, (-5), (-5), byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(40093, 309, fieldTypeFloat0, 4L, 0L, byteArray0, byteOrder0, 309);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(94, 94, fieldTypeRational0, 94, 94, (byte[]) null, byteOrder0, 94);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-184), (-184), fieldTypeDouble0, (-184), (-184), byteArray0, byteOrder0, (-184));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 41489, fieldTypeRational0, 1, 41489, byteArray0, byteOrder0, 41489);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-45), fieldTypeShort0, (byte) (-45), (byte) (-45), byteArray0, byteOrder0, (byte) (-45));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2734), fieldTypeRational0, (-2734), (-2734), byteArray0, byteOrder0, 19);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-44), (byte) (-44), fieldTypeShort0, (byte) (-44), (byte) (-44), byteArray0, byteOrder0, (byte) (-44));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(544, 544, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 544);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, (byte[]) null, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeRational0, (-5), (-5), byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2584), (-2584), fieldTypeRational0, (-2584), 269784L, byteArray0, byteOrder0, (-2584));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(116, (-429), fieldTypeFloat0, (-1046L), 116, byteArray0, byteOrder0, 116);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Pa>t>^wr.(]");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Pa>t>^wr.(]");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4049, 4049, fieldTypeRational0, 1L, 4049, byteArray0, byteOrder0, 4049);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "[^L9|BV9mfJq?Rg\"");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeRational0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1742), (-1742), fieldTypeLong0, (-1742), (-1742), byteArray0, byteOrder0, (-1742));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2192, "MD LabName");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2192, 2192, fieldTypeDouble0, 1L, 0L, byteArray0, byteOrder0, 2192);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(43, "k\"z,");
      TiffField tiffField0 = new TiffField(0, 19, fieldTypeShort0, 4640L, 1191L, byteArray0, byteOrder0, 0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(filterOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-2256L), (-2256L), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-2256), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-94), (byte) (-21), fieldTypeRational0, 434, (byte) (-22), byteArray0, byteOrder0, 1063);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-94), tiffField0.getTag());
      assertEquals((-21), tiffField0.getDirectoryType());
      assertEquals(1063, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals((-22), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), 1781, fieldTypeFloat0, (-1), (-1698L), byteArray0, (ByteOrder) null, (-1));
      tiffField0.getByteOrder();
      assertEquals((-1698), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1L), tiffField0.getCount());
      assertEquals(1781, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1147, 1147, fieldTypeShort0, 2074L, 0L, byteArray0, (ByteOrder) null, (byte) (-54));
      tiffField0.getFieldType();
      assertEquals(1147, tiffField0.getDirectoryType());
      assertEquals((-54), tiffField0.getSortHint());
      assertEquals(1147, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2802, 2802, (FieldType) null, 2802, 2836L, byteArray0, byteOrder0, 2802);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(981, 981, fieldTypeRational0, 981, 981, (byte[]) null, byteOrder0, 981);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34856, "A>:<UnY%6PG|fS");
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, 856L, (byte)0, byteArray0, byteOrder0, 1318);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(6848, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1318, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(330, "~Qw=l$hHLQ+CC^53");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeShort0, 330, 2688L, byteArray0, byteOrder0, (byte)23);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(2688, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(660, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "OtherImageLength");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 798, fieldTypeAscii0, 2107L, 0L, byteArray0, byteOrder0, (-446));
      int int0 = tiffField0.getTag();
      assertEquals(798, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-446), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2107L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeLong0, (-153L), 941L, byteArray0, byteOrder0, (byte)81);
      long long0 = tiffField0.getCount();
      assertEquals(941, tiffField0.getOffset());
      assertEquals(282, tiffField0.getTag());
      assertEquals((-153L), long0);
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-83), (byte)4, fieldTypeLong0, (-2503L), 0, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-83), tiffField0.getTag());
      assertEquals((-10012), int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(861, 861, fieldTypeDouble0, 861, 861, byteArray0, byteOrder0, 861);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(861, tiffField0.getOffset());
      assertEquals("861 (0x35d: Unknown Tag): ", string0);
      assertEquals(861, tiffField0.getDirectoryType());
      assertEquals(861, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[338];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 70, fieldTypeRational0, 1, 70, byteArray0, byteOrder0, 70);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3c325033 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5b0e1150 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[133];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1846, 1846, fieldTypeFloat0, 1846, 1846, byteArray0, byteOrder0, 1846);
      tiffField0.getDoubleArrayValue();
      assertEquals(1846, tiffField0.getTag());
      assertEquals(1846, tiffField0.getSortHint());
      assertEquals(1846L, tiffField0.getCount());
      assertEquals(1846, tiffField0.getOffset());
      assertEquals(1846, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3522, 3522, fieldTypeLong0, 3522, 3522, byteArray0, byteOrder0, 3522);
      tiffField0.getDoubleArrayValue();
      assertEquals(3522, tiffField0.getOffset());
      assertEquals(3522, tiffField0.getDirectoryType());
      assertEquals(3522, tiffField0.getSortHint());
      assertEquals(3522, tiffField0.getTag());
      assertEquals(3522L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33723, 33723, fieldTypeDouble0, 33723, 33723, byteArray0, byteOrder0, 33723);
      tiffField0.getDoubleArrayValue();
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals(33723, tiffField0.getTag());
      assertEquals(33723L, tiffField0.getCount());
      assertEquals(33723, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      tiffField0.getDoubleArrayValue();
      assertEquals(33L, tiffField0.getCount());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[260];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1438, 1438, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1438);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1438, tiffField0.getSortHint());
      assertEquals(1438, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1438, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48131, 48131, fieldTypeRational0, 48131, 48131, byteArray0, byteOrder0, 48131);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(48131L, tiffField0.getCount());
      assertEquals(48131, tiffField0.getTag());
      assertEquals(48131, tiffField0.getSortHint());
      assertEquals(48131, tiffField0.getOffset());
      assertEquals(48131, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1222, 1222, fieldTypeLong0, 1222, 1222, byteArray0, byteOrder0, 1222);
      tiffField0.getIntArrayValue();
      assertEquals(1222, tiffField0.getTag());
      assertEquals(1222L, tiffField0.getCount());
      assertEquals(1222, tiffField0.getDirectoryType());
      assertEquals(1222, tiffField0.getOffset());
      assertEquals(1222, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33723, 33723, fieldTypeDouble0, 33723, 33723, byteArray0, byteOrder0, 33723);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@740f932e for: 33723 (0x83bb: IPTC-NAA): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeRational0, 30, 30, byteArray0, byteOrder0, 30);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 44, fieldTypeShort0, 44, 44, byteArray0, byteOrder0, 44);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(44, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(44, tiffField0.getTag());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(44L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@3ad31d92
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeAscii0, 24, 24, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.getStringValue();
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48122, 48122, fieldTypeRational0, 48122, 48122, byteArray0, byteOrder0, 48122);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xbbfa)", string0);
      assertEquals(48122, tiffField0.getDirectoryType());
      assertEquals(48122, tiffField0.getSortHint());
      assertEquals(48122, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33723, 33723, fieldTypeDouble0, 33723, 33723, byteArray0, byteOrder0, 33723);
      String string0 = tiffField0.getTagName();
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals(33723, tiffField0.getTag());
      assertEquals("IPTC-NAA", string0);
      assertEquals(33723, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2028), 1178, fieldTypeByte0, (-2371L), 3180L, byteArray0, byteOrder0, (-3986));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "NoiseReductionApplied");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1266), (-1266), fieldTypeFloat0, 27760L, 11824L, byteArray0, byteOrder0, 1673);
      String string0 = tiffField0.toString();
      assertEquals("-1266 (0xfffffb0e: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (27760 Float)", string0);
      assertEquals(1673, tiffField0.getSortHint());
      assertEquals(11824, tiffField0.getOffset());
      assertEquals((-1266), tiffField0.getDirectoryType());
      assertEquals(111040, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50, 2065, fieldTypeByte0, 2065, 2065, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2065, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2065, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2065, tiffField0.getOffset());
      assertEquals(2065L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1244, 1244, fieldTypeDouble0, 1244, 1244, byteArray0, byteOrder0, 1244);
      String string0 = tiffField0.toString();
      assertEquals("1244 (0x4dc: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1244 Double)", string0);
      assertEquals(1244, tiffField0.getOffset());
      assertEquals(1244, tiffField0.getSortHint());
      assertEquals(9952, tiffField0.getBytesLength());
      assertEquals(1244, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(33723, 33723, fieldTypeDouble0, 33723, 33723, byteArray0, byteOrder0, 33723);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals(33723, tiffField0.getSortHint());
      assertEquals(33723L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(33723, tiffField0.getOffset());
      assertEquals(269784, tiffField0.getBytesLength());
      assertEquals(33723, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-853), (-853), fieldTypeLong0, 364L, 364L, byteArray0, byteOrder0, (-853));
      String string0 = tiffField0.toString();
      assertEquals(1456, tiffField0.getBytesLength());
      assertEquals(364, tiffField0.getOffset());
      assertEquals((-853), tiffField0.getSortHint());
      assertEquals((-853), tiffField0.getDirectoryType());
      assertEquals("-853 (0xfffffcab: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (364 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[313];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2122, 2122, fieldTypeLong0, 2122, 2122, byteArray0, byteOrder0, 2122);
      String string0 = tiffField0.toString();
      assertEquals(2122, tiffField0.getDirectoryType());
      assertEquals("2122 (0x84a: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (78) (2122 SLong)", string0);
      assertEquals(2122, tiffField0.getSortHint());
      assertEquals(2122, tiffField0.getOffset());
      assertEquals(8488, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2401, 33723, fieldTypeDouble0.SHORT, 3388L, 22L, byteArray0, byteOrder0, 2401);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals(3388L, tiffField0.getCount());
      assertEquals(2401, tiffField0.getSortHint());
      assertEquals(2401, tiffField0.getTag());
      assertEquals(22, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(6776, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2517), "Unexpected EOF.");
      TiffField tiffField0 = new TiffField(432, 432, fieldTypeAscii0, 432, 432, byteArray0, byteOrder0, (-2517));
      tiffField0.toString();
      assertEquals(432, tiffField0.getDirectoryType());
      assertEquals(432L, tiffField0.getCount());
      assertEquals((-2517), tiffField0.getSortHint());
      assertEquals(432, tiffField0.getBytesLength());
      assertEquals(432, tiffField0.getOffset());
      assertEquals(432, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48190, 48190, fieldTypeRational0, 1L, 48190, byteArray0, byteOrder0, 48190);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(48190, tiffField0.getSortHint());
      assertEquals(48190, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(48190, tiffField0.getTag());
      assertEquals(48190, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeAscii0, 24, 24, byteArray0, byteOrder0, 24);
      String string0 = tiffField0.getValueDescription();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(116, 116, fieldTypeFloat0, 116, 116, byteArray0, byteOrder0, 116);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(116, (-1555));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(116, tiffField0.getOffset());
      assertEquals(116, tiffField0.getSortHint());
      assertEquals(116, tiffField0.getDirectoryType());
      assertEquals(116, tiffField0.getTag());
      assertEquals(116L, tiffField0.getCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(116, 116, fieldTypeFloat0, 116, 116, byteArray0, byteOrder0, 116);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(116, (-1555));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(116, tiffField0.getSortHint());
      assertEquals(116, tiffField0.getTag());
      assertEquals(116, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(464, tiffField0.getBytesLength());
      assertEquals(116, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-664), 0, (FieldType) null, (-664), (-664), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte)7);
      int int0 = tiffField0.getSortHint();
      assertEquals(7, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-4133), fieldTypeShort0, 28, (-4133), byteArray0, byteOrder0, (-4133));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-4133), tiffField0.getDirectoryType());
      assertEquals((-4133), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(56, tiffField0.getBytesLength());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-4133), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(499, 499, fieldTypeShort0, 499, 499, (byte[]) null, byteOrder0, 499);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeShort0, 23, 23, byteArray0, byteOrder0, 23);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(23L, tiffElement0.offset);
  }
}
