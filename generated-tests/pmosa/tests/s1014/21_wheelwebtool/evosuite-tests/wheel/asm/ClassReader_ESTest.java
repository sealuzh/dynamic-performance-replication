/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 03:15:33 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Frame;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[2];
      char char0 = 'c';
      charArray0[0] = 'c';
      charArray0[1] = 'c';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(714, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = (-1863);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      classWriter0.newMethod("eWlW0hWo|,WrX", "eWlW0hWo|,WrX", "SourceFile", false);
      classReader0.getAccess();
      ClassWriter classWriter1 = new ClassWriter(classReader0, 59);
      classWriter1.thisName = "eWlW0hWo|,WrX";
      classReader0.accept((ClassVisitor) classWriter1, 2008);
      classReader0.getInterfaces();
      classReader0.accept((ClassVisitor) classWriter0, 152);
      classReader0.getSuperName();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "wheel.asm.MethodWriter";
      classWriter0.visitMethod(2, "2tT;Z|\"i5", "2tT;Z|\"i5", "", stringArray0);
      classReader0.copyPool(classWriter0);
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.readUnsignedShort(int0);
      classReader0.getSuperName();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = 714;
      classReader0.readLong(82);
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        classReader0.readClass(714, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getClassName();
      int int0 = Frame.KIND;
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getClassName();
      classReader1.getItem(2);
      // Undeclared exception!
      try { 
        classReader0.readConst(8, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int0 = Frame.BASE_VALUE;
      char[] charArray0 = new char[1];
      classReader0.accept((ClassVisitor) classWriter0, 1340);
      classWriter0.getCommonSuperClass("wheel.asm.MethodWriter", "wheel.asm.MethodWriter");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("visitLdcInsn");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getSuperName();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("visitAttribute");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = (-1863);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int1 = Type.SHORT;
      char[] charArray0 = new char[2];
      charArray0[1] = '\"';
      classReader0.accept((ClassVisitor) classWriter0, (-1632));
      classReader0.getInterfaces();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[2];
      charArray0[0] = 'c';
      charArray0[1] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(714, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int0 = Frame.BASE_VALUE;
      char[] charArray0 = new char[2];
      classWriter0.newUTF8("2tT;Z|\"i5");
      classReader0.getSuperName();
      ClassWriter classWriter1 = new ClassWriter(21);
      classReader0.accept((ClassVisitor) classWriter1, (Attribute[]) null, 729);
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-799), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[3];
      charArray0[0] = '-';
      charArray0[1] = '|';
      charArray0[2] = 'n';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(31, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1640));
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.accept((ClassVisitor) classWriter0, 4);
      classReader0.getClassName();
      classReader0.getItem(2);
      classReader1.accept((ClassVisitor) classWriter0, 1598);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      int int0 = Type.CHAR;
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-1863));
      int int0 = Type.SHORT;
      char[] charArray0 = new char[2];
      charArray0[1] = '\"';
      int int1 = (-1632);
      classReader0.accept((ClassVisitor) classWriter0, int1);
      classReader0.getInterfaces();
      String string0 = "";
      ClassReader classReader1 = new ClassReader(string0);
      classReader1.accept((ClassVisitor) classWriter0, int1);
      classWriter0.newUTF8(string0);
      String string1 = classReader0.readUTF8(classReader1.SKIP_FRAMES, charArray0);
      ClassReader classReader2 = new ClassReader(string1);
      int int2 = 33;
      classReader1.getItem(int2);
      int int3 = 2536;
      classReader1.accept((ClassVisitor) classWriter0, int3);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int0 = Frame.KIND;
      classWriter0.newUTF8("2tT;Z|\"i5");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.accept((ClassVisitor) classWriter0, 251658240);
      classReader0.getClassName();
      classReader1.getItem(classReader0.SKIP_DEBUG);
      classReader1.accept((ClassVisitor) classWriter0, classReader0.header);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "wheel.asm.MethodWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader1, 8);
      int int0 = Frame.BASE_VALUE;
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classWriter0.getCommonSuperClass(string0, string0);
      int int1 = 154;
      ClassReader classReader2 = new ClassReader(classReader1.b, int0, int1);
      classReader2.getSuperName();
      char[] charArray0 = new char[0];
      classReader0.readClass(classReader1.SKIP_FRAMES, charArray0);
      int int2 = Type.BYTE;
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int0 = Frame.KIND;
      char[] charArray0 = new char[2];
      classWriter0.newUTF8("2tT;Z|\"i5");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getClassName();
      classReader1.getItem(2);
      classReader1.accept((ClassVisitor) classWriter0, 7802);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1863));
      int int0 = Frame.BASE_VALUE;
      char[] charArray0 = new char[2];
      classReader0.accept((ClassVisitor) classWriter0, 1340);
      ClassReader classReader1 = new ClassReader("wheel.asm.ClassReader");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 8);
      classReader0.accept((ClassVisitor) classWriter1, 1048575);
      classWriter1.newUTF8("java/lang/String");
      classReader0.readUTF8(1, charArray0);
      ClassReader classReader2 = new ClassReader(classReader0.b, classReader1.EXPAND_FRAMES, classWriter0.COMPUTE_FRAMES);
      classReader1.getItem(classReader2.header);
      classReader2.accept((ClassVisitor) classWriter0, classReader1.header);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[2];
      charArray0[0] = 'c';
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 9, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64077
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[2];
      char[] charArray1 = new char[4];
      charArray1[0] = 'c';
      charArray1[1] = 'd';
      charArray1[3] = 'c';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 7802);
      classReader0.readConst(2, charArray1);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = 714;
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(168, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassReader classReader1 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      charArray0[1] = 'd';
      charArray0[2] = 'd';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
