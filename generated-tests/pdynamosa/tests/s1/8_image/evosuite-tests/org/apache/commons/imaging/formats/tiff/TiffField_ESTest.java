/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 10:02:58 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1461, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(6, 1655, fieldTypeFloat0, 1L, (byte)82, byteArray0, byteOrder0, 3168);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(82, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(3168, tiffField0.getSortHint());
      assertEquals(1655, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)27, (-4108), fieldTypeShort0, (-2147483646), 4L, byteArray0, byteOrder0, (byte) (-24));
      String string0 = tiffField0.toString();
      assertEquals((-4108), tiffField0.getDirectoryType());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (-2147483646 Short)", string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-24), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(42037, 40, fieldTypeShort0.SBYTE, 4L, 40, byteArray0, byteOrder0, (byte)20);
      tiffField0.getValue();
      assertEquals(42037, tiffField0.getTag());
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getOffset());
      assertEquals(40, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(501, "Expected String value(");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(501, 501, fieldTypeRational0, 501, (-869L), byteArray0, byteOrder0, 501);
      tiffField0.getTagInfo();
      assertEquals(501, tiffField0.getSortHint());
      assertEquals(501, tiffField0.getTag());
      assertEquals((-869), tiffField0.getOffset());
      assertEquals(501, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-2550), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-849), "Exposure");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(2128);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2638, 50, fieldTypeRational0, (byte)83, 454L, byteArray0, byteOrder0, 6000);
      int int0 = tiffField0.getTag();
      assertEquals(2638, int0);
      assertEquals(454, tiffField0.getOffset());
      assertEquals(6000, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, (-294L), byteArray0, byteOrder0, (byte) (-30));
      String string0 = tiffField0.getStringValue();
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals((-294), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 5, fieldTypeFloat0, 0L, 6, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, (-140));
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-140), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(42, "u)),");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeAscii0, 42, 42, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(42, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1547, (byte) (-127), fieldTypeByte0.FLOAT, (-511L), (-1216L), byteArray0, (ByteOrder) null, 40987);
      int int0 = tiffField0.getOffset();
      assertEquals(40987, tiffField0.getSortHint());
      assertEquals((-127), tiffField0.getDirectoryType());
      assertEquals(1547, tiffField0.getTag());
      assertEquals((-1216), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "35n");
      CharBuffer charBuffer0 = CharBuffer.allocate(1127);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      TiffField tiffField0 = new TiffField(2147232803, (byte) (-1), fieldTypeRational0, (-17173199968L), (-877L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals((-877), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2147232803, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1874, "s+");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1874, 1874, fieldTypeShort0, 1874, 1629L, byteArray0, byteOrder0, (-199));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1874, tiffField0.getTag());
      assertEquals(1629, tiffField0.getOffset());
      assertEquals(1874, tiffField0.getDirectoryType());
      assertEquals((-256), int0);
      assertEquals((-199), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)82;
      TiffField tiffField0 = new TiffField((-2550), 1, fieldTypeByte0, 1, (-1548L), byteArray0, (ByteOrder) null, (-1544));
      tiffField0.getIntValue();
      assertEquals((-2550), tiffField0.getTag());
      assertEquals((-1544), tiffField0.getSortHint());
      assertEquals((-1548), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-392), "");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-5);
      TiffField tiffField0 = new TiffField((-2049), (-2899), fieldTypeShort0, 1L, 34018L, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValue();
      assertEquals((-2899), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(34018, tiffField0.getOffset());
      assertEquals((-2049), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(51041, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (byte)96, fieldTypeAscii0, 51041, 50, byteArray0, byteOrder0, 51041);
      tiffField0.getFieldTypeName();
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(51041, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-3738L), byteArray0, byteOrder0, (-2998));
      tiffField0.getFieldTypeName();
      assertEquals((-2998), tiffField0.getSortHint());
      assertEquals((-3738), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1532, 2147238864, (FieldType) null, 2147238864, 1532, byteArray0, byteOrder0, (-1238));
      tiffField0.getFieldType();
      assertEquals(2147238864, tiffField0.getDirectoryType());
      assertEquals(1532, tiffField0.getTag());
      assertEquals((-1238), tiffField0.getSortHint());
      assertEquals(1532, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 367, fieldTypeFloat0, 0, (-1970L), byteArray0, byteOrder0, 17);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1970), tiffField0.getOffset());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(367, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-1), 940, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).RATIONAL).ASCII, (byte)111, 2836L, byteArray0, byteOrder0, 2137);
      tiffField0.getFieldType();
      assertEquals(2137, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(940, tiffField0.getDirectoryType());
      assertEquals(2836, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)96;
      TiffField tiffField0 = new TiffField(50, (byte)96, fieldTypeShort0, 1L, 2072L, byteArray0, byteOrder0, 517);
      tiffField0.getDoubleValue();
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(2072, tiffField0.getOffset());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-73);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 28);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3701), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1114), 2276, fieldTypeByte0, (byte)0, (-1114), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2276, int0);
      assertEquals((-1114), tiffField0.getTag());
      assertEquals((-1114), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "org.apache.commons.imaging.formats.tiff.constants.MolecularDynamicsGelTagConstants");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-330), (-330), fieldTypeRational0, 0L, (-1828L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1828), tiffField0.getOffset());
      assertEquals((-330), tiffField0.getTag());
      assertEquals((-330), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-719), "JYpc 7L(rHz\"");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "JYpc 7L(rHz\"");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-303), (-303), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (byte)58);
      tiffField0.getCount();
      assertEquals(58, tiffField0.getSortHint());
      assertEquals((-303), tiffField0.getTag());
      assertEquals((-303), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4416), "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1840), (-1840), fieldTypeFloat0, 26L, 26L, byteArray0, byteOrder0, (-741));
      tiffField0.getCount();
      assertEquals((-1840), tiffField0.getDirectoryType());
      assertEquals((-1840), tiffField0.getTag());
      assertEquals((-741), tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "C-R-lq<@#g}nC!.3[s=");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(671, (-181), fieldTypeRational0, (-3819L), 482L, byteArray0, byteOrder0, (byte)90);
      tiffField0.getCount();
      assertEquals(671, tiffField0.getTag());
      assertEquals(482, tiffField0.getOffset());
      assertEquals((-181), tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 1848L, byteArray0, (ByteOrder) null, (byte) (-114));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-114), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1848, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-849), "Exposure");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(986, (byte)119, fieldTypeRational0, 330L, (byte)119, byteArray0, (ByteOrder) null, 3715);
      tiffField0.getBytesLength();
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals(3715, tiffField0.getSortHint());
      assertEquals(119, tiffField0.getOffset());
      assertEquals(986, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-359), "z3tpMmi");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-359), (-359), fieldTypeAscii0, (-359), (-4432L), byteArray0, (ByteOrder) null, (-359));
      tiffField0.getBytesLength();
      assertEquals((-359), tiffField0.getSortHint());
      assertEquals((-359), tiffField0.getTag());
      assertEquals((-359), tiffField0.getDirectoryType());
      assertEquals((-4432), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(501, "Expected String value(");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(501, 501, fieldTypeRational0, 501, (-869L), byteArray0, byteOrder0, 501);
      tiffField0.getByteOrder();
      assertEquals(501, tiffField0.getDirectoryType());
      assertEquals((-869), tiffField0.getOffset());
      assertEquals(501, tiffField0.getTag());
      assertEquals(501, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-849), "Exposure");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(2128);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2638, 50, fieldTypeRational0, (byte)83, 454L, byteArray0, byteOrder0, 6000);
      tiffField0.getByteArrayValue();
      assertEquals(454, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(6000, tiffField0.getSortHint());
      assertEquals(2638, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2550), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-849), "Exposure");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(2128);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2638, 50, fieldTypeRational0, (byte)83, 454L, byteArray0, byteOrder0, 6000);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", fieldType: ");
      tiffField0.dump((PrintWriter) mockPrintWriter0, ", fieldType: ");
      assertEquals(2638, tiffField0.getTag());
      assertEquals(6000, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(454, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("S'tL", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2550), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, (-3738L), byteArray0, byteOrder0, (-2998));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)83);
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1610612735), 40960, fieldTypeByte0, (-10288L), (-1L), byteArray0, byteOrder0, (byte)83);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-370), 0, fieldTypeShort0, 0L, 4L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1532, 2147238864, (FieldType) null, 2147238864, 1532, byteArray0, byteOrder0, (-1238));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, (-1019L), (-1), byteArray0, (ByteOrder) null, (byte) (-107));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1417, 1417, fieldTypeLong0, 1417, 1417, byteArray0, byteOrder0, (byte)91);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField((-2147483646), 4326, fieldTypeLong0.FLOAT, (-2140L), 42037, byteArray0, (ByteOrder) null, 122);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, 6, 6, (byte[]) null, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)82, 5, fieldTypeByte0.DOUBLE, 5, (-2550), byteArray0, (ByteOrder) null, 322);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(322, tiffField0.getSortHint());
      assertEquals(82, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-2550), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2550), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-392), "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2049), (-2899), fieldTypeShort0, 1L, 34018L, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(34018, tiffField0.getOffset());
      assertEquals((-2049), tiffField0.getTag());
      assertEquals((-2899), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-516), fieldTypeRational0, (-516), (-1L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, " for: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)31, 735, fieldTypeRational0, (byte)31, (byte)0, byteArray0, byteOrder0, 785);
      int int0 = tiffField0.getOffset();
      assertEquals(785, tiffField0.getSortHint());
      assertEquals(735, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34853, 34853, fieldTypeRational0, 3230L, 3, byteArray0, (ByteOrder) null, (-3126));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
      assertEquals((-3126), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2374), 1103, fieldTypeLong0, (-2374), 1103, (byte[]) null, byteOrder0, 445);
      int int0 = tiffField0.getTag();
      assertEquals(445, tiffField0.getSortHint());
      assertEquals(1103, tiffField0.getOffset());
      assertEquals((-2374), int0);
      assertEquals(1103, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TiffField tiffField0 = new TiffField((byte)59, (-1606), (FieldType) null, (-1606), (-8L), (byte[]) null, (ByteOrder) null, 901);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(59949, (byte)82, fieldTypeByte0, 1L, 1199L, byteArray0, (ByteOrder) null, 2146988722);
      tiffField0.getDoubleValue();
      assertEquals(59949, tiffField0.getTag());
      assertEquals(82, tiffField0.getDirectoryType());
      assertEquals(2146988722, tiffField0.getSortHint());
      assertEquals(1199, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(59949, (byte)82, fieldTypeByte0, 1L, 1199L, byteArray0, (ByteOrder) null, 2146988722);
      tiffField0.getIntValue();
      assertEquals(1199, tiffField0.getOffset());
      assertEquals(2146988722, tiffField0.getSortHint());
      assertEquals(59949, tiffField0.getTag());
      assertEquals(82, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0, 1981L, 65535, byteArray0, byteOrder0, 1158);
      tiffField0.getIntValueOrArraySum();
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(1158, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-359), "z3tpMmi");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "z3tpMmi");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, (-2790), fieldTypeAscii0, 1391L, (-2478L), byteArray0, byteOrder0, (byte)95);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@612c4dc5 for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34026, 6, fieldTypeByte0, 1L, (-2106L), byteArray0, (ByteOrder) null, 34026);
      tiffField0.getIntValueOrArraySum();
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals(34026, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-2106), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-3701), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(946, (-700), fieldTypeByte0, 946, (-700), byteArray0, byteOrder0, 3);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@74c42eb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-3099), 420, fieldTypeShort0.DOUBLE, 420, (-147L), byteArray0, byteOrder0, (-3099));
      tiffField0.getDoubleArrayValue();
      assertEquals((-147), tiffField0.getOffset());
      assertEquals(420, tiffField0.getDirectoryType());
      assertEquals((-3099), tiffField0.getSortHint());
      assertEquals((-3099), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1417, 1417, fieldTypeLong0, 1417, 1417, byteArray0, byteOrder0, (byte)91);
      tiffField0.getDoubleArrayValue();
      assertEquals(1417, tiffField0.getOffset());
      assertEquals(1417, tiffField0.getTag());
      assertEquals(1417, tiffField0.getDirectoryType());
      assertEquals(91, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-581), (byte)0, fieldTypeShort0, (byte)31, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-581), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, " for: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-397), (-1151), fieldTypeRational0, 785, (byte)0, byteArray0, byteOrder0, (byte)12);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-397), tiffField0.getTag());
      assertEquals((-1151), tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1603, (byte) (-4), fieldTypeByte0, 1L, 2147483647L, byteArray0, (ByteOrder) null, 1603);
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1603, tiffField0.getTag());
      assertEquals(1603, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[210];
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeLong0.FLOAT, 65520, 65520, byteArray0, (ByteOrder) null, 65520);
      tiffField0.getDoubleArrayValue();
      assertEquals(65520, tiffField0.getSortHint());
      assertEquals(65520, tiffField0.getTag());
      assertEquals(65520, tiffField0.getDirectoryType());
      assertEquals(65520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-381), (-2147275011), fieldTypeLong0, (-2147275011), 8564L, byteArray0, byteOrder0, (-1034));
      assertEquals(834548, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-381), tiffField0.getTag());
      assertEquals((-2147275011), tiffField0.getDirectoryType());
      assertEquals(8564, tiffField0.getOffset());
      assertEquals((-1034), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(414, 6, fieldTypeShort0, 6, 1L, byteArray0, byteOrder0, 9);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(414, tiffField0.getTag());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2013, (-3608), fieldTypeShort0.RATIONAL, 3, (-2550), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3, (-2550), fieldTypeRational0, 1122L, 3, byteArray0, (ByteOrder) null, 3);
      tiffField0.getIntArrayValue();
      assertEquals((-2550), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(8976, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)83);
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 1L, 4327L, byteArray0, byteOrder0, 573);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(573, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(4327, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1a9d3f62 for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte) (-1);
      TiffField tiffField0 = new TiffField((byte) (-1), 940, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SRATIONAL).ASCII, (byte)111, 2836L, byteArray0, byteOrder0, 2137);
      String string0 = tiffField0.getStringValue();
      assertEquals(2137, tiffField0.getSortHint());
      assertEquals(2836, tiffField0.getOffset());
      assertEquals(111, tiffField0.getBytesLength());
      assertEquals(940, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (byte)96, fieldTypeByte0.ASCII, 51041, 50, byteArray0, byteOrder0, 51041);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@233aee03
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      TiffField tiffField0 = new TiffField((byte)59, (-1606), (FieldType) null, (-1606), (-8L), (byte[]) null, (ByteOrder) null, 901);
      String string0 = tiffField0.getTagName();
      assertEquals((-1606), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x3b)", string0);
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(901, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(11, 519, fieldTypeShort0, 519, (-1L), byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(519, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("ProcessingSoftware", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, (FieldType) null, (-3701), (byte)0, byteArray0, byteOrder0, 218);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("C");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[210];
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeLong0.FLOAT, 65520, 65520, byteArray0, (ByteOrder) null, 65520);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65520L, tiffField0.getCount());
      assertEquals(65520, tiffField0.getSortHint());
      assertEquals(65520, tiffField0.getTag());
      assertEquals(65520, tiffField0.getOffset());
      assertEquals(262080, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65520, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[70];
      TiffField tiffField0 = new TiffField((-112), (-4425), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).DOUBLE).BYTE, 966L, 2127, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.toString();
      assertEquals("-112 (0xffffff90: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (70) (966 Byte)", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(966, tiffField0.getBytesLength());
      assertEquals((-4425), tiffField0.getDirectoryType());
      assertEquals(2127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147483646, (-496), fieldTypeByte0.DOUBLE, 394L, (-496), byteArray0, byteOrder0, 2147483646);
      String string0 = tiffField0.toString();
      assertEquals((-496), tiffField0.getOffset());
      assertEquals("2147483646 (0x7ffffffe: Unknown Tag): 0.0 (394 Double)", string0);
      assertEquals(2147483646, tiffField0.getSortHint());
      assertEquals(3152, tiffField0.getBytesLength());
      assertEquals((-496), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(182, 187, fieldTypeDouble0, 182, 182, byteArray0, byteOrder0, 182);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(187, tiffField0.getDirectoryType());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52)", string0);
      assertEquals(182L, tiffField0.getCount());
      assertEquals(182, tiffField0.getOffset());
      assertEquals(182, tiffField0.getSortHint());
      assertEquals(182, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-35), (byte) (-35), fieldTypeLong0, 405L, 832L, byteArray0, byteOrder0, 50831);
      String string0 = tiffField0.getValueDescription();
      assertEquals(405L, tiffField0.getCount());
      assertEquals(832, tiffField0.getOffset());
      assertEquals((-35), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-35), tiffField0.getDirectoryType());
      assertEquals(50831, tiffField0.getSortHint());
      assertEquals(1620, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1900, 1900, fieldTypeLong0, 1900, (-5L), byteArray0, (ByteOrder) null, (-129));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1900, tiffField0.getDirectoryType());
      assertEquals(1900, tiffField0.getTag());
      assertEquals(1900L, tiffField0.getCount());
      assertEquals(7600, tiffField0.getBytesLength());
      assertEquals((-129), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-5), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(617, 4, fieldTypeShort0, 711L, 2527L, byteArray0, byteOrder0, (-2037));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2037), tiffField0.getSortHint());
      assertEquals(1422, tiffField0.getBytesLength());
      assertEquals(2527, tiffField0.getOffset());
      assertEquals(617, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(711L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0.SSHORT, 1158, 1158, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (60) (1158 SShort)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1158, tiffField0.getOffset());
      assertEquals(2316, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[57];
      TiffField tiffField0 = new TiffField((-2147483646), (-2147483646), fieldTypeLong0.ASCII, 255L, (-2147483646), byteArray0, (ByteOrder) null, (-2147483646));
      tiffField0.toString();
      assertEquals((-2147483646), tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-31);
      TiffField tiffField0 = new TiffField(1100, 1100, fieldTypeAscii0, 655L, 655L, byteArray0, byteOrder0, (byte) (-31));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1100, tiffField0.getTag());
      assertEquals(1100, tiffField0.getDirectoryType());
      assertEquals(655, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(655, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1603, (byte) (-4), fieldTypeByte0, 1L, 2147483647L, byteArray0, (ByteOrder) null, 1603);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1603, tiffField0.getTag());
      assertEquals(1603, tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-719), "JYpc 7L(rHz\"");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "JYpc 7L(rHz\"");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-303), (-303), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (byte)58);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(58, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-303), tiffField0.getTag());
      assertEquals((-303), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-2550), fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2550), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(string0);
      assertEquals((-2550), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, (-294L), byteArray0, byteOrder0, (byte) (-30));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(3330, 261);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-294), tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-2374), 1103, fieldTypeLong0, (-2374), 1103, (byte[]) null, byteOrder0, 445);
      tiffField0.getFieldTypeName();
      assertEquals(1103, tiffField0.getOffset());
      assertEquals((-2374), tiffField0.getTag());
      assertEquals(445, tiffField0.getSortHint());
      assertEquals(1103, tiffField0.getDirectoryType());
      assertEquals((-9496), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1316), 0, fieldTypeRational0, (-1316), 12076L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(12076, tiffField0.getOffset());
      assertEquals((-1316), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-849), "Exposure");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(2128);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2638, 50, fieldTypeRational0, (byte)83, 454L, byteArray0, byteOrder0, 6000);
      tiffField0.dump();
      assertEquals(664, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(454, tiffField0.getOffset());
      assertEquals(83L, tiffField0.getCount());
      assertEquals(6000, tiffField0.getSortHint());
      assertEquals(2638, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(6, (byte)4, fieldTypeFloat0, 1391L, 6, byteArray0, byteOrder0, (byte)4);
      int int0 = tiffField0.getSortHint();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, int0);
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(5564, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, " for: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(273, (-56), fieldTypeRational0, (-345L), 603L, byteArray0, byteOrder0, 273);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("273 (0x111: Unknown Tag): ", string0);
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(603, tiffField0.getOffset());
      assertEquals((-56), tiffField0.getDirectoryType());
      assertEquals((-2760), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3063), (-2146649996), fieldTypeRational0, 0L, 0L, byteArray0, (ByteOrder) null, 704);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[137];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.FLOAT, 65535, 65535, byteArray0, (ByteOrder) null, 65535);
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (65535 Float)", string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      byte[] byteArray0 = new byte[222];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1900, 1900, fieldTypeLong0, 1900, (-5L), byteArray0, (ByteOrder) null, (-129));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1900, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-129), tiffField0.getSortHint());
      assertEquals(1900, tiffField0.getDirectoryType());
      assertEquals((-5L), tiffElement0.offset);
  }
}
