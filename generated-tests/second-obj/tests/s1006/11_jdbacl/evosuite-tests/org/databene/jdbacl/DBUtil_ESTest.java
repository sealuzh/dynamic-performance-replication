/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:55:39 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import org.apache.derby.catalog.Dependable;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.iapi.store.raw.ContainerHandle;
import org.apache.derby.iapi.types.NumberDataValue;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.bean.TypedPropertyMutator;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBProcedure;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainerSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.Driver;
import org.h2.engine.SessionRemote;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.jdbc4.Jdbc4Array;
import org.postgresql.jdbc4.Jdbc4Connection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = null;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "7HamCdD", "", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.existsEnvironment("2PYY+v}n.$\"sg");
      DBUtil.checkReadOnly("setNull", false);
      DBUtil.assertAllDbResourcesClosed(false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      // Undeclared exception!
      try { 
        DBUtil.connect("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      String string0 = "CONSTRAINT_NAME";
      Level level0 = Level.error;
      ErrorHandler.setDefaultLevel(level0);
      DBUtil.getOpenPreparedStatementCount();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      DBUtil.resetMonitors();
      int int0 = DBUtil.getOpenStatementCount();
      int int1 = DBUtil.getOpenConnectionCount();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("----h(v(:d%^-E|4l:tng", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBCatalog dBCatalog1 = new DBCatalog();
      String string0 = "GC";
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("GC", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.escape("Db.g(_fp/`");
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(tableContainerSupport0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.query("SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBUtil.assertAllDbResourcesClosed(true);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultSet(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.currentLine(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.tools.SimpleResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog();
      boolean boolean0 = true;
      dBCatalog0.getSchemas();
      DBUtil.resetMonitors();
      DBUtil.getOpenStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("*/", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "--h(v(d%^-E|4l:tng";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/--h(v(d%^-E|4l:tng.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "--h(v(d%^-E|4l:tng");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "uvqbA");
      // Undeclared exception!
      try { 
        DBUtil.connect("--h(v(d%^-E|4l:tng", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      ErrorHandler errorHandler0 = new ErrorHandler("--h(v(d%^-E|4l:tng");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--h(v(d%^-E|4l:tng", (Connection) null, true, errorHandler0);
      ErrorHandler.getDefault();
      DBUtil.assertAllDbResourcesClosed((boolean) dBExecutionResult0.changedStructure);
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      List<DBSchema> list0 = dBCatalog0.getSchemas();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTables();
      dBCatalog0.getSchemas();
      Class<DBProcedure> class0 = DBProcedure.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      Level level0 = Level.error;
      ErrorHandler.setDefaultLevel(level0);
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("JT2", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: JT2
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("|Rw", "d0y;aF", "r{tD.@>", (String) null);
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting d0y;aF failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        DBUtil.countRows("JT2", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("#skL{s?De*}k\"");
      DBUtil.runScript("--h(v(:d%^-E|4l:tng", (Connection) null, true, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.getConnectData((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      DBCatalog dBCatalog0 = new DBCatalog();
      ErrorHandler errorHandler0 = new ErrorHandler(", external id = ");
      // Undeclared exception!
      try { 
        DBUtil.runScript("u", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      String string0 = "Empty SQL string in executeUpdate()";
      ErrorHandler errorHandler0 = new ErrorHandler("Empty SQL string in executeUpdate()");
      ErrorHandler errorHandler1 = new ErrorHandler("SYSDUMMY1");
      // Undeclared exception!
      try { 
        DBUtil.runScript("SYSDUMMY1", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = Dependable.TRIGGER;
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      LinkedList<Object[]> linkedList0 = new LinkedList<Object[]>();
      DBUtil.executeUpdate((String) null, (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("eoT`3+;}@q?lL{P^sj", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.checkReadOnly("SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", true);
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", false, 59, 59, (-213631749));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.close((Connection) null);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      String string0 = "*/";
      DBPackage dBPackage0 = new DBPackage("*/", dBSchema0);
      dBPackage0.setSubObjectName("");
      dBPackage0.setOwner(dBSchema0);
      ArrayList<DBSequence> arrayList0 = new ArrayList<DBSequence>();
      dBPackage0.setObjectId((String) null);
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.resetMonitors();
      boolean boolean0 = false;
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "--SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBCatalog dBCatalog0 = new DBCatalog();
      DBSchema dBSchema0 = new DBSchema("yLwp?1|M_6BC0_{iJQ", dBCatalog0);
      dBCatalog0.setOwner(dBSchema0);
      DBPackage dBPackage0 = new DBPackage("yLwp?1|M_6BC0_{iJQ", dBSchema0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "`?fICN", true, stringArray0);
      boolean boolean0 = DBUtil.containsMandatoryColumn(dBUniqueConstraint0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      jdbcDriver0.connect("h(", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "----h(v(:d%^-E|4l:tng", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("h(");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--h(v(:d%^-E|4l:tng", (Connection) null, true, errorHandler0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, (boolean) dBExecutionResult0.changedStructure, (boolean) dBExecutionResult0.changedStructure);
      DBSchema dBSchema0 = new DBSchema("--h(v(:d%^-E|4l:tng");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "--h(v(:d%^-E|4l:tng";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "h(", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBUniqueConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '--h(v(:d%^-E|4l:tng' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/null.env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      sessionRemote0.getLobStorage();
      LinkedList<Object[]> linkedList0 = new LinkedList<Object[]>();
      DBUtil.executeUpdate((String) null, (Connection) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--h(v(d%^-E|4l:tng");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((String) null, false, false, false, false, ")", false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'null'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      LinkedList<Object[]> linkedList0 = new LinkedList<Object[]>();
      DBUtil.executeUpdate("", (Connection) null);
      String string0 = "--h(v(d%^-E|4l:tng";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--h(v(d%^-E|4l:tng");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("~A", true, true, true, false, "--h(v(d%^-E|4l:tng", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '~A.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'";
      boolean boolean0 = true;
      DBUtil.checkReadOnly("SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", true);
      Connection connection0 = null;
      LinkedList<Object[]> linkedList0 = new LinkedList<Object[]>();
      DBUtil.getOpenStatementCount();
      DBUtil.getOpenStatementCount();
      Class<Object> class0 = Object.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("SELECT 1  FROM pg_catalog.pg_attrdef  WHERE adrelid = ? AND adnum = ?   AND pg_catalog.pg_get_expr(adbin, adrelid)       LIKE '%nextval(%'", 'C', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = Dependable.TRIGGER;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/Z>~y=w.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "--h(v(d%^-E|4l:tng");
      try { 
        DBUtil.getMetaData("Z>~y=w", false, false, false, false, "Z>~y=w", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultSet(simpleResultSet0);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      DBUtil.close((ResultSet) simpleResultSet0);
      assertEquals(0, simpleResultSet0.getRow());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBUtil.available("a]*;&u2", "Tried to mutate a database with read-only settings: ", "EXISTS ", (String) null);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = Dependable.TRIGGER;
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      DBUtil.available("--h(v(d%^-E|4l:tng", "Custom type maps are not supported.", "--Trigger", "V>Q?! T)=3");
      DBUtil.getOpenResultSetCount();
      DBUtil.escape("$zn|O?y5V<VdUR\"\"qC");
      ErrorHandler errorHandler0 = new ErrorHandler("Custom type maps are not supported.");
      // Undeclared exception!
      try { 
        DBUtil.runScript("YWbuA>h;LP44W?2", '_', (Connection) jdbcConnection0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = Dependable.TRIGGER;
      String string1 = "Z>~y=w";
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/Z>~y=w.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Trigger");
      try { 
        DBUtil.getMetaData("Z>~y=w", false, false, false, false, "Z>~y=w", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultRow(simpleResultSet0);
      List<Object[]> list0 = DBUtil.parseResultSet(simpleResultSet0);
      assertTrue(list0.isEmpty());
  }
}
