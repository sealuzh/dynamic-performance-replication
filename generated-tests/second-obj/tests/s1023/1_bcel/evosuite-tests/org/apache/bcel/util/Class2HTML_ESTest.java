/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:34:05 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<A HREF=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class2HTML.referenceType("d");
      Class2HTML.referenceType("d");
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("</FON->&nbsp<A NAME=method");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      JavaClass javaClass0 = classPathRepository0.loadClass("java.time.temporal.TemporalAdjuster");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "java.time.temporal.TemporalAdjuster");
      String string0 = Pattern.quote("</FON->&nbsp<A NAME=method");
      assertEquals("\\Q</FON->&nbsp<A NAME=method\\E", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Class2HTML.referenceType("+qV0q)-l+[pDG[4");
      assertEquals("<A HREF=\"+qV0q)-l+.html\" TARGET=_top>+qV0q)-l+[pDG[4</A>", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      String string0 = Class2HTML.referenceType("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      assertEquals("<A HREF=\"_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\".html\" TARGET=_top>_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n<.FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"</A>", string0);
      
      String string1 = Class2HTML.toHTML("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      assertEquals("_attributes.html\"\\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\"&gt;\\n&lt;/FRAMESET&gt;\\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\\n&lt;FRAME NAME=\"Code\" SRC=\"", string1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class2HTML.toHTML("Fi");
      String string0 = "-";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-";
      stringArray0[1] = "Fi";
      stringArray0[2] = "-";
      stringArray0[3] = "fstore_0";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("System");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      javaClass0.getBytes();
      javaClass0.setClassName("System");
      classPath0.getResource("System");
      javaClass0.toString();
      String string0 = javaClass1.toString();
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "public class System extends java.lang.Object\nimplements\t\torg.evosuite.runtime.mock.StaticReplacementMock\nfilename\t\torg.evosuite.runtime.mock.java.time.chrono.MockMinguoDate\ncompiled from\t\tMockMinguoDate.java\ncompiler version\t52.0\naccess flags\t\t33\nconstant pool\t\t62 entries\nACC_SUPER flag\t\ttrue\n\nAttribute(s):\n\torg.apache.bcel.classfile.SourceFile@0000000108\n\n7 methods:\n\tpublic void <init>()\n\tpublic String getMockedClassName()\n\tpublic static java.time.chrono.MinguoDate now()\n\tpublic static java.time.chrono.MinguoDate now(java.time.ZoneId zone)\n\tpublic static java.time.chrono.MinguoDate now(java.time.Clock clock)\n\tpublic static java.time.chrono.MinguoDate of(int prolepticYear, int month, int dayOfMonth)\n\tpublic static java.time.chrono.MinguoDate from(java.time.temporal.TemporalAccessor temporal)\n");
      Class2HTML.toHTML("System");
      Pattern.quote(string0);
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "java.util.Map";
      stringArray0[1] = "-zip";
      stringArray0[2] = "";
      stringArray0[3] = "P/7qgB!<<vCpu,";
      stringArray0[4] = "P/7qgB!<<vCpu,";
      stringArray0[5] = "-zip";
      stringArray0[6] = "Couldn't find: ";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // Couldn't find:  (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class2HTML.toHTML("Fi");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "Fi";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "S{e. -G0EmL";
      stringArray0[1] = "java.time.temporal.TemporalUnit";
      stringArray0[2] = "VoH.gaF(z:)";
      stringArray0[3] = "...";
      stringArray0[4] = "vR_";
      stringArray0[5] = "-d";
      stringArray0[6] = "f8=\"_M&";
      stringArray0[7] = "java.lang.Class";
      stringArray0[8] = "`MI?~dSn |Gq.E-";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class2HTML.toHTML("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate");
      Class2HTML.toHTML("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate";
      stringArray0[2] = "-d";
      stringArray0[3] = "org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate";
      stringArray0[4] = "org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaClass javaClass0 = classPathRepository0.loadClass("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate");
      JavaClass javaClass1 = javaClass0.copy();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaClass javaClass2 = classPathRepository0.loadClass("org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate");
      javaClass1.isPublic(true);
      javaClass2.toString();
      javaClass1.setSuperclassName("fstore_0");
      Class2HTML class2HTML0 = new Class2HTML(javaClass2, "fstore_0");
      Class2HTML.toHTML("+J\".!XTC");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class2HTML.toHTML("int");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "int";
      stringArray0[1] = "-d";
      stringArray0[2] = "-ziT/";
      stringArray0[3] = "int";
      stringArray0[4] = "org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
