/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 23:20:53 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      TiffField tiffField0 = new TiffField((byte)13, 2147126745, fieldTypeLong0.SSHORT, 2875, (byte)3, byteArray0, byteOrder0, (-510));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(2147126745, tiffField0.getDirectoryType());
      assertEquals((-510), tiffField0.getSortHint());
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[5] = (byte)21;
      TiffField tiffField0 = new TiffField((-1714), 405, fieldTypeRational0, 1172, 1172, byteArray0, byteOrder0, (byte)84);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(256, int0);
      assertEquals(1172, tiffField0.getOffset());
      assertEquals((-1714), tiffField0.getTag());
      assertEquals(405, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(318, 2147342783, fieldTypeFloat0, 1L, 463L, byteArray0, byteOrder0, 3171);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2147342783, tiffField0.getDirectoryType());
      assertEquals(318, tiffField0.getTag());
      assertEquals(3171, tiffField0.getSortHint());
      assertEquals(463, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)37, (byte)41, fieldTypeRational0, 4504L, 4L, byteArray0, byteOrder0, (byte)37);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(513, 50710, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 2147475455);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2147475455, tiffField0.getSortHint());
      assertTrue(tagInfo0.isOffset());
      assertEquals(50710, tiffField0.getDirectoryType());
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1729, (byte)50, byteArray0, byteOrder0, (byte)81);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-791), (-791), fieldTypeDouble0, (-791), (-1L), byteArray0, (ByteOrder) null, (byte)12);
      int int0 = tiffField0.getTag();
      assertEquals((-791), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-791), int0);
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-316), 1294, fieldTypeRational0.ASCII, 1, (-193L), byteArray0, byteOrder0, (-1701));
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals((-193), tiffField0.getOffset());
      assertEquals((-316), tiffField0.getTag());
      assertEquals(1294, tiffField0.getDirectoryType());
      assertEquals((-1701), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-13), (-8), (FieldType) null, 674L, 0L, byteArray0, (ByteOrder) null, 2);
      int int0 = tiffField0.getSortHint();
      assertEquals((-13), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, int0);
      assertEquals((-8), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 0L, (-1274L), byteArray0, byteOrder0, (-822));
      int int0 = tiffField0.getSortHint();
      assertEquals((-822), int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1274), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)0, (-1859), fieldTypeShort0, 0L, 0, byteArray0, byteOrder0, (-4269));
      tiffField0.getOffset();
      assertEquals((-1859), tiffField0.getDirectoryType());
      assertEquals((-4269), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)37, (byte)41, fieldTypeRational0, 4504L, 4L, byteArray0, byteOrder0, (byte)37);
      int int0 = tiffField0.getOffset();
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)75;
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeFloat0, 1L, 520L, byteArray0, byteOrder0, 99);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)75;
      TiffField tiffField0 = new TiffField((byte)75, 545, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).IFD).SRATIONAL, 1L, 75, byteArray0, byteOrder0, 244);
      tiffField0.getIntValueOrArraySum();
      assertEquals(545, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getOffset());
      assertEquals(244, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2144112402, 1, fieldTypeByte0, 1, 2144112402, byteArray0, byteOrder0, 2095105998);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2144112402, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2095105998, tiffField0.getSortHint());
      assertEquals(2144112402, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)75;
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeFloat0, 1L, 520L, byteArray0, byteOrder0, 99);
      tiffField0.getIntValue();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(75, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)75;
      TiffField tiffField0 = new TiffField((byte)75, 545, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).LONG).RATIONAL, 1L, 75, byteArray0, byteOrder0, 244);
      tiffField0.getIntValue();
      assertEquals(545, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getOffset());
      assertEquals(75, tiffField0.getTag());
      assertEquals(244, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1408), (String) null);
      TiffField tiffField0 = new TiffField((-634), (-634), fieldTypeLong0, 2869L, 2355L, byteArray0, byteOrder0, (-634));
      tiffField0.getFieldTypeName();
      assertEquals((-634), tiffField0.getDirectoryType());
      assertEquals((-634), tiffField0.getSortHint());
      assertEquals(2355, tiffField0.getOffset());
      assertEquals((-634), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(134, 134, fieldTypeRational0, 563L, 328L, byteArray0, byteOrder0, (-1349));
      tiffField0.getFieldTypeName();
      assertEquals(134, tiffField0.getTag());
      assertEquals(328, tiffField0.getOffset());
      assertEquals((-1349), tiffField0.getSortHint());
      assertEquals(134, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-13), (-8), (FieldType) null, 674L, 0L, byteArray0, (ByteOrder) null, 2);
      tiffField0.getFieldType();
      assertEquals((-13), tiffField0.getTag());
      assertEquals((-8), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "");
      TiffField tiffField0 = new TiffField((byte)94, 1982292598, fieldTypeAscii0, 2288L, 4L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(1982292598, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(94, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1215), "Missing value: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 0L, 50, (byte[]) null, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeFloat0, 1L, (-2707L), byteArray0, byteOrder0, 5559);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2707), tiffField0.getOffset());
      assertEquals(5559, tiffField0.getSortHint());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(122, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-14);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2726), (-2726), fieldTypeShort0, 1L, (-2726), byteArray0, byteOrder0, (-911));
      tiffField0.getDoubleValue();
      assertEquals((-2726), tiffField0.getTag());
      assertEquals((-2726), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2726), tiffField0.getDirectoryType());
      assertEquals((-911), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1172, 4, fieldTypeRational0, 7624L, 32766, byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1172, tiffField0.getTag());
      assertEquals(32766, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(513, (-1123), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 2147475455);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(513, tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getSortHint());
      assertEquals((-1123), int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-78), 0, fieldTypeRational0, 0L, (-1871), byteArray0, byteOrder0, (byte) (-78));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals((-78), tiffField0.getTag());
      assertEquals((-1871), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1557, 444, fieldTypeShort0, 1557, 444, byteArray0, byteOrder0, (-1871));
      tiffField0.getCount();
      assertEquals(444, tiffField0.getOffset());
      assertEquals((-1871), tiffField0.getSortHint());
      assertEquals(1557, tiffField0.getTag());
      assertEquals(444, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, 0, byteArray0, byteOrder0, (-2147107489));
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2147107489), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1415), 1659, fieldTypeLong0, 1L, 332L, byteArray0, byteOrder0, (-1552));
      int int0 = tiffField0.getBytesLength();
      assertEquals(332, tiffField0.getOffset());
      assertEquals((-1415), tiffField0.getTag());
      assertEquals(4, int0);
      assertEquals(1659, tiffField0.getDirectoryType());
      assertEquals((-1552), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6230, 32766, fieldTypeShort0, (-3551L), 4L, byteArray0, (ByteOrder) null, (-2317));
      tiffField0.getByteOrder();
      assertEquals((-2317), tiffField0.getSortHint());
      assertEquals(32766, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(6230, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42016, 42016, fieldTypeDouble0, 0L, (-1263L), byteArray0, byteOrder0, (-3118));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-3118), tiffField0.getSortHint());
      assertEquals(42016, tiffField0.getDirectoryType());
      assertEquals((-1263), tiffField0.getOffset());
      assertEquals(42016, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1172, 1172, fieldTypeRational0, 1172, (-1109L), byteArray0, byteOrder0, 1172);
      MockFile mockFile0 = new MockFile("1172 (0x494: Unknown Tag): org.apache.commons.imaging.common.RationalNumber@0000000003 (1172 SRational)");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1172, tiffField0.getDirectoryType());
      assertEquals(106L, mockFile0.length());
      assertEquals(1172, tiffField0.getTag());
      assertEquals(1172, tiffField0.getSortHint());
      assertEquals((-1109), tiffField0.getOffset());
      assertEquals(9376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(0, 397, fieldTypeShort0, (-612), 704L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(263, 830, (FieldType) null, (-93L), (-1L), byteArray0, (ByteOrder) null, (byte)127);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-3268), 513, fieldTypeByte0, (-3268), 513, byteArray0, byteOrder0, 380);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-316), "#bx%_1Yt(g*");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)18, (byte)95, fieldTypeRational0, (-1449), (-2031L), byteArray0, byteOrder0, (byte) (-77));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-13), (-8), (FieldType) null, 674L, 0L, byteArray0, (ByteOrder) null, 2);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 3424, fieldTypeRational0, 1L, (-1871), byteArray0, byteOrder0, (byte) (-78));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 2945, fieldTypeRational0, (-2820L), 2945, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40095, 1009, fieldTypeShort0, (-17179869184L), 1L, byteArray0, byteOrder0, 84);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2140876006, (-1364), fieldTypeLong0, (-187L), (-538), byteArray0, byteOrder0, (byte) (-107));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(112, (byte) (-24), fieldTypeAscii0.SLONG, 112, 524280L, byteArray0, byteOrder0, (byte) (-24));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-800), fieldTypeRational0, 1L, (-800), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2644, 2644, (FieldType) null, 0L, 2644, byteArray0, byteOrder0, 112);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2881), 0, (FieldType) null, (-2881), (-2881), byteArray0, byteOrder0, (byte) (-50));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-118), (-118), fieldTypeDouble0, (-118), (-2496L), byteArray0, byteOrder0, (-2136));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(5, 4633, fieldTypeShort0, (-2333), 3932L, byteArray0, (ByteOrder) null, 32897);
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile(mockFile0, "SsuiLPY");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3278, 0, (FieldType) null, 0, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1134, (byte) (-3), fieldTypeAscii0, 1134, (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      tiffField0.getByteOrder();
      assertEquals(1134, tiffField0.getTag());
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals((-3), tiffField0.getOffset());
      assertEquals((-3), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeFloat0, 1L, 520L, byteArray0, byteOrder0, 99);
      tiffField0.getByteArrayValue();
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getTag());
      assertEquals(520, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(69, (-1752), fieldTypeAscii0, 0L, 69, byteArray0, (ByteOrder) null, 21);
      tiffField0.getFieldType();
      assertEquals((-1752), tiffField0.getDirectoryType());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(69, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 255L, (-3188L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(42035, 1510, fieldTypeDouble0, 42035, 1L, byteArray0, byteOrder0, 1510);
      tiffField0.getValue();
      assertEquals(1510, tiffField0.getSortHint());
      assertEquals(42035, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(336280, tiffField0.getBytesLength());
      assertEquals(1510, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1067L, 1L, byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(405, 1196, fieldTypeByte0.IFD, 0, (byte) (-53), byteArray0, byteOrder0, 50933);
      int int0 = tiffField0.getTag();
      assertEquals(1196, tiffField0.getDirectoryType());
      assertEquals(50933, tiffField0.getSortHint());
      assertEquals(405, int0);
      assertEquals((-53), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1875), (-1875), fieldTypeByte0, (-1875), (-1875), byteArray0, byteOrder0, (byte)50);
      tiffField0.getCount();
      assertEquals((-1875), tiffField0.getTag());
      assertEquals((-1875), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1875), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1211, "a/R");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, 64, fieldTypeAscii0, (-8L), 1211, byteArray0, byteOrder0, (-505));
      int int0 = tiffField0.getBytesLength();
      assertEquals(1211, tiffField0.getOffset());
      assertEquals((-8), int0);
      assertEquals((-505), tiffField0.getSortHint());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeFloat0, 1L, (-2707L), byteArray0, byteOrder0, 5559);
      tiffField0.getDoubleValue();
      assertEquals(122, tiffField0.getTag());
      assertEquals((-2707), tiffField0.getOffset());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(5559, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2554), 2140876006, fieldTypeFloat0, 48160L, 2140876006, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(112, (byte) (-24), fieldTypeAscii0.LONG, 112, 524280L, byteArray0, byteOrder0, (byte) (-24));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals((-24), tiffField0.getDirectoryType());
      assertEquals(524280, tiffField0.getOffset());
      assertEquals(112, tiffField0.getTag());
      assertEquals(448, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1714), 405, fieldTypeRational0, 1172, 1172, byteArray0, byteOrder0, (byte)52);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, 50708, fieldTypeDouble0, 50708, (-613L), byteArray0, byteOrder0, (-1061));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@7fe64e21 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-86), (byte) (-86), fieldTypeByte0, 0, 4L, byteArray0, byteOrder0, 1558);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4cd70b89 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42016, 42016, fieldTypeDouble0, 0L, (-1263L), byteArray0, byteOrder0, (-3118));
      tiffField0.getDoubleArrayValue();
      assertEquals(42016, tiffField0.getDirectoryType());
      assertEquals(42016, tiffField0.getTag());
      assertEquals((-3118), tiffField0.getSortHint());
      assertEquals((-1263), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2140876006, (-3503), fieldTypeLong0, (byte)124, 640L, byteArray0, byteOrder0, 3238);
      tiffField0.getDoubleArrayValue();
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(2140876006, tiffField0.getTag());
      assertEquals((-3503), tiffField0.getDirectoryType());
      assertEquals(3238, tiffField0.getSortHint());
      assertEquals(640, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, (byte)84, fieldTypeShort0, 1149L, 883L, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(2298, tiffField0.getBytesLength());
      assertEquals(883, tiffField0.getOffset());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1714), 405, fieldTypeRational0, 1172, 1172, byteArray0, byteOrder0, (byte)84);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-1714), tiffField0.getTag());
      assertEquals(84, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1172, tiffField0.getOffset());
      assertEquals(9376, tiffField0.getBytesLength());
      assertEquals(405, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(513, (-1123), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 2147475455);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1123), tiffField0.getDirectoryType());
      assertEquals(513, tiffField0.getTag());
      assertEquals(2147475455, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 50, fieldTypeFloat0, (byte)84, (byte)84, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@96cb653 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-623), (-623), fieldTypeShort0, (byte)85, 203L, byteArray0, byteOrder0, 397);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(170, tiffField0.getBytesLength());
      assertEquals((-623), tiffField0.getTag());
      assertEquals((-623), tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(203, tiffField0.getOffset());
      assertEquals(397, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(192, 112, fieldTypeShort0, 22L, 2064L, byteArray0, byteOrder0, (-224));
      tiffField0.getIntArrayValue();
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals((-224), tiffField0.getSortHint());
      assertEquals(44, tiffField0.getBytesLength());
      assertEquals(192, tiffField0.getTag());
      assertEquals(2064, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)37, (byte)41, fieldTypeRational0, 4504L, 4L, byteArray0, byteOrder0, (byte)37);
      tiffField0.getIntArrayValue();
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(37, tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(36032, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)37, (byte)41, fieldTypeRational0, 4504L, 4L, byteArray0, byteOrder0, (byte)37);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeFloat0, 1L, 520L, byteArray0, byteOrder0, 99);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(75, tiffField0.getTag());
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(5, 19, fieldTypeLong0, 751L, 751L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      assertEquals(751, tiffField0.getOffset());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(751L, tiffField0.getCount());
      assertEquals(3004, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1211, "a/R");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-108);
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1211, 1211, fieldTypeAscii0, 1211, (-2147483648L), byteArray0, byteOrder0, (-1504));
      String string0 = tiffField0.getStringValue();
      assertEquals(1211, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1504), tiffField0.getSortHint());
      assertEquals(1211, tiffField0.getBytesLength());
      assertEquals(1211, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(5, 19, fieldTypeLong0, 751L, 751L, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@547d1dcd
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)75, (byte)75, fieldTypeFloat0, 1L, 520L, byteArray0, byteOrder0, 99);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x4b)", string0);
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)26, (-8), (FieldType) null, 674L, 0L, byteArray0, (ByteOrder) null, 2);
      String string0 = tiffField0.getTagName();
      assertEquals((-8), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals("GPSDestDistance", string0);
      assertEquals(26, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4021, 1, fieldTypeLong0.FLOAT, 914L, 4021, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "CleanFaxData");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(72, 50, fieldTypeFloat0, (byte)84, (byte)84, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(84, tiffField0.getOffset());
      assertEquals(336, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("72 (0x48: Unknown Tag): 0.0 (84 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[61];
      TiffField tiffField0 = new TiffField((byte)0, (byte)48, fieldTypeShort0.SBYTE, 310L, (byte)0, byteArray0, byteOrder0, (byte)48);
      tiffField0.dump();
      assertEquals(310L, tiffField0.getCount());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(310, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1067L, 1L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1067, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (1067 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, 50708, fieldTypeDouble0, 50708, (-613L), byteArray0, byteOrder0, (-1061));
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (50708 Double)", string0);
      assertEquals(50708, tiffField0.getDirectoryType());
      assertEquals(405664, tiffField0.getBytesLength());
      assertEquals((-1061), tiffField0.getSortHint());
      assertEquals((-613), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1061), 309, fieldTypeDouble0.FLOAT, 50708, (-613L), byteArray0, byteOrder0, 2147184772);
      String string0 = tiffField0.toString();
      assertEquals(202832, tiffField0.getBytesLength());
      assertEquals("-1061 (0xfffffbdb: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (50708 Float)", string0);
      assertEquals(309, tiffField0.getDirectoryType());
      assertEquals(2147184772, tiffField0.getSortHint());
      assertEquals((-613), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(5, 19, fieldTypeLong0, 751L, 751L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(3004, tiffField0.getBytesLength());
      assertEquals("5 (0x5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (751 SLong)", string0);
      assertEquals(751, tiffField0.getOffset());
      assertEquals(19, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[113];
      TiffField tiffField0 = new TiffField((-623), (-623), fieldTypeShort0, (byte)85, 203L, byteArray0, byteOrder0, 397);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-623), tiffField0.getTag());
      assertEquals(397, tiffField0.getSortHint());
      assertEquals((-623), tiffField0.getDirectoryType());
      assertEquals(85L, tiffField0.getCount());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56)", string0);
      assertEquals(203, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, 50, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).FLOAT).SHORT, 4L, 762L, byteArray0, byteOrder0, 79);
      String string0 = tiffField0.getValueDescription();
      assertEquals(79, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0", string0);
      assertEquals(762, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1134, (byte) (-3), fieldTypeAscii0, 1134, (byte) (-3), byteArray0, byteOrder0, (byte) (-3));
      tiffField0.dump();
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals(1134, tiffField0.getTag());
      assertEquals(1134L, tiffField0.getCount());
      assertEquals(1134, tiffField0.getBytesLength());
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals((-3), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(69, (-1752), fieldTypeAscii0, 0L, 69, byteArray0, (ByteOrder) null, 21);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(69, tiffField0.getTag());
      assertEquals((-1752), tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(69, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeFloat0, 1L, (-2707L), byteArray0, byteOrder0, 5559);
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(5559, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(122, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-2707), tiffField0.getOffset());
      assertEquals(122, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2196, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, 0, byteArray0, byteOrder0, (-2147107489));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-2147107489), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2227), 2, fieldTypeLong0, 2, (-2227), byteArray0, byteOrder0, 259);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2227), tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-2227L), tiffElement0.offset);
      assertEquals(259, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(69, (-1752), fieldTypeAscii0, 0L, 69, byteArray0, (ByteOrder) null, 21);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (byte)101);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(69, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(69, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals((-1752), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-2), (byte)99, fieldTypeFloat0, 1505L, 2147483647L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(99, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42016, 42016, fieldTypeDouble0, 0L, (-1263L), byteArray0, byteOrder0, (-3118));
      tiffField0.getFieldTypeName();
      assertEquals((-1263), tiffField0.getOffset());
      assertEquals(42016, tiffField0.getDirectoryType());
      assertEquals((-3118), tiffField0.getSortHint());
      assertEquals(42016, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1009, 1009, fieldTypeFloat0, (-1L), (-1L), byteArray0, byteOrder0, 1009);
      int int0 = tiffField0.getOffset();
      assertEquals(1009, tiffField0.getTag());
      assertEquals(1009, tiffField0.getDirectoryType());
      assertEquals(1009, tiffField0.getSortHint());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2387), 0, fieldTypeLong0, (byte)60, 5620L, byteArray0, byteOrder0, (byte)60);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2387), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(5620, tiffField0.getOffset());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-632), "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)5, 4, fieldTypeLong0, 1L, (byte)5, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 6, (-916L), byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("6 (0x6: Unknown Tag): ", string0);
      assertEquals((-916), tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(40095, 1009, fieldTypeShort0, (-17179869184L), 1L, byteArray0, byteOrder0, 84);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-17179869184L), tiffField0.getCount());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(1009, tiffField0.getDirectoryType());
      assertEquals(40095, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2554), 2140876006, fieldTypeFloat0, 48160L, 2140876006, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(2140876006, tiffField0.getDirectoryType());
      assertEquals((-2554), tiffField0.getTag());
      assertEquals(48160L, tiffField0.getCount());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2140876006, tiffField0.getOffset());
      assertEquals(192640, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[210];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(5, 19, fieldTypeLong0, 751L, 751L, byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(19, 17);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SLong", string0);
      assertEquals(5, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(751, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3004, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
  }
}
