/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 11:40:54 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "");
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-614), (byte)81, fieldTypeAscii0.LONG, 1L, (-3822L), byteArray0, byteOrder0, (-16));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(81, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-3822), tiffField0.getOffset());
      assertEquals((-614), tiffField0.getTag());
      assertEquals((-16), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-921), "L}Vd");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(28, (-83), fieldTypeAscii0, (byte)50, (-178), byteArray0, byteOrder0, 459);
      String string0 = tiffField0.toString();
      assertEquals(459, tiffField0.getSortHint());
      assertEquals((-178), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (50 L}Vd)", string0);
      assertEquals((-83), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(330, 2, fieldTypeShort0, 1L, 2945L, byteArray0, byteOrder0, (byte)50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tagInfo0.tag);
      assertEquals(2945, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-310), fieldTypeShort0, 3212, (-2145323200), byteArray0, byteOrder0, 2423);
      int int0 = tiffField0.getTag();
      assertEquals((-310), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2145323200), tiffField0.getOffset());
      assertEquals(2423, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3577, 50718, fieldTypeRational0, 3571, 0, byteArray0, (ByteOrder) null, 3577);
      int int0 = tiffField0.getTag();
      assertEquals(50718, tiffField0.getDirectoryType());
      assertEquals(3577, tiffField0.getSortHint());
      assertEquals(3577, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "$5icAYpF^M3");
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50712, (-38), fieldTypeAscii0, (byte)0, (-1462L), byteArray0, byteOrder0, (-38));
      String string0 = tiffField0.getStringValue();
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals(50712, tiffField0.getTag());
      assertEquals((-1462), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, 65535, fieldTypeRational0, 3577, (-1326L), byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1326), tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2239), 294, fieldTypeRational0, 0, (-1L), byteArray0, (ByteOrder) null, (-1534));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1534), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(294, tiffField0.getDirectoryType());
      assertEquals((-2239), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(156, (-2735), fieldTypeLong0, 0L, 338L, (byte[]) null, byteOrder0, 156);
      int int0 = tiffField0.getOffset();
      assertEquals((-2735), tiffField0.getDirectoryType());
      assertEquals(156, tiffField0.getSortHint());
      assertEquals(156, tiffField0.getTag());
      assertEquals(338, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 2146309518, fieldTypeDouble0, (-429L), (-321L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2146309518, tiffField0.getDirectoryType());
      assertEquals((-321), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-310), fieldTypeShort0, 3212, (-2145323200), byteArray0, byteOrder0, 2423);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2423, tiffField0.getSortHint());
      assertEquals(6424, tiffField0.getBytesLength());
      assertEquals(32, int0);
      assertEquals((-310), tiffField0.getDirectoryType());
      assertEquals((-2145323200), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)32, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-66);
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getIntValue();
      assertEquals(84, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3411), (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, 2274, fieldTypeRational0, (-309L), (-309L), byteArray0, byteOrder0, 10);
      tiffField0.getFieldTypeName();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-309), tiffField0.getOffset());
      assertEquals(2274, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "");
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-614), (byte)81, fieldTypeAscii0.IFD, 1L, (-3822L), byteArray0, byteOrder0, (-16));
      tiffField0.getFieldTypeName();
      assertEquals((-3822), tiffField0.getOffset());
      assertEquals((-614), tiffField0.getTag());
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1167), (-1167), (FieldType) null, 1510L, 2182, (byte[]) null, byteOrder0, 1985);
      tiffField0.getFieldType();
      assertEquals((-1167), tiffField0.getTag());
      assertEquals(2182, tiffField0.getOffset());
      assertEquals(1985, tiffField0.getSortHint());
      assertEquals((-1167), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, 272, fieldTypeRational0, 0, 1L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getTag());
      assertEquals(272, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1447), (-1447), fieldTypeRational0.SSHORT, 0L, 890L, byteArray0, byteOrder0, 2945);
      tiffField0.getFieldType();
      assertEquals(2945, tiffField0.getSortHint());
      assertEquals(890, tiffField0.getOffset());
      assertEquals((-1447), tiffField0.getTag());
      assertEquals((-1447), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[23];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 1535, fieldTypeByte0, 1, (-128L), byteArray0, byteOrder0, 1535);
      tiffField0.getDoubleValue();
      assertEquals((-128), tiffField0.getOffset());
      assertEquals(1535, tiffField0.getDirectoryType());
      assertEquals(848, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)84;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-111), 50936, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals((-111), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50936, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-98);
      TiffField tiffField0 = new TiffField(1, (-5), fieldTypeByte0, 1, (-5), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-5), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-5), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-733), 0, fieldTypeRational0, 50718, (-768L), byteArray0, (ByteOrder) null, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-733), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-768), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2239), 294, fieldTypeRational0, 0, (-1L), byteArray0, (ByteOrder) null, (-1534));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2239), tiffField0.getTag());
      assertEquals((-1534), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(294, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "$5icAYpF^M3");
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50712, (-38), fieldTypeAscii0, (byte)0, (-1462L), byteArray0, byteOrder0, (-38));
      tiffField0.getCount();
      assertEquals(50712, tiffField0.getTag());
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals((-1462), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1560, fieldTypeFloat0, (-1093L), (-1019L), byteArray0, byteOrder0, 33445);
      tiffField0.getCount();
      assertEquals(33445, tiffField0.getSortHint());
      assertEquals(1560, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1019), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2239), 294, fieldTypeRational0, 0, (-1L), byteArray0, (ByteOrder) null, (-1534));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(294, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1534), tiffField0.getSortHint());
      assertEquals((-2239), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-1936), fieldTypeRational0, (-1550), 50, byteArray0, (ByteOrder) null, 294);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-12400), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(294, tiffField0.getSortHint());
      assertEquals((-1936), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3580, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3580, 3580, fieldTypeRational0.DOUBLE, 50718, 50718, byteArray0, (ByteOrder) null, (-2146858833));
      tiffField0.getByteOrder();
      assertEquals((-2146858833), tiffField0.getSortHint());
      assertEquals(50718, tiffField0.getOffset());
      assertEquals(3580, tiffField0.getDirectoryType());
      assertEquals(3580, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(156, (-2735), fieldTypeLong0, 0L, 338L, (byte[]) null, byteOrder0, 156);
      tiffField0.getByteOrder();
      assertEquals(156, tiffField0.getTag());
      assertEquals(156, tiffField0.getSortHint());
      assertEquals(338, tiffField0.getOffset());
      assertEquals((-2735), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, 3571, 1L, byteArray0, (ByteOrder) null, (-832));
      tiffField0.getByteArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(28568, tiffField0.getBytesLength());
      assertEquals((-832), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Invalid value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(561, 561, fieldTypeRational0, 0L, 561, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(561, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(561, tiffField0.getOffset());
      assertEquals(561, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(156, (-2735), fieldTypeLong0, 0L, 338L, (byte[]) null, byteOrder0, 156);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-1), 272, fieldTypeRational0, (byte) (-61), (-1048L), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1), (-1), byteArray0, (ByteOrder) null, 37397);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-1936), fieldTypeRational0, (-1550), 50, byteArray0, (ByteOrder) null, 294);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-1769L), 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-953), 50, (FieldType) null, (-953), (-953), byteArray0, byteOrder0, (-953));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2792, (-2294), fieldTypeShort0, (-307L), (byte) (-59), byteArray0, byteOrder0, 818);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3577, 2313, fieldTypeRational0, 916L, 0L, byteArray0, byteOrder0, 3577);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(108, 0, fieldTypeDouble0.SSHORT, (-2773L), 0L, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2323, "Z<rk&aUw2\"*2r");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-923), 2323, fieldTypeFloat0, 2323, 2323, byteArray0, byteOrder0, 50975);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[175];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(52, 33423, fieldTypeDouble0, (-1L), (-2456L), byteArray0, byteOrder0, 1284);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-3324), fieldTypeRational0, (-3324), (-3324), byteArray0, (ByteOrder) null, 3);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1362), "LinearResponseLimit");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(5629, 2146309518, fieldTypeLong0, (-553L), (-2908L), byteArray0, byteOrder0, (-2129129085));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1560, fieldTypeFloat0, (-1093L), (-1019L), byteArray0, byteOrder0, 33445);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1030), 2313, fieldTypeShort0, 890L, 1020L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1164, "XPAuthor");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)54);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(938, 1164, fieldTypeDouble0, (-552L), (-10000L), byteArray0, byteOrder0, 1164);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "XPAuthor");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2147408469, 3577, fieldTypeRational0, 28568L, 2, byteArray0, byteOrder0, (-1707));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1362), 118, fieldTypeLong0, (-1L), (-2267L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1362), "LinearResponseLimit");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2146309518, 2146309518, fieldTypeLong0, 255L, 2146309518, byteArray0, byteOrder0, 1483);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146309518, tiffField0.getTag());
      assertEquals(1483, tiffField0.getSortHint());
      assertEquals(2146309518, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(2146309518, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-431), "x");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146858833), (-431), fieldTypeAscii0, (-2146858833), (-431), byteArray0, byteOrder0, (-431));
      tiffField0.getFieldType();
      assertEquals((-2146858833), tiffField0.getTag());
      assertEquals((-431), tiffField0.getDirectoryType());
      assertEquals((-431), tiffField0.getOffset());
      assertEquals((-431), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(41985, 2, fieldTypeFloat0, 0L, (byte)75, byteArray0, byteOrder0, 2334);
      tiffField0.getValue();
      assertEquals(75, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2334, tiffField0.getSortHint());
      assertEquals(41985, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1740L), 0, byteArray0, byteOrder0, (byte)11);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-3324), fieldTypeRational0, (-3324), (-3324), byteArray0, (ByteOrder) null, 3);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-3324), tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-3324), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3577, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2239), 294, fieldTypeRational0, 0, (-1L), byteArray0, (ByteOrder) null, (-1534));
      int int0 = tiffField0.getTag();
      assertEquals((-1534), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(294, tiffField0.getDirectoryType());
      assertEquals((-2239), int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-862), "$5icAYpF^M3");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeAscii0, 50712, (-1343L), byteArray0, byteOrder0, 1423);
      tiffField0.getCount();
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals(1423, tiffField0.getSortHint());
      assertEquals(50712, tiffField0.getTag());
      assertEquals((-1343), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-66), tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-431), "x");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1007), (byte)0, fieldTypeAscii0, 1L, 915L, byteArray0, byteOrder0, (-1007));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getIntValue();
      assertEquals(84, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getTag());
      assertEquals((-66), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2146309518, "5p9n^4w:2n.ru^A}fg");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-2849), fieldTypeLong0, 1832L, 4L, byteArray0, byteOrder0, 2147251562);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147251562, tiffField0.getSortHint());
      assertEquals((-2849), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(7328, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      Double double0 = new Double((-286.922881784));
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(double0, byteOrder0);
      TiffField tiffField0 = new TiffField((-97), 1295, fieldTypeRational0, 3304L, (-1L), byteArray0, byteOrder0, (byte)39);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1295, tiffField0.getDirectoryType());
      assertEquals((-286), int0);
      assertEquals(26432, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-97), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte) (-27), fieldTypeByte0, 3, (byte) (-27), byteArray0, byteOrder0, 379);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@551e13cb for: 3 (0x3: GPSLongitudeRef): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(123, 3, fieldTypeDouble0, 3, 3, byteArray0, byteOrder0, (-2143628200));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2143628200), tiffField0.getSortHint());
      assertEquals(123, tiffField0.getTag());
      assertEquals(2, doubleArray0.length);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2323, "Z<rk&aUw2\"*2r");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-923), 2323, fieldTypeFloat0, 2323, 2323, byteArray0, byteOrder0, 50975);
      tiffField0.getDoubleArrayValue();
      assertEquals(2323, tiffField0.getDirectoryType());
      assertEquals((-923), tiffField0.getTag());
      assertEquals(9292, tiffField0.getBytesLength());
      assertEquals(2323, tiffField0.getOffset());
      assertEquals(50975, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)124, 2145372061, fieldTypeLong0, 757L, (-18824L), byteArray0, byteOrder0, Integer.MAX_VALUE);
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getSortHint());
      assertEquals(124, tiffField0.getTag());
      assertEquals((-18824), tiffField0.getOffset());
      assertEquals(2145372061, tiffField0.getDirectoryType());
      assertEquals(3028, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-433), (-433), fieldTypeLong0, 0L, (-433), byteArray0, (ByteOrder) null, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-433), tiffField0.getTag());
      assertEquals((-433), tiffField0.getOffset());
      assertEquals(0, doubleArray0.length);
      assertEquals((-433), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(682, 278, fieldTypeShort0, 900, (byte)88, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(278, tiffField0.getDirectoryType());
      assertEquals(1800, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(682, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3593, (-2146858833), fieldTypeRational0, 88L, (-14520L), byteArray0, byteOrder0, 41992);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(3593, tiffField0.getTag());
      assertEquals(41992, tiffField0.getSortHint());
      assertEquals(704, tiffField0.getBytesLength());
      assertEquals((-2146858833), tiffField0.getDirectoryType());
      assertEquals((-14520), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getDoubleArrayValue();
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getTag());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(10, (-1), fieldTypeByte0, (byte)76, (byte) (-99), byteArray0, byteOrder0, (-1359));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@628aa40d for: 10 (0xa: GPSMeasureMode): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-433), (-433), fieldTypeLong0, 0L, (-433), byteArray0, (ByteOrder) null, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-433), tiffField0.getDirectoryType());
      assertEquals(0, intArray0.length);
      assertEquals((-433), tiffField0.getTag());
      assertEquals((-433), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 2147251562, fieldTypeShort0, 900, 1096L, byteArray0, (ByteOrder) null, 698);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1800, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1096, tiffField0.getOffset());
      assertEquals(2147251562, tiffField0.getDirectoryType());
      assertEquals(698, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Invalid value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(561, 561, fieldTypeRational0, 0L, 561, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(561, tiffField0.getDirectoryType());
      assertEquals(561, tiffField0.getTag());
      assertEquals(561, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3593, (-2146858833), fieldTypeRational0, 88L, (-14520L), byteArray0, byteOrder0, 41992);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-66), (byte) (-66), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, (byte) (-66));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(84, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getTag());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, (byte)96, fieldTypeByte0, (byte)34, (-2435L), byteArray0, (ByteOrder) null, 33922);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@57bdbeee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-862), "$5icAYpF^M3");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)114;
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte) (-108);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeAscii0, 50712, (-1343L), byteArray0, byteOrder0, 1423);
      String string0 = tiffField0.getStringValue();
      assertEquals(1423, tiffField0.getSortHint());
      assertEquals(50712, tiffField0.getTag());
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals((-1343), tiffField0.getOffset());
      assertEquals(50712, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-862), "$5icAYpF^M3");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeAscii0, 50712, (-1343L), byteArray0, byteOrder0, 1423);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(50712 (0xc618: LinearizationTable): ): [Ljava.lang.String;@2a98d23f
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "");
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)81, 50712, fieldTypeAscii0, 1147L, 50712, byteArray0, byteOrder0, (byte)81);
      String string0 = tiffField0.getTagName();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x51)", string0);
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals(50712, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (-5), fieldTypeByte0, 1, (-5), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-5), tiffField0.getDirectoryType());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-5), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3742, 2147153113, fieldTypeFloat0, 3742, 2742L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2147153113, tiffField0.getDirectoryType());
      assertEquals(14968, tiffField0.getBytesLength());
      assertEquals(2742, tiffField0.getOffset());
      assertEquals(3742, tiffField0.getTag());
      assertEquals(3742L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, (-2190), fieldTypeByte0, (byte)124, 4235L, byteArray0, byteOrder0, (byte)41);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2190), tiffField0.getDirectoryType());
      assertEquals(4235, tiffField0.getOffset());
      assertEquals(124L, tiffField0.getCount());
      assertEquals(124, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte) (-27), fieldTypeByte0, 3, (byte) (-27), byteArray0, byteOrder0, 379);
      String string0 = tiffField0.toString();
      assertEquals("3 (0x3: GPSLongitudeRef): 0, 0, 0 (3 Undefined)", string0);
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals((-27), tiffField0.getOffset());
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals(379, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(123, 3, fieldTypeDouble0, 3, 3, byteArray0, byteOrder0, (-2143628200));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(3L, tiffField0.getCount());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-2143628200), tiffField0.getSortHint());
      assertEquals(123, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(24, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 1218, fieldTypeDouble0, (byte)0, 0L, byteArray0, byteOrder0, (byte)50);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1218, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeDouble0.SLONG, 516L, 52, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(52, tiffField0.getOffset());
      assertEquals(2064, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getTag());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(516L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3404, (byte) (-1), fieldTypeLong0, (byte)124, (-18824L), byteArray0, byteOrder0, (-368));
      tiffField0.dump();
      assertEquals(3404, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals((-368), tiffField0.getSortHint());
      assertEquals((-18824), tiffField0.getOffset());
      assertEquals(124L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-433), (-433), fieldTypeLong0, 0L, (-433), byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-433), tiffField0.getOffset());
      assertEquals((-433), tiffField0.getTag());
      assertEquals((-433), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(16, "'d[_Hx-");
      TiffField tiffField0 = new TiffField(0, 41, fieldTypeShort0, (byte)124, 41, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.toString();
      assertEquals(41, tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (124 'd[_Hx-)", string0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(248, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2792, (-1717986917), fieldTypeShort0, 3749L, (-3851L), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals("2792 (0xae8: Unknown Tag): 0, 0, 0 (3749 SShort)", string0);
      assertEquals(7498, tiffField0.getBytesLength());
      assertEquals((-3851), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1447), (-1447), fieldTypeRational0.SSHORT, 0L, 890L, byteArray0, byteOrder0, 2945);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2945, tiffField0.getSortHint());
      assertEquals((-1447), tiffField0.getTag());
      assertEquals((-1447), tiffField0.getDirectoryType());
      assertEquals(890, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "");
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)81, 50712, fieldTypeAscii0, 1147L, 50712, byteArray0, byteOrder0, (byte)81);
      tiffField0.toString();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(50712, tiffField0.getOffset());
      assertEquals(1147, tiffField0.getBytesLength());
      assertEquals(81, tiffField0.getTag());
      assertEquals(50712, tiffField0.getDirectoryType());
      assertEquals(1147L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-431), "x");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1007), (byte)0, fieldTypeAscii0, 1L, 915L, byteArray0, byteOrder0, (-1007));
      MockFile mockFile0 = new MockFile("x");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "i{");
      assertEquals(915, tiffField0.getOffset());
      assertEquals(73L, mockFile0.length());
      assertEquals((-1007), tiffField0.getTag());
      assertEquals((-1007), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (byte) (-98), byteArray0, byteOrder0, (-5));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-5), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-98), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (byte) (-98), byteArray0, byteOrder0, (-5));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals((-98), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3588, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1534), 3588, fieldTypeRational0, 294, (-1534), byteArray0, (ByteOrder) null, (-2239));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 294);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1534), tiffField0.getOffset());
      assertEquals(3588, tiffField0.getDirectoryType());
      assertEquals((-1534), tiffField0.getTag());
      assertEquals(294L, tiffField0.getCount());
      assertNull(string0);
      assertEquals((-2239), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1362), "LinearResponseLimit");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(5629, 2146309518, fieldTypeLong0, (-553L), (-2908L), byteArray0, byteOrder0, (-2129129085));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)57, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-2908), tiffField0.getOffset());
      assertEquals((-553L), tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: LinearResponseLimit", string0);
      assertEquals(2146309518, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(5629, tiffField0.getTag());
      assertEquals((-2129129085), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50712, "");
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)81, 50712, fieldTypeAscii0, 1147L, 50712, byteArray0, byteOrder0, (byte)81);
      tiffField0.getFieldTypeName();
      assertEquals(50712, tiffField0.getOffset());
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(1147L, tiffField0.getCount());
      assertEquals(50712, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-98), (byte) (-98), fieldTypeByte0, 1L, 84L, byteArray0, byteOrder0, 6);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-98), int0);
      assertEquals((-98), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-826), (-826), fieldTypeAscii0, (-826), 4L, byteArray0, byteOrder0, 32781);
      int int0 = tiffField0.getSortHint();
      assertEquals(32781, int0);
      assertEquals((-826), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-826), tiffField0.getBytesLength());
      assertEquals((-826), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-431), "x");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146858833), (-431), fieldTypeAscii0, (-2146858833), (-431), byteArray0, byteOrder0, (-431));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-2146858833 (0x800988af: Unknown Tag): ", string0);
      assertEquals((-431), tiffField0.getDirectoryType());
      assertEquals((-431), tiffField0.getOffset());
      assertEquals((-2146858833L), tiffField0.getCount());
      assertEquals((-431), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(41985, 2, fieldTypeFloat0, 0L, (byte)75, byteArray0, byteOrder0, 2334);
      tiffField0.dump();
      assertEquals(41985, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(75, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2334, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(229, 229, fieldTypeDouble0, 229, 807L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(807L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(229, tiffField0.getDirectoryType());
      assertEquals(1832, tiffField0.getBytesLength());
      assertEquals(229, tiffField0.getTag());
  }
}
