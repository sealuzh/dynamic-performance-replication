/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 16:25:18 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(220);
      classWriter0.newDouble(220);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, ",Q9O43?u$d6|6z$0", "", "J\"qlZz+WI", (String[]) null, false, false);
      classWriter0.firstMethod = methodWriter0;
      classWriter0.addUninitializedType("o&S>*@`iBrFxt", 0);
      classWriter0.newConst("o&S>*@`iBrFxt");
      classWriter0.visitField(0, "91)w|NcXp>27QO", "", "91)w|NcXp>27QO", (Object) null);
      classWriter0.visitOuterClass("91)w|NcXp>27QO", "", "SourceDebugExtension");
      classWriter0.toByteArray();
      methodWriter0.classReaderOffset = 4;
      classWriter0.newInteger((-3770));
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, "", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-719));
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.visitOuterClass("Synthetic", (String) null, "Synthetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      Item item0 = classWriter0.newDouble(256);
      Item item1 = classWriter0.newDouble(256);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-719));
      Boolean boolean0 = Boolean.FALSE;
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(13);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.addUninitializedType("'3h", 13);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3021);
      Class<Long> class0 = Long.class;
      Type type0 = Type.getType(class0);
      Item item0 = classWriter0.newConstItem(type0);
      assertNotNull(item0);
      
      classWriter0.newMethodItem("o", "o", "d_&Ub|(q#&Z*2", true);
      classWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "InnerClasses";
      classWriter0.visitAnnotation("InnerClasses", false);
      classWriter0.newInteger(0);
      Item item0 = classWriter0.newDouble(0);
      classWriter0.newFloat(0);
      int int0 = 0;
      item0.set(0);
      String string1 = "I\\^\"%T2YMd";
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "6?9<", "", "", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.visitSource((String) null, (String) null);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("Ys;z`(*7FpQw", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 463;
      ClassWriter classWriter0 = new ClassWriter(463);
      String string0 = "";
      classWriter0.visitOuterClass("", "", "");
      String string1 = "";
      String string2 = null;
      String string3 = "";
      classWriter0.newClassItem("f]?A6]Y6");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "org.apache.commons.io.filefilter.DirectoryFileFilter";
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(463, "org.apache.commons.io.filefilter.DirectoryFileFilter", "", "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 262;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 262);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-440));
      ClassWriter classWriter0 = new ClassWriter((-440));
      classWriter0.newConst(integer0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1, 3004, "c{L", "0Ewns", (String) null, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-811));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = null;
      stringArray0[5] = "";
      stringArray0[6] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit((-811), (-811), "", (String) null, "E<t*Ht7x?iGA", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-440));
      ClassWriter classWriter0 = new ClassWriter((-440));
      classWriter0.newConst(integer0);
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit(1, 3004, "c{L", "0Ewns", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-442));
      classWriter0.visitSource((String) null, "Synthetic");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      Item item0 = classWriter0.newMethodItem("", "", "", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 182;
      ClassWriter classWriter0 = new ClassWriter(182);
      String string0 = "";
      classWriter0.visitSource("", "");
      classWriter0.addUninitializedType("", 4570);
      classWriter0.newInteger(182);
      classWriter0.addUninitializedType("", 4570);
      classWriter0.toByteArray();
      classWriter0.newMethodItem("", "", "", true);
      classWriter0.newDouble(1);
      classWriter0.newFloat(0.0F);
      classWriter0.toByteArray();
      String string1 = null;
      String string2 = "e>f";
      classWriter0.thisName = "";
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "e>f", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitAnnotation("", true);
      classWriter0.threshold = 24;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 24, ")xUL|Qbkins9|zD!~4M", "", ")xUL|Qbkins9|zD!~4M", "");
      classWriter0.firstField = fieldWriter0;
      classWriter0.addUninitializedType("", 0);
      classWriter0.visitMethod(0, "", ")xUL|Qbkins9|zD!~4M", "I8l6>nry", (String[]) null);
      classWriter0.visitAnnotation("wheel.asm.ClassWriter", true);
      classWriter0.newUTF8("");
      classWriter0.visitInnerClass("c1fm", "1B2^^Jl=)I+cU; ", "c1fm", 0);
      classWriter0.newFieldItem(")xUL|Qbkins9|zD!~4M", "1B2^^Jl=)I+cU; ", "");
      classWriter0.visitInnerClass("", "", "c1fm", 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-104));
      classWriter0.visitInnerClass((String) null, (String) null, "", 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.newFieldItem("(", "", "f-bWu");
      classWriter0.newLong(49);
      Item item0 = classWriter0.newLong((-1329L));
      classWriter0.newClassItem("");
      classWriter0.newClass("");
      classWriter0.visitSource("nHd#nj9uuzJDnGPr", "");
      Float float0 = new Float(0.0);
      classWriter0.visitField(49, "", "hGhls:m0pj9)@\"", "B1Gn9E2]mmTnL", float0);
      classWriter0.newFieldItem("f-bWu", "B1Gn9E2]mmTnL", "$S.v/@_~!UhEX+NRl");
      classWriter0.visitInnerClass("SourceDebugExtension", "nHd#nj9uuzJDnGPr", "The strings must not be null", 0);
      classWriter0.newMethod("(", "(", "nHd#nj9uuzJDnGPr", false);
      classWriter0.visitSource("", "");
      classWriter0.newMethodItem("", "", "q,O'lleWVC9&&U", false);
      classWriter0.addType("");
      classWriter0.newClassItem("Xp`g8o~&L\"[aQ>$)/");
      Item item1 = classWriter0.newFloat(0.0F);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1611);
      Item item0 = classWriter0.newLong(0L);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      String string0 = "mZ<orJ80/e\\[QLM3/u";
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-421), (-421));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      String string0 = "cm;s$R";
      String string1 = null;
      classWriter0.index = 622;
      classWriter0.newFloat(1.0F);
      classWriter0.newUTF8("P)|{Pi`0ydS:4Zy4");
      // Undeclared exception!
      try { 
        classWriter0.newMethod("", "cm;s$R", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.threshold = (-421);
      Item item0 = classWriter0.newDouble((-421));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = ":;sR";
      Attribute attribute0 = new Attribute(":;sR");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(220);
      classWriter0.newDouble(220);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "*KCOeIKPCKC-|96~VI@";
      stringArray0[1] = "*KCOeIKPCKC-|96~VI@";
      stringArray0[2] = "{b'ox0~In sIlTo;pf";
      stringArray0[3] = "{b'ox0~In sIlTo;pf";
      stringArray0[4] = "*KCOeIKPCKC-|96~VI@";
      classWriter0.visit(220, 27, "*KCOeIKPCKC-|96~VI@", "{b'ox0~In sIlTo;pf", "*KCOeIKPCKC-|96~VI@", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      ClassWriter classWriter1 = new ClassWriter(46);
      classWriter1.toByteArray();
      classWriter1.visit(46, (-421), "", (String) null, "0Wit/BRgTh8", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = (-421);
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.visitSource((String) null, "gbcYcR<\"bSvr");
      String string0 = "SourceFile";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("6.", "SourceFile");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '6/.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      Type type0 = Type.INT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.newFieldItem("j[oE", "j[oE", "RuntimeVisibleParameterAnnotations");
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      int int0 = classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      assertEquals(1, int0);
      
      classWriter0.toByteArray();
      int int1 = classWriter0.newUTF8("RuntimeVisibleParameterAnnotations");
      assertEquals(3, int1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.visitInnerClass("", "", "", (-421));
      classWriter0.visit((-421), (-421), "", "", "", (String[]) null);
      classWriter0.toByteArray();
      int int0 = classWriter0.newUTF8("");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      classWriter0.visitSource("InnerClasses", "");
      String[] stringArray0 = new String[0];
      classWriter0.visit(11, 22, "J1EV*4)`GZ=gp", "J1EV*4)`GZ=gp", "InnerClasses", stringArray0);
      int int0 = classWriter0.newConst("Y&");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-442));
      classWriter0.getCommonSuperClass("java/lang/Class", "java/lang/Class");
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2118);
      classWriter0.newInteger(889);
      classWriter0.addUninitializedType(" KVEy+|2XL@vt1+v9KM", 2944);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.addType("wheel.asm.ClassWriter");
      classWriter0.visitInnerClass("wheel.asm.ClassWriter", "wheel.asm.ClassWriter", "wheel.asm.ClassWriter", 192);
      classWriter0.addType("wheel.asm.ClassWriter");
      classWriter0.newClassItem("\" UdQ8`7^=lOa");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(2944, 292552704);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2944
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-280));
      classWriter0.visitEnd();
      classWriter0.newMethodItem("S_8*Z`v8wv^h3w", "S_8*Z`v8wv^h3w", "", true);
      Float float0 = new Float((float) 2);
      Float.min(2, 0.0F);
      Float.isFinite(1);
      Float.sum(641, (-280));
      Float.isFinite((-280));
      classWriter0.threshold = 641;
      classWriter0.visitField((-280), "S_8*Z`v8wv^h3w", "S_8*Z`v8wv^h3w", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", float0);
      classWriter0.newFloat(481.5557F);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      classWriter0.visit((-3992), (-280), "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "", "", stringArray0);
      classWriter0.newClassItem("");
      classWriter0.addType("b5FsV");
      classWriter0.newField("", "_* HvH)vx:)\"wdGN5", "S_8*Z`v8wv^h3w");
      Boolean boolean0 = new Boolean(true);
      classWriter0.visitField(641, "", "", "The array of suffixes must not be null", boolean0);
      classWriter0.visitOuterClass("1'tiD)}'/\"Zm", "_* HvH)vx:)\"wdGN5", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = (-796);
      ClassWriter classWriter0 = new ClassWriter((-796));
      String string0 = "E<t*Ht7x?iGA";
      classWriter0.newConst("E<t*Ht7x?iGA");
      classWriter0.newConstItem("E<t*Ht7x?iGA");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      stringArray0[1] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      stringArray0[2] = "F<+xzw[T;+u^*eK+KEv";
      classWriter0.visit(12, 12, "\"", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "F<+xzw[T;+u^*eK+KEv", stringArray0);
      Item item0 = classWriter0.newLong(12);
      Item item1 = classWriter0.newLong(12);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.visitInnerClass("", "", "", (-421));
      classWriter0.visitOuterClass("", "", "");
      classWriter0.visit((-421), (-421), "", "", "", (String[]) null);
      classWriter0.toByteArray();
      classWriter0.newUTF8("");
      int int0 = classWriter0.newMethod("", "", "", false);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-273));
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Label");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter((-442));
      Item item0 = classWriter0.newInteger((-442));
      Item item1 = classWriter0.newInteger((-442));
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-442));
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.Label", "java/lang/Class");
      assertEquals("java/lang/Object", string0);
      
      Item item0 = classWriter0.newMethodItem("wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label", true);
      Item item1 = classWriter0.newMethodItem("wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label", true);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2043);
      classWriter0.newField("", "", "");
      Item item0 = classWriter0.newFieldItem("", "", "");
      assertNotNull(item0);
  }
}
