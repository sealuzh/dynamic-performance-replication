/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 16:16:31 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)124, (byte)124, fieldTypeLong0, (byte)124, (byte)124, byteArray0, byteOrder0, (byte)124);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)124, (byte)124, fieldTypeLong0, (byte)124, (byte)124, byteArray0, byteOrder0, (byte)124);
      tiffField0.dump();
      assertEquals(124, tiffField0.getTag());
      assertEquals(124L, tiffField0.getCount());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(124, tiffField0.getOffset());
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(124, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeFloat0, 36, 36, byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ".C:p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[177];
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder1, 50);
      tiffField0.toString();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[47];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, 50, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(50, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(252, 252, fieldTypeFloat0, 252, 252, (byte[]) null, byteOrder0, 252);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(252, 252);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(252, tiffField0.getOffset());
      assertEquals(252, tiffField0.getDirectoryType());
      assertEquals(252, tiffField0.getSortHint());
      assertEquals(252, tiffField0.getTag());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[36];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1806, 1806, fieldTypeFloat0, 1806, 1806, byteArray0, byteOrder0, 1806);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1806, tiffField0.getTag());
      assertEquals(1806L, tiffElement0.offset);
      assertEquals(1806, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1806, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeByte0, (-1L), (byte)11, byteArray0, byteOrder0, (byte)11);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[59];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2668, 2668, fieldTypeDouble0, 2668, 2668, byteArray0, byteOrder0, 2668);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2668, tiffField0.getOffset());
      assertEquals("2668 (0xa6c: Unknown Tag): ", string0);
      assertEquals(2668, tiffField0.getDirectoryType());
      assertEquals(2668, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1751, 1751, fieldTypeFloat0, 1751, 1751, byteArray0, byteOrder0, 1751);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@25eedc5c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[84];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2670, 2670, fieldTypeShort0, 2209, 2670, byteArray0, byteOrder0, 2670);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.getIntArrayValue();
      assertEquals(2670, tiffField0.getOffset());
      assertEquals(2670, tiffField0.getTag());
      assertEquals(2670, tiffField0.getSortHint());
      assertEquals(2670, tiffField0.getDirectoryType());
      assertEquals(4418, tiffField0.getBytesLength());
      assertEquals(2209L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[59];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2661, 2661, fieldTypeDouble0, 2661, 2661, byteArray0, byteOrder0, 2661);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[47];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[59];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2668, 2668, fieldTypeDouble0, 2668, 2668, byteArray0, byteOrder0, 2668);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@f179a00
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1816, 1816, fieldTypeFloat0, 1816, 1816, byteArray0, byteOrder0, 1816);
      int int0 = tiffField0.getSortHint();
      assertEquals(1816, tiffField0.getTag());
      assertEquals(1816, int0);
      assertEquals(1816, tiffField0.getOffset());
      assertEquals(1816, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50780, (-1589), fieldTypeDouble0, 50780, 50780, byteArray0, (ByteOrder) null, (-1589));
      String string0 = tiffField0.getTagName();
      assertEquals(50780, tiffField0.getOffset());
      assertEquals((-1589), tiffField0.getSortHint());
      assertEquals((-1589), tiffField0.getDirectoryType());
      assertEquals(50780, tiffField0.getTag());
      assertEquals("BestQualityScale", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, 331, (byte)0, byteArray0, byteOrder0, 331);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0 (331 Short)", string0);
      assertEquals(331, tiffField0.getSortHint());
      assertEquals(662, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeFloat0, 30, 30, byteArray0, byteOrder0, 30);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@78c55331 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[177];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65531, 65531, fieldTypeLong0, 65531, 65531, byteArray0, byteOrder0, 65531);
      tiffField0.getIntValueOrArraySum();
      String string0 = byteOrder0.toString();
      assertEquals("BIG_ENDIAN", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeFloat0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getDoubleArrayValue();
      assertEquals(144, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3469), (-3469), fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      fieldTypeRational0.getValue(tiffField0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3469), tiffField0.getDirectoryType());
      assertEquals((-3469), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 60L, byteArray0, byteOrder0, 1619);
      tiffField0.dump();
      tiffField0.getFieldType();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1619, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.SHORT, 331, (byte)0, byteArray0, byteOrder0, 331);
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getOffset();
      assertEquals(331, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(662, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeLong0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      Byte byte0 = new Byte((byte)1);
      tiffField0.toString();
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)122, (byte)122, fieldTypeDouble0, (byte)122, (byte)122, byteArray0, byteOrder0, (byte)122);
      tiffField0.getDoubleArrayValue();
      assertEquals(976, tiffField0.getBytesLength());
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(122, tiffField0.getOffset());
      assertEquals(122, tiffField0.getTag());
      assertEquals(122, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(130, 130, fieldTypeByte0, 130, 130, byteArray0, byteOrder0, 1886);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7b7e7ca9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)126, (byte)126, fieldTypeLong0, (byte)126, (byte)126, byteArray0, byteOrder0, (byte)126);
      tiffField0.getDoubleArrayValue();
      assertEquals(126, tiffField0.getTag());
      assertEquals(126, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(126, tiffField0.getOffset());
      assertEquals(504, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 12, 12, byteArray0, byteOrder0, 12);
      tiffField0.getIntArrayValue();
      tiffField0.isLocalValue();
      System.setCurrentTimeMillis(12);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[59];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2668, 2668, fieldTypeDouble0, 2668, 2668, byteArray0, byteOrder0, 2668);
      tiffField0.dump();
      assertEquals(2668, tiffField0.getTag());
      assertEquals(2668, tiffField0.getSortHint());
      assertEquals(21344, tiffField0.getBytesLength());
      assertEquals(2668, tiffField0.getOffset());
      assertEquals(2668, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeFloat0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.dump();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(144, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65467, 65467, fieldTypeByte0, 65467, 65467, byteArray0, byteOrder0, 65467);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65467, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(65467, tiffField0.getDirectoryType());
      assertEquals(65467, tiffField0.getSortHint());
      assertEquals(65467, tiffField0.getTag());
      assertEquals(65467, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[177];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, int0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)124, (byte)124, fieldTypeLong0, (byte)124, (byte)124, byteArray0, byteOrder0, (byte)124);
      tiffField0.getIntArrayValue();
      assertEquals(124, tiffField0.getDirectoryType());
      assertEquals(124, tiffField0.getSortHint());
      assertEquals(496, tiffField0.getBytesLength());
      assertEquals(124, tiffField0.getOffset());
      assertEquals(124, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(36, (-162), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).FLOAT).RATIONAL, 36, (-162), byteArray0, byteOrder0, 36);
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField((-1913), (byte)0, fieldTypeAscii0, (byte)0, (-1913), byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals((-1913), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1913), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1755, 1755, fieldTypeAscii0, 1755, 1755, byteArray0, byteOrder0, 12);
      String string0 = tiffField0.getStringValue();
      assertEquals(12, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1755, tiffField0.getBytesLength());
      assertEquals(1755, tiffField0.getDirectoryType());
      assertEquals(1755, tiffField0.getTag());
      assertEquals(1755, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[65];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2668, 2668, fieldTypeLong0, 2668, 2668, byteArray0, byteOrder0, 2668);
      String string0 = tiffField0.toString();
      assertEquals(2668, tiffField0.getSortHint());
      assertEquals(2668, tiffField0.getDirectoryType());
      assertEquals(10672, tiffField0.getBytesLength());
      assertEquals(2668, tiffField0.getOffset());
      assertEquals("2668 (0xa6c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (2668 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(36, (-162), fieldTypeRational0, 36, (-87L), byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[130];
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1416, 1416, fieldTypeRational0, 1416, 1062L, byteArray0, byteOrder0, 14);
      tiffField0.dump();
      tiffField0.getDoubleArrayValue();
      assertEquals(1416, tiffField0.getDirectoryType());
      assertEquals(1416, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(11328, tiffField0.getBytesLength());
      assertEquals(1062, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[130];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(2850, 2850, fieldTypeByte0, 2850, (-1024L), byteArray0, byteOrder0, 2850);
      String string0 = tiffField0.toString();
      assertEquals(2850, tiffField0.getSortHint());
      assertEquals((-1024), tiffField0.getOffset());
      assertEquals(2850, tiffField0.getBytesLength());
      assertEquals("2850 (0xb22: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (130) (2850 Byte)", string0);
      assertEquals(2850, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[142];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65531, 29, fieldTypeAscii0, 65531, 29, byteArray0, byteOrder0, 18);
      tiffField0.toString();
      assertEquals(29, tiffField0.getOffset());
      assertEquals(65531, tiffField0.getTag());
      assertEquals(65531, tiffField0.getBytesLength());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[146];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1405, 1405, fieldTypeShort0, 1405, 0L, byteArray0, byteOrder0, 1405);
      tiffField0.dump();
      assertEquals(1405, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1405, tiffField0.getTag());
      assertEquals(1405, tiffField0.getSortHint());
      assertEquals(2810, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[394];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1751, 1751, fieldTypeLong0, 1751, 1751, byteArray0, byteOrder0, 1751);
      String string0 = tiffField0.toString();
      assertEquals(1751, tiffField0.getSortHint());
      assertEquals("1751 (0x6d7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (98) (1751 SLong)", string0);
      assertEquals(1751, tiffField0.getDirectoryType());
      assertEquals(7004, tiffField0.getBytesLength());
      assertEquals(1751, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[408];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1789, 1789, fieldTypeFloat0, 1789, 1789, byteArray0, byteOrder0, 1789);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1789, tiffField0.getSortHint());
      assertEquals(1789, tiffField0.getTag());
      assertEquals(7156, tiffField0.getBytesLength());
      assertEquals(1789, tiffField0.getOffset());
      assertEquals(1789, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2034, 2034, fieldTypeDouble0, 2034, 2034, byteArray0, byteOrder0, 2034);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2034, tiffField0.getSortHint());
      assertEquals(2034, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(16272, tiffField0.getBytesLength());
      assertEquals(2034, tiffField0.getTag());
      assertEquals(2034, tiffField0.getOffset());
  }
}
