/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 06 08:47:23 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">(Ss3{@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oe9Yr~q;f;*/[HO");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KadiL9s");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZrNst#-?{YsV");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[dsqQ");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aquJ<9SpjN~C6.k5");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ulbv|m]4V@s%8rUhLt");
      Token token0 = xPathLexer0.literal();
      assertEquals("lbv|m]4V@s%8r", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      assertNotNull(token0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qLR{EN^i);I*.CNV");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("qLR", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3axn2V0oNX");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3h3KyJL,x");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(18, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.61tF9WE");
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2148));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-2148), int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yP4Abu-");
      xPathLexer0.setXPath(";[$/hd@<W?p1a=Ts");
      char char0 = xPathLexer0.LA(12);
      assertEquals('1', char0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("e", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("n", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(10);
      assertEquals('X', char0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals(") (", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5!-Qu#wWq(;_6Z^");
      Token token0 = new Token(0, ".5!-Qu#wWq(;_6Z^", 4, (-96));
      xPathLexer0.setPreviousToken(token0);
      assertEquals(0, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{6,MURr/M?[Ye}O");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p5Ccv`kU");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('/');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('0');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_U=;FhY)tN11C}|ws");
      boolean boolean0 = xPathLexer0.isIdentifierChar('}');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('5');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume(0);
      assertEquals(") (", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(109);
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-2642));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-747));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")0 (");
      xPathLexer0.consume((-2029));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2789));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,.;'*S_");
      xPathLexer0.consume((-429));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2062));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n D");
      xPathLexer0.consume((-639));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-702));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("aqu<9SpjN~C6.k5");
      xPathLexer0.consume((-4915));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-138));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dq<9SoN.n.kL.");
      xPathLexer0.consume((-2206));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-857));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7k]lmlE");
      xPathLexer0.consume((-2619));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2619));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ 4s(");
      xPathLexer0.consume((-1230));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1432));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2Xq]wXI");
      xPathLexer0.consume((-445));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2029));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*jp<");
      xPathLexer0.consume((-1586));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1588));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.consume((-4609));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1521));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" '~J@$:' W3$");
      xPathLexer0.consume((-925));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-32));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-688));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-688));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,.;'*S_");
      xPathLexer0.consume((-429));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-234));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-4173));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ZNst#-?{Y/V");
      xPathLexer0.setXPath("Q~z%iybYH;\"7~[!");
      Token token0 = xPathLexer0.equals();
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("%i", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("b", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("YH", token6.getTokenText());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      String string0 = xPathLexer0.getXPath();
      assertEquals("'#M~", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (21) (r)");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(23, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/y-!D<%W>=>=}t/V1");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,._");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3axn2V0oNX");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      Token token0 = xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,._");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(26, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("R", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals(")i", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,._");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("d", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F]@oz&@AuZc Y0x[1d");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("F", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("]", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("oz&@AuZc Y0x[1d", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.61tF9");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v/\"9Vx");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(12, token0.getTokenType());
      assertEquals("v/", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/y-!D<%W>=>=}t/V1");
      Token token0 = xPathLexer0.dots();
      assertEquals("/", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("%", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("W", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(">=", token6.getTokenText());
      assertEquals(10, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token7.getTokenText());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{6,MURr/M?[Ye}O");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("{6", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(",", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("MURr", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{6,MURr/M?[Ye}O");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".61tF9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".61", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".5bA$N5#wEq(;_6L^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".5", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".2!q]wVI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".2", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".0lt&.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".0", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!=+Tr>/4&#<4:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(22, token0.getTokenType());
      assertEquals("!=", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.pipe();
      xPathLexer0.not();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("~", token1.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.pipe();
      assertEquals("c", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(".", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals((-1), token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|S*Y@}tHnM");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{2Xq]wXI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{2Xq]wXI", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z7Yzlpm!E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("z7Yzlpm", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x^.6Q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v -");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("v", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("udk@NGr8t@##^F]B");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("udk", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s(-@jZd%.HJDn_U");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("s", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.equals();
      assertEquals("m", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(".w", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qQVU]6zA");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("qQVU", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("p1*e[!`_");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("p1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nv}'9VN>,XDt:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("nv", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l]9po~2LI)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("l", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(".w", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jcq#:,9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("jcq", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("iM", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.colon();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.dots();
      assertEquals("m.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.slashes();
      assertEquals("k", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("e", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("s", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.whitespace();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fzcfKKjnHzF&v");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("fzcfKKjnHzF", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("w", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dR,._");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("dR", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b2g4x,ZU}%M*0|");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("b2g4x", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3axn2V0oNX");
      Token token0 = xPathLexer0.equals();
      assertEquals("3", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("axn2V0oNX", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{6,MURr/M?[Ye}O");
      xPathLexer0.setXPath("`z6-ka");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`z6-ka", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_?f4GFV&GjOG|-uB/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^aqt2C`\"x@f8^i]J");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]Xr6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(4, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<vRseA5Kr");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.setXPath("jQN\"ZT{Ez<:?*'");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("QN", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("ZT", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Xzo*5?yH~Reb\"0H&JDt");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Xzo", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W58paGk0!{KM'[^U<!");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("W58paGk0", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Vg:PfKcSfRz7$X(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Vg", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("U(=]pZPNwA@+B%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("U", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Tzl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Tzl", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Sy:7]lmlE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Sy", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ro*ue\"t#q/UmC<8y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ro", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q&Hs{dsW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P>$y~o%G2q[6!;;fE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("P", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("O,|7|{<TI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("O", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N3aHvZt*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("N3aHvZt", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K?js1Zo_;pR70.e-_31o");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("K", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Jqu<9SpjKC6.k5");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Jqu", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("I", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("HK7NBG|D");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("HK7NBG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G7Y]lmlE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G7Y", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ej {O=3YXN}a");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ej", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("DzZIwd!K33?g.y\"wsh:");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("DzZIwd", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C2c2}+w2V");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("C2c2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("B!r7&xizl@i;ae");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("B", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AIn^b#C<rU2QtPneQ*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("AIn", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gvsSC~@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("gvsSC", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(16, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("?iDJhu");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("?iDJhu", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">r=`L{urF{x-p");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("r", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=Z^A}5H5kT&q");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("=", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<m$VIR&BZ| Z");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";/=EX$)Cl}HYR86/M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";/=EX$)Cl}HYR86/M", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":7[]lmlE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("97k]lmli'");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("97", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8k;3m8T<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("8", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("63aHvZ*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("63", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h~.2%l5S=");
      Token token0 = xPathLexer0.colon();
      assertEquals("h", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("~.", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("2%", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("l", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("5", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("'#M~");
      xPathLexer0.setXPath("4Fc2Q;,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("4", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3.61tF9WE");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("3.61", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2IY4}V7 j4e{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("2", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1~vy-{E8Ho?Y:!<");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("1", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0rde&rbdL{:L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{6,MURr/M?[Ye}O");
      Token token0 = xPathLexer0.dots();
      assertEquals("{", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("6,", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("U", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("R", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("r", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(11, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1th");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(31, token0.getTokenType());
      assertEquals(".1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("th", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/y-!D<%W>=>=}t/V1");
      Token token0 = xPathLexer0.dots();
      assertEquals("/", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",x='<s7/1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(32, token0.getTokenType());
      assertEquals(",", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" +xG]w6%[g");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*iiJP");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("*", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&1U^`g#]pD%M.HCN\"R]");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&1U^`g#]pD%M.HCN\"R]", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<*%Hos7fP");
      Token token0 = xPathLexer0.relationalOperator();
      assertNotNull(token0);
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%Hos7fP", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$hZ1dM\"=");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(26, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#b'#VFD)\"~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("#b'#VFD)\"~", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/y-!D<%W>=>=}t/V1");
      Token token0 = xPathLexer0.equals();
      assertEquals("/", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(23, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" '~~J[@*$:' ]W3$");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.consume(60);
      assertEquals("[ (", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(3, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("iM", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":74]m");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")iM(");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(")", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("M", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("(", token3.getTokenText());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
  }
}
