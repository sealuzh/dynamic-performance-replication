/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 07:31:32 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.version = 2833;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "TO1}d%F<28s!4M|", "TO1}d%F<28s!4M|", "TO1}d%F<28s!4M|", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(71, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3699);
      classWriter0.index = (-2555);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, "VyF9zd_", "){Ym^O|rjH9A", "<b!DX", "'?*s{/");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(121, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "TO1}d%F28NUs!4M|", "TO1}d%F28NUs!4M|", "TO1}d%F28NUs!4M|", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "eeUz9(h3M&E5:O|D&3", "eeUz9(h3M&E5:O|D&3", "", "eeUz9(h3M&E5:O|D&3");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3699);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 290, "", "1.>>8Z3\"fwJ", "M2^%SaLPoiu8'", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3689);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 396, "rLu", "System", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@120b481e
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "eeUz9(h3M&E5:O|D&3", "eeUz9(h3M&E5:O|D&3", "", "eeUz9(h3M&E5:O|D&3");
      Attribute attribute0 = new Attribute("eeUz9(h3M&E5:O|D&3");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3699);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, "VyF9zd_", "){Ym^O|rjH9A", "<b!DX", "'?*s{/");
      fieldWriter0.visitAnnotation("x(Z&}K:KP4dz<e'", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3664);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2142), "#cl{qaAy", "3", (String) null, (Object) null);
      classWriter0.visit(49, (-2142), ">-x39(LQ>>b~cz", (String) null, "uB.3eI>", (String[]) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(105, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3664);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2142), "#cl{qaAy", "3", (String) null, (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(84, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3699);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, "VyF9zd_", "){Ym^O|rjH9A", "<b!DX", "'?*s{/");
      fieldWriter0.visitAnnotation("VyF9zd_", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3664);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "3", "org.apache.commons.io.filefilter.DirectoryFileFilter", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("#cl{qaAy", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(142, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3699);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, "VyF9zd_", "){Ym^O|rjH9A", "<b!DX", "'?*s{/");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "){Ym^O|rjH9A", "", "", "'?*s{/");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-757), "", "Signature", "0@EU", "Signature");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "TO1}d%F28NUs!4M|", "TO1}d%F28NUs!4M|", "TO1}d%F28NUs!4M|", (Object) null);
      Attribute attribute0 = new Attribute("TO1}d%F28NUs!4M|");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
