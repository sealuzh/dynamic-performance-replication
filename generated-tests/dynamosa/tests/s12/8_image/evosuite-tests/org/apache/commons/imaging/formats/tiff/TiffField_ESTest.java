/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:11:35 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-38), 5, fieldTypeShort0, 1786L, 133L, byteArray0, byteOrder0, (-39));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-38), tiffField0.getTag());
      assertEquals(218, int0);
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)42;
      byteArray0[4] = (byte) (-101);
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-101), fieldTypeRational0, (byte)10, (byte) (-1), byteArray0, (ByteOrder) null, (byte)10);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-101), tiffField0.getDirectoryType());
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-101);
      TiffField tiffField0 = new TiffField((-1717986917), (byte) (-101), fieldTypeRational0, (byte)10, (byte) (-1), byteArray0, (ByteOrder) null, (byte)10);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-101), tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40094, 2346, fieldTypeShort0, 40094, 40094, byteArray0, byteOrder0, 39);
      tiffField0.dump();
      assertEquals(2346, tiffField0.getDirectoryType());
      assertEquals(40094, tiffField0.getTag());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, (-604), fieldTypeLong0.ASCII, 470L, (-2109L), byteArray0, byteOrder0, (-895));
      String string0 = tiffField0.getValueDescription();
      assertEquals(9, tiffField0.getTag());
      assertEquals((-2109), tiffField0.getOffset());
      assertEquals((-604), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-895), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-282), fieldTypeShort0, 0, 2680L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-282), tiffField0.getDirectoryType());
      assertEquals(2680, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2842, 2842, fieldTypeAscii0, 2842, 2842, byteArray0, byteOrder0, (byte) (-114));
      tiffField0.getValue();
      assertEquals(2842, tiffField0.getDirectoryType());
      assertEquals(2842, tiffField0.getTag());
      assertEquals((-114), tiffField0.getSortHint());
      assertEquals(2842, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(324, 1777, fieldTypeByte0, 1777, 324, byteArray0, byteOrder0, 324);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getOffset());
      assertEquals(324, tiffField0.getSortHint());
      assertEquals(1777, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 661, fieldTypeLong0, 509L, 523L, byteArray0, byteOrder0, 845);
      int int0 = tiffField0.getTag();
      assertEquals(845, tiffField0.getSortHint());
      assertEquals(523, tiffField0.getOffset());
      assertEquals(5, int0);
      assertEquals(661, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), 1, fieldTypeLong0, 48L, (-2147483648L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-995), (-995), fieldTypeAscii0, 1205L, (-465L), byteArray0, byteOrder0, (-763));
      String string0 = tiffField0.getStringValue();
      assertEquals((-995), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-763), tiffField0.getSortHint());
      assertEquals((-995), tiffField0.getTag());
      assertEquals((-465), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4096, (-4792), fieldTypeAscii0, 0L, (-1065L), byteArray0, byteOrder0, 4096);
      int int0 = tiffField0.getSortHint();
      assertEquals(4096, int0);
      assertEquals((-1065), tiffField0.getOffset());
      assertEquals((-4792), tiffField0.getDirectoryType());
      assertEquals(4096, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-4929), fieldTypeFloat0, (byte)96, (byte)0, byteArray0, byteOrder0, (-287));
      int int0 = tiffField0.getSortHint();
      assertEquals((-4929), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-287), int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145239673, 0, fieldTypeLong0, 728L, 3256L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3256, int0);
      assertEquals(2145239673, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(34892, "NLUh)+hcQ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2144842215), 2738, fieldTypeRational0, 2036L, (-977L), byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-2144842215), tiffField0.getTag());
      assertEquals((-977), int0);
      assertEquals(2738, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte) (-13);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-111), (-1750), fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, 1305);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-111), tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1750), tiffField0.getDirectoryType());
      assertEquals(1305, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-36);
      TiffField tiffField0 = new TiffField(50, (byte)0, fieldTypeLong0, 50, (byte)101, byteArray0, byteOrder0, (byte) (-36));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(319, (byte)51, fieldTypeByte0, (byte)1, (-2847L), byteArray0, byteOrder0, (-3753));
      tiffField0.getIntValue();
      assertEquals((-3753), tiffField0.getSortHint());
      assertEquals(51, tiffField0.getDirectoryType());
      assertEquals((-2847), tiffField0.getOffset());
      assertEquals(319, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50709, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, 50, fieldTypeShort0, (byte)1, 384L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(384, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-38);
      TiffField tiffField0 = new TiffField(2147311256, (-2240), fieldTypeShort0, 1L, 4L, byteArray0, byteOrder0, (byte) (-52));
      tiffField0.getIntValue();
      assertEquals(2147311256, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-2240), tiffField0.getDirectoryType());
      assertEquals((-52), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-752), (String) null);
      TiffField tiffField0 = new TiffField(36, 3, fieldTypeFloat0, (-913L), 255L, byteArray0, (ByteOrder) null, 2605);
      tiffField0.getFieldTypeName();
      assertEquals(36, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(2605, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeRational0, (byte)3, (byte)3, byteArray0, byteOrder0, (byte)3);
      tiffField0.getFieldTypeName();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(11, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(13, (-1693), fieldTypeRational0, 13, 11, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals((-1693), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-4375L), (-4375L), byteArray0, byteOrder0, (byte)53);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4375), tiffField0.getOffset());
      assertEquals(53, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-282), fieldTypeShort0, 0, 2680L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-282), tiffField0.getDirectoryType());
      assertEquals(2680, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-38), 5, fieldTypeShort0, 1786L, 133L, byteArray0, byteOrder0, (-39));
      tiffField0.getFieldType();
      assertEquals((-39), tiffField0.getSortHint());
      assertEquals((-38), tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(319, (byte)51, fieldTypeByte0, (byte)1, (-2847L), byteArray0, byteOrder0, (-3753));
      tiffField0.getDoubleValue();
      assertEquals((-2847), tiffField0.getOffset());
      assertEquals(319, tiffField0.getTag());
      assertEquals((-3753), tiffField0.getSortHint());
      assertEquals(51, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50709, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, 50, fieldTypeShort0, (byte)1, 384L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(384, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-92);
      TiffField tiffField0 = new TiffField(31, 48, fieldTypeRational0.BYTE, 1L, 1L, byteArray0, byteOrder0, 48);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-1L), byteArray0, byteOrder0, (-395));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-395), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-28), 107, fieldTypeLong0, 509L, (byte)0, byteArray0, byteOrder0, (byte) (-28));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(107, int0);
      assertEquals((-28), tiffField0.getTag());
      assertEquals((-28), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-1L), byteArray0, byteOrder0, (-395));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-395), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(126, 0, fieldTypeLong0, (-1L), 32L, byteArray0, byteOrder0, 2147311256);
      long long0 = tiffField0.getCount();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1L), long0);
      assertEquals(126, tiffField0.getTag());
      assertEquals(2147311256, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 347);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1469), (byte)93, fieldTypeLong0, (-1L), 1642L, byteArray0, byteOrder0, (-540));
      tiffField0.getBytesLength();
      assertEquals((-540), tiffField0.getSortHint());
      assertEquals((-1469), tiffField0.getTag());
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(1642, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145239673, 2147311256, fieldTypeLong0, 1L, 2145239673, byteArray0, byteOrder0, 37398);
      tiffField0.getByteOrder();
      assertEquals(2145239673, tiffField0.getTag());
      assertEquals(2145239673, tiffField0.getOffset());
      assertEquals(37398, tiffField0.getSortHint());
      assertEquals(2147311256, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40094, 2346, fieldTypeShort0, 40094, 40094, byteArray0, byteOrder0, 39);
      tiffField0.getByteArrayValue();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getOffset());
      assertEquals(40094, tiffField0.getTag());
      assertEquals(2346, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2627), fieldTypeRational0, 0L, (-2627), byteArray0, byteOrder0, (byte) (-11));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals((-2627), tiffField0.getDirectoryType());
      assertEquals((-2627), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-4929), fieldTypeFloat0, (byte)96, (byte)0, byteArray0, byteOrder0, (-287));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("T6Options");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals((-4929), tiffField0.getDirectoryType());
      assertEquals(96L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-287), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 179, fieldTypeRational0, 960L, 983L, byteArray0, byteOrder0, 7);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Qya.=dhd'29");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(179, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(983, tiffField0.getOffset());
      assertEquals(960L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1840), (-1840), fieldTypeRational0, (-1840), (-1840), (byte[]) null, byteOrder0, (-1840));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (-50496L), (-50496L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(284, 284, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 284);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-8), (byte) (-8), fieldTypeRational0, (byte) (-8), (byte) (-8), byteArray0, byteOrder0, (byte) (-8));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 3736, byteArray0, byteOrder0, 3736);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(40094, 2346, fieldTypeShort0, 40094, 40094, byteArray0, byteOrder0, 39);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1454), (-1454), fieldTypeByte0, (-1454), (-1454), byteArray0, (ByteOrder) null, (-1454));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147132578), 34020, fieldTypeRational0, 1L, 34020, byteArray0, byteOrder0, (-2224));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-1048), (-1048), fieldTypeByte0, (-1048), (-1638L), (byte[]) null, byteOrder0, (-1048));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-6), (byte) (-6), fieldTypeRational0, (byte) (-6), (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-635), (-635), (FieldType) null, (-635), (-635), byteArray0, byteOrder0, (-635));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2202), (-2202), fieldTypeRational0, (-2202), (-2202), (byte[]) null, byteOrder0, (-2202));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-6), (byte) (-6), fieldTypeRational0, (byte) (-6), (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-2147483646), fieldTypeLong0, 2621, 2621, byteArray0, byteOrder0, (-2147483646));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, (FieldType) null, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-30), (byte) (-30), fieldTypeRational0, (byte) (-30), (byte) (-30), byteArray0, byteOrder0, (byte) (-30));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3721), (-3721), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-1202));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (-1073));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeRational0, (byte)36, (byte)36, (byte[]) null, byteOrder0, (byte)36);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2318), (-2318), fieldTypeShort0, (-2318), (-2318), byteArray0, byteOrder0, (-2318));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40091, 50, fieldTypeRational0, 769, 40091, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)3, (byte)3, fieldTypeRational0, (byte)3, (byte)3, (byte[]) null, byteOrder0, (byte)3);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-56), (byte) (-56), fieldTypeRational0, (byte) (-56), (byte) (-56), byteArray0, byteOrder0, (byte) (-56));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 3736, byteArray0, byteOrder0, 3736);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, (FieldType) null, (byte)48, (byte)48, byteArray0, byteOrder0, (byte)48);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-76), (byte) (-76), fieldTypeRational0, (byte) (-76), (byte) (-76), byteArray0, byteOrder0, (byte) (-76));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, (-3311L), 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2141847207, 2141847207, fieldTypeLong0, 2141847207, 2141847207, byteArray0, byteOrder0, 2141847207);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Qya.=dhd'29");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "3/");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 2621, fieldTypeRational0, 1L, (-530L), byteArray0, byteOrder0, 2621);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "M]^s &!|{vV]C)|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)21, (byte)21, fieldTypeShort0, (byte)21, (byte)21, byteArray0, byteOrder0, (byte)21);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1703), (-1703), fieldTypeRational0, (-1703), (-1703), byteArray0, byteOrder0, (-1703));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)10, fieldTypeRational0, 1, (byte)10, byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(259, 65002, fieldTypeLong0.FLOAT, 882L, 65002, byteArray0, byteOrder0, 37378);
      StringWriter stringWriter0 = new StringWriter((byte)50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("259 (0x103: Compression): 0.0, 0.0 (882 Float)\n", stringWriter0.toString());
      assertEquals(65002, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-111), (-1750), fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, 1305);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1305, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-1750), tiffField0.getDirectoryType());
      assertEquals((-111), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 179, fieldTypeRational0, 960L, 983L, byteArray0, byteOrder0, 7);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(983, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(179, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, ": ");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(9, (-2929), fieldTypeByte0, 50, (-275L), byteArray0, (ByteOrder) null, 34019);
      tiffField0.getByteOrder();
      assertEquals(9, tiffField0.getTag());
      assertEquals((-2929), tiffField0.getDirectoryType());
      assertEquals(34019, tiffField0.getSortHint());
      assertEquals((-275), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1945, (-1293), fieldTypeByte0, (-1293), (-1293), (byte[]) null, byteOrder0, 1945);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeLong0, 1780, (-1960L), byteArray0, byteOrder0, 42037);
      tiffField0.getFieldType();
      assertEquals(34, tiffField0.getTag());
      assertEquals(42037, tiffField0.getSortHint());
      assertEquals((-1960), tiffField0.getOffset());
      assertEquals(34, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-4929), fieldTypeFloat0, (byte)96, (byte)0, byteArray0, byteOrder0, (-287));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-4929), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-287), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(50969, 50969, fieldTypeRational0, 50969, 50969, (byte[]) null, (ByteOrder) null, 50969);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1840), (-1840), fieldTypeRational0, (-1840), (-1840), (byte[]) null, byteOrder0, (-1840));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-13), fieldTypeRational0, (byte)101, (byte)0, byteArray0, byteOrder0, (-1553));
      int int0 = tiffField0.getOffset();
      assertEquals((-1553), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-13), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 3736, byteArray0, byteOrder0, 3736);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(3736, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3736, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " @Tll");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, (byte[]) null, byteOrder0, 6);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145239673, 2147311256, fieldTypeLong0, 1L, 2145239673, byteArray0, byteOrder0, 37398);
      long long0 = tiffField0.getCount();
      assertEquals(2145239673, tiffField0.getTag());
      assertEquals(37398, tiffField0.getSortHint());
      assertEquals(2147311256, tiffField0.getDirectoryType());
      assertEquals(2145239673, tiffField0.getOffset());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-4929), fieldTypeFloat0, (byte)96, (byte)0, byteArray0, byteOrder0, (-287));
      tiffField0.getBytesLength();
      assertEquals((-4929), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-287), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeRational0, 1747, 1747, byteArray0, byteOrder0, 1747);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[172];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5e8dd480 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeRational0, 1747, 1747, byteArray0, byteOrder0, 1747);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(887, 887, fieldTypeDouble0, 887, 887, byteArray0, byteOrder0, 887);
      tiffField0.getDoubleArrayValue();
      assertEquals(887, tiffField0.getDirectoryType());
      assertEquals(887, tiffField0.getSortHint());
      assertEquals(887L, tiffField0.getCount());
      assertEquals(887, tiffField0.getOffset());
      assertEquals(887, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeFloat0, 16, 16, byteArray0, byteOrder0, 16);
      tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getTag());
      assertEquals(16L, tiffField0.getCount());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[192];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[155];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(154, 154, fieldTypeByte0, 154, 154, byteArray0, byteOrder0, 154);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6d5416f1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[153];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50739, 50739, fieldTypeLong0, 50739, 50739, byteArray0, byteOrder0, 50739);
      tiffField0.getDoubleArrayValue();
      assertEquals(50739L, tiffField0.getCount());
      assertEquals(50739, tiffField0.getTag());
      assertEquals(50739, tiffField0.getSortHint());
      assertEquals(50739, tiffField0.getDirectoryType());
      assertEquals(50739, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33747, 33747, fieldTypeShort0, 33747, 33747, byteArray0, byteOrder0, 33747);
      tiffField0.getDoubleArrayValue();
      assertEquals(33747, tiffField0.getDirectoryType());
      assertEquals(33747, tiffField0.getSortHint());
      assertEquals(33747, tiffField0.getTag());
      assertEquals(33747L, tiffField0.getCount());
      assertEquals(33747, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(8, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1757, 1757, fieldTypeRational0, 1757, 1757, byteArray0, byteOrder0, 1757);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1757, tiffField0.getSortHint());
      assertEquals(1757, tiffField0.getTag());
      assertEquals(1757, tiffField0.getOffset());
      assertEquals(1757L, tiffField0.getCount());
      assertEquals(1757, tiffField0.getDirectoryType());
      assertEquals(14056, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[198];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@323e18b3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[155];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50721, 50721, fieldTypeLong0, 50721, 50721, byteArray0, byteOrder0, 50721);
      tiffField0.getIntArrayValue();
      assertEquals(50721, tiffField0.getTag());
      assertEquals(50721, tiffField0.getOffset());
      assertEquals(202884, tiffField0.getBytesLength());
      assertEquals(50721, tiffField0.getDirectoryType());
      assertEquals(50721, tiffField0.getSortHint());
      assertEquals(50721L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1757, 1757, fieldTypeRational0, 1757, 1757, byteArray0, byteOrder0, 1757);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33747, 33747, fieldTypeShort0, 33747, 33747, byteArray0, byteOrder0, 33747);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(33747, tiffField0.getSortHint());
      assertEquals(33747, tiffField0.getDirectoryType());
      assertEquals(67494, tiffField0.getBytesLength());
      assertEquals(33747, tiffField0.getTag());
      assertEquals(33747L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(33747, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(284, 284, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 284);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2274), 1029, fieldTypeAscii0, 910L, (-2274), byteArray0, byteOrder0, 1029);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2274), tiffField0.getTag());
      assertEquals(910, tiffField0.getBytesLength());
      assertEquals(1029, tiffField0.getSortHint());
      assertEquals((-2274), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1029, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1762, 1762, fieldTypeRational0, 1762, 1762, byteArray0, byteOrder0, 1762);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@51c39901
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50739, 50739, fieldTypeLong0, 50739, 50739, byteArray0, byteOrder0, 50739);
      String string0 = tiffField0.getTagName();
      assertEquals("ShadowScale", string0);
      assertEquals(50739, tiffField0.getSortHint());
      assertEquals(50739, tiffField0.getTag());
      assertEquals(50739, tiffField0.getDirectoryType());
      assertEquals(50739, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-18), (byte) (-18), fieldTypeShort0, (byte) (-18), (byte) (-18), byteArray0, byteOrder0, (byte) (-18));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "|3)It/O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[345];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeFloat0, 80L, 80L, byteArray0, byteOrder0, 46);
      tiffField0.dump();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(320, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getOffset());
      assertEquals(80L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50933, 50933, fieldTypeRational0.SBYTE, 50933, 50933, byteArray0, byteOrder0, 50933);
      tiffField0.dump();
      assertEquals(50933, tiffField0.getTag());
      assertEquals(50933, tiffField0.getSortHint());
      assertEquals(50933, tiffField0.getOffset());
      assertEquals(50933L, tiffField0.getCount());
      assertEquals(50933, tiffField0.getBytesLength());
      assertEquals(50933, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[199];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(933, (String) null);
      TiffField tiffField0 = new TiffField(933, 933, fieldTypeByte0, 3394, 933, byteArray0, byteOrder0, 933);
      String string0 = tiffField0.toString();
      assertEquals("933 (0x3a5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (199) (3394 null)", string0);
      assertEquals(933, tiffField0.getSortHint());
      assertEquals(3394, tiffField0.getBytesLength());
      assertEquals(933, tiffField0.getOffset());
      assertEquals(933, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[420];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(924, 924, fieldTypeDouble0, 924, 924, byteArray0, byteOrder0, 924);
      tiffField0.dump();
      assertEquals(924, tiffField0.getOffset());
      assertEquals(924, tiffField0.getDirectoryType());
      assertEquals(924, tiffField0.getTag());
      assertEquals(924, tiffField0.getSortHint());
      assertEquals(7392, tiffField0.getBytesLength());
      assertEquals(924L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(887, 887, fieldTypeDouble0, 887, 887, byteArray0, byteOrder0, 887);
      tiffField0.dump();
      assertEquals(887, tiffField0.getSortHint());
      assertEquals(887, tiffField0.getDirectoryType());
      assertEquals(887L, tiffField0.getCount());
      assertEquals(887, tiffField0.getOffset());
      assertEquals(887, tiffField0.getTag());
      assertEquals(7096, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[403];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(246, 65535, fieldTypeLong0, 246, (-1229L), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(246L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("246 (0xf6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (100) (246 IFD)", string0);
      assertEquals((-1229), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50739, 50739, fieldTypeLong0, 50739, 50739, byteArray0, byteOrder0, 50739);
      tiffField0.dump();
      assertEquals(50739, tiffField0.getOffset());
      assertEquals(50739, tiffField0.getTag());
      assertEquals(50739, tiffField0.getDirectoryType());
      assertEquals(50739, tiffField0.getSortHint());
      assertEquals(202956, tiffField0.getBytesLength());
      assertEquals(50739L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(65546, 65546, fieldTypeShort0, 65546, 65546, byteArray0, byteOrder0, 65546);
      tiffField0.dump();
      assertEquals(65546, tiffField0.getTag());
      assertEquals(65546, tiffField0.getSortHint());
      assertEquals(65546L, tiffField0.getCount());
      assertEquals(131092, tiffField0.getBytesLength());
      assertEquals(65546, tiffField0.getOffset());
      assertEquals(65546, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(113, 113, fieldTypeByte0.ASCII, 113, 113, byteArray0, byteOrder0, 113);
      tiffField0.dump();
      assertEquals(113L, tiffField0.getCount());
      assertEquals(113, tiffField0.getDirectoryType());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals(113, tiffField0.getBytesLength());
      assertEquals(113, tiffField0.getTag());
      assertEquals(113, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte)18, (byte)18, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)18);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1469), (byte)93, fieldTypeLong0, (-1L), 1642L, byteArray0, byteOrder0, (byte)45);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, (byte) (-13));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1469), tiffField0.getTag());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(1642, tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-4), tiffField0.getBytesLength());
      assertEquals(93, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(75, 43, fieldTypeRational0, 1402L, 2465L, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(43, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2465, tiffField0.getOffset());
      assertEquals(75, tiffField0.getTag());
      assertEquals(1402L, tiffField0.getCount());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 65574, (FieldType) null, 65574, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(347, (-1790), fieldTypeRational0, 737L, (byte)0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1790), tiffField0.getDirectoryType());
      assertEquals(737L, tiffField0.getCount());
      assertEquals(347, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeShort0, 62, 62, (byte[]) null, byteOrder0, 62);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1762, 1762, fieldTypeRational0, 1762, 1762, byteArray0, byteOrder0, 1762);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1747, 1747, fieldTypeRational0, 1747, 1747, byteArray0, byteOrder0, 1747);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1747, tiffField0.getDirectoryType());
      assertEquals(1747, tiffField0.getSortHint());
      assertEquals(1747, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(1747L, tiffElement0.offset);
  }
}
