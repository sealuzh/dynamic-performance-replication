/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:21:59 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)23;
      byteArray0[4] = (byte)32;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-2L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(184, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)61, (byte)0, fieldTypeLong0, 1L, (-16000L), byteArray0, byteOrder0, (byte)61);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-16000), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(61, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34735, 2146389109, fieldTypeDouble0, (-3321L), 4L, byteArray0, byteOrder0, 533);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(533, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(34735, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2146389109, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[26];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(6, "");
      TiffField tiffField0 = new TiffField(28, (-3717), fieldTypeFloat0, 137145906624L, 137145906624L, byteArray0, byteOrder0, 424);
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (137145906624 )", string0);
      assertEquals((-3717), tiffField0.getDirectoryType());
      assertEquals(424, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-293046848), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2006), "");
      TiffField tiffField0 = new TiffField(37510, (-2006), fieldTypeRational0, 37510, 37510, (byte[]) null, (ByteOrder) null, 33);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(37510, tiffField0.getTag());
      assertEquals((-2006), tiffField0.getDirectoryType());
      assertEquals(37510, tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(37510, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 273, (-1L), byteArray0, byteOrder0, (byte) (-102));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(273, tiffField0.getDirectoryType());
      assertEquals((-102), tiffField0.getSortHint());
      assertEquals(273, tagInfo0.tag);
      assertEquals(273, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, " ");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147483646, 2073432487, fieldTypeAscii0, (byte)40, 983L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(983, tiffField0.getOffset());
      assertEquals(2147483646, int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-589), 1030, fieldTypeDouble0.SHORT, 2147483646L, 0L, byteArray0, byteOrder0, (-589));
      int int0 = tiffField0.getTag();
      assertEquals((-589), int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1030, tiffField0.getDirectoryType());
      assertEquals((-589), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(13, " ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte) (-43);
      byteArray0[2] = (byte)97;
      TiffField tiffField0 = new TiffField((-3263), (-3263), fieldTypeAscii0, 3279L, 13, byteArray0, byteOrder0, 41993);
      String string0 = tiffField0.getStringValue();
      assertEquals(41993, tiffField0.getSortHint());
      assertEquals((-3263), tiffField0.getTag());
      assertEquals(13, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3263), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(608, (byte)2, fieldTypeRational0, 4L, 1L, byteArray0, byteOrder0, 1135);
      int int0 = tiffField0.getSortHint();
      assertEquals(1135, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(608, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-31));
      int int0 = tiffField0.getOffset();
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1965, 1965, fieldTypeByte0, 1965, (-676L), byteArray0, byteOrder0, 13);
      int int0 = tiffField0.getOffset();
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(1965, tiffField0.getDirectoryType());
      assertEquals(1965, tiffField0.getTag());
      assertEquals((-676), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-536), (byte)19, fieldTypeShort0, 1800L, 2661L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2661, tiffField0.getOffset());
      assertEquals(255, int0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals((-536), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-88);
      TiffField tiffField0 = new TiffField((-6), 24, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 33449);
      tiffField0.getIntValueOrArraySum();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-6), tiffField0.getTag());
      assertEquals(33449, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeShort0, 1L, (-2101L), byteArray0, byteOrder0, 21);
      tiffField0.getIntValue();
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals((-2101), tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1044), fieldTypeByte0, (byte)1, (-1044), byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals((-1044), tiffField0.getOffset());
      assertEquals((-1044), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-88);
      TiffField tiffField0 = new TiffField((-6), 24, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, 33449);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-6), tiffField0.getTag());
      assertEquals(33449, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-119), (String) null);
      TiffField tiffField0 = new TiffField(32845, 2481, fieldTypeShort0, 1L, (-720L), byteArray0, byteOrder0, 32845);
      tiffField0.getFieldTypeName();
      assertEquals(32845, tiffField0.getSortHint());
      assertEquals(2481, tiffField0.getDirectoryType());
      assertEquals(32845, tiffField0.getTag());
      assertEquals((-720), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[26];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(6, "");
      TiffField tiffField0 = new TiffField(50832, 2944, fieldTypeFloat0, 6, (-2147483648L), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals(50832, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2944, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "IntergraphFlagRegisters");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(32995, 32995, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, (byte) (-62));
      tiffField0.getFieldType();
      assertEquals((-62), tiffField0.getSortHint());
      assertEquals(32995, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(32995, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-119), (String) null);
      TiffField tiffField0 = new TiffField(32845, 2481, fieldTypeShort0, 1L, (-720L), byteArray0, byteOrder0, 32845);
      tiffField0.getFieldType();
      assertEquals(2481, tiffField0.getDirectoryType());
      assertEquals(32845, tiffField0.getTag());
      assertEquals((-720), tiffField0.getOffset());
      assertEquals(32845, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1044), fieldTypeByte0, (byte)1, (-1044), byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals((-1044), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1044), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-119), (String) null);
      TiffField tiffField0 = new TiffField(32845, 2481, fieldTypeShort0, 1L, (-720L), byteArray0, byteOrder0, 32845);
      tiffField0.getDoubleValue();
      assertEquals((-720), tiffField0.getOffset());
      assertEquals(2481, tiffField0.getDirectoryType());
      assertEquals(32845, tiffField0.getSortHint());
      assertEquals(32845, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-31));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-48);
      TiffField tiffField0 = new TiffField(880, 20, fieldTypeDouble0, 1L, (-2848L), byteArray0, byteOrder0, (-274));
      tiffField0.getDoubleValue();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(880, tiffField0.getTag());
      assertEquals((-274), tiffField0.getSortHint());
      assertEquals((-2848), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0.SHORT, 92L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(351, 351, fieldTypeShort0, 1549L, 530L, byteArray0, (ByteOrder) null, (byte) (-38));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(351, tiffField0.getTag());
      assertEquals(530, tiffField0.getOffset());
      assertEquals(351, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 1, fieldTypeDouble0, (-16000L), 255L, byteArray0, byteOrder0, 2147396989);
      tiffField0.getCount();
      assertEquals(6, tiffField0.getTag());
      assertEquals(2147396989, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "IntergraphFlagRegisters");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1777, (byte) (-62), fieldTypeRational0, 603L, 1L, byteArray0, (ByteOrder) null, (-585));
      tiffField0.getBytesLength();
      assertEquals((-62), tiffField0.getDirectoryType());
      assertEquals((-585), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1777, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2819, 2819, fieldTypeFloat0, (-2192L), (-2192L), (byte[]) null, byteOrder0, 2819);
      tiffField0.getBytesLength();
      assertEquals(2819, tiffField0.getDirectoryType());
      assertEquals((-2192), tiffField0.getOffset());
      assertEquals(2819, tiffField0.getSortHint());
      assertEquals(2819, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, (-1190L), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(608, (byte)2, fieldTypeRational0, 4L, 1L, byteArray0, byteOrder0, 1135);
      tiffField0.getByteArrayValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(1135, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(608, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, (-1190L), byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1190), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)90, (-1718), fieldTypeDouble0, 1L, (-754), byteArray0, byteOrder0, (-67));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, (-547L), (-547L), byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)1, fieldTypeByte0, (-1), 1, byteArray0, byteOrder0, 293);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 904, fieldTypeShort0, 0L, 0L, (byte[]) null, byteOrder0, 1837);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeDouble0, (byte) (-114), 1384L, byteArray0, byteOrder0, (byte) (-114));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[39];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(337, 2147176908, fieldTypeByte0, (-32L), 2147176908, byteArray0, byteOrder0, 337);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146829325), (byte) (-1), fieldTypeShort0, (-1L), 0L, byteArray0, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeByte0.FLOAT, (byte)1, (byte)1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3843, (-783), fieldTypeShort0, (-265), 1L, byteArray0, (ByteOrder) null, 471);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 896L, 574L, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-589), 1030, fieldTypeDouble0.SSHORT, 2147483646L, 0L, byteArray0, byteOrder0, (-589));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeDouble0, (-43L), (-1469L), byteArray0, byteOrder0, 33445);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("k, bW,6dOAbc!vO|>c");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "k, bW,6dOAbc!vO|>c");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 2, fieldTypeRational0.DOUBLE, 4L, 2, byteArray0, byteOrder0, 1508);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3267, "8UA<~");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-20), (-1610612735), fieldTypeRational0, (-21656L), 41728, byteArray0, byteOrder0, 1425);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-31));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(<)a.#1g.");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField((-119), 50, fieldTypeDouble0.BYTE, 6, (-119), byteArray0, byteOrder0, (-1321));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1321), tiffField0.getSortHint());
      assertEquals((-119), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-119), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1829), 3427, fieldTypeDouble0.SHORT, 1L, 3427, byteArray0, (ByteOrder) null, (byte) (-124));
      tiffField0.getByteOrder();
      assertEquals((-1829), tiffField0.getTag());
      assertEquals(3427, tiffField0.getOffset());
      assertEquals(3427, tiffField0.getDirectoryType());
      assertEquals((-124), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, (FieldType) null, 27, 27, (byte[]) null, byteOrder0, 27);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, (FieldType) null, 27, 27, (byte[]) null, byteOrder0, 27);
      tiffField0.getFieldType();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5068), (-320), fieldTypeFloat0, 74L, 2078, byteArray0, byteOrder0, (-592));
      tiffField0.getValue();
      assertEquals(2078, tiffField0.getOffset());
      assertEquals((-592), tiffField0.getSortHint());
      assertEquals((-5068), tiffField0.getTag());
      assertEquals((-320), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeByte0, 1965L, 1, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1044), fieldTypeByte0, (byte)1, (-1044), byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals((-1044), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1044), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(543, (-1), fieldTypeFloat0, (byte)0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(543, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField((byte) (-48), 6, fieldTypeDouble0, 6, (byte) (-114), byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeShort0, 21, 21, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, 3759, fieldTypeLong0, 3759, 50, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(3759, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 321, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@36fbcfba for: 321 (0x141: HalftoneHints): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, " ");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(415, 415, fieldTypeAscii0, 415, 415, byteArray0, byteOrder0, 7);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@873f38b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(48320, 543, fieldTypeFloat0, 2100L, 48320, byteArray0, byteOrder0, 3384);
      tiffField0.getDoubleArrayValue();
      assertEquals(48320, tiffField0.getTag());
      assertEquals(48320, tiffField0.getOffset());
      assertEquals(3384, tiffField0.getSortHint());
      assertEquals(543, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(543, (-1), fieldTypeFloat0, (byte)0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(543, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1612), (-1612), fieldTypeDouble0.SLONG, 1131L, 17111695096L, byteArray0, byteOrder0, 1969);
      tiffField0.getDoubleArrayValue();
      assertEquals((-68174088), tiffField0.getOffset());
      assertEquals(1969, tiffField0.getSortHint());
      assertEquals((-1612), tiffField0.getDirectoryType());
      assertEquals((-1612), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(351, 351, fieldTypeShort0, 1549L, 530L, byteArray0, (ByteOrder) null, (byte) (-38));
      tiffField0.getDoubleArrayValue();
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(530, tiffField0.getOffset());
      assertEquals(351, tiffField0.getTag());
      assertEquals(351, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField((byte) (-114), 50, fieldTypeDouble0.SRATIONAL, 2079L, 50, byteArray0, byteOrder0, 6);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(6, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-114), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5516, 1, fieldTypeShort0, 1L, 379L, byteArray0, byteOrder0, (byte)62);
      assertEquals(2, tiffField0.getBytesLength());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(5516, tiffField0.getTag());
      assertEquals(379, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-447), "H|UNcrG");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1170), 6049, fieldTypeShort0.IFD, (byte)0, (byte) (-21), byteArray0, byteOrder0, (byte) (-89));
      tiffField0.getIntArrayValue();
      assertEquals((-1170), tiffField0.getTag());
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals(6049, tiffField0.getDirectoryType());
      assertEquals((-21), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-119), (String) null);
      TiffField tiffField0 = new TiffField((byte) (-119), 3443, fieldTypeShort0, 1266L, 1L, byteArray0, byteOrder0, 32845);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3443, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2532, tiffField0.getBytesLength());
      assertEquals(32845, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals((-119), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1475, "Unknown Tag");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-619), (-619), fieldTypeRational0, 114, (-2887L), byteArray0, byteOrder0, (byte) (-10));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3673, (-1852), fieldTypeRational0, 3673, (-812L), byteArray0, byteOrder0, 114);
      tiffField0.getIntArrayValue();
      assertEquals((-812), tiffField0.getOffset());
      assertEquals((-1852), tiffField0.getDirectoryType());
      assertEquals(3673, tiffField0.getTag());
      assertEquals(114, tiffField0.getSortHint());
      assertEquals(29384, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1044), fieldTypeByte0, (byte)1, (-1044), byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1044), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1044), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeDouble0, 4L, 6, byteArray0, byteOrder0, 6);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@435aadd9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3673, (-1852), fieldTypeRational0, 3673, (-812L), byteArray0, byteOrder0, 114);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@2a28dd78
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-2146829325), (-5131), fieldTypeAscii0, 1L, 4L, byteArray0, byteOrder0, (-5131));
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-5131), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2146829325), tiffField0.getTag());
      assertEquals((-5131), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-31));
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x1)", string0);
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34735, 2146389109, fieldTypeDouble0, (-3321L), 4L, byteArray0, byteOrder0, 533);
      String string0 = tiffField0.getTagName();
      assertEquals(34735, tiffField0.getTag());
      assertEquals(2146389109, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals("GeoKeyDirectoryTag", string0);
      assertEquals(533, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5068), (-320), fieldTypeFloat0, 74L, 2078, byteArray0, byteOrder0, (-592));
      String string0 = tiffField0.toString();
      assertEquals(2078, tiffField0.getOffset());
      assertEquals((-592), tiffField0.getSortHint());
      assertEquals((-320), tiffField0.getDirectoryType());
      assertEquals("-5068 (0xffffec34: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (74 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-53), (byte)55, fieldTypeByte0, 8L, (byte)0, byteArray0, (ByteOrder) null, (byte) (-21));
      try { 
        fieldTypeByte0.writeData(tiffField0, (ByteOrder) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: -53 (0xffffffcb: Unknown Tag): 0, 0 (8 Undefined) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte) (-119), "~*m+U<hc9\"h^)");
      TiffField tiffField0 = new TiffField(2467, 32845, fieldTypeFloat0, 2467, (-3939L), byteArray0, byteOrder0, 1596);
      String string0 = tiffField0.toString();
      assertEquals((-3939), tiffField0.getOffset());
      assertEquals(1596, tiffField0.getSortHint());
      assertEquals(32845, tiffField0.getDirectoryType());
      assertEquals(9868, tiffField0.getBytesLength());
      assertEquals("2467 (0x9a3: Unknown Tag): 0.0, 0.0 (2467 ~*m+U<hc9\"h^))", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[33];
      TiffField tiffField0 = new TiffField((byte) (-48), 6, fieldTypeDouble0, 6, (byte) (-114), byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-48), tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(6L, tiffField0.getCount());
      assertEquals((-114), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[66];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(728, 2146389109, fieldTypeDouble0.SBYTE, 353L, 728, byteArray0, byteOrder0, 3);
      String string0 = tiffField0.toString();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals("728 (0x2d8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (66) (353 SByte)", string0);
      assertEquals(2146389109, tiffField0.getDirectoryType());
      assertEquals(728, tiffField0.getOffset());
      assertEquals(353, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(801, 801, fieldTypeLong0, 801, (-514L), byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals(801, tiffField0.getDirectoryType());
      assertEquals(3204, tiffField0.getBytesLength());
      assertEquals(801, tiffField0.getTag());
      assertEquals(801L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(27, tiffField0.getSortHint());
      assertEquals((-514), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[119];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32769, (-765), fieldTypeShort0, 32769, (-2147483648L), byteArray0, byteOrder0, 81);
      String string0 = tiffField0.toString();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-765), tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(65538, tiffField0.getBytesLength());
      assertEquals("32769 (0x8001: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (32769 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(351, 351, fieldTypeShort0, 1549L, 530L, byteArray0, (ByteOrder) null, (byte) (-38));
      String string0 = tiffField0.toString();
      assertEquals((-38), tiffField0.getSortHint());
      assertEquals(3098, tiffField0.getBytesLength());
      assertEquals(351, tiffField0.getDirectoryType());
      assertEquals("351 (0x15f: OPIProxy): 0, 0, 0 (1549 SShort)", string0);
      assertEquals(530, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4, " ");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147483646, 2073432487, fieldTypeAscii0, (byte)40, 983L, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(40, tiffField0.getBytesLength());
      assertEquals(983, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(40L, tiffField0.getCount());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[63];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1591), (-1612), fieldTypeAscii0, 255L, (-1612), byteArray0, byteOrder0, (byte)35);
      tiffField0.toString();
      assertEquals((-1612), tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals((-1591), tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-1612), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "^] 7Dnc{0kj9+NR9K'2");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-29);
      TiffField tiffField0 = new TiffField(415, (-1), fieldTypeAscii0, 6, (-21656L), byteArray0, byteOrder0, 3);
      tiffField0.toString();
      assertEquals((-21656), tiffField0.getOffset());
      assertEquals(6, tiffField0.getBytesLength());
      assertEquals(6L, tiffField0.getCount());
      assertEquals(415, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-31));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3267, "8UA<~");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(339, 41728, fieldTypeRational0, 0L, 41728, byteArray0, (ByteOrder) null, 1849);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)0, (-233));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(41728, tiffField0.getDirectoryType());
      assertEquals(41728, tiffField0.getOffset());
      assertEquals(1849, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(339, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-38), (byte) (-1), fieldTypeShort0, (-8L), 4L, byteArray0, (ByteOrder) null, (byte)25);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1982292597), (byte)19);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals((-38), tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField(50832, 2944, fieldTypeDouble0.FLOAT, 6, (-2147483648L), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldTypeName();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2944, tiffField0.getDirectoryType());
      assertEquals(50832, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1L), 1737L, (byte[]) null, byteOrder0, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1737, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-447), "H|UNcrG");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1170), 6049, fieldTypeShort0.SLONG, (byte)0, (byte) (-21), byteArray0, byteOrder0, (byte) (-89));
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1170), tiffField0.getTag());
      assertEquals(6049, tiffField0.getDirectoryType());
      assertEquals((-89), tiffField0.getSortHint());
      assertEquals((-21), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1L), 1737L, (byte[]) null, byteOrder0, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1737, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1L), tiffField0.getCount());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1L), 1737L, (byte[]) null, byteOrder0, (-1));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals("-1 (0xffffffff: Unknown Tag): ", string0);
      assertEquals(1737, tiffField0.getOffset());
      assertEquals((-1L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeDouble0, 35, 35, byteArray0, byteOrder0, 35);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("_M,r5dh=fubuiK:;");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(35, tiffField0.getOffset());
      assertEquals(280, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(35L, tiffField0.getCount());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, "^] 7Dnc{0kj9+NR9K'2");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(415, (-1), fieldTypeAscii0, 6, (-21656L), byteArray0, byteOrder0, 3);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals((-21656L), tiffElement0.offset);
      assertEquals(415, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }
}
