/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 14:30:26 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (-1926), (-1926), true);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 1800, 1800);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)4, 0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 1537, (-1), false, 63);
      T4AndT6Compression.decompressT4_2D(byteArray0, 10, 0, false);
      T4AndT6Compression.decompressT6(byteArray2, 2066, 0);
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-29);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray3, 0, 576, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)0, true);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, (byte)0, (byte)0, true, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)1}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)19, (byte)19, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte) (-66), (byte) (-66), true);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 242, 0);
      int int1 = (-3998);
      int int2 = (-1400);
      boolean boolean0 = true;
      byte[] byteArray2 = T4AndT6Compression.compressT4_1D(byteArray0, (-3998), (-1400), true);
      T4AndT6Compression.compressModifiedHuffman(byteArray1, (-3998), 11);
      T4AndT6Compression.compressModifiedHuffman(byteArray1, 0, 11);
      T4AndT6Compression.compressModifiedHuffman(byteArray2, (-3998), 0);
      byte[] byteArray3 = null;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D((byte[]) null, (-1400), 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 2125, 2125, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte)28}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-31);
      byteArray0[0] = (byte) (-31);
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)77;
      int int0 = (-1130);
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)77, (-1130));
      int int1 = 0;
      T4AndT6Compression.compressT4_2D(byteArray1, 0, (-371), true, 0);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, (-371), (byte)77);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)104;
      int int0 = 3092;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 3092, (-2));
      int int1 = 259;
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (-2), 259);
      int int2 = 1031;
      int int3 = 4545;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray2, 1031, 4545);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)6, (byte)6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)11;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)11, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)40;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      int int0 = (-751);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, (-751));
      byte[] byteArray2 = T4AndT6Compression.compressT4_1D(byteArray1, 128, (byte)0, false);
      int int1 = 59;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray2, 59, 128);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-1);
      byteArray0[4] = (byte) (-101);
      byteArray0[5] = (byte)2;
      T4AndT6Compression.compressT4_1D(byteArray0, 1588, (byte) (-101), true);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte)2);
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-64);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 0, (byte) (-64), false, (byte)2);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, (byte)2, true, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-102), (byte) (-128), (byte)1, (byte)0, (byte)1}, byteArray2);
      
      T4AndT6Compression.compressT6(byteArray1, 0, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte)11;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)0, true);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)11, (byte)11, true, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, (byte)2, true, (byte) (-93));
      T4AndT6Compression.compressModifiedHuffman(byteArray1, (byte)0, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-102), (byte) (-128), (byte)1, (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-679), (-679), false);
      T4AndT6Compression.compressT4_2D(byteArray0, 1, 1, false, (-679));
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, 1, 39);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-18);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)51;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, 2457, 0, false);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte)51, 0);
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)7;
      byteArray2[1] = (byte) (-18);
      byteArray2[2] = (byte) (-18);
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-10);
      byteArray2[5] = (byte)51;
      byteArray2[6] = (byte)51;
      byte[] byteArray3 = T4AndT6Compression.decompressModifiedHuffman(byteArray2, (byte)0, (byte)51);
      T4AndT6Compression.compressT4_1D(byteArray1, (-2823), 62, false);
      byte[] byteArray4 = T4AndT6Compression.compressT6(byteArray3, 0, (byte)51);
      T4AndT6Compression.compressT4_1D(byteArray4, (-963), (byte)51, false);
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-10);
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte) (-10);
      byteArray5[3] = (byte) (-10);
      byteArray5[4] = (byte) (-18);
      byteArray5[5] = (byte) (-18);
      byteArray5[6] = (byte)51;
      byte[] byteArray6 = T4AndT6Compression.compressT4_1D(byteArray5, (byte) (-18), 0, true);
      assertFalse(byteArray6.equals((Object)byteArray5));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, 1);
      byte[] byteArray2 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1, (byte)0);
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte) (-27);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 20, (byte)102);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1408, (-1504), true);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1, 1408);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)8;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)8, (byte)8);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)19;
      int int0 = 1;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 19, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2677, (byte) (-64), false, 144);
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-64);
      byteArray2[1] = (byte)26;
      byteArray2[2] = (byte)6;
      byteArray2[3] = (byte) (-64);
      T4AndT6Compression.compressT6(byteArray2, (byte)6, (byte) (-64));
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 633, (byte)26);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 2399, (-4092));
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-18);
      byteArray1[1] = (byte)15;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)111;
      int int0 = 64;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, 64, (byte)15);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), (-1), false);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 2, 2, false, 16);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray2, (-4072), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 0, 88, true, 59);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)19, 88, true, 59);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 18, (byte)19);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      byteArray0[0] = (byte) (-10);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)3, 8, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)23;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 0, 88, true, 59);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (byte)23, 88, true, 59);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-2), (byte)20, false);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)26, (byte) (-2));
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-59);
      byteArray1[1] = (byte) (-59);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)20;
      byteArray1[4] = (byte)5;
      byteArray1[5] = (byte)20;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 2, (byte)20, false, 21);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-108);
      byte byte0 = (byte)33;
      byteArray0[2] = (byte)33;
      byte byte1 = (byte)104;
      byteArray0[3] = (byte)104;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 3092, (-2));
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (-2), 259);
      int int0 = 1031;
      // Undeclared exception!
      T4AndT6Compression.decompressT6(byteArray2, 3092, (byte)33);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-66);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-66), (byte) (-66), false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte) (-66), 3, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)3;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 8, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)25, false);
      T4AndT6Compression.compressT4_2D(byteArray1, (byte)26, (byte) (-59), false, (byte)25);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 3, 388);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-66);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-66), (byte) (-66), true);
      int int0 = 3;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte) (-66), 3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte byte0 = (byte)27;
      boolean boolean0 = false;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)27;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)27, (byte)27, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)25;
      byte byte1 = (byte) (-59);
      byte byte2 = (byte)0;
      boolean boolean0 = true;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-59);
      byteArray1[3] = (byte)25;
      byteArray1[4] = (byte) (-59);
      byteArray1[5] = (byte) (-59);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)25, 6338, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte byte0 = (byte)28;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)28;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)28, (byte)28, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)25;
      byte byte1 = (byte) (-59);
      byte byte2 = (byte)0;
      boolean boolean0 = true;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-59);
      byteArray1[3] = (byte)25;
      byteArray1[4] = (byte) (-59);
      byteArray1[5] = (byte) (-59);
      boolean boolean1 = true;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 4306, 4306, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressT6(byteArray0, 0, (byte)19);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)19;
      byteArray1[1] = (byte)19;
      byteArray1[2] = (byte)25;
      byteArray1[3] = (byte)19;
      byteArray1[4] = (byte)19;
      byteArray1[5] = (byte)19;
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 8, 3, true, (byte)19);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray2, 1995, 60, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)19;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)19, (byte)19, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)25;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 12, 2951, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)20;
      int int0 = 3076;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)20, 3076, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte byte0 = (byte)9;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)9;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)9, (byte)9, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte byte0 = (byte)11;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)11;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)11, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-15);
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)50;
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      int int0 = 4;
      T4AndT6Compression.compressT4_1D(byteArray0, (-2199), 4, true);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 768);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-15);
      byte byte0 = (byte)27;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)50;
      byte byte1 = (byte)0;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)0;
      int int0 = 4;
      T4AndT6Compression.compressT4_1D(byteArray0, (-2199), 4, true);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 768);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      byte byte1 = (byte) (-10);
      byteArray0[1] = (byte) (-10);
      boolean boolean0 = true;
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)3, 8, true, (byte) (-10));
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (-5052), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-14);
      byteArray0[5] = (byte)11;
      byteArray0[4] = (byte)11;
      byteArray0[5] = (byte)11;
      T4AndT6Compression.compressT4_1D(byteArray0, (byte)11, 1, true);
      T4AndT6Compression.compressT4_1D(byteArray0, (-3), (byte)11, true);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)11, 788, true, (byte) (-14));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-13);
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 96, (byte)3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)5;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 14, 2955, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte)3;
      byteArray0[1] = (byte)3;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)3, (byte)3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      int int0 = 134;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 134, 134, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
