/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:05:54 GMT 2018
 */

package us.codecraft.webmagic.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.utils.DoubleKeyMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoubleKeyMap_ESTest extends DoubleKeyMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DoubleKeyMap<String, Map<String, Object>, Integer> doubleKeyMap0 = new DoubleKeyMap<String, Map<String, Object>, Integer>();
      doubleKeyMap0.remove("wrong pro'o type map ", (Map<String, Object>) hashMap0);
      DoubleKeyMap<String, Object, Map<String, Object>> doubleKeyMap1 = new DoubleKeyMap<String, Object, Map<String, Object>>();
      HashMap<Object, Map<String, Object>> hashMap1 = new HashMap<Object, Map<String, Object>>();
      // Undeclared exception!
      try { 
        doubleKeyMap1.put("wrong pro'o type map ", (Map<Object, Map<String, Object>>) hashMap1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DoubleKeyMap<String, Map<String, Object>, Integer> doubleKeyMap0 = new DoubleKeyMap<String, Map<String, Object>, Integer>();
      doubleKeyMap0.remove("wrong proto type map ", (Map<String, Object>) hashMap0);
      DoubleKeyMap<Map<String, Object>, Object, Map<String, Object>> doubleKeyMap1 = new DoubleKeyMap<Map<String, Object>, Object, Map<String, Object>>();
      Map<String, Object> map0 = doubleKeyMap1.get((Map<String, Object>) hashMap0, (Object) doubleKeyMap0);
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HashMap<Integer, Map<String, Integer>> hashMap0 = new HashMap<Integer, Map<String, Integer>>();
      DoubleKeyMap<Integer, String, Integer> doubleKeyMap0 = new DoubleKeyMap<Integer, String, Integer>(hashMap0);
      Integer integer0 = new Integer(1056);
      doubleKeyMap0.put(integer0, "<>N", integer0);
      Integer integer1 = new Integer(1056);
      doubleKeyMap0.get(integer1, "");
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Integer, Map<String, Object>, String> doubleKeyMap1 = null;
      try {
        doubleKeyMap1 = new DoubleKeyMap<Integer, Map<String, Object>, String>(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoubleKeyMap<Map<String, Object>, Integer, Integer> doubleKeyMap0 = new DoubleKeyMap<Map<String, Object>, Integer, Integer>();
      HashMap<Object, Map<Object, Integer>> hashMap0 = new HashMap<Object, Map<Object, Integer>>();
      DoubleKeyMap<Object, Object, Integer> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Integer>(hashMap0);
      Map<String, Object> map0 = doubleKeyMap1.newMap();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer((-920));
      doubleKeyMap0.put(map0, integer0, integer1);
      DoubleKeyMap<Object, String, Integer> doubleKeyMap2 = new DoubleKeyMap<Object, String, Integer>();
      DoubleKeyMap<String, String, Integer> doubleKeyMap3 = new DoubleKeyMap<String, String, Integer>();
      Map<String, Map<Object, Integer>> map1 = doubleKeyMap3.newMap();
      DoubleKeyMap<String, Object, Integer> doubleKeyMap4 = new DoubleKeyMap<String, Object, Integer>(map1);
      Object object0 = new Object();
      Integer integer2 = new Integer(2916);
      doubleKeyMap4.put("", (Object) hashMap0, integer2);
      Integer integer3 = new Integer(1272);
      doubleKeyMap4.put("", object0, integer3);
      doubleKeyMap1.remove((Object) integer3);
      Integer integer4 = new Integer(1);
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Map<String, Object>, Integer, String> doubleKeyMap5 = null;
      try {
        doubleKeyMap5 = new DoubleKeyMap<Map<String, Object>, Integer, String>(class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DoubleKeyMap<Integer, String, Integer> doubleKeyMap0 = new DoubleKeyMap<Integer, String, Integer>();
      doubleKeyMap0.put((Integer) null, "", (Integer) null);
      doubleKeyMap0.remove((Integer) null, "");
      Integer integer0 = new Integer(449);
      String string0 = "";
      Integer integer1 = new Integer(449);
      DoubleKeyMap<String, Map<String, Object>, Integer> doubleKeyMap1 = new DoubleKeyMap<String, Map<String, Object>, Integer>();
      DoubleKeyMap<String, Map<String, Object>, Integer> doubleKeyMap2 = new DoubleKeyMap<String, Map<String, Object>, Integer>();
      HashMap<Object, Map<Object, Integer>> hashMap0 = new HashMap<Object, Map<Object, Integer>>();
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Object, Object, Integer> doubleKeyMap3 = new DoubleKeyMap<Object, Object, Integer>(hashMap0, class0);
      // Undeclared exception!
      try { 
        doubleKeyMap3.newMap();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DoubleKeyMap<Integer, String, Integer> doubleKeyMap0 = new DoubleKeyMap<Integer, String, Integer>();
      Integer integer0 = null;
      doubleKeyMap0.put((Integer) null, "", (Integer) null);
      doubleKeyMap0.remove((Integer) null, "us.codecraft.webmagic.utils.MultiKeyMapBase");
      Integer integer1 = new Integer(449);
      String string0 = "";
      Integer integer2 = new Integer(449);
      DoubleKeyMap<Object, String, Map<String, Object>> doubleKeyMap1 = new DoubleKeyMap<Object, String, Map<String, Object>>();
      // Undeclared exception!
      try { 
        doubleKeyMap1.put((Object) integer1, (Map<String, Map<String, Object>>) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
