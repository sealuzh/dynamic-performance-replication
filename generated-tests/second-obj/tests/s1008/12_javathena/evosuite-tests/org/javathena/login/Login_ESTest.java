/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:23:58 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.Socket;
import java.util.Calendar;
import java.util.Locale;
import javolution.util.FastComparator;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.data.IDBManagementLogin;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_console("conf/subnet_athena.conf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Socket_data socket_data0 = new Socket_data((Socket) null);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      login0.check_ip(inetAddress0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = Calendar.SECOND;
      Login login0 = new Login();
      login0.setAuth_max(3383);
      assertEquals(3383, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login.getMd5Data(socket_data0);
      Login login0 = new Login();
      login0.getLog_fp();
      // Undeclared exception!
      try { 
        Login.login_log("conf/subnet_athena.conf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login.display_title();
      Login login0 = new Login();
      Login.setPASSWORDENC(50);
      login0.getAuth_num();
      login0.setOut((PrintWriter) null);
      assertEquals(50, login0.getPASSWORDENC());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      login0.save_config_in_log();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      Login.mmo_auth_syncXML();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)69;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)69);
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertNotNull(intArray0);
      
      Login.mmo_auth_initTXT();
      login0.getLog_fp();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      Login.mmo_auth_syncTXT();
      login_ConnectionListener0.run();
      login0.getAuth_num();
      // Undeclared exception!
      try { 
        login0.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = FromChar.BAN_REQUEST;
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login login0 = new Login();
      login0.setOut((PrintWriter) null);
      Login.mmo_auth_syncXML();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("q;[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      int int0 = Calendar.DAY_OF_WEEK;
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_max();
      // Undeclared exception!
      try { 
        login0.check_auth_sync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setDefault_codepage("conf/subnet_athena.conf");
      login0.getServer_fd();
      Login.mmo_auth_syncXML();
      login0.check_auth_sync();
      InetAddress inetAddress0 = MockInetAddress.getByName("r-0XN");
      assertEquals("200.42.42.0", inetAddress0.getHostAddress());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte)87;
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte) (-125);
      byteArray0[7] = (byte) (-115);
      byteArray0[8] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IDBManagementLogin iDBManagementLogin0 = Login.getDbManagemtType();
      assertNull(iDBManagementLogin0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Login.showTab(byteArray0);
      Login.mmo_auth_initXML();
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        Login.mmo_auth_syncXML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Login.showTab(byteArray0);
      Login login0 = new Login();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf", "4n8lve+e");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 4n8lve+e
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        Login.codingKey((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.check_ipmask(38, "Unmodifiable map");
      assertEquals(0, login0.getAuth_max());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromAdmin0);
      Login.logUnknownPackets(socket_data0);
      Login.login_log((String) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      FromChar fromChar0 = new FromChar();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      MySQLConfig.setLogin_server_ip("conf/subnet_athena.conf");
      UserManagement.addAccountIdCount();
      Login.getMd5Data(socket_data0);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      login0.parse_console("Cannot instantiate ");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Locale locale0 = Locale.KOREAN;
      MySQLConfig.setLogin_server_db("              (c)2005-2006 The TranslateFrom C To Java Project              ");
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      Login.mmo_auth_syncTXT();
      login_ConnectionListener0.run();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_initXML();
      int[] intArray0 = new int[7];
      intArray0[1] = 2000000;
      intArray0[2] = 50;
      login0.yesNoOnOffToBoolean("NO");
      Login.mmo_auth_syncXML();
      Login.display_title();
      Random.setNextRandom(2);
      Random.setNextRandom(50);
      UserManagement.addAccountIdCount();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login.getPASSWORDENC();
      Login login0 = new Login();
      Login.mmo_auth_syncXML();
      login0.check_auth_sync();
      String string0 = "OFF";
      login0.yesNoOnOffToBoolean("OFF");
      login0.check_auth_sync();
      // Undeclared exception!
      try { 
        Login.login_log("OFF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      mockSocket0.setKeepAlive(false);
      // Undeclared exception!
      try { 
        login0.parse_admin((-1266), socket_data0, (Login) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      login0.save_config_in_log();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      login0.parse_console("X{kB\"]d^bMH");
      Locale.forLanguageTag("~Q|I7#");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      MySQLConfig.setLogin_server_db("  Refused IP are:");
      login0.setAuth_max(30);
      FromClient fromClient0 = new FromClient();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromAdmin0);
      socket_data0.setMd5key("conf/subnet_athena.conf");
      Login.getMd5Data(socket_data0);
      Login login1 = new Login();
      login0.parse_admin(30002, socket_data0, login1);
      Random.setNextRandom((-4872));
      Random.setNextRandom(31054);
      UserManagement.setAccountIdCount(2000000);
      Object object0 = new Object();
      Locale locale0 = Locale.TAIWAN;
      Login login2 = new Login();
      login2.do_initTXT();
      login0.getOut();
      assertEquals(30, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "NonRegisteringDriver.16");
      Login login1 = new Login();
      UserManagement.addAccountIdCount(10);
      Random.setNextRandom(10);
      MockFile mockFile0 = new MockFile("conf/subnet_athena.conf");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login1.setAuth_max((-1846498001));
      FromAdmin fromAdmin0 = new FromAdmin();
      String string0 = "EGGBOY";
      login0.setAuth_max(100000000);
      Login.mmo_auth_syncTXT();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        login2.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      login0.parse_console("conf/subnet_athena.conf");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Locale.forLanguageTag("conf/subnet_athena.conf");
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      UserManagement.addAccountIdCount(10);
      Random.setNextRandom(0);
      MockFile mockFile0 = new MockFile("conf/subnet_athena.conf");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FromAdmin fromAdmin0 = new FromAdmin();
      UserManagement.addUserTXT("- with the IP security order: 'allow,deny' (deny if not allow). You authorise ALL IP.", "COM.THOUGHTWORKS.XSTREAM.CONVERTERS.EXTENDED.THROWABLECONVERTER", "conf/subnet_athena.conf", 'X');
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>(10);
      login0.parse_console("zuR)y]`Kx~_^0:NJ>");
      MySQLConfig.setLogin_server_pw("EGGBOY");
      Login.mmo_auth_syncTXT();
      System.setCurrentTimeMillis(0);
      Login.display_title();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      login0.parse_console("conf/subnet_athena.conf");
      login0.parse_console("g><g[|6<5j\"h]6>;N");
      login0.parse_console("dU\"}l+/(");
      Locale locale0 = new Locale("@Od");
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      login0.setAuth_max(0);
      FromAdmin fromAdmin0 = new FromAdmin();
      Random.setNextRandom(2000000);
      Random.setNextRandom(30);
      MySQLConfig.setLogin_server_id("j");
      UserManagement.setAccountIdCount(1944);
      Locale locale1 = Locale.TAIWAN;
      Login login1 = new Login();
      FastMap<Integer, Auth_data> fastMap0 = null;
      try {
        fastMap0 = new FastMap<Integer, Auth_data>("status");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Identifier status already in use
         //
         verifyException("javolution.context.PersistentContext$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Locale.forLanguageTag("conf/subnet_athena.conf");
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      login0.setAuth_max(30);
      ConfigurationManagement.setAccess_allownum(10);
      login0.parse_console("fanno nstantiate ");
      byte[] byteArray0 = null;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      login0.setAuth_max(100000000);
      FromAdmin fromAdmin0 = new FromAdmin();
      Random.setNextRandom(30);
      Random.setNextRandom((-1935469948));
      UserManagement.setAccountIdCount(2);
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        login1.parse_console("exit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login0 = new Login();
      login0.do_initTXT();
      int int0 = Calendar.HOUR_OF_DAY;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      login0.yesNoOnOffToBoolean("NO");
      MySQLConfig.setLogin_server_ip("                                                                             ");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login0.setAuth_max(11);
      FromAdmin fromAdmin0 = new FromAdmin();
      UserManagement.addUserTXT("{X}V_!QGv8k hcXK", "{X}V_!QGv8k hcXK", "cv0", 'X');
      login0.getOut();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      login0.check_auth_sync();
      Login.setPASSWORDENC((-1145));
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "cv0");
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      ConfigurationManagement.setAccess_denynum(2);
      login0.do_initTXT();
      UserManagement.addAccountIdCount(2000000);
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Random.setNextRandom(50);
      String string0 = "shutdown";
      MockFile mockFile0 = new MockFile("shutdown");
      login0.setAuth_max(254);
      Login login1 = new Login();
      MySQLConfig.setLogin_server_ip("R");
      FromAdmin fromAdmin0 = new FromAdmin();
      ConfigurationManagement.setAccess_allownum(254);
      FileSystemHandling.shouldAllThrowIOExceptions();
      login0.check_auth_sync();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        login2.parse_console("shutdown");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "NonRegisteringDriver.16");
      Login login1 = new Login();
      UserManagement.addAccountIdCount(10);
      Random.setNextRandom(10);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login1.setAuth_max((-1846498001));
      FromAdmin fromAdmin0 = new FromAdmin();
      UserManagement.addUserTXT("EGGBOY", "EGGBOY", "X{kB\"]d^bMH", ']');
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>(30);
      login0.parse_console("help");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "S1000");
      login1.check_ip((InetAddress) null);
      login0.getOut();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      int int0 = FromClient.ALIVE_PACKET_ENCRYPTED;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Locale.forLanguageTag("conf/subnet_athena.conf");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "  ______/ __/._\\__/    _ _ __\\ _ _ ____ _ _ __/._  ");
      login0.parse_console("NO");
      login0.yesNoOnOffToBoolean("NO");
      login0.parse_console("  ______/ __/._\\__/    _ _ __\\ _ _ ____ _ _ __/._  ");
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("NO", 2);
      Proxy proxy0 = new Proxy(proxy_Type0, inetSocketAddress0);
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      login0.check_auth_sync();
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login0.do_initXML();
      assertEquals(30, Login.MAX_SERVERS);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "NonRegisteringDriver.16");
      Login login1 = new Login();
      UserManagement.addAccountIdCount(10);
      Random.setNextRandom(10);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login1.setAuth_max((-1846498001));
      FromAdmin fromAdmin0 = new FromAdmin();
      UserManagement.addUserTXT("EGGBOY", "EGGBOY", "X{kB\"]d^bMH", ']');
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>(30);
      login0.parse_console("help");
      login1.check_ip((InetAddress) null);
      login0.getOut();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("NonRegisteringDriver.16");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      ConfigurationManagement.setAccess_denynum(2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      login0.do_initTXT();
      login0.parse_console("alive");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      MySQLConfig.setLogin_server_db("\"unv^s[{>QG");
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte)34;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      ConfigurationManagement.setAccess_allownum((-2021));
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Locale.forLanguageTag("VaImJWO~-F9la#).#aQ");
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>(214);
      login0.do_initXML();
      login0.getOut();
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      login0.check_auth_sync();
      Login.setPASSWORDENC((byte) (-78));
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-126);
      byteArray0[3] = (byte)34;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      ConfigurationManagement.setAccess_allownum((byte)34);
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.do_initTXT();
      Locale.forLanguageTag("VaImJWO~-F9la#).#aQ");
      Random.setNextRandom(2000050);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("@`)", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      login0.setAuth_max(744);
      FromAdmin fromAdmin0 = new FromAdmin();
      UserManagement.addUserTXT("VaImJWO~-F9la#).#aQ", "3\"AfOyz^AO-<x", "SHUTDOWN", 'X');
      login0.getOut();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      login0.check_auth_sync();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "E|");
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      login0.setAuth_max((-856));
      ConfigurationManagement.setAccess_allownum((-1790721935));
      login0.check_auth_sync();
      login0.parse_console("OFF");
      ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
      Login login1 = new Login();
      String string0 = "login: abnormal request of MD5 key (already opened session).";
      MySQLConfig.setLogin_server_ip("conf/subnet_athena.conf");
      FromAdmin fromAdmin0 = new FromAdmin();
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      // Undeclared exception!
      try { 
        login1.parse_console("end");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
