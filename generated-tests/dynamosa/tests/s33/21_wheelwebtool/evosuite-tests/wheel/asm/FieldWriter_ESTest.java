/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 23:09:50 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "(@`U}D(;,+F!kbuugN", "(@`U}D(;,+F!kbuugN", "(@`U}D(;,+F!kbuugN", "(@`U}D(;,+F!kbuugN");
      classWriter0.version = (-488);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      classWriter0.index = (-488);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      classWriter0.version = (-488);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      classWriter0.index = (-488);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("_:DhF9J~E:=", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-467));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-467), "'9=w+I\"o0", "'9=w+I\"o0", "'9=w+I\"o0", "'9=w+I\"o0");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-509));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "+ZJ/4iH!&;:", "+ZJ/4iH!&;:", "+ZJ/4iH!&;:", "+ZJ/4iH!&;:");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-411));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "r,%'6M>[gxfAlw)e", "r,%'6M>[gxfAlw)e", "r,%'6M>[gxfAlw)e", "r,%'6M>[gxfAlw)e");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?", "+ZJ/W+H&;?");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-488);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      Attribute attribute0 = new Attribute("'w+RI\"o0");
      byte[] byteArray0 = new byte[6];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 0, "x17)xb_O)Cjs", "x17)xb_O)Cjs", "x17)xb_O)Cjs", "x17)xb_O)Cjs");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2613);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apche.commons.io.filefilter.CanReadileFilt+r", "org.apche.commons.io.filefilter.CanReadileFilt+r", "org.apche.commons.io.filefilter.CanReadileFilt+r", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "^;s6o", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector(4);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", " T0dihIL}]iRUJ\"J", (String) null, "Signature");
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      ByteVector byteVector0 = new ByteVector(1);
      classWriter0.version = (int) (byte)49;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-761));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "txDW{fc(QZ", "[tu417", "[tu417", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w-RI6o0", "'w-RI6o0", "'w-RI6o0", "'w-RI6o0");
      Attribute attribute0 = new Attribute("'w-RI6o0");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "'w+RI\"o0", "'w+RI\"o0", (String) null, "'w+RI\"o0");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      classWriter0.version = (int) (byte)49;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "^;s6o", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-761));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "txDW{fc(QZ", "[tu417", "[tu417", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-488));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-488), "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0", "'w+RI\"o0");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "'w+RI\"o0", "'w+RI\"o0", (String) null, "'w+RI\"o0");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "^;s6o", "", "", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "^;s6o", "", "", "");
      Attribute attribute0 = new Attribute("r");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(4);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
