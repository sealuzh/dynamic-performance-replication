/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 15:33:12 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(658, 658, fieldTypeDouble0, 658, 658, byteArray0, byteOrder0, 658);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(658L, tiffElement0.offset);
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(658, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(658, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(648, 648, fieldTypeDouble0, 648, 648, byteArray0, byteOrder0, 648);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeByte0, 24, 24, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(24L, tiffField0.getCount());
      assertEquals(24, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 535, fieldTypeFloat0, 535, 535, byteArray0, byteOrder0, 535);
      tiffField0.getDoubleArrayValue();
      assertEquals(535, tiffField0.getTag());
      assertEquals(535, tiffField0.getSortHint());
      assertEquals(535L, tiffField0.getCount());
      assertEquals(535, tiffField0.getDirectoryType());
      assertEquals(535, tiffField0.getOffset());
      assertEquals(2140, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(613, 613, fieldTypeDouble0, 613, 613, byteArray0, byteOrder0, 613);
      tiffField0.getDoubleArrayValue();
      assertEquals(613L, tiffField0.getCount());
      assertEquals(4904, tiffField0.getBytesLength());
      assertEquals(613, tiffField0.getDirectoryType());
      assertEquals(613, tiffField0.getSortHint());
      assertEquals(613, tiffField0.getTag());
      assertEquals(613, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1442, 12, fieldTypeRational0.ASCII, 1442, 1442, byteArray0, (ByteOrder) null, 1442);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@201ee70f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(668, 668, fieldTypeDouble0, 668, 668, byteArray0, byteOrder0, 668);
      tiffField0.dump();
      assertEquals(668L, tiffField0.getCount());
      assertEquals(668, tiffField0.getOffset());
      assertEquals(5344, tiffField0.getBytesLength());
      assertEquals(668, tiffField0.getDirectoryType());
      assertEquals(668, tiffField0.getSortHint());
      assertEquals(668, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(25, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(671, 671, fieldTypeLong0, 671, 671, byteArray0, byteOrder0, 671);
      tiffField0.getDoubleArrayValue();
      assertEquals(671, tiffField0.getOffset());
      assertEquals(671, tiffField0.getDirectoryType());
      assertEquals(671, tiffField0.getSortHint());
      assertEquals(671, tiffField0.getTag());
      assertEquals(671L, tiffField0.getCount());
      assertEquals(2684, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(119, 119, fieldTypeByte0, 119, 119, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(119, 119);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(119, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Byte", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(119, tiffField0.getOffset());
      assertEquals(119, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(119, 119, fieldTypeByte0, 119, 119, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(119, 119);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(119, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(119, tiffField0.getTag());
      assertEquals(119, tiffField0.getDirectoryType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      tiffField0.getFieldTypeName();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getTagName();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x19)", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeFloat0, 33, 33, byteArray0, byteOrder0, 33);
      String string0 = tiffField0.toString();
      assertEquals("33 (0x21: Unknown Tag): 0.0, 0.0 (33 Float)", string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33, int0);
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(132, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(613, 613, fieldTypeLong0, 613, 613, byteArray0, byteOrder0, 613);
      String string0 = tiffField0.toString();
      assertEquals(613, tiffField0.getSortHint());
      assertEquals("613 (0x265: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (613 SLong)", string0);
      assertEquals(613, tiffField0.getDirectoryType());
      assertEquals(2452, tiffField0.getBytesLength());
      assertEquals(613, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeFloat0, 21, 21, byteArray0, byteOrder0, 21);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1cb581c7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeFloat0, 56, 56, byteArray0, byteOrder0, 56);
      int int0 = tiffField0.getSortHint();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, int0);
      assertEquals(56, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(323, 323, fieldTypeLong0, 323, 323, byteArray0, byteOrder0, 323);
      tiffField0.getIntArrayValue();
      assertEquals(323, tiffField0.getOffset());
      assertEquals(1292, tiffField0.getBytesLength());
      assertEquals(323, tiffField0.getSortHint());
      assertEquals(323, tiffField0.getTag());
      assertEquals(323, tiffField0.getDirectoryType());
      assertEquals(323L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50739, 50739, fieldTypeFloat0, 50739, 50739, byteArray0, byteOrder0, 50739);
      String string0 = tiffField0.getTagName();
      assertEquals("ShadowScale", string0);
      assertEquals(50739, tiffField0.getDirectoryType());
      assertEquals(50739, tiffField0.getSortHint());
      assertEquals(50739, tiffField0.getOffset());
      assertEquals(50739, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 25, 25, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals("25 (0x19: Unknown Tag): ", string0);
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(648, 648, fieldTypeDouble0, 648, 648, byteArray0, byteOrder0, 648);
      tiffField0.toString();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@6ebacc90 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[168];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeShort0, 32, 32, byteArray0, byteOrder0, 32);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      tiffField0.dump();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(110, 110, fieldTypeByte0, 110, 110, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(110, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(110, tiffField0.getOffset());
      assertEquals(110, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1442, 12, fieldTypeRational0.ASCII, 1442, 1442, byteArray0, (ByteOrder) null, 1442);
      tiffField0.dump();
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(1442, tiffField0.getOffset());
      assertEquals(1442, tiffField0.getBytesLength());
      assertEquals(1442, tiffField0.getTag());
      assertEquals(1442, tiffField0.getSortHint());
      assertEquals(1442L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      tiffField0.getDoubleArrayValue();
      tiffField0.getIntArrayValue();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(280, 50, fieldTypeShort0, 2051L, (-1021L), byteArray0, byteOrder0, 50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-1021), tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2051L, tiffField0.getCount());
      assertEquals(280, tiffField0.getTag());
      assertEquals(4102, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(613, 613, fieldTypeLong0, 613, 613, byteArray0, byteOrder0, 613);
      String string0 = tiffField0.toString();
      assertEquals("613 (0x265: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (613 SLong)", string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(613, tiffField0.getDirectoryType());
      assertEquals(613, tiffField0.getSortHint());
      assertEquals(613, tiffField0.getOffset());
      assertEquals(2452, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[345];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(167, 167, fieldTypeRational0, 352L, 167, byteArray0, byteOrder0, 167);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 951, fieldTypeRational0, 951, 951, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals("", string0);
      assertEquals(951, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(951L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(951, tiffField0.getDirectoryType());
      assertEquals(7608, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@13ea7a51
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[198];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1222, 1222, fieldTypeFloat0.SSHORT, 1222, 1222, byteArray0, byteOrder0, 1222);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      assertEquals(1222, tiffField0.getDirectoryType());
      assertEquals(1222, tiffField0.getSortHint());
      assertEquals(1222, tiffField0.getTag());
      assertEquals(1222, tiffField0.getOffset());
      assertEquals(1222L, tiffField0.getCount());
      assertEquals(2444, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[332];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 305, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 305);
      tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(305, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65107, 50879, fieldTypeFloat0, 1L, 50879, byteArray0, byteOrder0, 50879);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      tiffField0.getValue();
      assertEquals(50879, tiffField0.getOffset());
      assertEquals(65107, tiffField0.getTag());
      assertEquals(50879, tiffField0.getDirectoryType());
      assertEquals(50879, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(597, "");
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeAscii0, 597, 81088L, byteArray0, byteOrder0, 597);
      String string0 = tiffField0.getStringValue();
      assertEquals(597, tiffField0.getSortHint());
      assertEquals(597, tiffField0.getBytesLength());
      assertEquals(81088, tiffField0.getOffset());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(668, 668, fieldTypeRational0, 668, 668, byteArray0, byteOrder0, 50726);
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-789), (-789), fieldTypeRational0, 12, (-789), byteArray0, byteOrder0, 12);
      String string0 = File.pathSeparator;
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(12, tiffField0.getSortHint());
      assertEquals((-789), tiffField0.getOffset());
      assertEquals((-789), tiffField0.getTag());
      assertEquals((-789), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-2749), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2749), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0.SBYTE, 5344L, 5344L, byteArray0, byteOrder0, 25);
      tiffField0.dump();
      assertEquals(5344, tiffField0.getBytesLength());
      assertEquals(5344, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[68];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2145991303, 2145991303, fieldTypeAscii0, 255L, 284L, byteArray0, byteOrder0, 2145991303);
      tiffField0.toString();
      assertEquals(2145991303, tiffField0.getDirectoryType());
      assertEquals(284, tiffField0.getOffset());
      assertEquals(2145991303, tiffField0.getTag());
      assertEquals(2145991303, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[249];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1246, 1246, fieldTypeFloat0.LONG, 1246, 1246, byteArray0, byteOrder0, 1246);
      tiffField0.dump();
      assertEquals(1246, tiffField0.getTag());
      assertEquals(1246, tiffField0.getSortHint());
      assertEquals(4984, tiffField0.getBytesLength());
      assertEquals(1246, tiffField0.getOffset());
      assertEquals(1246, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[249];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1246, 1246, fieldTypeFloat0, 1246, 1246, byteArray0, byteOrder0, 1246);
      tiffField0.dump();
      assertEquals(1246, tiffField0.getTag());
      assertEquals(1246, tiffField0.getSortHint());
      assertEquals(1246, tiffField0.getDirectoryType());
      assertEquals(1246, tiffField0.getOffset());
      assertEquals(4984, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(466, 466, fieldTypeDouble0, 466, 4L, byteArray0, byteOrder0, 466);
      tiffField0.dump();
      StringWriter stringWriter0 = new StringWriter(466);
      tiffField0.getTagInfo();
      assertEquals(466, tiffField0.getSortHint());
      assertEquals(3728, tiffField0.getBytesLength());
      assertEquals(466, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(466, tiffField0.getDirectoryType());
  }
}
