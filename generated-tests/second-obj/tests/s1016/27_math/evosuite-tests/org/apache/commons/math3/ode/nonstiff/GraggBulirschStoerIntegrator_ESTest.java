/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 04:04:04 GMT 2018
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.SecondaryEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.3708481788635254, 1.3708481788635254, 1.3708481788635254, 1474.881217);
      graggBulirschStoerIntegrator0.setControlFactors(1474.881217, 1474.881217, 749.267, 1474.881217);
      assertEquals(1.3708481788635254, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2729.19561411, 3913.0, 162.5, 1.686452181034883E8);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setInitialStepSize(2729.19561411);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 3, 3, 2729.19561411);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1280), 3, 0.01);
      assertEquals(2729.19561411, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.49864232540130615, 0.0, 0.0, 0.49864232540130615);
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = null;
      graggBulirschStoerIntegrator0.setControlFactors(0.49864232540130615, 0.0, 0.49864232540130615, 313.935);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver();
      assertEquals(0.0, brentSolver0.getMin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-349.6247), 2553.04518689852, 2553.04518689852, 2553.04518689852);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(0, 0.0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-349.6247), 2553.04518689852, 0, (UnivariateSolver) mullerSolver2_0);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(32.671111, 4979.25966773, 0.16524958610534668, 0.0);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.3366470162689076E-8, 5.3366470162689076E-8, 1.0001, 5.3366470162689076E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(755).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = 1651.581957174;
      expandableStatefulODE0.setTime(1651.581957174);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-7.821867597227376E-9));
      boolean boolean0 = true;
      int int0 = (-823);
      graggBulirschStoerIntegrator0.setStabilityCheck(boolean0, int0, int0, int0);
      int int1 = (-1268);
      double double1 = (-536.9264352933);
      graggBulirschStoerIntegrator0.setOrderControl(int1, double0, double1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.3366470162689076E-8, 5.3366470162689076E-8, 1.0001, 5.3366470162689076E-8);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 49);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(49).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(49).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-943.2614005738));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 5.3366470162689076E-8;
      doubleArray0[1] = 5.3366470162689076E-8;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(1370.7224504666794);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter1);
      ExpandableStatefulODE expandableStatefulODE2 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE1.setTime((-2563.9356643133287));
      ExpandableStatefulODE expandableStatefulODE3 = new ExpandableStatefulODE(firstOrderConverter1);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1370.7224504666794, (-2537.8830565227604), 1370.7224504666794, 506.3120999902394);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 506.3120999902394);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType1);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      FilterType filterType2 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter2 = new EventFilter(eventFilter1, filterType2);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, (-3459), 1.4030961557818866);
      assertEquals(21, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.4193130325798093;
      doubleArray0[1] = 1.4193130325798093;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.4193130325798093, 6.206776940880773E-9, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(4434, 2449.332395725, 1.4193130325798093);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-85.32193078785244), (-85.32193078785244));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, (-85.32193078785244), 0.0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      graggBulirschStoerIntegrator0.setOrderControl(7, 0.0, 0.0);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 203.13185866, 203.13185866);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, 4.0651709187617596E-117, 3597.719074);
      graggBulirschStoerIntegrator0.setControlFactors(203.13185866, 0.11691460013389587, 0.0, 3597.719074);
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 203.13185866, 986.48457373, 0.0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(6).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.009999999999990905, 0.66943061, 1935.39950758733, 0.0);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 5);
      double double0 = 2860.4537786519;
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, double0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(677.8875817826, 677.8875817826, 677.8875817826, 1.0E-4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(13).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setOrderControl(13, 1.0E-4, 677.8875817826);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getCompleteState();
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 677.8875817826);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.49864232540130615, 0.0, 4454.317804724735, 0.49864232540130615);
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = null;
      graggBulirschStoerIntegrator0.setControlFactors(0.49864232540130615, 0.0, 4454.317804724735, 313.935);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2470.965217437, 739.74, 739.74, 2470.965217437);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(4.0, (-2096.0), 1.0, 739.74);
      assertEquals(2470.965217437, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-278.21217815552257), (-278.21217815552257), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 486);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3062.1951565133695);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double double0 = (-278.21217815552257);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-278.21217815552257), (-278.21217815552257), doubleArray0, doubleArray0);
      double double1 = 0.0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(843.36746);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE1.setTime((-278.21217815552257));
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, 0.01);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-278.21217815552257), (-278.21217815552257), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(877).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(843.36746);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE1.setTime((-278.21217815552257));
      double double0 = 3.430336362898836E-90;
      graggBulirschStoerIntegrator0.setStepSizeControl(0.0, 3.430336362898836E-90, 1027.2005397043056, 274.955333566922);
      graggBulirschStoerIntegrator0.setOrderControl(1947, (-1478.26967522), (-278.21217815552257));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1249.468933803);
      int int0 = 1297;
      double double1 = 2025.31;
      graggBulirschStoerIntegrator0.setOrderControl(int0, double0, double1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 2146003749, 19, (-42.90497334));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.3366470162689076E-8, 5.3366470162689076E-8, 1.0001, 5.3366470162689076E-8);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4948).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      double double0 = 843.36746;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1318, 21, 1830.35810843);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-1));
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 843.36746);
      boolean boolean0 = false;
      int int0 = (-1390);
      graggBulirschStoerIntegrator0.setInterpolationControl(boolean0, int0);
      double double1 = (-1638.708272599);
      double double2 = (-905.0);
      graggBulirschStoerIntegrator0.setControlFactors(double1, double0, int0, double2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.3366470162689076E-8, 5.3366470162689076E-8, 1.0001, 5.3366470162689076E-8);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1440), (-512), (-3407.3710626895218));
      graggBulirschStoerIntegrator0.setOrderControl((-512), 1.0E-4, 1.0E-4);
      assertEquals(5.3366470162689076E-8, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3044.1951565133695, 3044.1951565133695, 3044.1951565133695, 3044.1951565133695);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(18).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime(18);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 3044.1951565133695);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 18);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 18, 18, (-705.051));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 18);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter1);
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-705.051));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(3044.195156513, 3044.195156513, 3044.195156513, 3044.195156513);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-3.348471032333413E-8), 3044.195156513, 382.69847273, 3044.195156513);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(18).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1135.9563593886842));
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 382.69847273;
      doubleArray0[1] = 680.7439459344185;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator2 = new GraggBulirschStoerIntegrator(0.9999, 2.462968349456787, doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(18).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator3 = new GraggBulirschStoerIntegrator(623.71, 5192.970981915495, 680.7439459344185, (-85.32193078785244));
      graggBulirschStoerIntegrator3.integrate(expandableStatefulODE0, 586.0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = 1954.8059818343463;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1954.8059818343463, 0.0, (-85.32193078785244), (-85.32193078785244));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, (-85.32193078785244), 0.0);
      int int0 = 2;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setInitialStepSize(0.0);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double1 = (-5417.904232214428);
      expandableStatefulODE0.setTime((-5417.904232214428));
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE1.setTime((-85.32193078785244));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 6);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2();
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE1, (-5417.904232214428));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minimal step size (1.95E03) reached, integration needs 0.00E00
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          double[] doubleArray0 = new double[8];
          doubleArray0[5] = 5.3366470162689076E-8;
          doubleArray0[1] = 5.3366470162689076E-8;
          SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
          doReturn(5).when(secondOrderDifferentialEquations0).getDimension();
          FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
          ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
          SecondaryEquations secondaryEquations0 = mock(SecondaryEquations.class, new ViolatedAssumptionAnswer());
          doReturn(5).when(secondaryEquations0).getDimension();
          double[] doubleArray1 = expandableStatefulODE0.getCompleteState();
          expandableStatefulODE0.addSecondaryEquations(secondaryEquations0);
          int int0 = (-2223);
          GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.3366470162689076E-8, 0.0, doubleArray1, doubleArray1);
          // Undeclared exception!
          graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-4);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
