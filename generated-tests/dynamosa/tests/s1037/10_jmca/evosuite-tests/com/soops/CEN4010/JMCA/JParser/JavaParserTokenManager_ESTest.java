/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 12:10:53 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8/q>$SnmS_4FN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(". State unchanged.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, 4540);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4542, javaCharStream0.getBeginColumn());
      assertEquals(4546, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("l&_YJd=$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(".  Encountered: ");
      javaCharStream0.ReInit((Reader) stringReader1, 34, 34);
      stringReader0.mark(34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream0;
      JavaCharStream.hexval('a');
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.lengthOfMatch = 4066;
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 10);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 10. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2777), (-2777));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-2775), javaCharStream0.getBeginColumn());
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      StringReader stringReader1 = new StringReader("0]*]ii|l1kn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1226), (-1226));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -1226, column -1225.  Encountered: \"]\" (93), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(70, token0.kind);
      
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("return");
      javaCharStream0.ReInit((Reader) stringReader1, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(39, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("l", token0.toString());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream0, Integer.MAX_VALUE);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = (-595);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)26, (-595));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      int int1 = 1;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 26, column -594.  Encountered: \"\\u001a\" (26), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("conJtin[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n5.Dry)YlncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(62, token0.kind);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("eX0)*GcOxEP<Mh}79~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("01~=Tm>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"1\" (49), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g19");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("g19");
      StringReader stringReader2 = new StringReader("g19");
      StringReader stringReader3 = new StringReader(">>>");
      javaCharStream0.ReInit((Reader) stringReader3, 123, 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(">>", token0.toString());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("while");
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(5, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("GIb3a4e3(dR/k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("M-\"V[Z<Pb=A[[L)");
      javaCharStream0.ReInit((Reader) stringReader1, (-2831), (-943));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.jjFillToken();
      assertEquals("M", token0.toString());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("yOhSG.9@G8Jr\"h_");
      StringReader stringReader2 = new StringReader("publc");
      javaCharStream0.ReInit((Reader) stringReader2, (-712), 123);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("publc", token0.toString());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$QNn Wy[*y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O05q$2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2343), 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -2343, column 2.  Encountered: \"\" (0), after : \"\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<Z1Rk2s2k/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
      
      token0.kind = 98;
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      token0.kind = 0;
      Token token1 = javaParserTokenManager0.jjFillToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      token0.next = token1;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      MockFile mockFile0 = new MockFile("yk5SDwB_ra\"i", "<");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile1);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("~n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 73);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 73, 2573);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader3 = new StringReader("-");
      javaCharStream0.ReInit((Reader) stringReader3, 38, 38);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, Integer.MAX_VALUE);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2147483647. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("lkl");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("lkl");
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(3, javaCharStream1.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6>\"aI$<aR_m>J*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, 106);
      PipedInputStream pipedInputStream0 = new PipedInputStream(27);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, (-770), (-744));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      byteArrayInputStream0.read();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \">\" (62), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k;jFf):jM");
      StringReader stringReader1 = new StringReader("!ceJNe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("#]4J3k#");
      stringReader2.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1499), (byte) (-59));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(89, token0.kind);
      assertEquals("!", token0.toString());
      assertEquals(1, token0.endColumn);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      StringReader stringReader0 = new StringReader("{/+_)t");
      StringReader stringReader1 = new StringReader("{/+_)t");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1615, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, (-1850), (-1777));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(79, token0.kind);
      assertEquals(1615, token0.endLine);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("/", token1.toString());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lQqq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(1, javaCharStream0.bufpos);
      
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)25;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader3 = new StringReader("yOhSG.9@G8qJr\"h_");
      javaCharStream0.ReInit((Reader) stringReader2, 1186, (int) (byte)25);
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(30, javaCharStream0.getBeginColumn());
      assertEquals(".9", token0.toString());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("\"*=\"");
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)112;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 81, 81);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), 0, 58);
      javaParserTokenManager1.ReInit(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("\"<<\"", token1.toString());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("wREO~j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("hA,i|f=ke2ZK");
      javaCharStream0.ReInit((Reader) stringReader1, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getColumn());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("|", token0.toString());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("f", token1.toString());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mWFq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("a,j}pu#");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("T{+jwB*^t[l{y");
      StringReader stringReader2 = new StringReader("O]}(PC7)mRsBj)|R4|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token token0 = new Token();
      Token token1 = Token.newToken(1764);
      token1.kind = 1017;
      token1.kind = 107;
      token0.next = token1;
      token0.specialToken = token1;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("+P~rVCf*-/jb>/h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("+", token0.toString());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("8/q>$SnmS_4FN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("=d");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.getBeginColumn());
      assertEquals(23, token0.kind);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager1.SkipLexicalActions(token_GTToken1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      Token token1 = new Token();
      assertFalse(token1.equals((Object)token0));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token1.kind);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (-1911));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("lv`6");
      javaCharStream0.ReInit((Reader) stringReader0, (-1911), (-1911));
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1911, column -1909.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>>=");
      StringReader stringReader1 = new StringReader(">>>=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 120);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 120. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      StringReader stringReader1 = new StringReader("mF WTB2gN=Rpq;yE");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((Reader) stringReader1, 0, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 34);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 34. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2214, (-2147483643));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-2147483640), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("char");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("char", token0.toString());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("x!%d$&e");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("g*Tj':|E=k,[,");
      StringReader stringReader3 = new StringReader(">>>");
      javaCharStream0.ReInit((Reader) stringReader3, 44, 0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("\"@\"");
      StringReader stringReader2 = new StringReader("0]*]ii|l1kn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 81, 1695);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1697, javaCharStream0.getEndColumn());
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      StringReader stringReader0 = new StringReader("\"%\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("\"\n\"");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream1.ReInit((Reader) stringReader1, 862, (int) (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 862, column -114.  Encountered: \"\\n\" (10), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("default");
      javaCharStream0.ReInit((Reader) stringReader1, (-1423), (-1423));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("default", token0.toString());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader3 = new StringReader("public");
      javaCharStream0.ReInit((Reader) stringReader3, (-710), 123);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token0 = Token.newToken((-710));
      assertEquals(0, token0.endColumn);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("i=6[e`,@WD+(_Mff");
      StringReader stringReader1 = new StringReader("4H:-PrkRsfqcXUD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 26, 25);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"H\" (72), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O==Ar65qBks");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)114;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 28, 2259);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(93, token0.kind);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("fals");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("fals", token0.toString());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Pb5I");
      StringReader stringReader1 = new StringReader("Pb5I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 93, 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.read();
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(95, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(2668, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      StringReader stringReader1 = new StringReader("_MGF\"&+mp=:9nb@e;V7");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream1.AdjustBuffSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "continue");
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      Token token1 = new Token();
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(4, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ,Y(} Y]6C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.getBeginColumn());
      assertEquals(84, token0.kind);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(";", token0.toString());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (-271));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -271. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3hC/<dfY'vD{0r-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("3hC/<dfY'vD{0r-");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"h\" (104), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertFalse(JavaCharStream.staticFlag);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 0, (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("Q ");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 0);
      javaParserTokenManager1.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Nn *Ly[*y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (-1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("Nn", token0.toString());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(". State unchanged.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("lG:");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("lG", token0.toString());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Token token0 = Token.newToken(1309);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      StringReader stringReader0 = new StringReader("q{%XunPK+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3036, 27);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0A)f8%1=MdNT_tyf~nI");
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      javaCharStream0.bufline = javaParserTokenManager0.jjnewLexState;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager2.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(79, token1.kind);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|4k?/Wb,4RHF7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("");
      int int0 = (-2538);
      javaCharStream0.ReInit((Reader) stringReader0, (-154), (-2538));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+3TXhzmrAH~Fvv");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.defaultLexState = 40;
      MockPrintStream mockPrintStream0 = new MockPrintStream("case");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2265), (-710));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("@,~&f}92DFAYC9=:]");
      javaCharStream0.prevCharIsLF = false;
      javaCharStream1.ReInit((Reader) stringReader2, (-2820), 123);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(",", token0.toString());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<Z1Rk2s2k/");
      StringReader stringReader1 = new StringReader("e_r25<cHrk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      StringReader stringReader1 = new StringReader(";");
      StringReader stringReader2 = new StringReader("VOd7A_+^QQ'dGh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader3 = new StringReader("extends");
      javaCharStream0.ReInit((Reader) stringReader2, 2568, 2568);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager1.curLexState = 13;
      javaParserTokenManager0.SkipLexicalActions(token1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager1.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2577, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader(";");
      StringReader stringReader2 = new StringReader("/=");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte)98, 482);
      javaParserTokenManager0.getNextToken();
      assertEquals(482, javaCharStream0.getBeginColumn());
      assertEquals(483, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("e7K5Zh[2");
      StringReader stringReader1 = new StringReader("\"this\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lG:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(92, token1.kind);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("x!%d$&e");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("g*Tj':|E=k,[,");
      StringReader stringReader3 = new StringReader(">>>");
      javaCharStream0.ReInit((Reader) stringReader3, 2659, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(0, javaCharStream0.getEndColumn());
      assertEquals(0, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l+6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader2 = new StringReader("bB*S[7[`l+6c");
      javaCharStream0.ReInit((Reader) stringReader1, (-1), (-1));
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(70, token0.kind);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("YmK*I!{YwB\"v,;jOPJp");
      StringReader stringReader2 = new StringReader(">;s*^");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, (byte)120, (byte)64);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2);
      javaParserTokenManager0.ReInit(javaCharStream3);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(124, token0.kind);
      
      Token token1 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(1, token2.endLine);
      assertEquals(83, token2.kind);
      assertEquals(";", token2.toString());
      
      javaParserTokenManager0.MoreLexicalActions();
      Token token3 = javaParserTokenManager0.getNextToken();
      assertEquals("s", token3.toString());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("@br;j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, 60);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.ReInit(javaCharStream1);
      stringReader0.skip((-1));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 37, 105);
      javaCharStream1.bufcolumn = javaParserTokenManager0.jjnewLexState;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals("br", token1.toString());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Token.newToken(1309);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(14, token0.kind);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("-NTF]!|:E`Q`BB");
      stringReader0.reset();
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1308), (-1));
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)78;
      byteArray1[1] = (byte) (-115);
      byteArray1[2] = (byte) (-115);
      byteArray1[3] = (byte)125;
      byteArray1[4] = (byte)120;
      byteArray1[5] = (byte) (-115);
      byteArray1[6] = (byte) (-115);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals("N", token0.toString());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)36;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 3, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      Token token0 = new Token();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3, column 1.  Encountered: \"$\" (36), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = Token.newToken(1309);
      token1.specialToken = token0;
      token1.specialToken = token0;
      javaParserTokenManager0.defaultLexState = 0;
      javaParserTokenManager0.SkipLexicalActions(token1);
      int int0 = 1471;
      try { 
        stringReader0.skip(1309);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|4k?/Wb,4RHF7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 28, (byte)114);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 28, column 115.  Encountered: \"\\b\" (8), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      StringReader stringReader1 = new StringReader("C6Jtdojdr");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager2.getNextToken();
      assertEquals(17, javaCharStream0.bufpos);
      assertEquals((-98), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      StringReader stringReader0 = new StringReader("{/+_)t");
      StringReader stringReader1 = new StringReader("{/+_)t");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1615, 60);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -115, column -115.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k;jFf):jM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte) (-59);
      byteArray0[6] = (byte) (-59);
      byteArray0[7] = (byte) (-59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-59), (byte) (-59));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 40, (byte)118);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaCharStream1.ReadByte();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("\"assert\"");
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, 47, (byte)0, 4195);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager2.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("k", token0.toString());
      
      Token token1 = javaParserTokenManager2.getNextToken();
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 3, (byte)110);
      javaCharStream1.ReInit((Reader) stringReader0, 114, 1234);
      StringReader stringReader1 = new StringReader("&");
      StringReader stringReader2 = new StringReader("||");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte)0, (-1426));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("h`ELkV~T$Tb7wA");
      StringReader stringReader2 = new StringReader(" +'$RH}W");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 78);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 82.  Encountered: \"R\" (82), after : \"\\'$\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      StringReader stringReader1 = new StringReader("...");
      stringReader1.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k;jFf):jM");
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("!ceJNe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("#]4J3k#");
      stringReader2.reset();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'Z';
      charArray0[1] = 'O';
      charArray0[2] = '%';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1308), (-1308));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      Token.newToken(1309);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.ReInit((JavaCharStream) null, 0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader2 = new StringReader("E8?L/)72C-a{EYg");
      javaCharStream0.ReInit((Reader) stringReader2, 1877, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      javaParserTokenManager0.getNextToken();
      token_GTToken2.kind = (-1383);
      javaParserTokenManager1.MoreLexicalActions();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.debugStream = javaParserTokenManager0.debugStream;
      stringReader1.close();
      javaParserTokenManager1.TokenLexicalActions(token_GTToken2);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.ReInit(javaCharStream0);
      javaParserTokenManager2.ReInit(javaCharStream0);
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(1877, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("01~=Tm>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("%");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"1\" (49), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|4k?/Wb,4RHF7x>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"k\" (107), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("E8?L/)72C-a{EYg");
      javaCharStream0.ReInit((Reader) stringReader1, 1877, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)48;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)48, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-271), (-271));
      byteArrayInputStream1.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 48, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("U'v5L{| *=wLO");
      StringReader stringReader2 = new StringReader("T{+jwB*^t[l{y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.curLexState = 74;
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertFalse(JavaCharStream.staticFlag);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader(";\"l)ylk[j{5Iz");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Z';
      charArray0[1] = '|';
      charArray0[2] = '^';
      charArray0[3] = '=';
      charArray0[4] = 'V';
      charArray0[5] = 'V';
      charArray0[6] = 'r';
      charArray0[7] = 'd';
      charArray0[8] = 'z';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader(";\"l)ylk[j{5Iz");
      javaCharStream0.ReInit((Reader) stringReader1, 1186, (int) (byte)0);
      Locale locale0 = Locale.ITALY;
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.newToken((byte)0);
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1186, column 2.  Encountered: \"I\" (73), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("VOd7A_+^QQ'dGh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte) (-115), (int) (byte) (-83));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<Z1Rk2s2k/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(9, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9/R^{G'?<");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(104, token0.kind);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?ahX|aO3,/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 3);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9/R^{G'?<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(66, token0.kind);
      assertEquals("9", token0.toString());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 3, (byte)110);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 3);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 3, column 111.  Encountered: \"$\" (36), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)39;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1658, 85);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1658, column 87.  Encountered: <EOF> after : \"\\'\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6>\"aI$<aR_m>J*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("kLPa'.2gvGnl1T$)OA");
      javaParserTokenManager0.curLexState = (-727);
      StringReader stringReader2 = new StringReader("6>\"aI$<aR_m>J*");
      javaCharStream0.ReInit((Reader) stringReader2, 152, 1298);
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 152, column 1299.  Encountered: \">\" (62), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals((-106), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("x!%d$&e");
      StringReader stringReader1 = new StringReader("\"%\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(2665, javaCharStream0.getBeginColumn());
      assertEquals("&", token1.toString());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<FLOATING_POINT_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(23, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 106);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-82);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1389, 498);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1389, column 499.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      StringReader stringReader1 = new StringReader("%f!#wr,p");
      javaCharStream0.ReInit((Reader) stringReader1, (-981), 0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(74, token1.kind);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("oDH^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("kz^]AxqLm");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(107, token0.kind);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -115, column -115.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9/R^{G'?<");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GIb3a4e3(dR/k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      StringReader stringReader1 = new StringReader("GIb3a4e3(dR/k");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2845, (-1850));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token token1 = javaParserTokenManager1.jjFillToken();
      assertEquals("(", token1.toString());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".]oouEe80d}=I,_hu*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(85, token0.kind);
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals(82, token1.kind);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals("[", token1.toString());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("'`jw>E3V3im}?]Fx");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1220, 1220);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1220, column 1222.  Encountered: \"j\" (106), after : \"\\'`\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dr)\\lnLj*Qj");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("Y1g");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("Y1g", token0.toString());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8/q>$SnmS_4FN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("8", token0.toString());
      assertEquals(66, token0.kind);
      
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("x!%d$&e");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("g*Tj':|E=k,[,");
      StringReader stringReader3 = new StringReader(">>>");
      javaCharStream0.ReInit((Reader) stringReader3, 2659, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader(">>>=");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 2443);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-405), 112);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("^=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("]L-7Rse~ EjN*) ");
      StringReader stringReader2 = new StringReader("F`4'68#M[5!HB.(D");
      javaCharStream0.ReInit((Reader) stringReader0, 2533, 457);
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream0, 2844);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2844. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ezuV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(4, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6>\"aI$<aR_m>J*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, 106);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 1658, (byte) (-59));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g19");
      StringReader stringReader1 = new StringReader("Q`O^^(qWm,fHaRN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(74, token0.kind);
      assertEquals("Q", token0.toString());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@br;j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(86, token0.kind);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("try");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-59), (byte) (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -59, column -57.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("<OCTAL_LITERAL>");
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1, (-1), 41);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("<", token0.toString());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6>\"aI$<aR_m>J*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      StringReader stringReader1 = new StringReader("^=");
      javaCharStream0.ReInit((Reader) stringReader1, (-2508), (-4458));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8/q>$SnmS_4FN");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("h`ELkV~T$Tb7wA");
      StringReader stringReader2 = new StringReader(" +'$RH}W");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 78);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 82.  Encountered: \"R\" (82), after : \"\\'$\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("static");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 51, (-1125));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1120), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Nn *Ly[*y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("$Nn", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.nextCharInd = (int) (byte) (-115);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufcolumn = javaParserTokenManager0.jjnewLexState;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-3011));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte)75;
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte)75;
      byteArray0[6] = (byte)75;
      byteArray0[7] = (byte)75;
      byteArray0[8] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-113), (int) (byte)75);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, token1.kind);
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(". State unchanged.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, 4540);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(111);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 111. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EBb:a9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<%.[:`s(LP*I$6qP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 76, 76);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 76);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 76. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.kind = 977;
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 412, 10);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      assertEquals(10, javaCharStream1.getBeginColumn());
      
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2SH{e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"S\" (83), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g19");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("g19");
      StringReader stringReader2 = new StringReader("ed$2hp_>17");
      javaCharStream0.ReInit((Reader) stringReader2, 1863, 1863);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(1869, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: <EOF> after : \"\\\"do\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("'szdk}iL~>X]P1 EY");
      StringReader stringReader1 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader2 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-810), (-1529));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -810, column -1527.  Encountered: \"z\" (122), after : \"\\'s\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = (-1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"=AF\fBcz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 9.  Encountered: <EOF> after : \"\\\"=AF\\fBcz\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 27, 9);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("^~");
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)0, (int) (byte) (-59));
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      Token token0 = javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager4.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager5.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("~", token1.toString());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Vk-}mkakU");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("+P~rV=f*(/jb>ah");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("34:rX]XK$z\"l#MMDY");
      StringReader stringReader3 = new StringReader(",vQlH");
      javaCharStream0.ReInit((Reader) stringReader2, 46, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 46, column 47.  Encountered: \"4\" (52), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2820), (-682));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("E8?L/)72C-a{EYg");
      javaCharStream0.ReInit((Reader) stringReader0, 1877, (int) (byte)122);
      javaParserTokenManager0.image = null;
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.endLine = (-3760);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, true, "*");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // *
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"S\" (83), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("im*;+(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2784, 2784);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.endColumn = 2794;
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, 1415);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1415. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringReader stringReader0 = new StringReader("conJtin[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.jjnewStateCnt = (-1);
      javaCharStream1.available = 3294;
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals(8, javaCharStream1.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader("01~=Tm>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"1\" (49), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
      
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      token1.endLine = 14;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("{/+_)t");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("{/+_)t");
      StringReader stringReader2 = new StringReader("{/+_)t");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.bufpos = 1;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getEndColumn());
      assertEquals("+", token0.toString());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6>\"aI$<aR_m>J*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \">\" (62), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("~n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader3 = new StringReader("yOhSG.9@G8qJr\"h_");
      javaCharStream0.ReInit((Reader) stringReader2, 1186, (int) (byte)25);
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(29, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token1 = token_GTToken0.specialToken;
      token0.specialToken = null;
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals((-112), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l{G:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(1);
      assertEquals(0, token0.endLine);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x|AZJq^G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"Z\" (90), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)36;
      StringReader stringReader0 = new StringReader("%R9EXpK+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)36, 21, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("d@jJ`");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)36, 107, 107);
      javaParserTokenManager0.ReInit(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 0);
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager3.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token1.toString());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(29);
      StringReader stringReader0 = new StringReader("\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 106, 4066);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 106, column 4067.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      StringReader stringReader0 = new StringReader("assert");
      StringReader stringReader1 = new StringReader("BN<1Y9^sz?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 122, 33, 47);
      javaCharStream0.ReInit((Reader) stringReader1, 2568, 687);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 2568, column 691.  Encountered: \"Y\" (89), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l+6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(8, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")[<()gRp2Z~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("[", token0.toString());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(53, token0.kind);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "\\u";
      StringReader stringReader0 = new StringReader(string0);
      StringReader stringReader1 = new StringReader(string0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(javaParserTokenManager1.debugStream);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dataOutputStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Invalid escape character at line 1 column 2.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      StringReader stringReader0 = new StringReader("01A=Tm>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("Db}#0");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaParserTokenManager1.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"1\" (49), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("\"mtM");
      javaCharStream0.ReInit((Reader) stringReader1, 1, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\\\"mtM\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("~n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader3 = new StringReader("public");
      javaCharStream0.ReInit((Reader) stringReader3, (-710), 123);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-710), javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EBb:a9");
      StringReader stringReader1 = new StringReader("...");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0, (-344), 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(35, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rg+&ie?N+");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1063), 2260);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 1985);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1985. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(32);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 32. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      StringReader stringReader1 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      javaParserTokenManager1.jjFillToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vu0Z|N+P");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = Token.newToken(1204);
      assertNull(token0.toString());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, 19);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 19. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("+w%iHHI<jl\"j:Z?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("+", token0.toString());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(2, javaCharStream0.getColumn());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("&D>}Z`[LMqm!cN?");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 29, (byte) (-59), 1740);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("X", token0.toString());
      
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals("X", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      StringReader stringReader1 = new StringReader("\"this\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 9.  Encountered: \"U\" (85), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      stringReader0.read();
      StringReader stringReader1 = new StringReader(">>>");
      StringReader stringReader2 = new StringReader("<INTEGER_LITERAL>");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 65, 65);
      javaCharStream0.ReInit((Reader) stringReader2, 65, 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(124, javaCharStream0.getBeginColumn());
      assertEquals(138, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W&@EO!g+Vf");
      StringReader stringReader1 = new StringReader("\"do\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("nf'c0c,)_\"[lCpbp5o");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 139, 1220);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 139, column 1224.  Encountered: \"0\" (48), after : \"\\'c\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("P0W@B{zhsSfl1");
      stringReader0.mark(2921);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("P0W@B{zhsSfl1");
      StringReader stringReader2 = new StringReader("0000");
      StringReader stringReader3 = new StringReader("z+2m\"MV5f");
      javaCharStream0.ReInit((Reader) stringReader3, 2357, 25);
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(74, token0.kind);
      assertEquals("z", token0.toString());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader(";\"l)ylk[j{5Iz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader2 = new StringReader("X");
      StringReader stringReader3 = new StringReader("VOd7A_+^QQ'dGh");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-83), (int) (byte) (-83));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -83, column -70.  Encountered: <EOF> after : \"\\\"l)ylk[j{5Iz\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2265), (-710));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader2 = new StringReader("@,~&f}92DFAYC9=:]");
      javaCharStream1.ReInit((Reader) stringReader2, (-2820), 123);
      javaParserTokenManager0.getNextToken();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      StringReader stringReader0 = new StringReader("k;jFf):jM");
      StringReader stringReader1 = new StringReader(")ceJce");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("#]4J3k#");
      stringReader2.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)79;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1499), (byte) (-59));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals("ceJce", token1.toString());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.image = stringBuffer0;
      Token.GTToken token_GTToken1 = new Token.GTToken();
      token_GTToken1.next = token0;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SwitchTo(2);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("++");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 30);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = new Token();
      Token token1 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token2);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = null;
      try {
        javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 30);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 30. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(1309);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1, 122);
      Token token0 = Token.newToken((-802));
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 91);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 91. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$Nn *Ly[*y");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T./<'U{.'7XcmJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("T", token0.toString());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2212, (-2147483643));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals((-2147483640), javaCharStream0.getBeginColumn());
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*r7(`l>6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l+6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("B", token0.toString());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      StringReader stringReader1 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream1);
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("default");
      javaCharStream0.ReInit((Reader) stringReader1, (-1423), (-1423));
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals((-1417), javaCharStream0.getBeginColumn());
      assertEquals((-1417), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1975, 63);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 5.  Encountered: <EOF> after : \"\\'\\b\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("6<I");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaParserTokenManager0.ReInit(javaCharStream1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"<\" (60), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lG:");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("G", token0.toString());
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.curChar = '?';
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("s", token0.toString());
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(85, token0.kind);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Token.newToken(1309);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      StringReader stringReader0 = new StringReader("*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 106, 705);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("*", token0.toString());
      assertEquals(103, token0.kind);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)36, (-1975));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1974), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-6834), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('2');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader2 = new StringReader("zw}>#$G-#a<P");
      StringReader stringReader3 = new StringReader("zw}>#$G-#a<P");
      javaCharStream0.ReInit((Reader) stringReader2, 46, 20);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 46, column 24.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qlj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("P>M)XgX:1");
      StringReader stringReader2 = new StringReader("g*Tj':|E=k,[,");
      javaCharStream0.ReInit((Reader) stringReader1, (-4462), 1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals((-4462), javaCharStream0.getLine());
      assertEquals(1, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token token0 = new Token();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = Token.newToken(0);
      token0.next = token1;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      StringReader stringReader1 = new StringReader("L*:U(@-Bt");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2198);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, 63, (-1788), (-1788));
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("*", token0.toString());
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sNtrictf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 27, 9);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("^~");
      javaCharStream0.ReInit((Reader) stringReader1, (int) (byte)0, (int) (byte) (-59));
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      javaParserTokenManager2.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager3.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 27, column 9.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-59), (byte) (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -59, column -57.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      StringReader stringReader1 = new StringReader("Zx2S_#z,cA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.image = null;
      javaParserTokenManager0.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      String string0 = "finally";
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 1309);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1309. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l{G:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(79, token0.kind);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<<\"");
      StringReader stringReader1 = new StringReader("23=q~");
      StringReader stringReader2 = new StringReader("/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"3\" (51), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<<\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)112;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-723), 47);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      javaParserTokenManager1.SkipLexicalActions((Token) null);
      javaParserTokenManager1.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions((Token) null);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals("ppEn", token0.toString());
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 28, (byte)114);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 28, column 116.  Encountered: \"\\ufffd\" (65533), after : \"\\'\\b\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = false;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 0, (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("j'");
      javaCharStream0.ReInit((Reader) stringReader2, 0, 0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("j", token0.toString());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"S\" (83), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 93, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("Lkar[]I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("false");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1099), 3968);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -1099, column 3969.  Encountered: \"{\" (123), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      StringReader stringReader0 = new StringReader("90");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 3780, 2338);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream0;
      JavaCharStream.hexval('a');
      javaParserTokenManager0.MoreLexicalActions();
      Token.newToken(4425);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.SwitchTo(0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)110;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 3, (byte)110);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(9, javaCharStream0.getBeginColumn());
      assertEquals(0, token1.kind);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g19");
      StringReader stringReader1 = new StringReader("g19");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2484, 57);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.getNextToken();
      Locale locale0 = Locale.JAPAN;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(3, javaCharStream0.getBeginColumn());
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("e/N'urn");
      javaCharStream0.ReInit((Reader) stringReader1, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(34, javaCharStream0.getColumn());
      
      javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(34, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 93, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      StringReader stringReader2 = new StringReader("Dj/Wo*f{l<b");
      javaCharStream0.ReInit((Reader) stringReader2, 1792, (-925));
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 1792);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1792. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("J]Uiu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 13);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("J", token0.toString());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("x!%d$&e");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 2659, 2659);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      token_GTToken0.specialToken = token0;
      StringReader stringReader2 = new StringReader("g*Tj':|E=k,[,");
      StringReader stringReader3 = new StringReader(">>>");
      javaCharStream0.ReInit((Reader) stringReader3, 44, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("VOd7A_+^QQ'dGh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("hA,i|f=ke2ZK");
      javaCharStream0.ReInit((Reader) stringReader2, 34, (-1529));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Locale locale1 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals((-1525), javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("7nvQ.3+lYlW8W>8f");
      javaParserTokenManager0.ReInit(javaCharStream0);
      mockPrintStream0.print((-1));
      javaParserTokenManager0.jjimageLen = (-1);
      javaCharStream0.bufpos = (-3231);
      PrintStream printStream0 = mockPrintStream0.append('*');
      javaParserTokenManager0.setDebugStream(printStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-3231));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -3231. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(":HbIc7C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, (byte)26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 100, column 29.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      StringReader stringReader0 = new StringReader("conJtin[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)43;
      StringReader stringReader1 = new StringReader("conJtin[e");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager1.debugStream);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, (int) (byte) (-23));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -23. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("\"@\"");
      StringReader stringReader2 = new StringReader("0]*]ii|l1kn");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 81, 1695);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 81, column 1696.  Encountered: \"]\" (93), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2777), (-2777));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-2775), javaCharStream0.getBeginColumn());
      assertEquals("s", token0.toString());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">;s*^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2777), 2339);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-107);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 28, (byte)114);
      javaCharStream1.ExpandBuff(false);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("r", token0.toString());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sVMd>mhdb/!jTHfH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("sVMd>mhdb/!jTHfH");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.getBeginColumn());
      assertEquals((-1), javaCharStream1.getLine());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      StringReader stringReader0 = new StringReader("INrL");
      StringReader stringReader1 = new StringReader(":%h>A_x)N|w@#1x4n");
      StringReader stringReader2 = new StringReader("\r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (byte) (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.SwitchTo((-59));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -59. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-43);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte) (-46);
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      StringReader stringReader0 = new StringReader("super");
      StringReader stringReader1 = new StringReader("b+U,kVya");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("b", token0.toString());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      StringReader stringReader0 = new StringReader("enum");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("num", token0.toString());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("~n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8Jr\"h_");
      StringReader stringReader3 = new StringReader("publc");
      javaCharStream0.ReInit((Reader) stringReader3, (-710), 123);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(127, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      StringReader stringReader0 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RNSv`Y/U%vb=mTXq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 3835);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 3835. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q{%XunPK+");
      StringReader stringReader1 = new StringReader("K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l&_YJd=$");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3546, (-1418), (-1418));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("Uc_G5#.G$Kt/");
      javaCharStream0.ReInit((Reader) stringReader0, (-1419), (-2241));
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-2240), javaCharStream0.getBeginColumn());
      assertEquals("&", token0.toString());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("GIb3a4e3(dR/k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)26, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(77, token0.kind);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      StringReader stringReader0 = new StringReader("l>|3[4H*l.t: v[h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.image = null;
      javaParserTokenManager0.ReInit(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(124, token0.kind);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l+6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("package");
      javaCharStream0.ReInit((Reader) stringReader1, 34, 34);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(34, javaCharStream0.getLine());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"@\"");
      StringReader stringReader1 = new StringReader(";");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("\"@\"");
      StringReader stringReader3 = new StringReader("throw");
      javaCharStream0.ReInit((Reader) stringReader3, (int) (byte)32, 50);
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals(58, token0.kind);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, (-699));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -699. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"--\"");
      StringReader stringReader1 = new StringReader("({");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token1 = token_GTToken0.next;
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 79);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 79. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("sNW9_xq~ueo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(8, javaCharStream0.getBeginColumn());
      assertEquals(8, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 111);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 111. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sVMd>mhdb/!jTHfH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      StringReader stringReader0 = new StringReader("im*;+(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2784, (-371));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token1 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2484, 57);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, 938, 2742);
      javaParserTokenManager0.ReInit(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      StringReader stringReader1 = new StringReader("final");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = false;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      StringReader stringReader2 = new StringReader("bB*Sr7[`l>6c");
      StringReader stringReader3 = new StringReader("V6?>iV!8EIV4t]_h;");
      javaCharStream0.ReInit((Reader) stringReader3, 0, 0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("?", token0.toString());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      StringReader stringReader0 = new StringReader("static");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 51, (-1125));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 2484, 57);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)75;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, 938, 2742);
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(74, token0.kind);
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.SwitchTo(0);
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufcolumn = javaParserTokenManager0.jjnewLexState;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      int int0 = 0;
      Token token1 = Token.newToken(0);
      Token.newToken(0);
      sequenceInputStream0.markSupported();
      Token.newToken(0);
      token1.specialToken = token0;
      javaCharStream0.Done();
      javaParserTokenManager0.TokenLexicalActions(token1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      StringReader stringReader0 = new StringReader("...");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 1);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("bT)x0Q,Ka;@;H2");
      StringReader stringReader1 = new StringReader("g*Tj':|E=k,[,");
      javaCharStream0.ReInit((Reader) stringReader0, (-596), (-596));
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(")", token0.toString());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("false");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(1, javaCharStream0.getEndLine());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("hA,i|f=ke2ZK");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      StringReader stringReader1 = new StringReader("super");
      javaCharStream0.ReInit((Reader) stringReader1, 27, 933);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(937, javaCharStream0.getBeginColumn());
      
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-59), (byte) (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("Lexical error at line ");
      javaCharStream0.ReInit((Reader) stringReader0, 495, 2596);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.GERMAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("error", token0.toString());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      StringReader stringReader0 = new StringReader("continue");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)44;
      byteArray0[6] = (byte) (-9);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("N");
      StringReader stringReader2 = new StringReader("N");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-37), (-34));
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-34), javaCharStream0.getBeginColumn());
      assertEquals("continue", token0.toString());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("instanceof");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("1C8{Ov");
      StringReader stringReader2 = new StringReader("Mm]B=\"Z@!b");
      javaCharStream0.ReInit((Reader) stringReader2, (int) (byte) (-115), (-710));
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.GERMAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("]", token0.toString());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry\\lncLj'Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UEe<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 58, 58, 58);
      PipedInputStream pipedInputStream0 = new PipedInputStream(105);
      javaCharStream1.ReInit((InputStream) pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("UEe", token0.toString());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qlj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("nlvY7?UJ0)=!&mx1");
      javaCharStream0.ReInit((Reader) stringReader1, 41, (-776));
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 41, (-772), 41);
      javaCharStream1.BeginToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream1, 42);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 42. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      StringReader stringReader1 = new StringReader("sNW9_xq~ueo");
      StringReader stringReader2 = new StringReader("PdnvN5//U*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1226), 575);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(581, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      StringReader stringReader0 = new StringReader("super");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}ntC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2740, 26);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry\\lncLj'Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
      javaParserTokenManager0.setDebugStream(printStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("boolean");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PdnvN5//U*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(6, javaCharStream0.getEndColumn());
      
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 9.  Encountered: \"U\" (85), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit((JavaCharStream) null);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-83);
      byteArray0[6] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("\"/=\"");
      StringReader stringReader2 = new StringReader("<OCTAL_LITERAL>");
      javaCharStream0.ReInit((Reader) stringReader2, (-710), (int) (byte) (-83));
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals((-82), javaCharStream0.getBeginColumn());
      assertEquals((-70), javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("lv`6");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-115), (int) (byte) (-115));
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      assertEquals("ja_JP", locale0.toString());
      
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -115, column -113.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(1309);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 1, 122);
      Token token0 = Token.newToken((-802));
      javaParserTokenManager0.SkipLexicalActions(token0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("return");
      javaCharStream0.ReInit((Reader) stringReader1, 34, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (-2375));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2375. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("-@O7+5");
      StringReader stringReader1 = new StringReader("implements");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte) (-83), (byte) (-83), 121);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("2Hp]hJ,WOz");
      StringReader stringReader3 = new StringReader("yOhSG.9@G8qJr\"h_");
      javaCharStream1.ReInit((Reader) stringReader2, 623, 1186);
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 623, column 1187.  Encountered: \"H\" (72), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.bufline = javaParserTokenManager0.jjnewLexState;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      token_GTToken1.kind = (-1454);
      token_GTToken1.next = token0;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1376));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1376. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(17, javaCharStream0.bufpos);
      assertEquals(2676, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("char");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      StringReader stringReader0 = new StringReader("HpM5!X^ fT:rm9");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-83), (-1568));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("=YHgM fBj");
      StringReader stringReader2 = new StringReader("publc");
      javaCharStream0.ReInit((Reader) stringReader1, 68, 123);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(123, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedPos = 0;
      byte[] byteArray0 = new byte[2];
      javaCharStream0.inputStream = (Reader) stringReader0;
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaParserTokenManager0.MoreLexicalActions();
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("ina", token0.toString());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("\"mtM");
      javaCharStream0.ReInit((Reader) stringReader1, 1, 2441);
      Locale locale0 = Locale.JAPAN;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2445.  Encountered: <EOF> after : \"\\\"mtM\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("VOd7A_+^QQ'dGh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("hA,i|f=ke2ZK");
      javaCharStream0.ReInit((Reader) stringReader2, 34, (-1529));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      Locale locale1 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1524), javaCharStream0.getBeginColumn());
      assertEquals("f", token0.toString());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.getBeginColumn());
      assertEquals("", token1.toString());
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      StringReader stringReader0 = new StringReader("conJtin[e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      StringReader stringReader1 = new StringReader("UIO<");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager3.getNextToken();
      assertEquals(2, javaCharStream2.bufpos);
      assertEquals(3, javaCharStream2.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qlj");
      CharBuffer charBuffer0 = CharBuffer.allocate(10);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2820), (-658));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byteArrayInputStream0.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(86, token1.kind);
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x|AZJq^G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      assertNull(token_GTToken0.toString());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("X");
      StringReader stringReader1 = new StringReader("VOd7A_+^QQ'dGh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("hA,i|f=ke2ZK");
      javaCharStream0.ReInit((Reader) stringReader2, 34, (-1529));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1526), javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@br;j");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, 60);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals(3, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.printf((Locale) null, ">>>", objectArray0);
      javaParserTokenManager0.setDebugStream(printStream0);
      javaParserTokenManager0.lengthOfMatch = 460;
      int int0 = 87;
      javaParserTokenManager0.ReInit((JavaCharStream) null);
      javaParserTokenManager0.jjround = 0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 87. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kv=/pg9\"LGA7HKC");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("7-0`kM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"-\" (45), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      StringReader stringReader0 = new StringReader("11d");
      StringReader stringReader1 = new StringReader("11d");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 1658, 94);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1658, column 96.  Encountered: \"\" (0), after : \"\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      StringReader stringReader0 = new StringReader("+=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)48, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)48, (byte) (-115));
      byteArrayInputStream1.read();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, (-271));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -271. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2659);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte)114;
      byteArray0[4] = (byte)114;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 46, (-605));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2576);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("--");
      StringReader stringReader2 = new StringReader("A5.Dry)\\lncLj*Qj");
      javaCharStream0.ReInit((Reader) stringReader1, 2659, 0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("enum");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-1078));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1078. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-115);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -115, column -115.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1113), (-1));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      byteArrayInputStream0.read();
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.TokenLexicalActions(token0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1113, column 0.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken0.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.MoreLexicalActions();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.prevCharIsLF = true;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      token_GTToken1.next = token0;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getBeginColumn());
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      StringReader stringReader0 = new StringReader("fina#lly");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream1.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sVMd>mhdb/!jTHfH");
      StringReader stringReader1 = new StringReader("$7/jp0QGF");
      StringReader stringReader2 = new StringReader("$7/jp0QGF");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 78);
      javaCharStream0.ReInit((Reader) stringReader2, 0, 78);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 88.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.input_stream = javaCharStream0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      javaParserTokenManager0.SkipLexicalActions((Token) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("A5.Dry)\\lncLj*Qj");
      StringReader stringReader2 = new StringReader(" +'$RH}W");
      javaCharStream0.ReInit((Reader) stringReader2, 8, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 8, column 12.  Encountered: \"R\" (82), after : \"\\'$\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      StringReader stringReader0 = new StringReader("01~=Tm>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("%");
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((Reader) stringReader1, 39, 39);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.jjFillToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a7jvWe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.read();
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(5, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte)104;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)122;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2820), (-682));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.image = null;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -2820, column -682.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*Sr7[`l>6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer0 = new StringBuffer();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"S\" (83), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-115), (-1911));
      StringReader stringReader0 = new StringReader("91.\"X/Y=");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte) (-115), 71);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -115, column 72.  Encountered: \"1\" (49), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g19");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/b~Uaz*/");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("/", token0.toString());
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";\"l)ylk[j{5Iz");
      StringReader stringReader1 = new StringReader("~n");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte) (-83);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader2 = new StringReader("yOhSG.9@G8qJr\"h_");
      StringReader stringReader3 = new StringReader("public");
      stringReader3.read();
      javaCharStream0.ReInit((Reader) stringReader3, (-710), 123);
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(127, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.Token");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 2659, (byte) (-115));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (int) (byte) (-115));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -115. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bB*S[7[`l+6c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.bufpos);
      assertEquals(3, javaCharStream1.getColumn());
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2659, 2576);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("--");
      StringReader stringReader2 = new StringReader("A5.Dry)\\lncLj*Qj");
      javaCharStream0.ReInit((Reader) stringReader1, 2659, 0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("--", token0.toString());
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      int int0 = (-2126);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2126), 119);
      stringReader0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PrintStream printStream0 = null;
      javaParserTokenManager0.setDebugStream((PrintStream) null);
      javaParserTokenManager0.ReInit(javaCharStream0);
      javaParserTokenManager0.jjimageLen = (-2126);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      assertEquals(13, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 11);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 123, 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 123, column 50.  Encountered: <EOF> after : \"\\'\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)51;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("xD{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2, javaCharStream0.getColumn());
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"=AF\fBcz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("=", token0.toString());
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a,j}pu#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A5.Dry)\\lncLj*Qlj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("*=");
      StringReader stringReader2 = new StringReader("tow");
      javaCharStream0.ReInit((Reader) stringReader1, 482, (int) (byte)98);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(98, javaCharStream0.getBeginColumn());
      assertEquals("*=", token0.toString());
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3775, 52, 3775);
      javaCharStream0.maxNextCharInd = 52;
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 3775);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 3775. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lkl");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("T./<'U{.'7XcmJ");
      javaParserTokenManager1.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(3, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("Dj/Wo*f{l<b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 93, 3);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream);
      javaParserTokenManager0.ReInit(javaCharStream0);
      StringReader stringReader2 = new StringReader("Dj/Wo*f{l<b");
      javaCharStream0.ReInit((Reader) stringReader2, 1792, (-925));
      javaParserTokenManager0.getNextToken();
      Locale locale0 = Locale.JAPAN;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-921), javaCharStream0.getColumn());
  }
}
