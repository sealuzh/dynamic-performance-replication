/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 03:41:12 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-29);
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(34027, 34027, fieldTypeRational0, 34027, 34027, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(34027, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(227, int0);
      assertEquals(272216, tiffField0.getBytesLength());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(34027, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-1);
      TiffField tiffField0 = new TiffField(34027, 34027, fieldTypeRational0, 34027, 34027, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(272216, tiffField0.getBytesLength());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(34027, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-2656), fieldTypeLong0, 1L, 216L, byteArray0, byteOrder0, (-1982292597));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2656), tiffField0.getDirectoryType());
      assertEquals(216, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-2147342560), (FieldType) null, (-2147342560), (-2147342560), byteArray0, byteOrder0, (byte)81);
      String string0 = tiffField0.getValueDescription();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals((-2147342560), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-2147342560), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4886, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeShort0, 8L, 0L, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tagInfo0.tag);
      assertEquals(0, tiffField0.getOffset());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 777);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(777, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-381), 1, fieldTypeRational0, 1L, (-381), byteArray0, (ByteOrder) null, (-381));
      int int0 = tiffField0.getTag();
      assertEquals((-381), int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-381), tiffField0.getOffset());
      assertEquals((-381), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte) (-107);
      byteArray0[4] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147442763, 1, fieldTypeAscii0, 2147442763, 0L, byteArray0, byteOrder0, 26);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(2147442763, tiffField0.getTag());
      assertEquals(2147442763, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 265, fieldTypeLong0, 265, 265, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(265, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4886, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 777);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(777, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 0, fieldTypeRational0, 2742L, (-12616L), byteArray0, byteOrder0, 2130574327);
      int int0 = tiffField0.getOffset();
      assertEquals((-12616), int0);
      assertEquals(2130574327, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeLong0.SSHORT, (byte)48, 2332L, byteArray0, byteOrder0, (byte)48);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(12288, int0);
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(2332, tiffField0.getOffset());
      assertEquals(48, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-11);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2797, 932, fieldTypeLong0, (byte)24, 583L, byteArray0, byteOrder0, 568);
      tiffField0.getIntValueOrArraySum();
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(2797, tiffField0.getTag());
      assertEquals(583, tiffField0.getOffset());
      assertEquals(568, tiffField0.getSortHint());
      assertEquals(932, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34012, 1, fieldTypeRational0.SHORT, 1, 0L, byteArray0, byteOrder0, 426);
      tiffField0.getIntValue();
      assertEquals(426, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34012, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-86);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 92);
      tiffField0.getIntValue();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2147289708), (String) null);
      TiffField tiffField0 = new TiffField((-2147289708), 2144069524, fieldTypeLong0, 2144069524, 4L, byteArray0, byteOrder0, 2144069524);
      tiffField0.getFieldTypeName();
      assertEquals(2144069524, tiffField0.getDirectoryType());
      assertEquals(2144069524, tiffField0.getSortHint());
      assertEquals((-2147289708), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(4097, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4228, 2147264270, fieldTypeAscii0, 2060, (-2069L), byteArray0, byteOrder0, 4228);
      tiffField0.getFieldTypeName();
      assertEquals((-2069), tiffField0.getOffset());
      assertEquals(2147264270, tiffField0.getDirectoryType());
      assertEquals(4228, tiffField0.getTag());
      assertEquals(4228, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2130574327, 2130574327, (FieldType) null, (-1L), (-1L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2130574327, tiffField0.getDirectoryType());
      assertEquals(2130574327, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      tiffField0.getFieldType();
      assertEquals(4886, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2147058655), (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2770), 65535, fieldTypeFloat0, (-2147058655), (-2147058655), byteArray0, byteOrder0, (byte) (-38));
      tiffField0.getFieldType();
      assertEquals((-2147058655), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-2770), tiffField0.getTag());
      assertEquals((-38), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 2900L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(2900, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      TiffField tiffField0 = new TiffField(4886, 0, fieldTypeRational0, 1L, 2447L, byteArray0, byteOrder0, 2942);
      tiffField0.getDoubleValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(4886, tiffField0.getTag());
      assertEquals(2447, tiffField0.getOffset());
      assertEquals(2942, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-86);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 92);
      tiffField0.getDoubleValue();
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 772);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(772, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 265, fieldTypeLong0, 265, 265, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(265, int0);
      assertEquals(265, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1403, fieldTypeRational0.ASCII, 1793L, 1403, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1403, tiffField0.getDirectoryType());
      assertEquals(1403, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte) (-71), fieldTypeFloat0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, 1315);
      tiffField0.getCount();
      assertEquals(1315, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-71), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      int int0 = tiffField0.getBytesLength();
      assertEquals(4886, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1240), (-2147252660), fieldTypeRational0, (-12616L), (-1L), byteArray0, byteOrder0, 4886);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2147252660), tiffField0.getDirectoryType());
      assertEquals((-1240), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-100928), int0);
      assertEquals(4886, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(4886, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, 3, byteArray0, byteOrder0, (-306));
      tiffField0.getByteArrayValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getBytesLength());
      assertEquals((-306), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50726, "");
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-176), (-176), fieldTypeByte0, (-176), 50726, (byte[]) null, byteOrder0, 9);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "he/DTiSW_W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1723, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)5);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The wildcard must not be null");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1723, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte) (-71), fieldTypeFloat0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, 1315);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-2501), 2145451969, fieldTypeShort0, 40960, 40960, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2532, 2532, fieldTypeRational0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1240), (-2147252660), fieldTypeRational0, (-12616L), (-1L), byteArray0, byteOrder0, 4886);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40960, 40960, fieldTypeFloat0, 40960, 40960, byteArray0, byteOrder0, 40960);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-5534), "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 32947, fieldTypeShort0, 50721, 1308L, (byte[]) null, byteOrder0, 838);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(106, (-1), fieldTypeByte0.ASCII, (-1), 106, byteArray0, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-865), 65535, fieldTypeRational0, (-865), 15920L, byteArray0, byteOrder0, (-2307));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-381), 1, fieldTypeRational0, 1L, (-381), byteArray0, (ByteOrder) null, (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-381), tiffField0.getTag());
      assertEquals((-381), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4894);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 4894, fieldTypeByte0, 1305L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1305, tiffField0.getBytesLength());
      assertEquals(4894, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-2147058655), fieldTypeRational0, (-2237L), (-2237L), byteArray0, byteOrder0, (-1723));
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2147058655), tiffField0.getDirectoryType());
      assertEquals((-2237), tiffField0.getOffset());
      assertEquals((-1723), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34027, 34027, fieldTypeRational0, 1793L, 34027, byteArray0, byteOrder0, 34027);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(4, 1438, fieldTypeLong0, 1514L, 1514L, byteArray0, byteOrder0, 1438);
      tiffField0.getValue();
      assertEquals(6056, tiffField0.getBytesLength());
      assertEquals(1514, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(1438, tiffField0.getDirectoryType());
      assertEquals(1438, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(27, (-2358), fieldTypeShort0, 1533L, 2L, byteArray0, byteOrder0, 50740);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-2358), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(50740, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50724, 34027, fieldTypeRational0, 438L, 34027, byteArray0, byteOrder0, 1996);
      int int0 = tiffField0.getTag();
      assertEquals(1996, tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(50724, int0);
      assertEquals(34027, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*_:`$Mz#");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 4886);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4886, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-381), 1, fieldTypeRational0, 1L, (-381), byteArray0, (ByteOrder) null, (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-381), tiffField0.getOffset());
      assertEquals(8, int0);
      assertEquals((-381), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(88, 88, fieldTypeByte0, 88, 88, byteArray0, byteOrder0, 88);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(855, (String) null);
      TiffField tiffField0 = new TiffField(1, (-2147342413), fieldTypeShort0, 1, 1078L, byteArray0, byteOrder0, 855);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1078, tiffField0.getOffset());
      assertEquals(855, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2147342413), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, (-2501), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SHORT).ASCII, 3551L, 1L, byteArray0, byteOrder0, (-2681));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7ee03e5 for: 5 (0x5: GPSAltitudeRef): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)0, (byte)24, fieldTypeShort0.RATIONAL, 1135L, (byte)0, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-553), 1, fieldTypeLong0, 1, (-541L), byteArray0, byteOrder0, (-1717986917));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-541), tiffField0.getOffset());
      assertEquals((-553), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4894);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 4894, fieldTypeByte0, 1305L, 0L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4f88b137 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34027, (-1717986917), fieldTypeRational0.FLOAT, 1793L, (-384L), byteArray0, byteOrder0, 306);
      tiffField0.getDoubleArrayValue();
      assertEquals(34027, tiffField0.getTag());
      assertEquals((-384), tiffField0.getOffset());
      assertEquals(7172, tiffField0.getBytesLength());
      assertEquals(306, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 2143247980, fieldTypeLong0, 20872L, (byte) (-11), byteArray0, byteOrder0, (-3570));
      tiffField0.getDoubleArrayValue();
      assertEquals((-3570), tiffField0.getSortHint());
      assertEquals(83488, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-11), tiffField0.getOffset());
      assertEquals(2143247980, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte) (-11), 1280, fieldTypeShort0, 5568L, 1731, byteArray0, byteOrder0, 3921);
      tiffField0.getDoubleArrayValue();
      assertEquals(3921, tiffField0.getSortHint());
      assertEquals((-11), tiffField0.getTag());
      assertEquals(11136, tiffField0.getBytesLength());
      assertEquals(1280, tiffField0.getDirectoryType());
      assertEquals(1731, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(235, 50, fieldTypeRational0, 4L, 34027, byteArray0, byteOrder0, 2804);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2804, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(235, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50781, (-1676), fieldTypeDouble0, 50781, (-1676), byteArray0, byteOrder0, (byte)49);
      tiffField0.getDoubleArrayValue();
      assertEquals(49, tiffField0.getSortHint());
      assertEquals((-1676), tiffField0.getOffset());
      assertEquals(406248, tiffField0.getBytesLength());
      assertEquals(50781, tiffField0.getTag());
      assertEquals((-1676), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3276, 1892, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (byte) (-75));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3276, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1892, tiffField0.getDirectoryType());
      assertEquals((-75), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(145);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(4886, 2130574327, fieldTypeLong0, 145, 0, byteArray0, byteOrder0, 2182);
      tiffField0.getIntArrayValue();
      assertEquals(580, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2130574327, tiffField0.getDirectoryType());
      assertEquals(4886, tiffField0.getTag());
      assertEquals(2182, tiffField0.getSortHint());
      assertEquals(145L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeAscii0, 3, 3, byteArray0, byteOrder0, (-306));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4ee8d17d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34027, 34027, fieldTypeRational0, 34027, 1793L, byteArray0, byteOrder0, (-1208));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50724, 34027, fieldTypeRational0, 438L, 34027, byteArray0, byteOrder0, 1996);
      tiffField0.getIntArrayValue();
      assertEquals(1996, tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getDirectoryType());
      assertEquals(50724, tiffField0.getTag());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(438L, tiffField0.getCount());
      assertEquals(3504, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147264270, 1794, fieldTypeShort0, 1, 1794, byteArray0, byteOrder0, (byte)13);
      tiffField0.getIntArrayValue();
      assertEquals(1794, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1794, tiffField0.getDirectoryType());
      assertEquals(2147264270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40957, 4327, fieldTypeShort0, 4327, (-1L), byteArray0, byteOrder0, 43);
      tiffField0.getIntArrayValue();
      assertEquals(40957, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4327L, tiffField0.getCount());
      assertEquals(8654, tiffField0.getBytesLength());
      assertEquals(4327, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2797, 932, fieldTypeLong0, (byte)24, 583L, byteArray0, byteOrder0, 568);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@3f2a7ff9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34027, 142, fieldTypeRational0.ASCII, 272384L, 272384L, byteArray0, byteOrder0, 1282);
      String string0 = tiffField0.getStringValue();
      assertEquals(272384, tiffField0.getOffset());
      assertEquals(34027, tiffField0.getTag());
      assertEquals(1282, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(142, tiffField0.getDirectoryType());
      assertEquals(272384, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 2900L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2900, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x1)", string0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-5534), "Invalid value: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50721, 32947, fieldTypeShort0, 50721, 1308L, (byte[]) null, byteOrder0, 838);
      String string0 = tiffField0.getTagName();
      assertEquals("ColorMatrix1", string0);
      assertEquals(838, tiffField0.getSortHint());
      assertEquals(32947, tiffField0.getDirectoryType());
      assertEquals(50721, tiffField0.getTag());
      assertEquals(1308, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(4886);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1022), 39, (FieldType) null, (-272L), 235L, byteArray0, byteOrder0, (-3522));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40960, 40960, fieldTypeFloat0, 40960, 40960, byteArray0, byteOrder0, 40960);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40960, tiffField0.getOffset());
      assertEquals(163840, tiffField0.getBytesLength());
      assertEquals(40960L, tiffField0.getCount());
      assertEquals(40960, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(40960, tiffField0.getTag());
      assertEquals(40960, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField((-2263), (-2263), fieldTypeByte0, 1544, 9792L, byteArray0, byteOrder0, (-2263));
      String string0 = tiffField0.toString();
      assertEquals((-2263), tiffField0.getDirectoryType());
      assertEquals((-2263), tiffField0.getSortHint());
      assertEquals(1544, tiffField0.getBytesLength());
      assertEquals(9792, tiffField0.getOffset());
      assertEquals("-2263 (0xfffff729: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1544 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1), 1988, fieldTypeFloat0, 1988, 1988, byteArray0, byteOrder0, 1988);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1988, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1988, tiffField0.getDirectoryType());
      assertEquals(1988, tiffField0.getSortHint());
      assertEquals(7952, tiffField0.getBytesLength());
      assertEquals(1988L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[246];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3387, 3387, fieldTypeDouble0, 3387, 3387, byteArray0, byteOrder0, 3387);
      String string0 = tiffField0.toString();
      assertEquals(27096, tiffField0.getBytesLength());
      assertEquals(3387, tiffField0.getDirectoryType());
      assertEquals("3387 (0xd3b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3387 Double)", string0);
      assertEquals(3387, tiffField0.getOffset());
      assertEquals(3387, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(4, 1438, fieldTypeLong0, 1514L, 1514L, byteArray0, byteOrder0, 1438);
      String string0 = tiffField0.toString();
      assertEquals(1514, tiffField0.getOffset());
      assertEquals(1438, tiffField0.getDirectoryType());
      assertEquals("4 (0x4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (1514 Long)", string0);
      assertEquals(6056, tiffField0.getBytesLength());
      assertEquals(1438, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeLong0.SHORT, (byte)48, 2332L, byteArray0, byteOrder0, (byte)48);
      String string0 = tiffField0.getValueDescription();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(2332, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48L, tiffField0.getCount());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40957, 4327, fieldTypeShort0, 4327, (-1L), byteArray0, byteOrder0, 43);
      String string0 = tiffField0.toString();
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(4327, tiffField0.getDirectoryType());
      assertEquals("40957 (0x9ffd: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (4327 SShort)", string0);
      assertEquals(8654, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 1, fieldTypeFloat0.ASCII, 7736L, 855L, byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(4, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(855, tiffField0.getOffset());
      assertEquals(7736, tiffField0.getBytesLength());
      assertEquals(7736L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), 1403, fieldTypeRational0.ASCII, 1793L, 1403, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1403, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1793, tiffField0.getBytesLength());
      assertEquals(1403, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-553), 1, fieldTypeLong0, 1, (-541L), byteArray0, byteOrder0, (-1717986917));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-541), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-553), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (-2071), fieldTypeRational0.ASCII, 1L, 2605L, byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(127, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2071), tiffField0.getDirectoryType());
      assertEquals(2605, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 265, fieldTypeLong0, 265, 265, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(265L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeShort0, 0, 65535, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(328, 51);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4812, 2372, fieldTypeLong0, 2448L, 40960, byteArray0, byteOrder0, 4812);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4812, tiffField0.getTag());
      assertEquals(4812, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(2372, tiffField0.getDirectoryType());
      assertEquals(40960, tiffField0.getOffset());
      assertEquals(9792, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4228, 2147264270, fieldTypeFloat0.ASCII, 2060, (-2069L), byteArray0, byteOrder0, 4228);
      tiffField0.getFieldTypeName();
      assertEquals(4228, tiffField0.getSortHint());
      assertEquals(4228, tiffField0.getTag());
      assertEquals(2147264270, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-2069), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50724, 34027, fieldTypeRational0, 438L, 34027, byteArray0, byteOrder0, 1996);
      int int0 = tiffField0.getOffset();
      assertEquals(1996, tiffField0.getSortHint());
      assertEquals(34027, int0);
      assertEquals(50724, tiffField0.getTag());
      assertEquals(34027, tiffField0.getDirectoryType());
      assertEquals(3504, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-2147058655), fieldTypeRational0, (-2237L), (-2237L), byteArray0, byteOrder0, (-1723));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2147058655), int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2237), tiffField0.getOffset());
      assertEquals((-1723), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeRational0, (-957L), (-1), (byte[]) null, (ByteOrder) null, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-957L), tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-2147342560), (FieldType) null, (-2147342560), (-2147342560), byteArray0, byteOrder0, (byte)81);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(81, tiffField0.getSortHint());
      assertEquals((-2147342560), tiffField0.getDirectoryType());
      assertEquals("28 (0x1c: GPSAreaInformation): ", string0);
      assertEquals((-2147342560), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(88, 88, fieldTypeByte0, 88, 88, byteArray0, byteOrder0, 88);
      tiffField0.dump();
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(88, tiffField0.getTag());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(88L, tiffField0.getCount());
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34856, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1682), (-1682), fieldTypeShort0, 0L, (-4789L), byteArray0, byteOrder0, (byte) (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41729, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1682), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1682), tiffField0.getTag());
      assertEquals((-4789), tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertNotNull(string0);
      assertEquals(0L, tiffField0.getCount());
  }
}
