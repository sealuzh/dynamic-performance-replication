/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 23:01:22 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.bayes.BayesNet;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.Kernel;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.SMOset;
import weka.classifiers.functions.supportVector.StringKernel;
import weka.core.BinarySparseInstance;
import weka.core.Instances;
import weka.core.SparseInstance;
import weka.core.neighboursearch.CoverTree;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      double double0 = (-4330.052404431);
      doubleArray0[0] = (-4330.052404431);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1147.5);
      doubleArray0[3] = 1.0;
      doubleArray0[4] = 1352.3281521;
      doubleArray0[5] = 0.0;
      regSMO0.setEpsilon(0.0);
      doubleArray0[6] = 2345.84651885021;
      doubleArray0[7] = 950.46258164;
      regSMO0.m_target = doubleArray0;
      regSMO0.listOptions();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D+l`DOIl%";
      regSMO0.setOptions(stringArray0);
      String string0 = regSMO0.epsilonTipText();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertEquals("The epsilon for round-off error (shouldn't be changed).", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_target = null;
      regSMO0.getEpsilon();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "xkxvU(=P:m1r%g";
      boolean boolean0 = regSMO0.findOptimalPointOnLine((-18), 716.17341168, 0.0, (-18), 3434, (-18), (-18), 0.0, 716.17341168, 0.0, 0.0);
      assertFalse(boolean0);
      
      stringArray0[1] = "";
      stringArray0[2] = "measureCacheHits";
      stringArray0[3] = "weka.classifiers.functions.supportVector.RegSMO";
      stringArray0[4] = "gone";
      stringArray0[5] = "Attribute isn't relation-valued!";
      stringArray0[6] = "editor";
      int[] intArray0 = new int[0];
      regSMO0.m_sparseIndices = intArray0;
      stringArray0[7] = ")+9{n^5:']*|\">";
      regSMO0.setOptions(stringArray0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = (-869);
      regSMO0.m_nCacheHits = (-869);
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.toString();
      regSMO0.getOptions();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 1;
      regSMO0.m_eps = (double) 1;
      regSMO0.m_nEvals = 1;
      regSMO0.getTechnicalInformation();
      regSMO0.m_alpha1Star = 1304.44076741;
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(48, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, 293, 48, 293, (-1065.764867231703), 293, 48, Double.NEGATIVE_INFINITY);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[2];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 0, 1, 0, 1, 1, 0, 1, 1, 1003.2318, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha1Star = 10.0;
      int int0 = 90;
      regSMO0.getRevision();
      double double0 = 1.0E10;
      try { 
        regSMO0.takeStep(2148, 90, 379.3226983, 0.0, 1.0E10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      try { 
        regSMO0.takeStep(0, 2145709800, 2145709800, 2145709800, 2145709800);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      regSMO0.findOptimalPointOnLine(0, 383.70631, 383.70631, 0, 0, 2014.9903, 2575.564459878, 2575.564459878, 699.4878, 0.0, 2106.89325566);
      regSMO0.m_random = (Random) mockRandom0;
      regSMO0.globalInfo();
      regSMO0.getTechnicalInformation();
      regSMO0.takeStep(0, 0, 2535.0, 2535.0, 2014.9903);
      regSMO0.listOptions();
      regSMO0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-1743), 0.0, 2106.89325566, 2106.89325566, 0, 2535.0, 383.70631, 2575.564459878, 0.0, 2014.9903, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      int int0 = 1092;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1, 1, 1, 1092, 1, 1, 1092, 37.0758249086, 1092, 1092);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      SMOset sMOset0 = regSMO0.m_supportVectors;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 0, 802.802322853272, 169.84140372625757, 1, 2017.2483076937267, 2017.2483076937267, 1417.993337, 291.08166598, 2017.2483076937267, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.listOptions();
      regSMO0.getTechnicalInformation();
      regSMO0.setEpsilon(987.0006944041);
      int int0 = 2500;
      int int1 = 0;
      double double0 = 631.261469903303;
      double double1 = 0.0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2500, 0.0, 0.0, 2500, 0, 631.261469903303, 0.0, 987.0006944041, (-2287.306875717679), 1.7976931348623157E308, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 0, (-186.38870129), 1, (-2810.8672778), 0, (-2810.8672778), 1, 1.7976931348623157E298, 0.1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, (-1.0), 2845.262394249, 1062, 2845.262394249, 1062, 0, 2845.262394249, 1, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(5003, 5003, 0.0, 0.0, (-336), (-336), 0.0, (-1290.339), 5003, 5003, (-1290.339));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(5003, 5003, 0.0, 0.0, (-336), (-336), 0.0, (-1290.339), (-1495.849271633), 5003, (-1290.339));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 375.6507747074903, 375.6507747074903, 1.7976931348623157E308, (-2656), 1, 1, 375.6507747074903, 375.6507747074903, 3.4, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nCacheHits = 5003;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(5003, 0.1, 5003, 5003, 5003, 2721.4, 1511.86412939, 2106.8932554493103, 1511.86412939, 5003, (-3459.4736163333564));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 112.40076373, 112.40076373, 112.40076373, 0, 112.40076373, 1.0E-12, 1, 92.0, 2242.498959275674, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(95, 0.1, 0.1, 95, 95, 0.1, 95, 0.1, 0.1, 0.1, (-0.5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_b = 6.0;
      RegSMO regSMO1 = new RegSMO();
      regSMO1.globalInfo();
      regSMO0.epsilonTipText();
      int int0 = (-1080);
      int int1 = 19;
      double double0 = 1546.572210806;
      double double1 = 1.0E-10;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(19, 0.0, 1546.572210806, 1.7976931348623157E308, 19, 3775.2768230625, 19, 1.7976931348623157E308, (-1080), 1.0E-10, 1546.572210806);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double double0 = 4.8;
      regSMO0.setEpsilon(4.8);
      double double1 = 0.0;
      double double2 = 1.0E-10;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2500, 0.0, 4.8, 10000, 450.81, 1.0E-10, 2500, 450.81, 2500, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = new SMOreg();
      sMOreg0.toString();
      sMOreg0.globalInfo();
      SMOreg sMOreg1 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1.7976931348623157E308, 0.1, 0.1, (-2142479103), (-1841.808376514929), (-2142479103), (-3244.571488), 1.0E-10, 2107.248893627185, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1, 1, 1, 0, 0, 0, 0, 2.147113697E9, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(27, 1.0, 45.0, 1274.53954, 3, (-336), 2014.9903, 1.7976931348623157E308, 45.0, 3, 45.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      BayesNet bayesNet0 = new BayesNet();
      double double0 = (-2450.63095019288);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1943, 1229.2, 1229.2, (-2450.63095019288), 2500, 0.0, 0.0, (-336.0), 206.82793634663886, 2500, 2096.575914960337);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-336), 0.0, 1.0E-12, 1.7976931348623157E308, (-2077), 0.0, 5003, 2313.28155, (-1511.86412939), 0.1, 0.1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 577.68512, 1156.542427468, 1, 0, 1, 1156.542427468, (-2306.14407440396), 1, (-2306.14407440396));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-2.147483648E9), 2986.3934148018, 45.0, 1, (-2.0), 2986.3934148018, 45.0, (-2.0), 2986.3934148018, (-2.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 2591;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2591, 2591, (-4557.879843820065), 2591, 10, (-1808.153839567928), 10, 385.9787176078307, 1974.7879961, 2.0, (-4557.879843820065));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2145709800, 1229.2, 0, 1229.2, (-1), 0, (-1885.8273717), 0.002, 2.0, 849.906247, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-100), 0.1, 139.85886351408558, 0.1, 1, 0.1, 2.0, 1.3, 0.1, 1.0E10, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringKernel0.getRevision();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1750.9, 1.3, 1, 0, 1.0, 1750.9, 1.3, 0.0, 1.0, 2106.8932554493103);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2991.855, 1, 2991.855, 0, 0, 2991.855, 1, 2991.855, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 2.0, 1, 367.10821346, (-109), (-109), 736.0, (-1511.86412939), (-1511.86412939), 1, (-2077));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      int int0 = (-2077);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CZ)j\"LH:C;jZd5@");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CZ)j\"LH:C;jZd5@");
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-2077), 0.1, 0.001, 1, 1.7976931348623157E308, (-2077), 0.0, 0.1, 1.2, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alpha = doubleArray0;
      regSMO0.findOptimalPointOnLine(111, 3687, 5009.0, 687.424, 3687, 9.999999999E-4, 1.0E-12, 111, (-3677.5057533443), (-942.5465793096382), 2971.599);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, (-1.0), 1253.4996865920787, 1346.14997268, 3687, 0.0, 0.1, 1930.0, (-208364.53545471438), 1.0E-12, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      regSMO0.m_alpha = doubleArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      stringKernel0.kernelHelper2LP(375, charArray0, 1376, charArray0, 59, (-2145890736));
      charArray0[2] = 'J';
      charArray0[3] = '}';
      charArray0[4] = '|';
      charArray0[5] = 'N';
      charArray0[6] = ' ';
      charArray0[7] = '.';
      stringKernel0.kernelLP(59, charArray0, 0, charArray0, 0, 0);
      regSMO0.m_target = doubleArray0;
      regSMO0.optimize();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_target = doubleArray0;
      regSMO0.optimize();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      regSMO0.m_alpha = doubleArray0;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, (-2484.518936), (-2312.149972545385), 0.0, (-5), 274.9, 0.0, 59, (-286.98250307924), (-286.98250307924), 2.0);
      assertFalse(boolean0);
      
      RegSMO regSMO1 = new RegSMO();
      int int0 = regSMO0.secondChoiceHeuristic(0);
      assertEquals((-1), int0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_kernel = (Kernel) stringKernel0;
      regSMO0.m_alpha = doubleArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      stringKernel0.kernelHelper2LP(375, charArray0, 1376, charArray0, 59, (-2145890736));
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 102.11, 1.7976931346825464E308, 5.0, 1376, 4729.145523765194, 59, 102.11, 1.0E-10, 1, 0.1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1376
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = 'q';
      charArray0[2] = 'J';
      charArray0[3] = '}';
      charArray0[4] = 'J';
      charArray0[5] = 'J';
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 2991.855, (-671.173), 2991.855, 0, 0, 2991.855, (-671.173), 2991.855, 0.1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(49, 0, 2991.855, 1.7976931348623157E308, 2491, 49, (-3741.30174372), 1.7976931348623157E308, 620.7809999379218, 2991.855, 2991.855);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 49
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, (-671.173), 1, 1, 2991.855, (-1.0), 0, 242.8, 1.0E-12, 1.0E-12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0;
      regSMO0.m_alpha = doubleArray0;
      Locale.getISOLanguages();
      int int0 = (-105);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-105));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      StringKernel stringKernel0 = new StringKernel();
      int int0 = 116;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 2460.9999997539, 2795.7169, 116, 1, 116, 5071.07721877612, (-424.95), 5071.07721877612, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_eps = (double) 0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.m_eps = 2.0;
      regSMO0.findOptimalPointOnLine(0, 0, 0, 1.2, 1, 1, 1, 1.2, 1, 1.2, 1);
      regSMO0.listOptions();
      String string0 = regSMO0.getRevision();
      assertEquals("8034", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_eps = (double) 1;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nInstances = 2146095370;
      regSMO0.m_nEvals = 4;
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 1.0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_alphaStar = doubleArray0;
      int int0 = regSMO0.secondChoiceHeuristic(1073741794);
      assertEquals((-1), int0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 4.94E-321;
      doubleArray0[1] = (-992.65078873933);
      doubleArray0[2] = 154.64198;
      doubleArray0[3] = 930.1041059490235;
      doubleArray0[4] = (-266.751740203653);
      doubleArray0[5] = 1737.63095851;
      regSMO0.getTechnicalInformation();
      doubleArray0[6] = 1025.0;
      regSMO0.m_alpha = doubleArray0;
      int int0 = regSMO0.secondChoiceHeuristic(2966);
      assertEquals(0, int0);
      
      regSMO0.getRevision();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      
      regSMO0.m_eps = (double) 0;
      SMOset sMOset0 = new SMOset(2478);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      SMOset sMOset0 = new SMOset(2484);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(1, 300.0, 300.0, 300.0, 0, 0, 1, 1.0, 1, 1, 1);
      assertTrue(boolean0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      SMOset sMOset0 = new SMOset(2478);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      sMOset0.printElements();
      sMOset0.insert(0);
      regSMO0.findOptimalPointOnLine(1, (-2.0), 1335.0992816032015, 1335.0992816032015, 0, 1.0E-10, 50.0, 2193.7992816032015, 2193.7992813838214, 1, 1);
      try { 
        regSMO0.examineExample(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      SMOset sMOset0 = new SMOset(1892);
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      boolean boolean0 = regSMO0.findOptimalPointOnLine(1, 0, 1, (-478.5269802), 1, 2193.7992813838214, 587.23045, 0, 1.0E-12, 0.3, 0.9160490583736558);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      StringKernel stringKernel0 = new StringKernel();
      regSMO0.m_alphaStar = doubleArray0;
      SMOset sMOset0 = new SMOset(2484);
      sMOset0.printElements();
      regSMO0.m_supportVectors = sMOset0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      sMOset0.insert(1);
      boolean boolean0 = regSMO0.findOptimalPointOnLine(1, 300.0, 300.0, 300.0, 0, 0, 1, 1.0, 1, 1, 1);
      assertTrue(boolean0);
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }
}
