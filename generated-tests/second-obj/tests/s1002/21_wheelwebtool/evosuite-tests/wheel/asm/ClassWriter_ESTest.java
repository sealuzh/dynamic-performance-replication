/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:00:53 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.ObjectStreamConstants;
import java.lang.reflect.Method;
import java.time.chrono.Chronology;
import java.time.temporal.TemporalAccessor;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      classWriter0.visitInnerClass("5", (String) null, "5", 6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1450);
      classWriter0.visitInnerClass((String) null, "", (String) null, 1450);
      classWriter0.cr = null;
      classWriter0.index = 1450;
      Item item0 = classWriter0.newFloat((-26.221067F));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1913);
      classWriter0.visitInnerClass("", "", "", 1913);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      int int0 = classWriter0.addType("7|");
      assertEquals(1, int0);
      
      int int1 = classWriter0.newConst("7|");
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1365));
      classWriter0.newDouble((-1365));
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(263);
      Item[] itemArray0 = new Item[6];
      classWriter0.typeTable = itemArray0;
      Item item0 = new Item(47);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(2);
      classWriter0.addUninitializedType("Synthetic", 263);
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(484);
      Item item0 = classWriter0.newFieldItem("SourceFile", "SourceFile", "SourceFile");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777217);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(16777217, 16777217);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(484);
      Item item0 = classWriter0.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(55);
      classWriter0.visitOuterClass(".lA%1#S.@ tV}t", "r+R/gO#m6vElvO!", (String) null);
      Item item0 = classWriter0.newInteger(32);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(710);
      classWriter0.visitOuterClass("U.+>3hhvn|w/|&*", "U.+>3hhvn|w/|&*", "U.+>3hhvn|w/|&*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ClassWriter classWriter0 = new ClassWriter(742);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(742, "", "", "", (Object) null);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(263);
      Item[] itemArray0 = new Item[6];
      Character.getName(47);
      classWriter0.typeTable = itemArray0;
      Item item0 = new Item(47);
      classWriter0.visitField(263, "SOLIDUS", "SOLIDUS", "Synthetic", "SOLIDUS");
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(2);
      int int0 = classWriter0.addType("SOLIDUS");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = (-790);
      ClassWriter classWriter0 = new ClassWriter((-790));
      Item item0 = new Item();
      classWriter0.threshold = 2;
      Type.getObjectType("lass not found");
      Item item1 = classWriter0.key;
      item0.set(438.5753706);
      item0.set((-53.75));
      classWriter0.visitSource("49k9P0|5`;>fj&`Qa;", "J_$&RvGBc6$eV");
      classWriter0.toByteArray();
      Locale locale0 = Locale.CHINA;
      Chronology.ofLocale(locale0);
      // Undeclared exception!
      try { 
        Chronology.from((TemporalAccessor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // temporal
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-785));
      classWriter0.threshold = 2;
      Type type0 = Type.BOOLEAN_TYPE;
      Type type1 = Type.BOOLEAN_TYPE;
      classWriter0.visitOuterClass(",h))x[B}68xzT\"(", (String) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.visitSource((String) null, "org.apache.commons.io.filefilter.DirectoryFileFilter");
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      String string0 = File.separator;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.addUninitializedType("/", 1);
      classWriter0.toByteArray();
      classWriter0.newInteger(362);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, (-190));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "InnerClasses");
      ClassWriter classWriter0 = new ClassWriter(197);
      classWriter0.visit(16, 44, "InnerClasses", "InnerClasses", "InnerClasses", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1069);
      classWriter0.invalidFrames = false;
      classWriter0.visitAnnotation("", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(1069, 1069, "", "", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2115);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(49, (-1214), "6", "5f-YOE", "", stringArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1239);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-2540), "ILH+[J)R=6gUT", "ILH+[J)R=6gUT", "", (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classWriter0.visitSource((String) null, (String) null);
      Integer integer0 = new Integer(1);
      classWriter0.newConstItem(integer0);
      classWriter0.visitAnnotation("$2ypk=n-", true);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(263);
      Item[] itemArray0 = new Item[6];
      Character.getName(47);
      classWriter0.typeTable = itemArray0;
      Double.max(0.0, 2);
      Byte byte0 = new Byte((byte) (-1));
      Byte.toUnsignedLong((byte) (-1));
      classWriter0.newConst(byte0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("Synthetic", "SOLIDUS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Synthetic.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(4294967295L);
      ClassWriter classWriter0 = new ClassWriter((-38));
      classWriter0.newDouble(374.312);
      Float float0 = new Float((float) 2);
      Float.max(2, (-38));
      classWriter0.newConst(float0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Double double0 = new Double(0);
      Double.max(2, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer0 = new Integer(1);
      classWriter0.newConstItem(double0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      Boolean boolean0 = Boolean.TRUE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = ClassReader.ANNOTATIONS;
      classWriter0.newConst(boolean0);
      classWriter0.visitEnd();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(11, (-1064));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-785));
      Type type0 = Type.BOOLEAN_TYPE;
      Type type1 = Type.BOOLEAN_TYPE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean.compare(true, false);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Boolean boolean1 = Boolean.FALSE;
      classWriter0.newConst(boolean1);
      classWriter0.visitEnd();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-175));
      classWriter0.newLong(0L);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-200));
      classWriter0.thisName = "_AgIG}X&@6|x/r U~";
      Long long0 = new Long(2);
      classWriter0.newConstItem(long0);
      int int0 = 16777217;
      String string0 = ":h(zl3Jjy";
      String string1 = "RuntimeVisibleAnnotations";
      String string2 = "\"n'-";
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4783);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("dc,qMyJ~+", false);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.AnnotationWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.lastMethod = null;
      classWriter0.typeTable = null;
      classWriter0.visitAnnotation("c}] !}h',3o", true);
      classWriter0.toByteArray();
      classWriter0.visitSource("Code", "Code");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 10;
      ClassWriter classWriter0 = new ClassWriter(10);
      String[] stringArray0 = new String[0];
      classWriter0.visit(2753, 10, "0aSp-X9(4iw5'", (String) null, "FPM_{L7c>hj", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, (-763));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(484);
      Short short0 = new Short((short) (-2327));
      Short.toUnsignedLong((short) (-2327));
      classWriter0.visitField(533, "", "", "", short0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5176));
      Item[] itemArray0 = new Item[8];
      Item item0 = classWriter0.newClassItem("v>qHK'<4Pc<G?");
      itemArray0[0] = item0;
      Item item1 = new Item(2);
      itemArray0[1] = item1;
      classWriter0.newLong((-5176));
      Item item2 = classWriter0.newLong((-5176));
      itemArray0[3] = item2;
      Item item3 = classWriter0.newInteger(939);
      itemArray0[4] = item3;
      Item item4 = classWriter0.newClassItem("v>qHK'<4Pc<G?");
      itemArray0[5] = item4;
      Item item5 = classWriter0.key;
      itemArray0[6] = item5;
      Item item6 = classWriter0.key3;
      itemArray0[7] = item6;
      classWriter0.typeTable = itemArray0;
      classWriter0.visitEnd();
      classWriter0.newUTF8("v>qHK'<4Pc<G?");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(288);
      String string0 = "Synthetic";
      Item[] itemArray0 = new Item[6];
      int int0 = 83;
      Item item0 = new Item(83);
      itemArray0[0] = item0;
      Item item1 = classWriter0.newConstItem("Synthetic");
      itemArray0[1] = item1;
      Item item2 = classWriter0.key2;
      itemArray0[2] = item2;
      Item item3 = classWriter0.key2;
      itemArray0[3] = item3;
      item1.strVal3 = "Synthetic";
      classWriter0.newUTF8("");
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.newConst("Synthetic");
      Double double0 = new Double(1);
      Double.min(929.289, 2);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      // Undeclared exception!
      try { 
        classWriter0.visitField(196, "Synthetic", (String) null, "RuntimeVisibleAnnotations", mockJapaneseDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Double double0 = new Double((-1867));
      ClassWriter classWriter0 = new ClassWriter(12);
      classWriter0.visitOuterClass(":h(zl3Jjy", ":h(zl3Jjy", ":h(zl3Jjy");
      classWriter0.thisName = ":h(zl3Jjy";
      classWriter0.visitSource(":h(zl3Jjy", ":h(zl3Jjy");
      classWriter0.newNameType(":h(zl3Jjy", ":h(zl3Jjy");
      classWriter0.newFloat((-1867));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-785));
      classWriter0.threshold = 2;
      Type type0 = Type.BOOLEAN_TYPE;
      Type type1 = Type.BOOLEAN_TYPE;
      Item item0 = classWriter0.newDouble(9);
      item0.set(7);
      item0.set((-44.8));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "Sensitive";
      classWriter0.visitOuterClass("org.apache.commons.io.filefilter.DirectoryFileFilter", (String) null, "Sensitive");
      Item item1 = classWriter0.newDouble((-44.8));
      item1.set(4);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-790));
      classWriter0.threshold = 2;
      classWriter0.visitInnerClass("wC_fY:T+cr4gM\"?;r?", "ImEvjDyc_VrN%W#^c<~", "EnclosingMethod", 13);
      Class<Method> class0 = Method.class;
      Type.getType(class0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.toByteArray();
      int int0 = Frame.BYTE;
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(192);
      classWriter0.threshold = 14;
      String string0 = "";
      classWriter0.visit(192, 14, "c4/kjN6.@q78?&qQ]-", "", "", (String[]) null);
      classWriter0.toByteArray();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("c4/kjN6.@q78?&qQ]-");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-818));
      Item item0 = classWriter0.key3;
      classWriter0.threshold = 2;
      Type.getObjectType("lass not found");
      Class<Method> class0 = Method.class;
      Type.getType(class0);
      item0.set(2);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "StackMapTable";
      classWriter0.visit(76, 2, "StackMapTable", "lass not found", "StackMapTable", stringArray0);
      Item item1 = new Item();
      Item item2 = classWriter0.key;
      item1.set((-1282.2192F));
      item0.set(0);
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      classWriter0.toByteArray();
      classWriter0.newUTF8("lass not found");
      classWriter0.newLong(7);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      Character character0 = new Character('6');
      classWriter0.newConst(character0);
      Item item0 = new Item();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.firstMethod = null;
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      Type type0 = Type.FLOAT_TYPE;
      classWriter0.newConstItem(type0);
      Class<Integer> class0 = Integer.class;
      Type.getDescriptor(class0);
      classWriter0.visitEnd();
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(5, 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-790));
      Item item0 = classWriter0.key3;
      Boolean.valueOf(false);
      Boolean.getBoolean("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Type type0 = Type.getObjectType("Class not found");
      Class<Method> class0 = Method.class;
      Type.getType(class0);
      classWriter0.newConstItem(type0);
      // Undeclared exception!
      try { 
        classWriter0.newField("", (String) null, "\"&ert(Mq4N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-785));
      Type type0 = Type.BOOLEAN_TYPE;
      classWriter0.visitOuterClass(",h))x[B}68xzT\"(", (String) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      String string0 = File.separator;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777219);
      ClassWriter classWriter1 = new ClassWriter(167);
      byte[] byteArray0 = classWriter1.toByteArray();
      boolean boolean0 = true;
      Item item0 = new Item();
      item0.set(16777219);
      item0.set((-1452L));
      String string0 = "";
      classWriter0.addType("");
      String string1 = "!";
      classWriter0.newClass("");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string2 = "";
      classWriter0.addType("");
      int int1 = 136;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 136, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 144
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(224);
      Integer integer0 = new Integer(224);
      classWriter0.newConstItem(integer0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-785));
      classWriter0.threshold = 2;
      Type type0 = Type.BOOLEAN_TYPE;
      Type type1 = Type.BOOLEAN_TYPE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitOuterClass(",h))x[B}68xzT\"(", (String) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      String string0 = File.separator;
      Type.getObjectType("Zw-U,:2\"8>Zr}NMXZ");
      Class<Method> class0 = Method.class;
      Type.getInternalName(class0);
      classWriter0.visitInnerClass("", (String) null, "L?>n", 3);
      classWriter0.visitInnerClass("", "Zw-U,:2\"8>Zr}NMXZ", "/", 10);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1487);
      classWriter0.newLong(1487);
      classWriter0.newMethod("7.", "", "7.", false);
      classWriter0.newFloat(0.0F);
      classWriter0.newFloat(0.0F);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777214);
      int int0 = (-790);
      String string0 = "";
      classWriter0.newFieldItem("", "", "");
      classWriter0.newFieldItem("", "", "");
      classWriter0.newFloat(1);
      Type.getObjectType("Class not found");
      // Undeclared exception!
      try { 
        Type.getType("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-701));
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.lastMethod = null;
      classWriter0.typeTable = null;
      byte[] byteArray0 = classWriter0.toByteArray();
      classWriter0.newDouble(0.0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(1391, (-701), "t>ax^&w2|+i0:kGc", "_?B$=7", "t>ax^&w2|+i0:kGc", stringArray0);
      int int0 = Byte.BYTES;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1391, (-1734));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 11);
      int int1 = Float.SIZE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(46, (-1734));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-790));
      classWriter0.threshold = 2;
      String string0 = "+";
      String[] stringArray0 = new String[0];
      classWriter0.visit(32, (-790), "+", "+", "k", stringArray0);
      classWriter0.visitAnnotation("+", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      Item item0 = new Item();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 2, (-2863));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11030
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.invalidFrames = true;
      Boolean.compare(true, true);
      boolean boolean1 = ClassReader.ANNOTATIONS;
      classWriter0.newConst(boolean0);
      classWriter0.visitEnd();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-106));
      Item item0 = new Item();
      String string0 = "lass not found";
      Type.getObjectType("lass not found");
      Class<Method> class0 = Method.class;
      Type.getType(class0);
      boolean boolean0 = true;
      classWriter0.newMethodItem("byte", "byte", "", true);
      Item item1 = classWriter0.newMethodItem("byte", "byte", "", true);
      item0.set(438.5753706);
      item0.set((-53.75));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      item0.set(1);
      item1.set(9);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("z$t}G}FoL=8tA", "z$t}G}FoL=8tA");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'z$t}G}FoL=8tA.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-790));
      classWriter0.newUTF8(" dPR[");
      classWriter0.visitAnnotation("1U}2B", false);
      String string0 = "lass not found";
      classWriter0.threshold = 2;
      Type.getObjectType("lass not found");
      Class<Method> class0 = Method.class;
      Type type0 = Type.getType(class0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String[] stringArray0 = new String[2];
      stringArray0[0] = " dPR[";
      stringArray0[1] = " dPR[";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2059), "lass not found", " dPR[", "Invalid IOCase name: ", stringArray0, false, false);
      classWriter0.firstMethod = methodWriter0;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      type0.getDescriptor();
      int int0 = Long.BYTES;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(5, (-1995));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-773));
      classWriter0.threshold = 2;
      Type type0 = Type.BOOLEAN_TYPE;
      Item item0 = classWriter0.newDouble(9);
      item0.set((-44.8));
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org/apache/commons/io/filefilter/AbstractFileFilter");
      FieldWriter fieldWriter0 = classWriter0.firstField;
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleParameterAnnotations");
      ClassWriter classWriter0 = new ClassWriter((-785));
      classWriter0.threshold = 2;
      Type type0 = Type.BOOLEAN_TYPE;
      Item item0 = classWriter0.key;
      item0.longVal = 8L;
      item0.set((-44.8));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      Attribute attribute0 = new Attribute("BL%)#2y m>:`\"lGpBY");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)2;
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      type0.getClassName();
      classWriter0.addUninitializedType("boolean", 37);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      classWriter0.toByteArray();
      classWriter0.newFloat(0.0F);
      classWriter0.newField("pWV.vvq@", "", "RuntimeInvisibleParameterAnnotations");
      classWriter0.newDouble(6);
      type0.toString();
      ClassWriter classWriter1 = new ClassWriter(33);
      classWriter0.toByteArray();
      classWriter0.visitAnnotation(")rmpbQ8J", false);
  }
}
