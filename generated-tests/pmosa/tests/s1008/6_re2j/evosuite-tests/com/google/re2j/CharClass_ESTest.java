/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 12:49:30 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      int[][] intArray0 = new int[0][1];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(1978, 1978);
      CharClass charClass2 = charClass1.appendLiteral(1978, 1978);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[3];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass1.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(43790, (-1));
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharGroup charGroup0 = null;
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[3];
      intArray1[1] = (-654);
      intArray1[2] = 0;
      intArray0[0] = intArray1;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = (-1519);
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 0;
      intArray2[3] = 2725;
      intArray2[4] = 0;
      intArray2[5] = 0;
      intArray2[6] = (-772);
      intArray2[7] = 0;
      intArray2[8] = 0;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      charClass0.appendTableWithSign(intArray1, 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 65;
      int int0 = (-4106);
      intArray0[1] = (-4106);
      int int1 = (-1851);
      intArray0[2] = (-1851);
      int int2 = 8667;
      intArray0[3] = 8667;
      int int3 = 43307;
      intArray0[4] = 43307;
      intArray0[5] = (-72);
      int int4 = 3157;
      intArray0[6] = 3157;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = int1;
      intArray1[1] = int0;
      intArray1[2] = int3;
      intArray1[3] = int4;
      intArray1[4] = int3;
      intArray1[5] = int1;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray1);
      int int5 = 19;
      charClass2.appendClassWithSign(intArray0, int5);
      int int6 = 2634;
      charClass0.appendRange(int6, intArray0[5]);
      charClass0.appendLiteral(int2, intArray0[1]);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 65847;
      intArray0[0] = 65847;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(240, 65847);
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      int[] intArray0 = new int[0];
      CharClass charClass3 = charClass2.appendClass(intArray0);
      assertSame(charClass2, charClass3);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 12842;
      intArray0[1] = 0;
      intArray0[2] = (-933);
      intArray0[3] = (-1411);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 772;
      intArray0[7] = 0;
      intArray0[8] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[4][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 0);
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendLiteral(0, 0);
      int[] intArray2 = new int[6];
      intArray2[0] = 0;
      intArray2[1] = 12842;
      intArray2[2] = 0;
      intArray2[3] = (-531);
      intArray2[4] = 0;
      intArray2[5] = (-933);
      CharClass charClass4 = charClass3.appendClass(intArray2);
      charClass4.appendFoldedRange(65118, 446);
      assertArrayEquals(new int[] {12842, 0, (-933), (-1411), 0, 0, 772, 0, 12842}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-2617);
      intArray0[1] = 249;
      intArray0[2] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(249, 0);
      int[] intArray1 = charClass1.toArray();
      assertArrayEquals(new int[] {(-2617), 249, 0, 249, 249}, intArray1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      charClass0.cleanClass();
      intArray0[0] = (-3920);
      intArray0[1] = 5120;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.cleanClass();
      charClass3.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(3706, 0);
      CharClass charClass2 = charClass1.negateClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 3706;
      intArray0[1] = 3706;
      intArray0[2] = 0;
      intArray0[3] = 3706;
      intArray0[4] = 3706;
      intArray0[5] = 0;
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[0][1];
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      CharClass charClass5 = charClass4.appendClassWithSign(intArray0, 0);
      CharClass charClass6 = charClass5.appendClass(intArray0);
      assertSame(charClass6, charClass3);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[3];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[1][1];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharGroup charGroup0 = null;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign((int[]) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendLiteral(1811, 1811);
      String string0 = charClass0.toString();
      assertEquals("[0x713]", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      intArray0[1] = 12318;
      intArray0[2] = 0;
      intArray0[3] = 1114111;
      intArray0[4] = 0;
      intArray0[5] = 3691;
      intArray0[6] = (-977);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 3691);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendRange((-594), (-594));
      CharClass charClass4 = charClass3.cleanClass();
      int[][] intArray1 = new int[5][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      // Undeclared exception!
      try { 
        charClass4.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 3706;
      int[][] intArray1 = new int[9][4];
      intArray1[0] = intArray0;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][0];
      int[] intArray1 = new int[4];
      intArray1[0] = 6662;
      intArray1[1] = 8526;
      intArray1[2] = 2561;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[1];
      intArray2[0] = 64;
      intArray0[1] = intArray2;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 2307;
      intArray0[1] = 0;
      intArray0[2] = 1315;
      int int0 = 149;
      intArray0[3] = 149;
      intArray0[4] = 7097;
      intArray0[5] = 0;
      int int1 = 4605;
      intArray0[6] = 4605;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(7097, 0);
      CharClass charClass2 = charClass1.appendRange(2, (-2));
      int[] intArray1 = new int[5];
      intArray1[0] = (-2);
      intArray1[1] = 4605;
      intArray1[2] = (-2);
      charClass1.cleanClass();
      intArray1[3] = int1;
      intArray1[4] = int0;
      CharClass charClass3 = charClass2.appendFoldedClass(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      int int2 = 396;
      int int3 = (-57);
      CharClass charClass5 = charClass4.appendLiteral(int2, int3);
      charClass5.appendRange(intArray1[2], intArray0[2]);
      int[][] intArray2 = new int[1][7];
      intArray2[0] = intArray1;
      charClass1.appendTable(intArray2);
      charClass0.appendNegatedClass(intArray1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      int int0 = (-3920);
      int int1 = 800;
      int int2 = (-3659);
      int int3 = 0;
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.appendFoldedClass(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(3706, 0);
      CharClass charClass2 = charClass1.negateClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 3706;
      intArray0[1] = 3706;
      intArray0[2] = 0;
      intArray0[3] = 3706;
      intArray0[4] = 3706;
      intArray0[5] = 3706;
      charClass2.toString();
      CharClass charClass3 = charClass0.negateClass();
      assertSame(charClass3, charClass2);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = (-831);
      intArray0[1] = 0;
      intArray0[2] = 3706;
      intArray0[3] = 2032;
      intArray0[4] = 2339;
      intArray0[5] = 1609;
      CharClass charClass1 = new CharClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      charClass2.appendClassWithSign(intArray0, (-831));
      int[][] intArray1 = new int[5][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      charClass0.appendTableWithSign(intArray1, (-831));
      charClass0.cleanClass();
      CharClass charClass3 = charClass0.appendTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      assertSame(charClass4, charClass0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-251);
      intArray0[1] = (-2927);
      intArray0[2] = 1;
      intArray0[3] = 55;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendRange(91, 55);
      CharClass charClass3 = charClass2.appendLiteral((-2927), 767);
      charClass2.negateClass();
      CharClass charClass4 = charClass3.appendFoldedRange(55, (-2927));
      int[][] intArray1 = new int[6][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 91;
      intArray2[1] = (-2927);
      intArray2[2] = (-453);
      intArray2[3] = (-1504);
      intArray2[4] = (-2927);
      intArray2[5] = 55;
      intArray2[6] = 767;
      intArray1[4] = intArray2;
      intArray1[5] = intArray0;
      charClass4.appendTableWithSign(intArray1, (-1504));
      charClass1.cleanClass();
      CharClass charClass5 = new CharClass();
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[7];
      intArray1[0] = 3966;
      intArray1[1] = 1;
      intArray1[2] = 1;
      intArray1[3] = (-2802);
      intArray1[4] = 193;
      intArray1[5] = 1114111;
      intArray1[6] = (-203);
      intArray0[0] = intArray1;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-251);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass0.appendLiteral(93, (-251));
      charClass2.appendLiteral(55, 91);
      CharClass charClass3 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.negateClass();
      int[][] intArray1 = new int[3][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass2.appendTableWithSign(intArray1, (-251));
      charClass4.appendNegatedTable(intArray1);
      charClass4.cleanClass();
      // Undeclared exception!
      try { 
        charClass3.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
