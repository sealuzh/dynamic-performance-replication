/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 01:19:29 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1124));
      fBProcedureCall0.setName((String) null);
      int int1 = fBProcedureCall0.hashCode();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(41);
      fBProcedureParam0.setIndex(41);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-21), (-21));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -22
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "");
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getName();
      int int0 = 2861;
      int int1 = 1076;
      fBProcedureCall0.getOutputParam(1076);
      try { 
        fBProcedureCall0.registerOutParam(2861, 2861);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, "Value of parameter ");
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(1, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1436), "org.firebirdsql.jdbc.FBProcedureCall");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1436
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      boolean boolean0 = true;
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      int int0 = (-997);
      fBProcedureCall0.mapOutParamIndexToPosition((-997));
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      Object object0 = new Object();
      try { 
        fBProcedureParam0.setValue(object0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-3715));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = new Object();
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.setName("3?(K'ag");
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(26);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(null)", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-496));
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.mapOutParamIndexToPosition((-496));
      fBProcedureCall0.equals("");
      fBProcedureCall0.equals("");
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getSQL(false);
      int int0 = 0;
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-496), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.clone();
      int int0 = 0;
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setIndex(296);
      fBProcedureParam0.setType(547);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-1), true);
      fBProcedureCall0.getInputParam(547);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(296);
      fBProcedureCall0.getName();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.setName((String) null);
      fBProcedureCall0.getInputParam(40);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.getInputParam(40);
      fBProcedureCall0.equals(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(31, true);
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertTrue(boolean0);
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1201, "");
      fBProcedureCall0.mapOutParamIndexToPosition((-1258));
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(1053);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(63);
      fBProcedureCall0.getOutputParam(1053);
      fBProcedureCall0.getInputParams();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam((-1258));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParams();
      fBProcedureParam1.clone();
      fBProcedureCall0.clone();
      fBProcedureCall0.setName("V?");
      fBProcedureCall0.hashCode();
      fBProcedureCall0.getInputParam(63);
      fBProcedureParam1.setType((-116));
      fBProcedureParam1.setType(0);
      fBProcedureCall0.mapOutParamIndexToPosition((-840), true);
      fBProcedureCall0.getName();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParams();
      try { 
        fBProcedureCall0.registerOutParam(1053, 2368);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "rJ=e{");
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(rJ=e{)", string0);
      
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(31, "SELECT * FROM null(rJ=e{)");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      assertEquals(31, fBProcedureParam1.getPosition());
      
      fBProcedureCall0.getOutputParam(2);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(31, true);
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(949);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null)", string0);
      
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("\"3`O$j");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("");
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1386, "d?CShfoMD+}Tx(Rk");
      fBProcedureParam0.setIndex(1386);
      fBProcedureParam0.setIndex(3);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam0.setValue(fBProcedureCall1);
      fBProcedureParam0.setIndex(1386);
      fBProcedureParam0.setValue(fBProcedureCall0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getName();
      fBProcedureCall0.getInputParam(1386);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(1386);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureParam1.setValue(fBProcedureCall2);
      fBProcedureParam1.setValue("");
      fBProcedureCall0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.registerOutParam(1386, (-79640669));
      fBProcedureCall0.clone();
      fBProcedureCall0.hashCode();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-79640669), (-79640669));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -79640670
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(35, "?,rVf0D>6O.fb|i)yf");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(35, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.getOutputParam(946);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(?,rVf0D>6O.fb|i)yf)", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "Ost;?2-GuR~o=|sL");
      assertEquals(0, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null(Ost;?2-GuR~o=|sL)", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(35, "?,rVf0D>6O.fb|i)yf");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureParam0.setValue(fBProcedureCall1);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(35, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.setName("?,rVf0D>6O.fb|i)yf");
      Object object0 = fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParam(946);
      String string0 = fBProcedureCall0.getSQL(true);
      assertNotSame(fBProcedureCall0, object0);
      assertEquals("SELECT * FROM ?,rVf0D>6O.fb|i)yf(?,rVf0D>6O.fb|i)yf)", string0);
      assertTrue(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(35, "?,rVf0D>6O.fb|i)yf");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      assertEquals(35, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall1.mapOutParamIndexToPosition(35);
      assertEquals(35, int0);
      
      Object object0 = new Object();
      boolean boolean0 = fBProcedureCall1.equals(object0);
      assertFalse(boolean0);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "Ost;?2-GuR~o=|sL");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(1, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(1981);
      assertEquals(1981, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "Ost;?2-GuR~o=|sL");
      fBProcedureCall0.registerOutParam((-1), 11);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(11, fBProcedureParam0.getType());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(Ost;?2-GuR~o=|sL)", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      fBProcedureCall0.mapOutParamIndexToPosition(887);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "EXECUTE PROCEDURE");
      fBProcedureCall0.addParam(0, "e8_yNNG?6Y6Q");
      fBProcedureCall0.equals(object0);
      fBProcedureCall0.setName("^ ");
      fBProcedureCall0.mapOutParamIndexToPosition((-5596));
      fBProcedureCall0.mapOutParamIndexToPosition(887);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.equals((Object) null);
      fBProcedureCall0.getName();
      fBProcedureCall0.mapOutParamIndexToPosition((-5596));
      fBProcedureCall0.mapOutParamIndexToPosition((-5596));
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getOutputParam(887);
      fBProcedureCall0.getOutputParams();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam((-32723923), "e8_");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -32723923
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(1798, true);
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(857);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
      
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(857, "57");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(11, "in#uW(");
      fBProcedureParam0.setType(11);
      fBProcedureCall0.setName("q9");
      fBProcedureCall0.mapOutParamIndexToPosition((-2093064));
      fBProcedureCall0.getOutputParam((-2093064));
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-2093064));
      assertEquals((-2093064), int0);
      
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.getInputParam(11);
      fBProcedureCall0.getOutputParams();
      assertNotSame(fBProcedureCall0, object0);
      assertFalse(fBProcedureCall0.equals((Object)object0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "Out;\u001A-t9R~o=|]L");
      assertEquals("Out;\u001A-t9R~o=|]L", fBProcedureParam0.getParamValue());
      assertEquals(1, fBProcedureParam0.getPosition());
  }
}
