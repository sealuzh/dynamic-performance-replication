/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 06:10:15 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-11);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50942, (byte)44, fieldTypeShort0, 4L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(245, int0);
      assertEquals(50942, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(2342);
      ByteOrder byteOrder0 = charBuffer0.order();
      Double double0 = new Double((-1301.31209));
      byte[] byteArray0 = fieldTypeRational0.writeData(double0, byteOrder0);
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 2338L, 4L, byteArray0, byteOrder0, 2342);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(18704, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2342, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1301), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1213), "d}7#lJ%QWG,j?SJ*");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146482023, 50933, fieldTypeFloat0.ASCII, 4L, 10, byteArray0, byteOrder0, (-497));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146482023, tiffField0.getTag());
      assertEquals(50933, tiffField0.getDirectoryType());
      assertEquals((-497), tiffField0.getSortHint());
      assertEquals(10, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3180), "V");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(0L, tiffElement0.offset);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((byte)27, (-3538), fieldTypeAscii0.SLONG, 3010L, (byte)27, byteArray0, byteOrder0, 791);
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-3538), tiffField0.getDirectoryType());
      assertEquals(791, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1207), (byte) (-38), fieldTypeDouble0, 345L, 1131, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2760, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(1131, tiffField0.getOffset());
      assertEquals((-1207), tiffField0.getTag());
      assertEquals((-38), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(34665, (-144), fieldTypeRational0, 338, (-144), byteArray0, (ByteOrder) null, 3239);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(3239, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals((-144), tiffField0.getDirectoryType());
      assertEquals((-144), tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1953, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 4, fieldTypeFloat0.IFD, 2787L, 4L, byteArray0, byteOrder0, 4);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 1962, fieldTypeByte0, 1L, (byte) (-115), byteArray0, byteOrder0, 522);
      int int0 = tiffField0.getTag();
      assertEquals(1962, tiffField0.getDirectoryType());
      assertEquals(82, int0);
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(522, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1213), (-2815), fieldTypeAscii0, 1L, (-1213), byteArray0, byteOrder0, (-1213));
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1213), tiffField0.getTag());
      assertEquals((-1213), tiffField0.getSortHint());
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1213), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1053, (String) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(883);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 1053, fieldTypeFloat0, 116L, 2145436475, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getTag());
      assertEquals(2145436475, tiffField0.getOffset());
      assertEquals(1053, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146372114, 2146372114, fieldTypeByte0, 4496L, 0L, byteArray0, (ByteOrder) null, 2145203941);
      int int0 = tiffField0.getSortHint();
      assertEquals(2146372114, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2146372114, tiffField0.getTag());
      assertEquals(2145203941, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-268), 33422, fieldTypeLong0, (-4294967296L), (-4294967296L), byteArray0, byteOrder0, 33422);
      tiffField0.getOffset();
      assertEquals(33422, tiffField0.getSortHint());
      assertEquals(33422, tiffField0.getDirectoryType());
      assertEquals((-268), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "X|0YLTEOO");
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeFloat0, 0, (-1L), byteArray0, byteOrder0, 34859);
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals(34859, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65535, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      byteArray0[1] = (byte)47;
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeFloat0.IFD, 336296L, (-1L), byteArray0, byteOrder0, 65535);
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1345184, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-115);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 1962, fieldTypeByte0, 1L, (byte) (-115), byteArray0, byteOrder0, 522);
      tiffField0.getIntValueOrArraySum();
      assertEquals(522, tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1962, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)47;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-3725));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3725), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2840), 432, fieldTypeAscii0.SBYTE, 1L, 432, byteArray0, byteOrder0, 658);
      tiffField0.getIntValue();
      assertEquals(658, tiffField0.getSortHint());
      assertEquals((-2840), tiffField0.getTag());
      assertEquals(432, tiffField0.getOffset());
      assertEquals(432, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3642, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-408), 3642, fieldTypeAscii0, 3642, 3642, byteArray0, byteOrder0, 34026);
      tiffField0.getFieldTypeName();
      assertEquals(3642, tiffField0.getDirectoryType());
      assertEquals(3642, tiffField0.getOffset());
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals((-408), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1960), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 566, fieldTypeFloat0, (byte)43, (byte)47, byteArray0, byteOrder0, (-384));
      tiffField0.getFieldTypeName();
      assertEquals((-384), tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(47, tiffField0.getOffset());
      assertEquals(566, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2642), (-3030), (FieldType) null, (-2642), (-3030), byteArray0, byteOrder0, 992);
      tiffField0.getFieldType();
      assertEquals((-3030), tiffField0.getDirectoryType());
      assertEquals(992, tiffField0.getSortHint());
      assertEquals((-2642), tiffField0.getTag());
      assertEquals((-3030), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KBmVB]IY[N");
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)74);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1702L), 0L, byteArray0, byteOrder0, (-3623));
      tiffField0.getFieldType();
      assertEquals((-3623), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1960), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 566, fieldTypeFloat0, (byte)43, (byte)47, byteArray0, byteOrder0, (-384));
      tiffField0.getFieldType();
      assertEquals(47, tiffField0.getOffset());
      assertEquals(566, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
      assertEquals((-384), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)50);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(2145436475, (-2147240085), fieldTypeFloat0, 1, 336296L, byteArray0, byteOrder0, 1998);
      tiffField0.getDoubleValue();
      assertEquals(2145436475, tiffField0.getTag());
      assertEquals(336296, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2147240085), tiffField0.getDirectoryType());
      assertEquals(1998, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)58;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-712), (-2572), fieldTypeLong0, 1L, 407760L, byteArray0, byteOrder0, 2146893517);
      tiffField0.getDoubleValue();
      assertEquals(2146893517, tiffField0.getSortHint());
      assertEquals((-712), tiffField0.getTag());
      assertEquals(407760, tiffField0.getOffset());
      assertEquals((-2572), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Float float0 = new Float((double) (-2304));
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = fieldTypeFloat0.writeData(float0, byteOrder0);
      TiffField tiffField0 = new TiffField((-2304), 50, fieldTypeFloat0, 1L, (-901L), byteArray0, byteOrder0, 115);
      tiffField0.getDoubleValue();
      assertEquals((-901), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2304), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3157), (byte)0, fieldTypeDouble0, (byte)0, 4712L, byteArray0, byteOrder0, (-975));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-975), tiffField0.getSortHint());
      assertEquals(4712, tiffField0.getOffset());
      assertEquals((-3157), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1960), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)43, (byte)43, fieldTypeFloat0, (byte)43, (byte)43, byteArray0, byteOrder0, (byte)43);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, int0);
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeByte0.ASCII, 0L, 0L, byteArray0, byteOrder0, (-1149));
      tiffField0.getCount();
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals((-1149), tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), ", fieldType: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-2306L), (-2306L), byteArray0, byteOrder0, 7);
      tiffField0.getCount();
      assertEquals((-2306), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3098), (byte)46, fieldTypeShort0, 0L, (-2860L), byteArray0, byteOrder0, (-3098));
      int int0 = tiffField0.getBytesLength();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals((-2860), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-3098), tiffField0.getSortHint());
      assertEquals((-3098), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2416), 42112, fieldTypeShort0, 42112, 42112, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(84224, int0);
      assertEquals(42112, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2416), tiffField0.getTag());
      assertEquals(42112, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (-977), fieldTypeAscii0, 6, (-977), byteArray0, (ByteOrder) null, 6);
      tiffField0.getByteOrder();
      assertEquals((-977), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-977), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField((byte)87, 3, fieldTypeByte0.ASCII, 804L, (byte)0, byteArray0, byteOrder0, (-2114));
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(87, tiffField0.getTag());
      assertEquals(804, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-2114), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeByte0.ASCII, 0L, 0L, byteArray0, byteOrder0, (-1149));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals((-1149), tiffField0.getSortHint());
      assertEquals((-4), tiffField0.getTag());
      assertEquals((-4), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(314, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(314, 50741, fieldTypeDouble0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[38];
      TiffField tiffField0 = new TiffField(5, 37, fieldTypeFloat0.SSHORT, (-867), (-867), byteArray0, byteOrder0, (-1154));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 2138961887, fieldTypeDouble0, (-975), (-975), byteArray0, byteOrder0, 154);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-376), (-376), fieldTypeShort0, (-8416L), (-1486L), byteArray0, byteOrder0, (byte)4);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, 498L, 498L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 82, fieldTypeByte0.RATIONAL, (-362L), (-2558L), byteArray0, byteOrder0, 2147432558);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), ", fieldType: ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3640, 50981, fieldTypeByte0, 3640, (-1L), (byte[]) null, byteOrder0, 3640);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-49), (byte) (-108), fieldTypeAscii0, (byte) (-58), (byte) (-58), byteArray0, byteOrder0, (byte) (-115));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1168), (-2970), fieldTypeFloat0.LONG, (-2531L), 3705L, byteArray0, byteOrder0, 931);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1053, (String) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(883);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte) (-68), 1359, fieldTypeFloat0, 0L, 2145436475, byteArray0, byteOrder0, (byte) (-68));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5641, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField((-1171), 2146523237, fieldTypeFloat0, (byte) (-42), (-1017L), byteArray0, byteOrder0, 2146523237);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(29, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2073), 1805, fieldTypeRational0, (-2073), 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1131, (-286), fieldTypeDouble0, 1L, (-24L), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "R9YKa3a");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)39);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 2186L, 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, (-1L), 216L, byteArray0, byteOrder0, 50720);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5630, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(5630, (-1610612735), fieldTypeFloat0, 0L, 5630, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146372114, 2146372114, fieldTypeByte0, 4496L, 0L, byteArray0, (ByteOrder) null, 2145203941);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2145203941, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(2146372114, tiffField0.getTag());
      assertEquals(2146372114, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(871, (-1871), fieldTypeAscii0.SRATIONAL, 1935L, 255L, byteArray0, byteOrder0, (byte) (-123));
      tiffField0.getByteOrder();
      assertEquals(871, tiffField0.getTag());
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1871), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1697), (-1697), fieldTypeByte0, (-1657L), (-1657L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals((-1657), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1697), tiffField0.getTag());
      assertEquals((-1697), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-2011), (-1173), fieldTypeAscii0, 453, 66868L, byteArray0, byteOrder0, 453);
      tiffField0.getValue();
      assertEquals((-1173), tiffField0.getDirectoryType());
      assertEquals(453, tiffField0.getSortHint());
      assertEquals(453, tiffField0.getBytesLength());
      assertEquals((-2011), tiffField0.getTag());
      assertEquals(66868, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField((byte)87, 3, fieldTypeByte0.ASCII, 804L, (byte)0, byteArray0, byteOrder0, (-2114));
      tiffField0.getTagInfo();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2114), tiffField0.getSortHint());
      assertEquals(87, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1213), (-2815), fieldTypeAscii0, 1L, (-1213), byteArray0, byteOrder0, (-1213));
      int int0 = tiffField0.getTag();
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertEquals((-1213), int0);
      assertEquals((-1213), tiffField0.getSortHint());
      assertEquals((-1213), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3460, (-4), fieldTypeByte0, 981L, 3460, byteArray0, byteOrder0, (-1610612735));
      tiffField0.getCount();
      assertEquals(3460, tiffField0.getTag());
      assertEquals(3460, tiffField0.getOffset());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals((-1610612735), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-376), (-376), fieldTypeShort0, (-8416L), (-1486L), byteArray0, byteOrder0, (byte)4);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-16832), int0);
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-376), tiffField0.getDirectoryType());
      assertEquals((-1486), tiffField0.getOffset());
      assertEquals((-376), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(871, (-1871), fieldTypeAscii0.SRATIONAL, 1935L, 255L, byteArray0, byteOrder0, (byte) (-123));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2840), 432, fieldTypeAscii0.BYTE, 1L, 432, byteArray0, byteOrder0, 658);
      tiffField0.getIntValue();
      assertEquals((-2840), tiffField0.getTag());
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(432, tiffField0.getOffset());
      assertEquals(432, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(65535, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeFloat0.IFD, 336296L, (-1L), byteArray0, byteOrder0, 65535);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1345184, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-2011), 14, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SLONG).RATIONAL, 66868L, (-1173), byteArray0, byteOrder0, (-954));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1207), (byte) (-38), fieldTypeDouble0, 345L, 1131, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@170b9798 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1207), (byte) (-38), fieldTypeDouble0, 345L, 1131, byteArray0, byteOrder0, 4);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1207), tiffField0.getTag());
      assertEquals(2760, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals(1131, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5630, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5630, 50, fieldTypeFloat0, 2667L, 2667L, byteArray0, byteOrder0, 276);
      tiffField0.getDoubleArrayValue();
      assertEquals(276, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(10668, tiffField0.getBytesLength());
      assertEquals(2667, tiffField0.getOffset());
      assertEquals(5630, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)108, 32997, fieldTypeByte0, (byte)0, 1418L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@78a3877e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 2147432558, fieldTypeShort0, 2075L, 880L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2147432558, tiffField0.getDirectoryType());
      assertEquals(4150, tiffField0.getBytesLength());
      assertEquals(880, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, (-3196), fieldTypeAscii0.IFD, 4L, 4, byteArray0, (ByteOrder) null, (byte)34);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3196), tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 1962, fieldTypeByte0, 1L, (byte) (-115), byteArray0, byteOrder0, 522);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(522, tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(1962, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(82, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(2376);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-6006), (-891), fieldTypeRational0.IFD, 50, 4496L, byteArray0, byteOrder0, 2376);
      tiffField0.getIntArrayValue();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(2376, tiffField0.getSortHint());
      assertEquals((-6006), tiffField0.getTag());
      assertEquals((-891), tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(4496, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1168), 931, fieldTypeFloat0.SHORT, 931, (-2531L), byteArray0, byteOrder0, 931);
      tiffField0.getIntArrayValue();
      assertEquals(931, tiffField0.getDirectoryType());
      assertEquals(931, tiffField0.getSortHint());
      assertEquals((-1168), tiffField0.getTag());
      assertEquals((-2531), tiffField0.getOffset());
      assertEquals(1862, tiffField0.getBytesLength());
      assertEquals(931L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50970, 191, fieldTypeRational0, 50970, 1L, byteArray0, byteOrder0, 191);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(2342);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3, 50, fieldTypeRational0, 4L, 3, byteArray0, byteOrder0, 3);
      tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3180), "V");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-990), (byte)58, fieldTypeRational0, 1L, (byte)58, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)50);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField(33423, 0, fieldTypeFloat0, 1359L, 1, byteArray0, byteOrder0, 1717986918);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3721ed89 for: 33423 (0x828f: BatteryLevel): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1213), (-2815), fieldTypeAscii0, 1L, (-1213), byteArray0, byteOrder0, (-1213));
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertEquals((-1213), tiffField0.getSortHint());
      assertEquals((-1213), tiffField0.getTag());
      assertEquals((-1213), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2815), (-1976), fieldTypeAscii0.DOUBLE, 1L, 0L, byteArray0, byteOrder0, 1316);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3157), (byte)0, fieldTypeDouble0, (byte)0, 4712L, byteArray0, byteOrder0, (-975));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xfffff3ab)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4712, tiffField0.getOffset());
      assertEquals((-975), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-2815), fieldTypeAscii0, 1661L, 0, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2145034977, "");
      TiffField tiffField0 = new TiffField(2145034977, (-1), fieldTypeRational0, 45040L, 4L, byteArray0, byteOrder0, (byte)47);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1538, 1538, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).SLONG).FLOAT, 3512, 3512, byteArray0, byteOrder0, 3512);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3512, tiffField0.getOffset());
      assertEquals(1538, tiffField0.getTag());
      assertEquals(3512, tiffField0.getSortHint());
      assertEquals(1538, tiffField0.getDirectoryType());
      assertEquals(14048, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(3512L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1960), "_]n22:7'-DQlboaPvF");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)47, (byte)47, fieldTypeFloat0, (byte)65, (-1960), byteArray0, byteOrder0, 2073432487);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[78];
      TiffField tiffField0 = new TiffField(133, (byte) (-42), fieldTypeFloat0.BYTE, 216L, 0L, byteArray0, byteOrder0, 35);
      String string0 = tiffField0.toString();
      assertEquals("133 (0x85: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (78) (216 Byte)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getDirectoryType());
      assertEquals(216, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-2044), 4277, fieldTypeAscii0.DOUBLE, (byte)27, (byte)107, byteArray0, byteOrder0, (-2868));
      String string0 = tiffField0.getValueDescription();
      assertEquals(216, tiffField0.getBytesLength());
      assertEquals(27L, tiffField0.getCount());
      assertEquals((-2868), tiffField0.getSortHint());
      assertEquals((-2044), tiffField0.getTag());
      assertEquals(107, tiffField0.getOffset());
      assertEquals(4277, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(37394);
      BufferedWriter bufferedWriter0 = new BufferedWriter(charArrayWriter0, 736);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedWriter0);
      TiffField tiffField0 = new TiffField((byte)43, (byte)47, fieldTypeByte0, 2145203941, (byte)43, byteArray0, byteOrder0, (byte)43);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(50, charArrayWriter0.size());
      assertEquals("43 (0x2b: Unknown Tag): 0, 0, 0 (2145203941 Byte)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3512, 3512, fieldTypeShort0.IFD, 3512, 3512, byteArray0, byteOrder0, 3512);
      String string0 = tiffField0.toString();
      assertEquals(14048, tiffField0.getBytesLength());
      assertEquals("3512 (0xdb8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (3512 IFD)", string0);
      assertEquals(3512, tiffField0.getOffset());
      assertEquals(3512, tiffField0.getDirectoryType());
      assertEquals(3512, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((-1173), 1998, fieldTypeAscii0.SLONG, 2102L, (-2511L), byteArray0, byteOrder0, 14);
      String string0 = tiffField0.toString();
      assertEquals(8408, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-2511), tiffField0.getOffset());
      assertEquals("-1173 (0xfffffb6b: Unknown Tag): 0, 0, 0, 0 (2102 SLong)", string0);
      assertEquals(1998, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1168), 931, fieldTypeFloat0.SSHORT, 931, (-2531L), byteArray0, byteOrder0, 931);
      String string0 = tiffField0.toString();
      assertEquals(1862, tiffField0.getBytesLength());
      assertEquals(931, tiffField0.getDirectoryType());
      assertEquals((-2531), tiffField0.getOffset());
      assertEquals(931, tiffField0.getSortHint());
      assertEquals("-1168 (0xfffffb70: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (931 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2593, fieldTypeAscii0.SHORT, 459L, 698L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField((byte)87, 3, fieldTypeByte0.ASCII, 804L, (byte)0, byteArray0, byteOrder0, (-2114));
      tiffField0.toString();
      assertEquals(804L, tiffField0.getCount());
      assertEquals(804, tiffField0.getBytesLength());
      assertEquals((-2114), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(87, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)47, 0, fieldTypeAscii0, 1234L, 2648L, byteArray0, byteOrder0, (byte)47);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)82, 1962, fieldTypeByte0, 1L, (byte) (-115), byteArray0, byteOrder0, 522);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1962, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(522, tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(82, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1213), (-2815), fieldTypeAscii0, 1L, (-1213), byteArray0, byteOrder0, (-1213));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1213), tiffField0.getSortHint());
      assertEquals((-1213), tiffField0.getTag());
      assertEquals((-1213), tiffField0.getOffset());
      assertEquals((-2815), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-410), (-422), fieldTypeRational0, 191, 1L, byteArray0, byteOrder0, (-410));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1926, 1926);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-410), tiffField0.getTag());
      assertEquals((-410), tiffField0.getSortHint());
      assertEquals(1528, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals((-422), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(191L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(4, (-3196), fieldTypeAscii0.SLONG, 4L, 4, byteArray0, (ByteOrder) null, (byte)34);
      tiffField0.getFieldTypeName();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-3196), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2840), 432, fieldTypeAscii0.UNDEFINED, 1L, 432, byteArray0, byteOrder0, 658);
      int int0 = tiffField0.getOffset();
      assertEquals(432, tiffField0.getDirectoryType());
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(432, int0);
      assertEquals((-2840), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeByte0.ASCII, 0L, 0L, byteArray0, byteOrder0, (-1164));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1164), tiffField0.getSortHint());
      assertEquals((-4), int0);
      assertEquals((-4), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1131, 0, fieldTypeDouble0, 1131, 1131, byteArray0, (ByteOrder) null, 50);
      tiffField0.dump();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1131, tiffField0.getOffset());
      assertEquals(1131L, tiffField0.getCount());
      assertEquals(1131, tiffField0.getTag());
      assertEquals(9048, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3460, (-4), fieldTypeByte0, 981L, 3460, byteArray0, byteOrder0, (-1610612735));
      int int0 = tiffField0.getSortHint();
      assertEquals(981L, tiffField0.getCount());
      assertEquals(3460, tiffField0.getTag());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(3460, tiffField0.getOffset());
      assertEquals((-1610612735), int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2840), 432, fieldTypeAscii0.UNDEFINED, 1L, 432, byteArray0, byteOrder0, 658);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(658, tiffField0.getSortHint());
      assertEquals(432, tiffField0.getOffset());
      assertEquals("-2840 (0xfffff4e8: Unknown Tag): ", string0);
      assertEquals(432, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1213), (-1213), fieldTypeAscii0, 4496L, (-61L), byteArray0, byteOrder0, 48129);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2145034977, "");
      TiffField tiffField0 = new TiffField(2145034977, (-1), fieldTypeRational0, 45040L, 4L, byteArray0, byteOrder0, (byte)47);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(360320, tiffField0.getBytesLength());
      assertEquals(2145034977, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(45040L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "OpcodeList3");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1952, (byte)1, fieldTypeAscii0, 255L, 1952, byteArray0, byteOrder0, 2146372114);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2073432487, (byte)50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(2146372114, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: OpcodeList3", string0);
      assertEquals(1952, tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1952, tiffField0.getOffset());
      assertNotNull(string0);
  }
}
