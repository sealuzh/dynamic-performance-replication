/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:24:08 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;
import org.xmlpull.v1.XmlPullParser;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression("pxeh$");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Component component0 = dynamicSelectModel0.getComponent();
      assertNull(component0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection(";)<");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration("<&Gh");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression <&Gh.values() evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.label("VRV/");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection(";)<");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      int int0 = XmlPullParser.IGNORABLE_WHITESPACE;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[] from ");
      dynamicSelectModel1.translateValue("[] from ");
      int int1 = XmlPullParser.DOCDECL;
      LinkedList<MockJapaneseDate> linkedList0 = new LinkedList<MockJapaneseDate>();
      dynamicSelectModel0.validate();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      dynamicSelectModel1.value("[] from ");
      dynamicSelectModel0.reset();
      dynamicSelectModel2.translateValue("[] from ");
      dynamicSelectModel2.collection("[] from ");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("[] from ");
      String string0 = "org.mvel.util.FastList@0000000057";
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000057");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(52);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      int int0 = XmlPullParser.IGNORABLE_WHITESPACE;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[] from ");
      Object object0 = new Object();
      int int1 = XmlPullParser.DOCDECL;
      LinkedList<MockJapaneseDate> linkedList0 = new LinkedList<MockJapaneseDate>();
      dynamicSelectModel0.validate();
      Object object1 = new Object();
      dynamicSelectModel1.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel1.getObjects();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty(dynamicSelectModel0);
      dynamicSelectModel1.setTopLevelComponent((StandaloneComponent) null);
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.value("[] from ");
      dynamicSelectModel3.setComponent((Component) null);
      dynamicSelectModel0.reset();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel3.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel2.translateValue("org.mvel.util.FastList@0000000085");
      dynamicSelectModel2.translator("[] from ");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("org.mvel.util.FastList@0000000085");
      dynamicSelectModel0.getOptionCount();
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000057");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(52);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
