/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:33:33 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;
import java.io.PushbackInputStream;
import java.math.BigDecimal;
import java.nio.charset.CodingErrorAction;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^8", 36);
      String string0 = jSONReaderScanner0.subString(36, 36);
      assertEquals('^', jSONReaderScanner0.getCurrent());
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TODO");
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals('T', jSONReaderScanner0.getCurrent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 3361);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZE|Cg*c/n 7(+I]_4\"f");
      char char0 = jSONReaderScanner0.charAt(592);
      assertFalse(jSONReaderScanner0.isEOF());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 119);
      jSONReaderScanner0.sub_chars(119, 119);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+Ue0`1<Q\"m", 510);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-440), (-633));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -633
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[10];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2375, 2375);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(117, charArray0, (-461), (-461));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '\u0000');
      jSONReaderScanner0.bytesValue();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 220, 220);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 26, 26);
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 5, 5);
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-z<8,nQ|`h~G8x");
      jSONReaderScanner0.close();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 3361);
      jSONReaderScanner0.indexOf('x', 2274);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("`EB(H=I[yQ");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"mhb(b*/$_?':gS");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZE|Cg*c/ 7(+I]_4\"f");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol((-162), (-162), (-162), (SymbolTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 7);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(20, (-510));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -510
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 26, 26);
      jSONReaderScanner0.longValue();
      char char0 = JSONLexer.EOI;
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.indexOf('\u001A', 70);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = JSONLexerBase.digits;
      int[] intArray1 = JSONLexerBase.digits;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("f^Eos[");
      jSONReaderScanner0.indexOf('3', 2510);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZV|Cg*c/n 7(+I]_4\"f");
      jSONReaderScanner0.bytesValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("~%p");
      int int0 = 2510;
      jSONReaderScanner0.sub_chars(0, 0);
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZE|Cg*c/n 7(+I]_4\"f");
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("9(55");
      jSONReaderScanner0.np = (-891);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[3];
      char[] charArray1 = new char[6];
      charArray1[3] = 'K';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 72, 1100);
      jSONReaderScanner0.matchField(charArray1);
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("EOF error");
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.nextIdent();
      int[] intArray0 = JSONLexerBase.digits;
      jSONReaderScanner0.next();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = '^';
      charArray0[2] = ']';
      charArray0[3] = 'E';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 68);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZE|Cg*c/n 7(+I]_4\"f");
      jSONReaderScanner0.isEOF();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte) (-57);
      byteArray0[5] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(inputStreamReader0);
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner0.next();
      jSONReaderScanner0.next();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = ')';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 23);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 23);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)26);
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(inputStreamReader0);
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-110);
      byteArray0[7] = (byte) (-11);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(inputStreamReader0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ZE|Cg*c/n 7(+I]_4\"f");
      jSONReaderScanner0.isEOF();
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[2] = 'p';
      charArray0[3] = 'm';
      charArray0[4] = 'B';
      charArray0[5] = '6';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 48);
      jSONReaderScanner1.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte byte0 = (byte) (-110);
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, uTF8Decoder0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(inputStreamReader0, (byte)0);
      jSONReaderScanner0.scanString();
      jSONReaderScanner0.stringVal();
      BigDecimal bigDecimal0 = new BigDecimal((int) byte0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)83);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(inputStreamReader0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[8] = 'A';
      charArray0[5] = 'A';
      charArray0[6] = 'A';
      charArray0[7] = 'A';
      charArray0[8] = 'A';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16384);
      jSONReaderScanner0.sp = 16384;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextIdent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)83;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)48);
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(inputStreamReader0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }
}
