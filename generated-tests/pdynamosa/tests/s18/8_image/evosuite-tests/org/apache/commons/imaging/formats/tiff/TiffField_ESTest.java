/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 04:46:24 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)45;
      TiffField tiffField0 = new TiffField(3, (byte)27, fieldTypeShort0, 4035L, (byte)45, byteArray0, (ByteOrder) null, 50715);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3, tiffField0.getTag());
      assertEquals(50715, tiffField0.getSortHint());
      assertEquals(8070, tiffField0.getBytesLength());
      assertEquals(45, int0);
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)67;
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(8, 65533, fieldTypeRational0, 65533, 65533, byteArray0, byteOrder0, (-1408));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65533, tiffField0.getDirectoryType());
      assertEquals(524264, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getTag());
      assertEquals(1559, int0);
      assertEquals(65533, tiffField0.getOffset());
      assertEquals((-1408), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(8, 65533, fieldTypeRational0, 65533, 65533, byteArray0, byteOrder0, (-1408));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1408), tiffField0.getSortHint());
      assertEquals(65533, tiffField0.getOffset());
      assertEquals(8, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(65533, tiffField0.getDirectoryType());
      assertEquals(524264, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 65535, fieldTypeLong0, 1L, 4L, byteArray0, byteOrder0, 4);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0, 0L, (-290), byteArray0, byteOrder0, (-290));
      tiffField0.dump();
      assertEquals((-290), tiffField0.getTag());
      assertEquals((-290), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals((-290), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(601, "NbE=HGm`(/Nz#c");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1135), fieldTypeRational0, 1282, (-1789L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1135), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(10256, tiffField0.getBytesLength());
      assertEquals("", string0);
      assertEquals((-1789), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(273, 273, fieldTypeShort0, 90L, (-16352L), byteArray0, byteOrder0, (byte) (-71));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(273, tiffField0.getTag());
      assertEquals((-16352), tiffField0.getOffset());
      assertEquals(273, tiffField0.getDirectoryType());
      assertEquals((-71), tiffField0.getSortHint());
      assertEquals(273, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (-3096), (FieldType) null, 232L, 911L, byteArray0, byteOrder0, (-3472));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(911, tiffField0.getOffset());
      assertEquals((-3472), tiffField0.getSortHint());
      assertEquals((-3096), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-28), fieldTypeLong0, 3555L, (byte)27, byteArray0, byteOrder0, (byte) (-28));
      int int0 = tiffField0.getTag();
      assertEquals((-28), tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-28), tiffField0.getDirectoryType());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1425, "i(f1X;HbL");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-885), 1425, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (-4321));
      String string0 = tiffField0.getStringValue();
      assertEquals((-885), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-4321), tiffField0.getSortHint());
      assertEquals(1425, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(3221);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 3221, (FieldType) null, 0L, 1711L, byteArray0, byteOrder0, (byte)40);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(40, int0);
      assertEquals(1711, tiffField0.getOffset());
      assertEquals(3221, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-428), "");
      TiffField tiffField0 = new TiffField(2045222521, 2147217442, fieldTypeAscii0, 87, 87, byteArray0, byteOrder0, (-1509));
      int int0 = tiffField0.getSortHint();
      assertEquals(2045222521, tiffField0.getTag());
      assertEquals(2147217442, tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getOffset());
      assertEquals((-1509), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(334, 334, fieldTypeByte0, 0L, (-8589934592L), byteArray0, byteOrder0, (byte)29);
      tiffField0.getOffset();
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(334, tiffField0.getDirectoryType());
      assertEquals(334, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "MaxApertureValue");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(58, 1908, fieldTypeByte0, 58, 2498L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2498, int0);
      assertEquals(58, tiffField0.getTag());
      assertEquals(1908, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-13);
      TiffField tiffField0 = new TiffField(2394, (byte) (-13), fieldTypeLong0, (byte)27, (byte) (-28), byteArray0, (ByteOrder) null, (-1306));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2394, tiffField0.getTag());
      assertEquals((-28), tiffField0.getOffset());
      assertEquals((-1306), tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-28);
      TiffField tiffField0 = new TiffField((byte) (-28), (byte) (-28), fieldTypeLong0, 3513L, (byte) (-28), byteArray0, (ByteOrder) null, (byte)102);
      tiffField0.getIntValueOrArraySum();
      assertEquals(14052, tiffField0.getBytesLength());
      assertEquals((-28), tiffField0.getOffset());
      assertEquals((-28), tiffField0.getDirectoryType());
      assertEquals((-28), tiffField0.getTag());
      assertEquals(102, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(510, 510, fieldTypeShort0, 1L, (-390L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-390), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(510, tiffField0.getTag());
      assertEquals(510, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "J1hXK}i+.");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-56);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2448, 0, fieldTypeByte0, 1L, 2448, byteArray0, byteOrder0, (byte) (-107));
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2448, tiffField0.getTag());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2448, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), (String) null);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, (-114), fieldTypeRational0, 2012L, 213L, byteArray0, (ByteOrder) null, 2307);
      tiffField0.getFieldTypeName();
      assertEquals(2307, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals(213, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1717986917), "");
      TiffField tiffField0 = new TiffField((byte) (-122), 34735, fieldTypeDouble0, (byte)55, (-290), byteArray0, byteOrder0, 145);
      tiffField0.getFieldTypeName();
      assertEquals((-122), tiffField0.getTag());
      assertEquals((-290), tiffField0.getOffset());
      assertEquals(34735, tiffField0.getDirectoryType());
      assertEquals(145, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(376, 376, (FieldType) null, 376, 1135L, byteArray0, byteOrder0, 37);
      tiffField0.getFieldType();
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(376, tiffField0.getTag());
      assertEquals(1135, tiffField0.getOffset());
      assertEquals(376, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "J1hXK}i+.");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2448, 0, fieldTypeByte0, 1L, 2448, byteArray0, byteOrder0, (byte) (-107));
      tiffField0.getFieldType();
      assertEquals(2448, tiffField0.getOffset());
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(2448, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1965, 1965, fieldTypeByte0, 1965, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals(1965, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1965, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40960, 14, fieldTypeLong0, 1L, (-1509), byteArray0, byteOrder0, (-1688));
      tiffField0.getDoubleValue();
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(40960, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1688), tiffField0.getSortHint());
      assertEquals((-1509), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(510, 510, fieldTypeShort0, 1L, (-390L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-390), tiffField0.getOffset());
      assertEquals(510, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "J1hXK}i+.");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-56);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2448, 0, fieldTypeByte0, 1L, 2448, byteArray0, byteOrder0, (byte) (-107));
      tiffField0.getDoubleValue();
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(2448, tiffField0.getOffset());
      assertEquals(2448, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(14, 0, fieldTypeShort0, (-2147125554), 0, byteArray0, byteOrder0, 14);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(14, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 131, fieldTypeLong0, 0L, (-1549L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals(131, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0, 0L, (-290), byteArray0, byteOrder0, (-290));
      tiffField0.getCount();
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals((-290), tiffField0.getOffset());
      assertEquals((-290), tiffField0.getTag());
      assertEquals((-290), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-28), fieldTypeLong0, 3555L, (byte)27, byteArray0, byteOrder0, (byte) (-28));
      tiffField0.getCount();
      assertEquals((-28), tiffField0.getDirectoryType());
      assertEquals((-28), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1940), (-1940), fieldTypeFloat0, 0L, (-15784L), byteArray0, byteOrder0, (byte)98);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1940), tiffField0.getDirectoryType());
      assertEquals((-1940), tiffField0.getTag());
      assertEquals(98, tiffField0.getSortHint());
      assertEquals((-15784), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)110, (byte)110, fieldTypeLong0, (-1498L), (-3734L), byteArray0, byteOrder0, (byte)110);
      int int0 = tiffField0.getBytesLength();
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals(110, tiffField0.getSortHint());
      assertEquals((-3734), tiffField0.getOffset());
      assertEquals(110, tiffField0.getTag());
      assertEquals((-5992), int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(391, 391, fieldTypeShort0, 391, 391, byteArray0, (ByteOrder) null, 391);
      tiffField0.getByteOrder();
      assertEquals(391, tiffField0.getTag());
      assertEquals(391, tiffField0.getDirectoryType());
      assertEquals(391, tiffField0.getSortHint());
      assertEquals(391, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0.SSHORT, 4L, 0L, byteArray0, byteOrder0, 4);
      tiffField0.getByteArrayValue();
      assertEquals((-290), tiffField0.getDirectoryType());
      assertEquals((-290), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4, "-OO#");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, (-331), fieldTypeRational0, 2654L, (-1647L), byteArray0, byteOrder0, 2944);
      MockFile mockFile0 = new MockFile("-OO#", "-8");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "-OO#");
      assertEquals((-1647), tiffField0.getOffset());
      assertEquals((-331), tiffField0.getDirectoryType());
      assertEquals(21232, tiffField0.getBytesLength());
      assertEquals(42L, mockFile0.length());
      assertEquals(2944, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)1, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(657, 657, (FieldType) null, 0L, (-1099L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1337, 3338, fieldTypeShort0, (-2873L), (byte)11, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 2167L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), 34850, fieldTypeByte0, (-680L), (-2147125554), byteArray0, byteOrder0, (-290));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-133), (-133), (FieldType) null, (-1L), (-133), byteArray0, byteOrder0, (-133));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(376, 376, (FieldType) null, 376, 1135L, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-627), fieldTypeLong0, (-2176L), (byte)73, byteArray0, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-428), "");
      TiffField tiffField0 = new TiffField(2045222521, 2147217442, fieldTypeAscii0, 87, 87, byteArray0, byteOrder0, (-1509));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), 718, fieldTypeLong0, (-94L), 1L, byteArray0, byteOrder0, (-2060));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 65535, (FieldType) null, 1, (-1L), byteArray0, (ByteOrder) null, 1282);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34737, (-1), fieldTypeShort0, (-49L), (-49L), byteArray0, byteOrder0, 1294);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2), (-290), (FieldType) null, 1, 3287L, byteArray0, byteOrder0, (-2147125554));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2231, 50724, (FieldType) null, 784L, 50724, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1950), 50, fieldTypeByte0, (-1950), (byte)73, byteArray0, byteOrder0, (byte)73);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 65535, (FieldType) null, 1, (-1L), byteArray0, (ByteOrder) null, 1282);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2147479551, (-1509), fieldTypeShort0, (-1L), 14, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 848, fieldTypeFloat0, 4L, 848, byteArray0, byteOrder0, 37388);
      tiffField0.getByteOrder();
      assertEquals(37388, tiffField0.getSortHint());
      assertEquals(848, tiffField0.getTag());
      assertEquals(848, tiffField0.getOffset());
      assertEquals(848, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0, 0L, (-290), byteArray0, byteOrder0, (-290));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-290), tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals((-290), tiffField0.getTag());
      assertEquals((-290), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-428), "");
      TiffField tiffField0 = new TiffField(2045222521, 2147217442, fieldTypeAscii0, 87, 87, byteArray0, byteOrder0, (-1509));
      tiffField0.getFieldType();
      assertEquals(2045222521, tiffField0.getTag());
      assertEquals(2147217442, tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getOffset());
      assertEquals((-1509), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2), (-290), (FieldType) null, 1, 3287L, byteArray0, byteOrder0, (-2147125554));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-290), int0);
      assertEquals((-2147125554), tiffField0.getSortHint());
      assertEquals(3287, tiffField0.getOffset());
      assertEquals((-2), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1982292598, (-14), fieldTypeByte0, 1982292598, (byte)73, byteArray0, byteOrder0, 691);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1965, 1965, fieldTypeByte0, 1965, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getValue();
      assertEquals(1965, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1965, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1965, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1321), fieldTypeRational0, 6008L, 2147483647L, byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-1321), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), 34850, fieldTypeByte0, (-680L), (-2147125554), byteArray0, byteOrder0, (-290));
      int int0 = tiffField0.getTag();
      assertEquals((-290), int0);
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals(34850, tiffField0.getDirectoryType());
      assertEquals((-2147125554), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-2292), 1723, fieldTypeFloat0, (-2718), (-2718), byteArray0, byteOrder0, (-2718));
      tiffField0.getCount();
      assertEquals(1723, tiffField0.getDirectoryType());
      assertEquals((-2718), tiffField0.getSortHint());
      assertEquals((-2718), tiffField0.getOffset());
      assertEquals((-2292), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 848, fieldTypeFloat0, 4L, 848, byteArray0, byteOrder0, 37388);
      int int0 = tiffField0.getBytesLength();
      assertEquals(848, tiffField0.getDirectoryType());
      assertEquals(16, int0);
      assertEquals(37388, tiffField0.getSortHint());
      assertEquals(848, tiffField0.getTag());
      assertEquals(848, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1425, "i(f1X;HbL");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1425, fieldTypeAscii0, 1425, (byte)95, byteArray0, byteOrder0, (-4248));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1425, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(95, tiffField0.getOffset());
      assertEquals((-4248), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 34735, fieldTypeDouble0.LONG, 954, (-38224L), byteArray0, byteOrder0, (-1182));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(191, "Oce Application Selector");
      TiffField tiffField0 = new TiffField(191, 191, fieldTypeFloat0, 1L, 5893L, byteArray0, byteOrder0, 191);
      tiffField0.getIntValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(5893, tiffField0.getOffset());
      assertEquals(191, tiffField0.getTag());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals(191, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50719, (-851), fieldTypeByte0, 852L, (-1268L), byteArray0, (ByteOrder) null, (byte) (-28));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@62341636 for: 50719 (0xc61f: DefaultCropOrigin): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-97), (byte) (-97), fieldTypeRational0, 3L, (byte) (-97), byteArray0, (ByteOrder) null, (byte) (-97));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2530), 50729, fieldTypeRational0.SBYTE, 1L, (-1336L), byteArray0, byteOrder0, (-3062));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3062), tiffField0.getSortHint());
      assertEquals((-2530), tiffField0.getTag());
      assertEquals(50729, tiffField0.getDirectoryType());
      assertEquals((-1336), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-458), "bi");
      TiffField tiffField0 = new TiffField((-1509), (-458), fieldTypeDouble0, 325L, (-458), byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-458), tiffField0.getDirectoryType());
      assertEquals(2600, tiffField0.getBytesLength());
      assertEquals((-1509), tiffField0.getTag());
      assertEquals((-458), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[198];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeDouble0.FLOAT, 954, 954, byteArray0, byteOrder0, 954);
      tiffField0.getDoubleArrayValue();
      assertEquals(954, tiffField0.getSortHint());
      assertEquals(954, tiffField0.getTag());
      assertEquals(954, tiffField0.getDirectoryType());
      assertEquals(3816, tiffField0.getBytesLength());
      assertEquals(954, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(341, 6, fieldTypeLong0, 1089L, 6, byteArray0, byteOrder0, 6);
      tiffField0.getDoubleArrayValue();
      assertEquals(341, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(4356, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-13), (-198), fieldTypeShort0, 4035L, 1L, byteArray0, (ByteOrder) null, 32898);
      tiffField0.getDoubleArrayValue();
      assertEquals((-198), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(32898, tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getTag());
      assertEquals(8070, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0.SHORT, 4L, 0L, byteArray0, byteOrder0, 4);
      tiffField0.getDoubleArrayValue();
      assertEquals((-290), tiffField0.getTag());
      assertEquals((-290), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-97), 1282, fieldTypeRational0, 3L, 1282, byteArray0, (ByteOrder) null, 1282);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1282, tiffField0.getSortHint());
      assertEquals((-97), tiffField0.getTag());
      assertEquals(1282, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(1282, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146532170, 50, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2146532170, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 50, fieldTypeByte0, 4, (-290), byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7b372d76 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)73, 1862, fieldTypeByte0, 492L, (-1L), byteArray0, byteOrder0, 2633);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@53bf5aa6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-13), (-198), fieldTypeShort0, 4035L, 1L, byteArray0, (ByteOrder) null, 32898);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-198), tiffField0.getDirectoryType());
      assertEquals((-13), tiffField0.getTag());
      assertEquals(32898, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(8070, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0.SSHORT, 4L, 0L, byteArray0, byteOrder0, 4);
      tiffField0.getIntArrayValue();
      assertEquals((-290), tiffField0.getDirectoryType());
      assertEquals((-290), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2146276517), (-2146973313), fieldTypeRational0, 4L, 1L, byteArray0, byteOrder0, (-2146973313));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146276517), (-2146276517), fieldTypeByte0.SRATIONAL, 1802L, 1802L, byteArray0, byteOrder0, (-2146276517));
      tiffField0.getIntArrayValue();
      assertEquals(1802, tiffField0.getOffset());
      assertEquals((-2146276517), tiffField0.getDirectoryType());
      assertEquals((-2146276517), tiffField0.getSortHint());
      assertEquals(14416, tiffField0.getBytesLength());
      assertEquals((-2146276517), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(848, 3629, fieldTypeFloat0, 1L, (byte)127, byteArray0, byteOrder0, 781);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(848, tiffField0.getTag());
      assertEquals(781, tiffField0.getSortHint());
      assertEquals(3629, tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(341, 6, fieldTypeLong0, 1089L, 6, byteArray0, byteOrder0, 6);
      tiffField0.getIntArrayValue();
      assertEquals(1089L, tiffField0.getCount());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(341, tiffField0.getTag());
      assertEquals(4356, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)115;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)98;
      TiffField tiffField0 = new TiffField(1, 45, fieldTypeAscii0, 2446L, 2176L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getStringValue();
      assertEquals(2176, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(2446, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0, 0L, (-290), byteArray0, byteOrder0, (-290));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@46914034
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(14, 0, fieldTypeShort0, (-2147125554), 0, byteArray0, byteOrder0, 14);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xe)", string0);
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-1252), fieldTypeFloat0, (-1252), 1, byteArray0, byteOrder0, 2188);
      String string0 = tiffField0.getTagName();
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-1252), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2188, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte)73, fieldTypeByte0, (byte)73, (byte)73, byteArray0, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeDouble0.FLOAT, 103, 103, byteArray0, byteOrder0, 103);
      String string0 = tiffField0.getValueDescription();
      assertEquals(103, tiffField0.getDirectoryType());
      assertEquals(103L, tiffField0.getCount());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54)", string0);
      assertEquals(103, tiffField0.getTag());
      assertEquals(103, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[182];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeDouble0.FLOAT, 954, 954, byteArray0, byteOrder0, 954);
      String string0 = tiffField0.getValueDescription();
      assertEquals(954, tiffField0.getDirectoryType());
      assertEquals(954, tiffField0.getSortHint());
      assertEquals(954, tiffField0.getTag());
      assertEquals(3816, tiffField0.getBytesLength());
      assertEquals(954, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(954L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeByte0, 326, 326, byteArray0, byteOrder0, 326);
      String string0 = tiffField0.toString();
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals("326 (0x146: BadFaxLines): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (326 Undefined)", string0);
      assertEquals(326, tiffField0.getBytesLength());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(326, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 131, fieldTypeLong0, 0L, (-1549L), byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(131, tiffField0.getDirectoryType());
      assertEquals((-1549), tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag):  (0 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50, 34735, fieldTypeDouble0.SLONG, 954, (-38224L), byteArray0, byteOrder0, (-1182));
      String string0 = tiffField0.getValueDescription();
      assertEquals(3816, tiffField0.getBytesLength());
      assertEquals(954L, tiffField0.getCount());
      assertEquals((-38224), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(34735, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1182), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeShort0, 1224L, 2361L, byteArray0, byteOrder0, (-3880));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1224L, tiffField0.getCount());
      assertEquals((-3880), tiffField0.getSortHint());
      assertEquals(26, tiffField0.getTag());
      assertEquals(2361, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2448, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(297, 297, fieldTypeShort0, 297, 297, byteArray0, byteOrder0, 297);
      String string0 = tiffField0.toString();
      assertEquals(297, tiffField0.getOffset());
      assertEquals(297, tiffField0.getDirectoryType());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals("297 (0x129: PageNumber): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (297 SShort)", string0);
      assertEquals(594, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 2822, fieldTypeShort0.ASCII, 4950, 3566L, byteArray0, byteOrder0, 3855);
      tiffField0.toString();
      assertEquals(2822, tiffField0.getDirectoryType());
      assertEquals(3566, tiffField0.getOffset());
      assertEquals(4950, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getTag());
      assertEquals(3855, tiffField0.getSortHint());
      assertEquals(4950L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 4, fieldTypeDouble0, 8L, (-1717986917), byteArray0, byteOrder0, (-1717986917));
      String string0 = tiffField0.toString();
      assertEquals("-1717986917 (0x9999999b: Unknown Tag): 0.0, 0.0 (8 Double)", string0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)115;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)98;
      TiffField tiffField0 = new TiffField(1, 45, fieldTypeAscii0, 2446L, 2176L, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(2446L, tiffField0.getCount());
      assertEquals(2446, tiffField0.getBytesLength());
      assertEquals(2176, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2530), 50729, fieldTypeRational0.SBYTE, 1L, (-1336L), byteArray0, byteOrder0, (-3062));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1336), tiffField0.getOffset());
      assertEquals((-2530), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-3062), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(50729, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1069, "'NHU: $1U'");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1069, 1069, fieldTypeFloat0, (-544L), 0L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(1069, tiffField0.getTag());
      assertEquals((-544L), tiffField0.getCount());
      assertEquals(1069, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(848, 848, fieldTypeFloat0, 4L, 848, byteArray0, byteOrder0, 37388);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(37388, tiffField0.getSortHint());
      assertEquals(848, tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals(848, tiffField0.getDirectoryType());
      assertEquals(848L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)102, fieldTypeLong0, (byte)115, 1L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(686, 2251);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(102, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(460, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42113, (-290), fieldTypeByte0, 3888L, (-290), byteArray0, byteOrder0, (-290));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals((-290), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(42113, tiffField0.getTag());
      assertEquals((-290), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(191, "Oce Application Selector");
      TiffField tiffField0 = new TiffField(191, 191, fieldTypeFloat0, 1L, 5893L, byteArray0, byteOrder0, 191);
      tiffField0.getFieldTypeName();
      assertEquals(5893, tiffField0.getOffset());
      assertEquals(191, tiffField0.getTag());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals(191, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-290), (-290), fieldTypeByte0, 0L, (-290), byteArray0, byteOrder0, (-290));
      int int0 = tiffField0.getOffset();
      assertEquals((-290), tiffField0.getTag());
      assertEquals((-290), int0);
      assertEquals((-290), tiffField0.getDirectoryType());
      assertEquals((-290), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-458), "bi");
      TiffField tiffField0 = new TiffField((-1509), (-458), fieldTypeDouble0, 325L, (-458), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1509), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-458), tiffField0.getOffset());
      assertEquals((-458), tiffField0.getDirectoryType());
      assertEquals(2600, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1321), fieldTypeRational0, 6008L, 2147483647L, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.toString();
      assertEquals((-1321), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (6008 SRational)", string0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(89, "Interlace");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(89, (byte) (-97), fieldTypeFloat0, 1L, 1282, byteArray0, (ByteOrder) null, 89);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)115, (byte)0, fieldTypeByte0.RATIONAL, (-1973), (byte)0, (byte[]) null, byteOrder0, 2);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2, (-2119594248));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(115, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1973L), tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(2, tiffField0.getSortHint());
  }
}
