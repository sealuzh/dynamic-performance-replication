/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 00:38:32 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PrintWriter;
import java.io.PushbackReader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOUtils.getStringProperty(";zZ OsTm");
      IOUtils.stringSize((-2255));
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1646), (-1646), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "#U??:FQiP#-K6";
      int int0 = 0;
      IOUtils.decodeBase64("#U??:FQiP#-K6", 0, 0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'v';
      charArray0[1] = '\'';
      charArray0[2] = ' ';
      charArray0[3] = '2';
      charArray0[4] = 'x';
      // Undeclared exception!
      try { 
        IOUtils.getChars(955, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1207), (-759));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1967
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils.firstIdentifier('\u00CC');
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 51, 51, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      IOUtils.stringSize(0);
      String string0 = "";
      byte[] byteArray0 = IOUtils.decodeBase64("");
      IOUtils.decodeBase64("");
      IOUtils.isIdent(']');
      IOUtils.loadPropertiesFromFile();
      IOUtils.stringSize(0);
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = ']';
      charArray0[5] = ']';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-1400), (-774), iOUtils0.specicalFlags_singleQuotes);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = IOUtils.stringSize(68);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils.firstIdentifier('\u00A6');
      FileSystemHandling.shouldAllThrowIOExceptions();
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.CA, 1634, 1634, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1634
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char char0 = 'k';
      IOUtils.firstIdentifier('k');
      IOUtils iOUtils0 = new IOUtils();
      CharsetDecoder charsetDecoder0 = null;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("encodeUTF8 error");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      byteBuffer0.asDoubleBuffer();
      byteBuffer0.asFloatBuffer();
      // Undeclared exception!
      try { 
        IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = FLUSHED, new state = CODING_END
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils.firstIdentifier('.');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("fastjson.properties", 12, (-1207));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("GTgg?N$");
      assertArrayEquals(new byte[] {(byte)25, (byte)56, (byte)32, (byte) (-4)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.decodeBase64("TriHH?(b^!(Qj^1_");
      String string0 = "vQ#di-pJ8cU*>g ";
      String string1 = "shx1`RVi{'Miov,";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("vQ#di-pJ8cU*>g ", "shx1`RVi{'Miov,");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // shx1`RVi{'Miov,
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = IOUtils.decodeBase64("UTF-8");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("@");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      boolean boolean0 = IOUtils.firstIdentifier('7');
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("@");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<n;skx$aLQ:,H.C");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("sPhi|G}euC");
      IOUtils.loadPropertiesFromFile();
      StringReader stringReader0 = new StringReader("+<C}JuTdjz5`@%");
      long long0 = 246L;
      char[] charArray0 = new char[4];
      charArray0[0] = '^';
      charArray0[1] = '\\';
      charArray0[2] = 'J';
      charArray0[3] = '_';
      int int0 = 183;
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 183, (-2303));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[3];
      charArray0[1] = '\u008A';
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 228, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "";
      IOUtils.decodeBase64("");
      byte byte0 = (byte)99;
      int int0 = 802;
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = '}';
      charArray0[2] = '>';
      charArray0[3] = '*';
      charArray0[4] = 'V';
      charArray0[5] = '5';
      charArray0[6] = 'x';
      charArray0[7] = 'S';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)99, 802, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 801
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOUtils.stringSize(3217L);
      IOUtils.stringSize(63);
      MockFile mockFile0 = new MockFile("");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      long long0 = 857L;
      char[] charArray0 = new char[1];
      charArray0[0] = 'B';
      // Undeclared exception!
      try { 
        IOUtils.getChars(857L, (-2807), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2808
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        IOUtils.getChars(2463L, 55294, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.firstIdentifier('x');
      IOUtils.loadPropertiesFromFile();
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[2];
      IOUtils.getChars((byte)1, (int) (byte)1, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(1512L, (int) (byte)1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOUtils.stringSize((long) (-15));
      char[] charArray0 = new char[7];
      IOUtils.decodeBase64(charArray0, 1, 1);
      IOUtils.getChars(1, 1, charArray0);
      IOUtils.getChars((long) (-15), 6, charArray0);
      assertArrayEquals(new char[] {'1', '\u0000', '\u0000', '-', '1', '5', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent(',');
      int int0 = IOUtils.stringSize((-1550));
      assertEquals(1, int0);
      
      char[] charArray0 = new char[10];
      charArray0[0] = ',';
      charArray0[1] = ',';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = '0';
      IOUtils.getChars((long) 1, 1, charArray0);
      assertArrayEquals(new char[] {'1', ',', ',', ',', '0', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      
      boolean boolean1 = IOUtils.firstIdentifier('%');
      assertTrue(boolean1 == boolean0);
      
      IOUtils.getStringProperty("9Hm,IGa]2 ");
      IOUtils.loadPropertiesFromFile();
      char[] charArray1 = new char[6];
      charArray1[0] = '1';
      charArray1[1] = '%';
      charArray1[2] = ',';
      charArray1[3] = '0';
      charArray1[4] = '%';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)48;
      int int1 = IOUtils.encodeUTF8(charArray1, (-1533), (-1550), byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      IOUtils.firstIdentifier('');
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.DIGITS, 5, 999);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1003
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      IOUtils.decodeBase64(charArray0, 0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      int int0 = (-424);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1784), (-424));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2209
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      StringReader stringReader0 = new StringReader("Q2pbEl?nwe");
      String string0 = IOUtils.readAll(stringReader0);
      assertEquals("Q2pbEl?nwe", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.getStringProperty("GTgg?N$cvo");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-110);
      byteArray0[4] = (byte) (-64);
      byteArray0[5] = (byte)79;
      byteArray0[6] = (byte)60;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, 25);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      String string0 = IOUtils.readAll(inputStreamReader0);
      assertEquals("\uFFFD\uFFFDO<", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[1];
      charArray0[0] = '';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)45, 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '9';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 0, 0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-78);
      byteArray1[2] = (byte) (-16);
      byteArray1[3] = (byte)76;
      IOUtils.decodeUTF8(byteArray1, (byte) (-16), 0, charArray0);
      IOUtils.stringSize((long) (byte) (-16));
      IOUtils.isValidJsonpQueryParam("2p|ATpES8p:l)a");
      IOUtils.encodeUTF8(charArray0, 23, 0, byteArray0);
      byte[] byteArray2 = IOUtils.decodeBase64("2p|ATpES8p:l)a");
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils.getStringProperty("UTF-8");
      IOUtils.close((Closeable) null);
      char[] charArray0 = new char[1];
      charArray0[0] = '&';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-4329L), (-78), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -79
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Charset charset0 = IOUtils.UTF8;
      CharsetDecoder charsetDecoder0 = charset0.newDecoder();
      ByteBuffer byteBuffer0 = charset0.encode("{`p0J*M>KK");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=10 lim=10 cap=11]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onMalformedInput(codingErrorAction0);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
      assertEquals("", charBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.loadPropertiesFromFile();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("com.alibaba.fastjson.JSONException");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('x');
      assertTrue(boolean0);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = 'x';
      charArray0[7] = 'x';
      IOUtils.getChars((byte)113, 3, charArray0);
      assertArrayEquals(new char[] {'1', '1', '3', 'x', 'x', 'x', 'x', 'x'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils.getStringProperty("_");
      char[] charArray0 = new char[9];
      charArray0[0] = 'D';
      charArray0[1] = ')';
      charArray0[2] = 'D';
      charArray0[3] = 'U';
      charArray0[4] = '`';
      charArray0[5] = 'u';
      charArray0[6] = 'D';
      charArray0[7] = '#';
      charArray0[8] = 'X';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-581L), 3, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = "ATbg?f!`}t&<x4ZUJP";
      IOUtils.isValidJsonpQueryParam("ATbg?f!`}t&<x4ZUJP");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.isValidJsonpQueryParam((String) null);
      IOUtils.stringSize(1613L);
      IOUtils.loadPropertiesFromFile();
      char[] charArray0 = new char[6];
      charArray0[0] = 'J';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[1] = '<';
      charArray0[2] = 'Y';
      charArray0[3] = 'I';
      charArray0[4] = 'k';
      charArray0[5] = '4';
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4, 4, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.stringSize((long) (-1630));
      char[] charArray0 = new char[7];
      charArray0[0] = '#';
      char[] charArray1 = new char[8];
      charArray1[0] = '#';
      charArray1[1] = ']';
      charArray1[2] = '#';
      charArray1[3] = 'W';
      charArray1[4] = '#';
      charArray1[5] = '\"';
      charArray1[6] = 'W';
      charArray1[7] = '#';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray1, 1, 144);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 144
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils.getStringProperty(";zZ OsTm");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte) (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = '+';
      IOUtils.decodeUTF8(byteArray0, (byte)4, 598, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(25, (int) (byte) (-1), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-37);
      char[] charArray0 = new char[3];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      assertArrayEquals(new char[] {'\u0004', '\u0000', '\u0000'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      int int0 = IOUtils.stringSize((-581L));
      assertEquals(1, int0);
      
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      assertArrayEquals(new char[] {'\u0004'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      char[] charArray0 = new char[1];
      charArray0[0] = 'D';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 2, 2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[1] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-31);
      char[] charArray0 = new char[2];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      assertArrayEquals(new char[] {'\u0004', '\u0000'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-8);
      byteArray0[6] = (byte) (-8);
      char[] charArray0 = new char[2];
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      assertArrayEquals(new char[] {'\u0004', '\u0000'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = IOUtils.decodeBase64("f:twxt1Vaj\"6A4", 4, 4);
      assertArrayEquals(new byte[] {(byte) (-58), (byte) (-35), (byte)85}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.decodeBase64("I&?m09&{W:.O%Or2r^g", 3, 3);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      charArray0[1] = '|';
      charArray0[2] = 'h';
      charArray0[3] = 'R';
      charArray0[4] = 'Y';
      charArray0[5] = '.';
      charArray0[6] = 'A';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte)17;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 65, 3, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64(">]=Mj%D?ZV-*W<]XS9", 3, 3);
      assertArrayEquals(new byte[] {(byte)50}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = IOUtils.stringSize((long) 4);
      assertEquals(1, int0);
      
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      boolean boolean0 = IOUtils.firstIdentifier('>');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      IOUtils.stringSize(696L);
      IOUtils.getStringProperty("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[6];
      charArray0[0] = 'f';
      charArray0[1] = '$';
      charArray0[2] = 'f';
      charArray0[3] = 'f';
      charArray0[4] = 'f';
      charArray0[5] = '>';
      IOUtils.decodeBase64(charArray0, 3, 3);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1), 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'i';
      charArray0[2] = 'i';
      charArray0[3] = 'i';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 2, 2);
      assertArrayEquals(new byte[] {(byte) (-118)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("I&?m09&{W:.O%Or2r^g", 3, 3);
      assertArrayEquals(new byte[] {(byte) (-101), (byte)79}, byteArray0);
      
      IOUtils.getStringProperty("0_^`Znr&J<q?I#");
      byte[] byteArray1 = IOUtils.decodeBase64("el(hQA3f_ea%lWa0", 4, 4);
      assertArrayEquals(new byte[] {(byte)64, (byte)13, (byte) (-33)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils.getStringProperty("_");
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(62, 62, iOUtils0.CA);
      int int0 = IOUtils.stringSize((-4294L));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.stringSize((long) (-1630));
      IOUtils.getStringProperty("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[3];
      charArray0[0] = '^';
      charArray0[1] = '>';
      charArray0[2] = 'f';
      IOUtils.decodeBase64(charArray0, 1, 1);
      IOUtils.getChars((long) 1, 1, charArray0);
      assertArrayEquals(new char[] {'\u0004', '>', 'f'}, charArray0);
      
      char[] charArray1 = new char[2];
      charArray1[0] = 'f';
      charArray1[1] = '>';
      IOUtils.getChars(1, 1, charArray1);
      assertArrayEquals(new char[] {'\u0004', '>'}, charArray1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")+h");
      IOUtils.firstIdentifier('\u008A');
      IOUtils.isIdent('Z');
      IOUtils.isValidJsonpQueryParam("R>.-V");
      char[] charArray0 = new char[3];
      charArray0[0] = '\u008A';
      charArray0[1] = '\u008A';
      charArray0[2] = '\u008A';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)58;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1, 240, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      IOUtils.stringSize((long) (-1630));
      IOUtils.getStringProperty("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      char[] charArray0 = new char[3];
      charArray0[2] = 'f';
      IOUtils.decodeBase64(charArray0, 1, 1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      IOUtils.getChars((long) 1, 1, charArray0);
      char[] charArray1 = new char[2];
      IOUtils.getChars(1, 1, charArray1);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1630), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IOUtils.getStringProperty(";zZ OsTm");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte) (-17);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-17);
      byteArray0[6] = (byte)4;
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = '+';
      IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      byte[] byteArray1 = IOUtils.specicalFlags_singleQuotes;
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      char[] charArray0 = new char[25];
      charArray0[0] = '{';
      charArray0[1] = '@';
      charArray0[2] = '\\';
      charArray0[3] = '&';
      charArray0[4] = 'p';
      charArray0[5] = 'm';
      charArray0[6] = 'T';
      charArray0[7] = 'h';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 4, 4);
      assertArrayEquals(new byte[] {(byte) (-90), (byte)100, (byte) (-31)}, byteArray0);
      
      int int0 = IOUtils.stringSize(4);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 18, 5);
      assertArrayEquals(new byte[] {(byte) (-45), (byte) (-35), (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = IOUtils.stringSize((long) 4);
      assertEquals(1, int0);
      
      char[] charArray0 = new char[7];
      charArray0[0] = '>';
      byte[] byteArray0 = IOUtils.decodeBase64("}@+iw0A~-=`");
      assertArrayEquals(new byte[] {(byte) (-6), (byte)44, (byte)52, (byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("]=Mj%D?ZV-*W]XS9", 1, 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('\u0104');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte) (-24);
      char[] charArray0 = new char[3];
      charArray0[0] = '*';
      charArray0[1] = '.';
      charArray0[2] = 'E';
      IOUtils.decodeUTF8(byteArray0, 0, (byte)4, charArray0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = IOUtils.isIdent('\u0100');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("BexXjHwqufEh");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils.decodeBase64("BexXjHwqufEh");
      char[] charArray0 = new char[4];
      charArray0[0] = '';
      charArray0[1] = '!';
      charArray0[2] = '-';
      charArray0[3] = '\\';
      int int1 = IOUtils.decodeUTF8(byteArray0, 2, 2, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("BexXjHwqufEh");
      char[] charArray0 = new char[4];
      int int1 = IOUtils.decodeUTF8(byteArray0, 2, 2, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      IOUtils.decodeBase64("BexXjHwqufEh");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("BexXjHwqufEh");
      char[] charArray0 = new char[4];
      int int1 = IOUtils.decodeUTF8(byteArray0, 2, 256, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("BexXjHwqufEh");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[0];
      int int1 = IOUtils.decodeUTF8(byteArray0, 2, 6, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[11];
      charArray0[0] = '>';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte)65;
      byteArray0[6] = (byte) (-43);
      byteArray0[7] = (byte) (-90);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 3, 51, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 18, 78);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("BexXjHwqufEh");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[4];
      charArray0[0] = 'Q';
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = IOUtils.decodeUTF8(byteArray0, 8, 1, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray0);
      assertEquals((-1), int1);
      
      byte[] byteArray1 = IOUtils.decodeBase64("BexXjHwqufEh");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-15), (byte)94, (byte)49, (byte) (-16), (byte) (-86), (byte) (-25), (byte) (-60)}, byteArray1);
  }
}
