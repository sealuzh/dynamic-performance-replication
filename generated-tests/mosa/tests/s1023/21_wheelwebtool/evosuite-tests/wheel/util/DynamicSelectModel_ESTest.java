/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:49:41 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("eYyr\"5I_");
      dynamicSelectModel0.validate();
      assertSame(dynamicSelectModel0, dynamicSelectModel1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(178);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent((Component) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("C88");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression  evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Component component0 = dynamicSelectModel0.getComponent();
      assertNull(component0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("");
      dynamicSelectModel1.collection("");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("StringBuffer");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression StringBuffer evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.OptimizationFailure");
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("[] from ");
      dynamicSelectModel1.getObjects();
      dynamicSelectModel2.getObjects();
      dynamicSelectModel2.getOptionCount();
      System.setCurrentTimeMillis(0L);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.OptimizationFailure");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty("org.mvel.OptimizationFailure");
      dynamicSelectModel2.collection("");
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.collection("[] from ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dynamicSelectModel3.getOptionCount();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel1.label("[] from ");
      // Undeclared exception!
      try { 
        dynamicSelectModel4.translateValue("[] from ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      dynamicSelectModel0.getOptionCount();
      dynamicSelectModel1.label("[] from ");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.value("pF6\"@.E:GG!R~\u0000X*Y/");
      Object object0 = dynamicSelectModel2.translateValue("3");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.OptimizationFailure");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty("org.mvel.OptimizationFailure");
      dynamicSelectModel1.collection("[] from ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("org.mvel.OptimizationFailure");
      dynamicSelectModel3.getOptionCount();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.collection((String) null);
      dynamicSelectModel4.label("Ja3Sy9q\"{g");
      Object object0 = dynamicSelectModel2.translateValue("&_2!d cr\"");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("org.mvel.OptimizationFailure");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.empty("org.mvel.OptimizationFailure");
      dynamicSelectModel0.label("org.mvel.OptimizationFailure");
      dynamicSelectModel2.collection("org.mvel.OptimizationFailure");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.collection("[] from ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel2.value("org.mvel.OptimizationFailure");
      dynamicSelectModel4.getOptionCount();
      dynamicSelectModel3.translator("oxG-_Vch");
      dynamicSelectModel1.collection("5,X@2xb'Qtu8 E#:b2");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("java.lang.Class@0000000032");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression oxG-_Vch to translate value ' java.lang.Class@0000000032'
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }
}
