/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 18:50:48 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-103);
      TiffField tiffField0 = new TiffField((byte) (-103), (byte) (-103), fieldTypeShort0, 1682L, (byte)39, byteArray0, byteOrder0, 274);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(153, int0);
      assertEquals(39, tiffField0.getOffset());
      assertEquals((-103), tiffField0.getDirectoryType());
      assertEquals(274, tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)69;
      byteArray0[6] = (byte)10;
      TiffField tiffField0 = new TiffField(1194, (byte)7, fieldTypeRational0, (byte)7, (byte)7, byteArray0, byteOrder0, 1163);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1163, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(1766, int0);
      assertEquals(1194, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[6] = (byte)10;
      TiffField tiffField0 = new TiffField(1194, (byte)7, fieldTypeRational0, (byte)7, (byte)7, byteArray0, byteOrder0, 1163);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1194, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(1163, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-25), 340, fieldTypeLong0, 1L, (byte) (-25), byteArray0, (ByteOrder) null, (-2647));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-25), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-2647), tiffField0.getSortHint());
      assertEquals(340, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      CharBuffer charBuffer0 = CharBuffer.allocate(5059);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeAscii0.FLOAT, 1L, 1L, byteArray0, byteOrder0, 336);
      String string0 = tiffField0.toString();
      assertEquals(336, tiffField0.getSortHint());
      assertEquals(40091, tiffField0.getDirectoryType());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (1 Float)", string0);
      assertEquals(40091, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)62, 50, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34853, 50255, fieldTypeDouble0.IFD, 34853, 50255, byteArray0, byteOrder0, 50255);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getTag());
      assertEquals(34853, tagInfo0.tag);
      assertEquals(50255, tiffField0.getOffset());
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(50255, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-5527), tiffField0.getSortHint());
      assertEquals((-5527), tiffField0.getDirectoryType());
      assertEquals((-5527), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1591), 0, (FieldType) null, 3021L, (-1591), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-1591), int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1591), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(403, (-771), fieldTypeAscii0, 4154L, 403, byteArray0, byteOrder0, 1473);
      String string0 = tiffField0.getStringValue();
      assertEquals(403, tiffField0.getTag());
      assertEquals((-771), tiffField0.getDirectoryType());
      assertEquals(403, tiffField0.getOffset());
      assertEquals(1473, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-3011), 33452, fieldTypeLong0, 0L, 1893L, (byte[]) null, (ByteOrder) null, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, int0);
      assertEquals(33452, tiffField0.getDirectoryType());
      assertEquals(1893, tiffField0.getOffset());
      assertEquals((-3011), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      int int0 = tiffField0.getSortHint();
      assertEquals((-5527), int0);
      assertEquals((-5527), tiffField0.getOffset());
      assertEquals((-5527), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34737, 34737, (FieldType) null, 34737, 1L, byteArray0, byteOrder0, 131);
      int int0 = tiffField0.getOffset();
      assertEquals(131, tiffField0.getSortHint());
      assertEquals(34737, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(34737, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), (-1), fieldTypeByte0, (-544L), (-1), byteArray0, byteOrder0, 4231);
      int int0 = tiffField0.getOffset();
      assertEquals(4231, tiffField0.getSortHint());
      assertEquals((-1279), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)38;
      TiffField tiffField0 = new TiffField((byte)0, (-383), fieldTypeLong0, 1L, (-3169L), byteArray0, byteOrder0, (-2146911442));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2146911442), tiffField0.getSortHint());
      assertEquals((-3169), tiffField0.getOffset());
      assertEquals((-383), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-99);
      TiffField tiffField0 = new TiffField(2147483646, (-4185), fieldTypeLong0, 255L, 342, byteArray0, byteOrder0, 1718);
      tiffField0.getIntValueOrArraySum();
      assertEquals(342, tiffField0.getOffset());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals((-4185), tiffField0.getDirectoryType());
      assertEquals(1718, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3228);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 44);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-64);
      TiffField tiffField0 = new TiffField(2700, (-2147025858), fieldTypeShort0, 1L, 37520, byteArray0, (ByteOrder) null, (byte)40);
      tiffField0.getIntValue();
      assertEquals(2700, tiffField0.getTag());
      assertEquals(37520, tiffField0.getOffset());
      assertEquals((-2147025858), tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[30];
      CharBuffer charBuffer0 = CharBuffer.allocate(50779);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50832, (String) null);
      TiffField tiffField0 = new TiffField((-1272), 36, fieldTypeShort0, 50832, 50779, byteArray0, byteOrder0, 50778);
      tiffField0.getFieldTypeName();
      assertEquals(50779, tiffField0.getOffset());
      assertEquals(50778, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals((-1272), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1282, "");
      TiffField tiffField0 = new TiffField(3512, (-137), fieldTypeLong0, 1952L, (-1L), byteArray0, (ByteOrder) null, (-885));
      tiffField0.getFieldTypeName();
      assertEquals(3512, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-137), tiffField0.getDirectoryType());
      assertEquals((-885), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)7, (FieldType) null, 0L, 5302L, byteArray0, byteOrder0, 21);
      tiffField0.getFieldType();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(5302, tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeDouble0.FLOAT, 68, 68, byteArray0, byteOrder0, 68);
      tiffField0.getFieldType();
      assertEquals(68, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1408), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-650), (-650), fieldTypeByte0, 1973L, (-1832L), byteArray0, byteOrder0, (byte)54);
      tiffField0.getFieldType();
      assertEquals((-650), tiffField0.getDirectoryType());
      assertEquals((-650), tiffField0.getTag());
      assertEquals((-1832), tiffField0.getOffset());
      assertEquals(54, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeLong0.BYTE, 1L, 35, byteArray0, byteOrder0, 35);
      tiffField0.getDoubleValue();
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)31;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 1L, 327L, byteArray0, byteOrder0, (byte)27);
      tiffField0.getDoubleValue();
      assertEquals(327, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-64);
      TiffField tiffField0 = new TiffField(2700, (-2147025858), fieldTypeShort0, 1L, 37520, byteArray0, (ByteOrder) null, (byte)40);
      tiffField0.getDoubleValue();
      assertEquals((-2147025858), tiffField0.getDirectoryType());
      assertEquals(2700, tiffField0.getTag());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(37520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 2, fieldTypeLong0, (-208L), 4L, byteArray0, byteOrder0, (byte)62);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2, int0);
      assertEquals(62, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "... (");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "... (");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2469, fieldTypeByte0, 2469, 2469, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(2469, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2469, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-103), (byte) (-103), (FieldType) null, (byte) (-103), (byte) (-103), byteArray0, byteOrder0, 1915);
      tiffField0.getCount();
      assertEquals((-103), tiffField0.getTag());
      assertEquals(1915, tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(737, 737, fieldTypeByte0, 4L, (-1086L), byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getBytesLength();
      assertEquals(737, tiffField0.getTag());
      assertEquals(737, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals((-1086), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1303), fieldTypeRational0.SLONG, (byte) (-19), (-3979L), byteArray0, byteOrder0, (byte)73);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1303), tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals((-3979), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte) (-103), (-1), fieldTypeByte0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (-1));
      tiffField0.getByteOrder();
      assertEquals((-103), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3840), "\r:.'#% )^MaNMfX");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41492, 0, fieldTypeAscii0, (-411L), 745L, byteArray0, byteOrder0, 351);
      tiffField0.getByteOrder();
      assertEquals(41492, tiffField0.getTag());
      assertEquals(351, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(745, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      tiffField0.getByteArrayValue();
      assertEquals((-5527), tiffField0.getSortHint());
      assertEquals((-5527), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-5527), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2895), fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals((-2895), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, 0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("0 (0x0: Unknown Tag):  (0 SShort)");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3563, (byte)0, (FieldType) null, (byte)0, (-2547L), byteArray0, byteOrder0, 2317);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2087), (-2087), (FieldType) null, (-2087), (-2087), byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 802, fieldTypeShort0, 0L, 0L, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2068), 1982292598, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SHORT).DOUBLE, (-1717), (-390L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34017, 50729, fieldTypeRational0, 3981L, 3981L, (byte[]) null, byteOrder0, 2021161080);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3296, (byte) (-14), fieldTypeRational0, (-3528L), 1L, byteArray0, (ByteOrder) null, (byte) (-3));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(117);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(6, "");
      TiffField tiffField0 = new TiffField((-1078), (-1078), fieldTypeFloat0, 3563, (-2875L), byteArray0, byteOrder0, (-847));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1303), fieldTypeRational0.SLONG, (byte) (-19), (-3979L), byteArray0, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(5);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4011), 5, fieldType0, 5, (-4011), (byte[]) null, byteOrder0, (-4011));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      TiffField tiffField0 = new TiffField(2147467263, 2147426407, fieldTypeDouble0, (-3312L), (-3602L), byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)20, (byte)0, fieldTypeByte0, (byte)20, 1L, byteArray0, (ByteOrder) null, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(20, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      TiffField tiffField0 = new TiffField((byte) (-103), (-1098), fieldTypeLong0, 0L, 1773L, byteArray0, byteOrder0, (-1098));
      tiffField0.getFieldType();
      assertEquals((-1098), tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
      assertEquals((-1098), tiffField0.getDirectoryType());
      assertEquals(1773, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte) (-103), (byte) (-103), fieldTypeShort0, (byte) (-103), (byte) (-103), byteArray0, byteOrder0, (byte) (-103));
      MockFile mockFile0 = new MockFile("S|B", "C$kERe;C F?FAw*GU");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 802, fieldTypeShort0, (-1L), 2201L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), (-1), fieldTypeByte0, (-544L), (-1), byteArray0, byteOrder0, 4231);
      tiffField0.getTagInfo();
      assertEquals((-1279), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4231, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1915, 1915, (FieldType) null, (-18L), (-20776L), byteArray0, byteOrder0, (byte) (-103));
      int int0 = tiffField0.getTag();
      assertEquals((-20776), tiffField0.getOffset());
      assertEquals(1915, int0);
      assertEquals(1915, tiffField0.getDirectoryType());
      assertEquals((-103), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, (-2647), fieldTypeShort0, 0L, 0L, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getBytesLength();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2647), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeDouble0.FLOAT, 68, 68, byteArray0, byteOrder0, 68);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3285, 5, fieldTypeRational0.IFD, 1, 4L, byteArray0, byteOrder0, 65535);
      tiffField0.getIntValue();
      assertEquals(3285, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-103), (byte) (-103), fieldTypeDouble0, 2810, (byte) (-103), byteArray0, byteOrder0, 2021161090);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@141fd22e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 49L, 49L, byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(9, (-1717), fieldTypeShort0.ASCII, 50, 377L, byteArray0, byteOrder0, (-2004));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1b528e88 for: 9 (0x9: GPSStatus): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(27, ":p)<7b^B");
      TiffField tiffField0 = new TiffField(1380, 1380, fieldTypeFloat0, 4L, 32L, byteArray0, byteOrder0, 336);
      tiffField0.getDoubleArrayValue();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1380, tiffField0.getDirectoryType());
      assertEquals(336, tiffField0.getSortHint());
      assertEquals(1380, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      tiffField0.getDoubleArrayValue();
      assertEquals((-5527), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-5527), tiffField0.getDirectoryType());
      assertEquals((-5527), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(32996);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, 316L, 0L, byteArray0, byteOrder0, (-457));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-457), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)7, fieldTypeRational0, (byte)7, (-4686L), byteArray0, byteOrder0, (byte)7);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-4686), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)46, fieldTypeRational0, (byte)7, (-4686L), byteArray0, byteOrder0, (byte)7);
      tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals((-4686), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeLong0.BYTE, 1L, 35, byteArray0, byteOrder0, 35);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50779, "8e^<}>caYi[5^k\"@k<~");
      TiffField tiffField0 = new TiffField(50779, 50779, fieldTypeDouble0, 50779, 50779, byteArray0, byteOrder0, 50779);
      tiffField0.getDoubleArrayValue();
      assertEquals(50779, tiffField0.getSortHint());
      assertEquals(50779, tiffField0.getTag());
      assertEquals(50779L, tiffField0.getCount());
      assertEquals(50779, tiffField0.getOffset());
      assertEquals(50779, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2813), 65106, fieldTypeByte0, 65106, (-2813), byteArray0, byteOrder0, (-2813));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1ab90331 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeShort0, 77, 77, byteArray0, byteOrder0, 77);
      tiffField0.getIntArrayValue();
      assertEquals(77L, tiffField0.getCount());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717), 1, fieldTypeRational0, (byte)7, (-1717), byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(7L, tiffField0.getCount());
      assertEquals((-1717), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1717), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(27, 202, fieldTypeShort0.SRATIONAL, 202, (-2455L), byteArray0, byteOrder0, 34909);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2700, (-2147025858), fieldTypeShort0, 1L, 37520, byteArray0, (ByteOrder) null, (byte)40);
      tiffField0.getIntArrayValue();
      assertEquals(2700, tiffField0.getTag());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals((-2147025858), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(37520, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      TiffField tiffField0 = new TiffField((byte) (-103), (-1098), fieldTypeLong0, 0L, 1773L, byteArray0, byteOrder0, (-1098));
      tiffField0.getIntArrayValue();
      assertEquals(1773, tiffField0.getOffset());
      assertEquals((-1098), tiffField0.getDirectoryType());
      assertEquals((-1098), tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)115;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-127);
      byteArray0[4] = (byte) (-2);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(410, 410, fieldTypeAscii0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (byte) (-127));
      String string0 = tiffField0.getStringValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(410, tiffField0.getTag());
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals(410, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(410, 410, fieldTypeAscii0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (byte) (-127));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@79710653
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(27, ":p)<7b^B");
      TiffField tiffField0 = new TiffField(1380, 1380, fieldTypeFloat0, 4L, 32L, byteArray0, byteOrder0, 336);
      String string0 = tiffField0.getTagName();
      assertEquals(1380, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x564)", string0);
      assertEquals(336, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      String string0 = tiffField0.getTagName();
      assertEquals((-5527), tiffField0.getSortHint());
      assertEquals((-5527), tiffField0.getOffset());
      assertEquals("GPSVersionID", string0);
      assertEquals((-5527), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-467), 1, fieldTypeByte0, 338, (-467), byteArray0, byteOrder0, (-168));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "gh}EtzQL\"K^<$2H");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeDouble0.FLOAT, 68, 68, byteArray0, byteOrder0, 68);
      String string0 = tiffField0.getValueDescription();
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(50879, 65105, fieldTypeByte0, 65105, 1L, byteArray0, byteOrder0, 65105);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals("50879 (0xc6bf: ColorimetricReference): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (65105 SByte)", string0);
      assertEquals(65105, tiffField0.getDirectoryType());
      assertEquals(65105, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(50779, 524, fieldTypeByte0, 50779, 50779, byteArray0, byteOrder0, 50779);
      String string0 = tiffField0.toString();
      assertEquals(50779, tiffField0.getOffset());
      assertEquals(524, tiffField0.getDirectoryType());
      assertEquals(50779, tiffField0.getSortHint());
      assertEquals("50779 (0xc65b: CalibrationIlluminant2): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (50779 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeDouble0, 70, 70, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.toString();
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getOffset());
      assertEquals("70 (0x46: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (70 Double)", string0);
      assertEquals(70, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1194, 1194, fieldTypeByte0.FLOAT, 1194, 2147467263, byteArray0, byteOrder0, 1194);
      String string0 = tiffField0.toString();
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(2147467263, tiffField0.getOffset());
      assertEquals(1194, tiffField0.getSortHint());
      assertEquals("1194 (0x4aa: Unknown Tag): 0.0, 0.0, 0.0, 0.0 (1194 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, 2792, fieldTypeLong0, (-2147483648L), 4L, byteArray0, byteOrder0, 2792);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: Unknown Tag):  (-2147483648 SLong)", string0);
      assertEquals(2792, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2792, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(222, 286, fieldTypeLong0, 6782L, 6782L, byteArray0, byteOrder0, 222);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6782, tiffField0.getOffset());
      assertEquals(286, tiffField0.getDirectoryType());
      assertEquals(222, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(6782L, tiffField0.getCount());
      assertEquals(222, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeShort0, 77, 77, byteArray0, byteOrder0, 77);
      String string0 = tiffField0.toString();
      assertEquals(77, tiffField0.getOffset());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals("77 (0x4d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (56) (77 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1165, 1194, fieldTypeAscii0, 1194, 1194, byteArray0, byteOrder0, 1165);
      tiffField0.toString();
      assertEquals(1194L, tiffField0.getCount());
      assertEquals(1194, tiffField0.getDirectoryType());
      assertEquals(1165, tiffField0.getTag());
      assertEquals(1165, tiffField0.getSortHint());
      assertEquals(1194, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(9, 65535, fieldTypeLong0.ASCII, 4L, 65535, byteArray0, byteOrder0, (-400));
      tiffField0.toString();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-400), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-103), 275, fieldTypeRational0, 275, 2147483647L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getValueDescription();
      assertEquals(275, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((-103), tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(275L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-47);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(410, 410, fieldTypeAscii0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (byte) (-127));
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(410, tiffField0.getDirectoryType());
      assertEquals(410, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1086, 2147416212, fieldTypeLong0, 1L, (-424L), byteArray0, byteOrder0, 1086);
      tiffField0.toString();
      assertEquals(1086, tiffField0.getTag());
      assertEquals((-424), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1086, tiffField0.getSortHint());
      assertEquals(2147416212, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-3011), 33452, fieldTypeLong0, 0L, 1893L, (byte[]) null, (ByteOrder) null, 50);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(1893, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(33452, tiffField0.getDirectoryType());
      assertEquals((-3011), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3296, (byte) (-14), fieldTypeRational0, (-3528L), 1L, byteArray0, (ByteOrder) null, (byte) (-3));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, (byte)92);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-14), tiffField0.getDirectoryType());
      assertEquals(3296, tiffField0.getTag());
      assertNull(string0);
      assertEquals((-3), tiffField0.getSortHint());
      assertEquals((-3528L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-103), 1, fieldTypeShort0, 255L, 1, byteArray0, byteOrder0, 3141);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-103), tiffField0.getTag());
      assertEquals(3141, tiffField0.getSortHint());
      assertEquals(1L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-103), 1, fieldTypeShort0, 255L, 1, byteArray0, byteOrder0, 3141);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3141, tiffField0.getSortHint());
      assertEquals((-103), tiffField0.getTag());
      assertEquals(510, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 0L, (byte)0, byteArray0, (ByteOrder) null, 125);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(125, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)0, (-5527), fieldTypeLong0, 4L, (-5527), byteArray0, byteOrder0, (-5527));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-5527), tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-5527), int0);
      assertEquals((-5527), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(65533, 0, fieldTypeLong0, 0, 5784L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(5784, tiffField0.getOffset());
      assertEquals(65533, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((byte) (-103), (-1), fieldTypeByte0, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-103 (0xffffff99: Unknown Tag): ", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2895), fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2895), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), (-1), fieldTypeByte0, (-544L), (-1), byteArray0, byteOrder0, 4231);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals((-1279), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-544), tiffField0.getBytesLength());
      assertEquals(4231, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getOffset());
  }
}
