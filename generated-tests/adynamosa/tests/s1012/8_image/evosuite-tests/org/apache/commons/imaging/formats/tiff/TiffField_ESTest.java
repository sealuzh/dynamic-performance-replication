/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 16:56:54 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzCXL[@#1");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1994091958, (-338), fieldTypeShort0, 19, 1994091958, byteArray0, byteOrder0, (-2374));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-338), tiffField0.getDirectoryType());
      assertEquals(1994091958, tiffField0.getOffset());
      assertEquals(233, int0);
      assertEquals(38, tiffField0.getBytesLength());
      assertEquals(1994091958, tiffField0.getTag());
      assertEquals((-2374), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte)41;
      TiffField tiffField0 = new TiffField(5433, (byte)41, fieldTypeRational0, 1251L, (-713L), byteArray0, byteOrder0, (byte)41);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(6, int0);
      assertEquals(41, tiffField0.getSortHint());
      assertEquals((-713), tiffField0.getOffset());
      assertEquals(5433, tiffField0.getTag());
      assertEquals(10008, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-53), 2146429409, fieldTypeLong0, 1L, (-1738L), byteArray0, byteOrder0, 761);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146429409, tiffField0.getDirectoryType());
      assertEquals((-1738), tiffField0.getOffset());
      assertEquals((-53), tiffField0.getTag());
      assertEquals(761, tiffField0.getSortHint());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3669), fieldTypeDouble0, 3165, 0L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-3669), tiffField0.getDirectoryType());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (3165 )", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-4376));
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertEquals((-4376), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      CharBuffer charBuffer0 = CharBuffer.allocate(1409);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 113, fieldTypeByte0, (byte)95, 4L, byteArray0, byteOrder0, 296);
      int int0 = tiffField0.getTag();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(296, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(113, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2333, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2874), (-2386), fieldTypeShort0, 255L, 1511L, byteArray0, byteOrder0, (byte) (-23));
      int int0 = tiffField0.getTag();
      assertEquals((-2386), tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals(1511, tiffField0.getOffset());
      assertEquals((-2874), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(14, ", fieldType: ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-42);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-42), (byte) (-42), fieldTypeShort0.ASCII, 2284, 19L, byteArray0, byteOrder0, 2491);
      String string0 = tiffField0.getStringValue();
      assertEquals(2284, tiffField0.getBytesLength());
      assertEquals(2491, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-42), tiffField0.getTag());
      assertEquals((-42), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50968, (-362), fieldTypeLong0, 0L, 1233L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-362), tiffField0.getDirectoryType());
      assertEquals(50968, tiffField0.getTag());
      assertEquals(1233, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (byte)51, byteArray0, byteOrder0, 40961);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(40961, int0);
      assertEquals(51, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2131337154, 2131337154, fieldTypeRational0, 19, (byte)51, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getOffset();
      assertEquals(2131337154, tiffField0.getTag());
      assertEquals(51, int0);
      assertEquals(2131337154, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(51, (-1610612735), fieldTypeLong0, 328L, (-1789L), byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1789), int0);
      assertEquals(51, tiffField0.getTag());
      assertEquals((-1610612735), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)41;
      TiffField tiffField0 = new TiffField((byte)41, 19, fieldTypeByte0, 1L, 19, byteArray0, byteOrder0, (byte)41);
      tiffField0.getIntValueOrArraySum();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[51];
      byteArray0[0] = (byte) (-53);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-662), 2146429409, fieldTypeLong0, 1547L, (-2083L), byteArray0, byteOrder0, 33403);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-662), tiffField0.getTag());
      assertEquals((-2083), tiffField0.getOffset());
      assertEquals(2146429409, tiffField0.getDirectoryType());
      assertEquals(6188, tiffField0.getBytesLength());
      assertEquals(33403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2333, "FaxDCS");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeShort0.SBYTE, 1L, 930, byteArray0, byteOrder0, 2333);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(930, tiffField0.getDirectoryType());
      assertEquals(930, tiffField0.getTag());
      assertEquals(2333, tiffField0.getSortHint());
      assertEquals(930, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte)41;
      TiffField tiffField0 = new TiffField((byte)41, 24, fieldTypeRational0, 1L, 1908L, byteArray0, byteOrder0, 938);
      tiffField0.getIntValue();
      assertEquals(938, tiffField0.getSortHint());
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2333, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-23);
      TiffField tiffField0 = new TiffField(83, 2333, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).BYTE).SSHORT, 1L, 83, byteArray0, byteOrder0, 50);
      tiffField0.getIntValue();
      assertEquals(2333, tiffField0.getDirectoryType());
      assertEquals(83, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(83, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-3292), (-925), fieldTypeLong0, 0L, (-350L), byteArray0, (ByteOrder) null, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, intArray0.length);
      assertEquals((-925), tiffField0.getDirectoryType());
      assertEquals((-3292), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-350), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 153, fieldTypeByte0, 0L, (-3192L), byteArray0, byteOrder0, 3897);
      tiffField0.getFieldTypeName();
      assertEquals(153, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getTag());
      assertEquals(3897, tiffField0.getSortHint());
      assertEquals((-3192), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-32), (byte) (-23), fieldTypeRational0, (byte) (-23), (-2341L), byteArray0, byteOrder0, (byte) (-32));
      tiffField0.getFieldTypeName();
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals((-2341), tiffField0.getOffset());
      assertEquals((-32), tiffField0.getTag());
      assertEquals((-32), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2147163366), (-2147163366), (FieldType) null, (-1L), (-1L), byteArray0, byteOrder0, 2);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-2147163366), tiffField0.getTag());
      assertEquals((-2147163366), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      TiffField tiffField0 = new TiffField(2114946016, (-1), fieldTypeDouble0, (-1), 2114946016, byteArray0, byteOrder0, 2133071006);
      tiffField0.getFieldType();
      assertEquals(2114946016, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2133071006, tiffField0.getSortHint());
      assertEquals(2114946016, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-4376));
      tiffField0.getFieldType();
      assertEquals((-4376), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2333, "FaxDCS");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(930, 930, fieldTypeShort0.BYTE, 1L, 930, byteArray0, byteOrder0, 2333);
      tiffField0.getDoubleValue();
      assertEquals(930, tiffField0.getDirectoryType());
      assertEquals(2333, tiffField0.getSortHint());
      assertEquals(930, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(930, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2346, "*");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)17;
      TiffField tiffField0 = new TiffField(2567, 2146023767, fieldTypeShort0.BYTE, 1L, (-266L), byteArray0, byteOrder0, (-750));
      tiffField0.getDoubleValue();
      assertEquals(2146023767, tiffField0.getDirectoryType());
      assertEquals(2567, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-750), tiffField0.getSortHint());
      assertEquals((-266), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2333, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-23);
      TiffField tiffField0 = new TiffField(83, 2333, fieldTypeShort0, 1L, 83, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleValue();
      assertEquals(83, tiffField0.getOffset());
      assertEquals(2333, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(83, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 18, 18, byteArray0, byteOrder0, 103);
      tiffField0.getDoubleArrayValue();
      assertEquals(18, tiffField0.getTag());
      assertEquals(18, tiffField0.getOffset());
      assertEquals(72, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzCXL[@#1");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2042, 0, fieldTypeShort0, 2374L, 722L, byteArray0, byteOrder0, 2519);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(2519, tiffField0.getSortHint());
      assertEquals(2042, tiffField0.getTag());
      assertEquals(722, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 18, 18, byteArray0, byteOrder0, 103);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(18, tiffField0.getOffset());
      assertEquals(18, int0);
      assertEquals(18, tiffField0.getTag());
      assertEquals(103, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzCXL[@#1");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4039), (-4039), fieldTypeShort0, 0L, (-1L), byteArray0, byteOrder0, (byte) (-73));
      tiffField0.getCount();
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals((-4039), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-4039), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1919, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1919, 1919, fieldTypeShort0, 1919, 1919, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(1919, tiffField0.getOffset());
      assertEquals(1919, tiffField0.getDirectoryType());
      assertEquals(1919, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4227, (-2847), fieldTypeRational0, (-2L), 684L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getCount();
      assertEquals((-2847), tiffField0.getDirectoryType());
      assertEquals(684, tiffField0.getOffset());
      assertEquals(4227, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(69, 69, fieldTypeRational0, 0L, (-2722L), byteArray0, byteOrder0, (byte)3);
      int int0 = tiffField0.getBytesLength();
      assertEquals(69, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(69, tiffField0.getTag());
      assertEquals((-2722), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)41, 34908, fieldTypeRational0.SBYTE, (-1505L), 2147483647L, byteArray0, byteOrder0, 65);
      int int0 = tiffField0.getBytesLength();
      assertEquals(34908, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertEquals((-1505), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3009, (byte) (-33), fieldTypeLong0, (byte)44, (-94L), byteArray0, (ByteOrder) null, (byte)44);
      tiffField0.getByteOrder();
      assertEquals(3009, tiffField0.getTag());
      assertEquals((-94), tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-33), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1994091958, 337, fieldTypeRational0, (byte)39, 0L, byteArray0, byteOrder0, 1870);
      tiffField0.getByteOrder();
      assertEquals(1994091958, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(337, tiffField0.getDirectoryType());
      assertEquals(1870, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)41, 24, fieldTypeRational0, 1L, 1908L, byteArray0, byteOrder0, 938);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getTag());
      assertEquals(8, byteArray1.length);
      assertEquals(938, tiffField0.getSortHint());
      assertEquals(1908, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzCXL[@#1");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4039), (-4039), fieldTypeShort0, 0L, (-1L), byteArray0, byteOrder0, (byte) (-73));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals((-4039), tiffField0.getDirectoryType());
      assertEquals((-4039), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeRational0, 2353, 1L, byteArray0, byteOrder0, 2353);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3647, 3647, (FieldType) null, 3647, (-1L), (byte[]) null, byteOrder0, 2257);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      TiffField tiffField0 = new TiffField(2114946016, (-1), fieldTypeDouble0, (-1), 2114946016, byteArray0, byteOrder0, 2133071006);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)42, (FieldType) null, (byte)42, (byte) (-52), byteArray0, byteOrder0, (-2027));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-53), 33403, fieldTypeLong0, (-6700), (-120L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(42240, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeDouble0, 1, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1717986917), 2045222550, fieldTypeLong0, 2147483647L, 23872L, byteArray0, byteOrder0, 5976);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 9, fieldTypeLong0, (-472L), (byte) (-1), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[204];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37385, (-21), fieldTypeLong0, (-10L), 2146, byteArray0, byteOrder0, (-430));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), "Contrast");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1L), 0L, byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-3669), fieldTypeDouble0, 3165, 0L, byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, (-2), (-440L), byteArray0, byteOrder0, 521);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeRational0, 2353, 1L, byteArray0, byteOrder0, 2353);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "M!;o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2589), fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte) (-88));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-61), (-61), fieldTypeLong0, (-61), 0L, byteArray0, (ByteOrder) null, 593);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2346, "{!k[U;'?L");
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2346, 0, fieldTypeShort0.BYTE, 1024, 1024, byteArray0, byteOrder0, 1024);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("XPSubject");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1024, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1024, tiffField0.getBytesLength());
      assertEquals(1024, tiffField0.getOffset());
      assertEquals(2346, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2773, (-1), fieldTypeByte0, 0L, 2209L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(2773, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2209, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65112, (-11), fieldTypeLong0.FLOAT, 65112, 1548L, byteArray0, byteOrder0, (-2389));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2389), tiffField0.getSortHint());
      assertEquals(65112, tiffField0.getTag());
      assertEquals((-11), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(1548, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1895), "; qFFU{N3<Ch");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2421, (-774), fieldTypeRational0, 1591L, 139428L, byteArray0, byteOrder0, 2042);
      tiffField0.getFieldType();
      assertEquals(2042, tiffField0.getSortHint());
      assertEquals(2421, tiffField0.getTag());
      assertEquals(139428, tiffField0.getOffset());
      assertEquals((-774), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-245), (-245), (FieldType) null, (-8L), 7, (byte[]) null, byteOrder0, (-3301));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-245), int0);
      assertEquals((-3301), tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals((-245), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 18, 18, byteArray0, byteOrder0, 103);
      tiffField0.getValue();
      assertEquals(18, tiffField0.getOffset());
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getTag());
      assertEquals(72, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)41, 19, fieldTypeByte0, 1L, 19, byteArray0, byteOrder0, (byte)41);
      tiffField0.getTagInfo();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(41, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2131337154, 2131337154, fieldTypeRational0, 19, (byte)51, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getTag();
      assertEquals(2131337154, tiffField0.getDirectoryType());
      assertEquals(51, tiffField0.getOffset());
      assertEquals(2131337154, int0);
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-111), (byte)17, fieldTypeByte0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte) (-111));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(17, tiffField0.getOffset());
      assertEquals((-111), tiffField0.getTag());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-4376));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals("1 (0x1: Unknown Tag): ", string0);
      assertEquals((-4376), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65112, (-11), fieldTypeLong0.FLOAT, 65112, 1548L, byteArray0, byteOrder0, (-2389));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 18, 18, byteArray0, byteOrder0, 103);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-11), 2373, fieldTypeLong0, 247L, 255L, byteArray0, byteOrder0, 65112);
      tiffField0.getIntValueOrArraySum();
      assertEquals(65112, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(988, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getTag());
      assertEquals(2373, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-111), (byte)17, fieldTypeByte0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte) (-111));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1057a8d9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48256, (byte)17, fieldTypeByte0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte) (-111));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@455c77e7 for: 48256 (0xbc80: ImageWidth): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(710, (byte)45, fieldTypeFloat0, 1251L, 1553L, byteArray0, byteOrder0, (-532));
      tiffField0.getDoubleArrayValue();
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1553, tiffField0.getOffset());
      assertEquals((-532), tiffField0.getSortHint());
      assertEquals(5004, tiffField0.getBytesLength());
      assertEquals(710, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-11), 2373, fieldTypeLong0, 247L, 255L, byteArray0, byteOrder0, 65112);
      tiffField0.getDoubleArrayValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-11), tiffField0.getTag());
      assertEquals(988, tiffField0.getBytesLength());
      assertEquals(2373, tiffField0.getDirectoryType());
      assertEquals(65112, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzCXL[@#1");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2042, 0, fieldTypeShort0, 2374L, 722L, byteArray0, byteOrder0, 2519);
      tiffField0.getDoubleArrayValue();
      assertEquals(2042, tiffField0.getTag());
      assertEquals(4748, tiffField0.getBytesLength());
      assertEquals(2519, tiffField0.getSortHint());
      assertEquals(722, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1895), "; qFFU{N3<Ch");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2421, (-774), fieldTypeRational0, 1591L, 139428L, byteArray0, byteOrder0, 2042);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2042, tiffField0.getSortHint());
      assertEquals((-774), tiffField0.getDirectoryType());
      assertEquals(2421, tiffField0.getTag());
      assertEquals(139428, tiffField0.getOffset());
      assertEquals(12728, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1937, 1937, fieldTypeLong0, 1L, 4L, byteArray0, byteOrder0, 4650);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4650, tiffField0.getSortHint());
      assertEquals(1937, tiffField0.getDirectoryType());
      assertEquals(1937, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-11), 2373, fieldTypeLong0, 247L, 255L, byteArray0, byteOrder0, 65112);
      tiffField0.getIntArrayValue();
      assertEquals(65112, tiffField0.getSortHint());
      assertEquals(2373, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(988, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[131];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41986, (-460), fieldTypeLong0.SSHORT, 1527L, 41986, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals((-460), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(41986, tiffField0.getOffset());
      assertEquals(41986, tiffField0.getTag());
      assertEquals(3054, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)41;
      TiffField tiffField0 = new TiffField(5433, (byte)41, fieldTypeRational0, 1251L, (-713L), byteArray0, byteOrder0, (byte)41);
      tiffField0.getIntArrayValue();
      assertEquals((-713), tiffField0.getOffset());
      assertEquals(41, tiffField0.getDirectoryType());
      assertEquals(10008, tiffField0.getBytesLength());
      assertEquals(5433, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)41, 19, fieldTypeByte0, 1L, 19, byteArray0, byteOrder0, (byte)41);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(41, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-23), "!pn");
      TiffField tiffField0 = new TiffField((byte) (-23), 2333, fieldTypeByte0, 2333, 1L, byteArray0, byteOrder0, 2333);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@594ee9a2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2333, "WY7mqAKkJ0Aq?UhG");
      TiffField tiffField0 = new TiffField((-1610612735), 2073432487, fieldTypeAscii0, 0L, (byte) (-23), byteArray0, byteOrder0, (-2147388003));
      String string0 = tiffField0.getStringValue();
      assertEquals((-2147388003), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1610612735), tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147283341, "]U3+<*ir`rr<'");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 2147151168, fieldTypeDouble0, 595L, (-3078L), byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@3711f3e7
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-88), 50712, fieldTypeDouble0, 1L, (-1L), byteArray0, (ByteOrder) null, (-1789569705));
      String string0 = tiffField0.getTagName();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffffffa8)", string0);
      assertEquals((-1789569705), tiffField0.getSortHint());
      assertEquals(50712, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2042, "q/FIc>ql1IzXL[#1");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(258, 2042, fieldTypeShort0, 887, (-2292L), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals((-2292), tiffField0.getOffset());
      assertEquals(258, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals("BitsPerSample", string0);
      assertEquals(2042, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65112, (-11), fieldTypeLong0.FLOAT, 65112, 1548L, byteArray0, byteOrder0, (-2389));
      String string0 = tiffField0.toString();
      assertEquals(1548, tiffField0.getOffset());
      assertEquals("65112 (0xfe58: MoireFilter): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (65112 Float)", string0);
      assertEquals(260448, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getDirectoryType());
      assertEquals((-2389), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, 18, fieldTypeFloat0, (byte)45, 27, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(45L, tiffField0.getCount());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(180, tiffField0.getBytesLength());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals("0.0", string0);
      assertEquals(27, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[429];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(173, 173, fieldTypeDouble0, 173, 173, byteArray0, byteOrder0, 173);
      String string0 = tiffField0.toString();
      assertEquals(173, tiffField0.getOffset());
      assertEquals(173, tiffField0.getSortHint());
      assertEquals("173 (0xad: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (173 Double)", string0);
      assertEquals(173, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50724, 50724, fieldTypeLong0, 50724, 483L, byteArray0, byteOrder0, 50724);
      String string0 = tiffField0.toString();
      assertEquals(202896, tiffField0.getBytesLength());
      assertEquals(50724, tiffField0.getSortHint());
      assertEquals(50724, tiffField0.getDirectoryType());
      assertEquals(483, tiffField0.getOffset());
      assertEquals("50724 (0xc624: CameraCalibration2): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (50724 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(51, (-1610612735), fieldTypeLong0, 328L, (-1789L), byteArray0, (ByteOrder) null, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(51, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(1312, tiffField0.getBytesLength());
      assertEquals(328L, tiffField0.getCount());
      assertEquals((-1789), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-32), (-2147388003), fieldTypeShort0, 2042, (byte) (-73), byteArray0, byteOrder0, (byte) (-73));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-32), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4084, tiffField0.getBytesLength());
      assertEquals((-73), tiffField0.getSortHint());
      assertEquals(2042L, tiffField0.getCount());
      assertEquals((-73), tiffField0.getOffset());
      assertEquals((-2147388003), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[131];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41986, (-460), fieldTypeLong0.SHORT, 1527L, 41986, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals((-460), tiffField0.getDirectoryType());
      assertEquals(41986, tiffField0.getTag());
      assertEquals(1527L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(41986, tiffField0.getOffset());
      assertEquals(3054, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2491, 2491, fieldTypeLong0.ASCII, 1527L, 19504L, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(2491, tiffField0.getTag());
      assertEquals(1527, tiffField0.getBytesLength());
      assertEquals(2491, tiffField0.getDirectoryType());
      assertEquals(1527L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(19504, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1895), "; qFFU{N3<Ch");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2421, (-774), fieldTypeRational0, 1591L, 139428L, byteArray0, byteOrder0, 2042);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(12728, tiffField0.getBytesLength());
      assertEquals(2421, tiffField0.getTag());
      assertEquals(139428, tiffField0.getOffset());
      assertEquals(2042, tiffField0.getSortHint());
      assertEquals((-774), tiffField0.getDirectoryType());
      assertEquals(1591L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte) (-23), "!pn");
      TiffField tiffField0 = new TiffField((-711), 2333, fieldTypeByte0.ASCII, 1, (-3144L), byteArray0, byteOrder0, 39);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3144), tiffField0.getOffset());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2333, tiffField0.getDirectoryType());
      assertEquals((-711), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)41, 24, fieldTypeRational0, 1L, 1908L, byteArray0, byteOrder0, 938);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(938, tiffField0.getSortHint());
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(41, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(575, 575, fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, 4115);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(789, 4);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(575, tiffField0.getDirectoryType());
      assertEquals(4115, tiffField0.getSortHint());
      assertEquals(575, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 379L, (-671L), byteArray0, byteOrder0, (byte)76);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(76, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-671), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2773, (-1), fieldTypeByte0, 0L, 2209L, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2209, tiffField0.getOffset());
      assertEquals(2773, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-111), (byte)17, fieldTypeByte0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte) (-111));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals((-111), tiffField0.getTag());
      assertEquals((-111), tiffField0.getSortHint());
      assertEquals(17L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(494, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34025, 494, fieldTypeAscii0, (-1L), 494, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(34025, tiffField0.getTag());
      assertEquals(494, tiffField0.getOffset());
      assertEquals(494, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (-4376));
      tiffField0.getOffset();
      assertEquals((-4376), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-111), (byte)17, fieldTypeByte0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte) (-111));
      int int0 = tiffField0.getSortHint();
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getOffset());
      assertEquals((-111), int0);
      assertEquals((-111), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2773, (-1), fieldTypeByte0, (-1), 2209L, byteArray0, byteOrder0, (byte)0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter((byte)50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147283341, "]U3+<*ir`rr<'");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, 2147151168, fieldTypeDouble0, 595L, (-3078L), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4760, tiffField0.getBytesLength());
      assertEquals(595L, tiffField0.getCount());
      assertEquals((-3078), tiffField0.getOffset());
      assertEquals(2147151168, tiffField0.getDirectoryType());
  }
}
