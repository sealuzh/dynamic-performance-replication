/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:39:05 GMT 2018
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.charset.Charset;
import java.util.Enumeration;
import org.apache.commons.jxpath.ri.parser.SimpleCharStream;
import org.apache.commons.jxpath.ri.parser.Token;
import org.apache.commons.jxpath.ri.parser.XPathParserTokenManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathParserTokenManager_ESTest extends XPathParserTokenManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedReader0, 64, 64, 64);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.SwitchTo((-195));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -195. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      // Undeclared exception!
      try { 
        xPathParserTokenManager0.ReInit((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null, (-2006));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -2006. State unchanged.
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParserTokenManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedReader0, 64, 64, 64);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 10, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 101);
      pushbackInputStream0.unread(1313);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)95, (byte)95);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)95);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)95, (-707), (byte)95);
      pushbackInputStream0.unread(341);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 10, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 101);
      pushbackInputStream0.unread(100);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)111;
      byteArray0[2] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, 119);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)111, (byte)111, 1909);
      pushbackInputStream0.unread((int) (byte)111);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)44, (byte)44);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)44, (byte)44);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)44, (byte)44, (byte)44);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteArrayInputStream0.skip((-1));
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.unread((int) (byte)44);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 55);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      pushbackInputStream0.unread((int) (byte)106);
      pushbackInputStream0.mark(38);
      pushbackInputStream0.unread(22);
      pushbackInputStream0.unread(58);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1196), (-1196));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 65);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 94, 94, 2339);
      int int0 = 14;
      pushbackInputStream0.unread(14);
      pushbackInputStream0.unread(2339);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, 65, 112, 30);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[15];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArrayInputStream0.skip(204L);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 126);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, 112);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedInputStream0, 15, 3158, 0);
      simpleCharStream1.adjustBeginLineColumn(126, 3158);
      pushbackInputStream0.unread(66);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 101, 2);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1506);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream2);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 101, (-1771), 39);
      pushbackInputStream0.unread(101);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 115, 20);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1502);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1);
      sequenceInputStream0.skip((byte)111);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 115, 115, 58);
      pushbackInputStream0.unread(77);
      pushbackInputStream0.unread(115);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 10, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 101);
      pushbackInputStream0.unread(1313);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)43, (byte)111);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 10, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 101, 101, 67);
      pushbackInputStream0.unread(107);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1196), (-1196));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 65);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 94, 4606, 2376);
      pushbackInputStream0.unread(32);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 9, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 101);
      pushbackInputStream0.mark(279);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(1601);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.skip((byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 96);
      bufferedInputStream0.skip(1L);
      byteArrayInputStream0.reset();
      pushbackInputStream0.unread(64);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 96);
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(1066);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.markSupported();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)16, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, 10);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 10, (byte)111);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, (byte)111, 83);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream2, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (-48), 2, 39);
      pushbackInputStream0.unread(39);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-15), (byte) (-15));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte) (-15), (byte) (-15), (byte) (-15));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1172), 87, 50);
      bufferedInputStream0.read();
      pushbackInputStream0.skip((byte) (-15));
      bufferedInputStream0.available();
      simpleCharStream1.column = (int) (byte) (-15);
      pushbackInputStream0.unread(98);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)16, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      byteArrayInputStream0.skip((byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 10, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 10);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)16, 101);
      pushbackInputStream0.unread((-2998));
      bufferedInputStream0.markSupported();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)22, (byte)22);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 806, (byte)22);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 806, 806, (-770));
      byteArrayInputStream0.markSupported();
      pushbackInputStream0.unread(806);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)24);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream2);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)24, 98, (-4436));
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(102);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)22, (byte)113);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 121, (byte)113);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 121, 121, 3373);
      pushbackInputStream0.mark((byte)113);
      pushbackInputStream0.unread(121);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 19, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      pushbackInputStream0.unread(75);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1144), 87, (byte)0);
      bufferedInputStream0.available();
      simpleCharStream1.ReInit((InputStream) byteArrayInputStream0);
      pushbackInputStream0.unread(82);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, 96);
      pushbackInputStream0.markSupported();
      bufferedInputStream0.markSupported();
      bufferedInputStream0.markSupported();
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, 95, 112, (-3030));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArrayInputStream1.reset();
      pushbackInputStream0.unread(95);
      bufferedInputStream0.markSupported();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1192), (-1192));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 36);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1192), 65, 3373);
      pushbackInputStream0.mark(55);
      pushbackInputStream0.unread((-1192));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)110);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 121, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 121, 121, 3373);
      pushbackInputStream0.mark((byte)110);
      pushbackInputStream0.unread(107);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)87);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)87);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(915);
      pushbackInputStream0.unread(39);
      pushbackInputStream0.mark((byte)87);
      byteArrayInputStream0.mark(120);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 83, 112, 107);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[15];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-125));
      byteArrayInputStream0.mark(115);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-125));
      byteArrayInputStream0.skip((byte) (-125));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread((int) (byte)0);
      pushbackInputStream0.unread(39);
      pushbackInputStream0.mark((byte) (-125));
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)17, (byte)17);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 251, 251);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 251);
      byteArrayInputStream0.mark(251);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      pushbackInputStream0.unread(51);
      bufferedInputStream0.available();
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)101);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)101);
      byteArrayInputStream0.skip((byte)101);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(100);
      pushbackInputStream0.unread(39);
      pushbackInputStream0.mark((byte)101);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArrayInputStream0.mark(122);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 1369, 112, 107);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 131);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      pushbackInputStream0.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)77, (byte)106, 279);
      int int0 = ObjectStreamConstants.baseWireHandle;
      byteArrayInputStream0.skip((byte)77);
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.unread((-1226));
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-40), (byte) (-40));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-40), 81);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 593);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, bufferedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 81);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 593, 593, 3);
      pushbackInputStream0.unread((-2524));
      pushbackInputStream0.unread(593);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream1, 3, (byte) (-40), 593);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 10, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0, 39, 54);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0, 5474);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream2);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream1, 123, 124, 10);
      pushbackInputStream1.unread(41);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, 61);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 61);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.available();
      pushbackInputStream0.unread(68);
      pushbackInputStream0.skip(458L);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      pushbackInputStream0.unread(68);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 61, 109, 34);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 9, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)106, 39);
      pushbackInputStream0.mark(279);
      pushbackInputStream0.unread(1588);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-15), (byte) (-15));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-15), 50);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte) (-15), (byte) (-15), (byte) (-15));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1172), 87, 50);
      bufferedInputStream0.read();
      pushbackInputStream0.skip((byte) (-15));
      bufferedInputStream0.available();
      simpleCharStream1.column = (int) (byte) (-15);
      pushbackInputStream0.unread(51);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)110;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)110);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 121, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 121, 121, 3373);
      pushbackInputStream0.mark((byte)110);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 125, 20);
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 77);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 125, 125, 58);
      pushbackInputStream0.unread(125);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)24, (byte)24);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)24);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream2);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)24, 98, (-4436));
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(103);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)22, (byte)113);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)113, (byte)113);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)113, (byte)113, 3373);
      pushbackInputStream0.mark((byte)113);
      pushbackInputStream0.unread((int) (byte)113);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 122, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream1, 108, (byte)0, (-904));
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream1, 4606, 20, (-1));
      pushbackInputStream0.unread(87);
      SimpleCharStream simpleCharStream3 = new SimpleCharStream(bufferedInputStream0, 16, 16);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)108;
      byteArray0[0] = (byte)108;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)108);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 121, (byte)108);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      int int0 = 109;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 121, 121, 3373);
      pushbackInputStream0.mark((byte)108);
      pushbackInputStream0.unread(109);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1200), (-1200));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1200), (-1200), 3373);
      pushbackInputStream0.mark((-1148));
      pushbackInputStream0.unread((-4749));
      pushbackInputStream0.unread(109);
      pushbackInputStream0.mark(483);
      byteArrayInputStream0.mark((-1));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)22);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)22);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)22, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 68);
      pushbackInputStream0.mark((byte)0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-2147483618), 1688, 33);
      pushbackInputStream0.available();
      pushbackInputStream0.unread(1071);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)72);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)72, (byte)72, 279);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      pushbackInputStream0.unread((-1208));
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)8, (byte)22);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 9, 81);
      byteArrayInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)22, (byte)8, (byte)22);
      pushbackInputStream0.mark(279);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(1071);
      pushbackInputStream0.unread(92);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1200), (-1200));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1200), (-1200), 3373);
      pushbackInputStream0.mark(55);
      pushbackInputStream0.unread((-1200));
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)87);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)87);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)87);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(915);
      pushbackInputStream0.unread((int) (byte)87);
      pushbackInputStream0.mark((byte)87);
      byteArrayInputStream0.mark(120);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 83, 112, 107);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)22);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)22, (byte)22);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 9, 99);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)22, (byte)0, 101);
      pushbackInputStream0.mark(279);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedInputStream0, 2031, 33, (-1));
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(2031);
      pushbackInputStream0.unread(99);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.available();
      pushbackInputStream0.unread(60);
      pushbackInputStream0.skip((byte)0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      pushbackInputStream0.unread(60);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, 1, 34);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.mark(100);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 96);
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(1066);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.markSupported();
      pushbackInputStream0.mark(39);
      pushbackInputStream0.unread(96);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.unread(75);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1144), 87, (byte)0);
      bufferedInputStream0.available();
      simpleCharStream1.ReInit((InputStream) byteArrayInputStream0);
      pushbackInputStream0.mark(19);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = (-1160);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1160), (-1160));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~e");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 36);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1160), 65, 65);
      pushbackInputStream0.mark(55);
      pushbackInputStream0.unread(36);
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream0.skip(241);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 241, 241);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 241);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, 241, (-908), 9);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread((-1));
      pushbackInputStream0.unread((-908));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayInputStream0.mark((-1275));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 102, (-1), 35);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 131);
      pushbackInputStream0.mark(38);
      pushbackInputStream0.unread((int) (byte)106);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "last");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-84), 38, 57);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte byte0 = (byte) (-27);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 241, 241);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 241);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.mark((byte) (-27));
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.unread(241);
      pushbackInputStream0.mark(104);
      pushbackInputStream0.unread(241);
      pushbackInputStream0.unread(104);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1513);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 118, 81, (-425));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 81, 85, (-2135));
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(pushbackInputStream0, 971);
      bufferedInputStream2.skip((-425));
      byteArrayInputStream0.reset();
      bufferedInputStream1.available();
      pushbackInputStream0.unread(63);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 19, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.unread(19);
      byteArrayInputStream0.skip(1742L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      pushbackInputStream0.unread(byteArray0);
      byteArrayInputStream0.mark(19);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath/D");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      simpleCharStream0.prevCharIsCR = false;
      pushbackInputStream0.unread(34);
      pushbackInputStream0.unread(34);
      pushbackInputStream0.mark((byte)0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      byteArrayInputStream2.mark(112);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)16, (byte)91);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)91, (byte)91);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)16, (byte)91);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream2, 9);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)91, 102, (-4436));
      pushbackInputStream0.mark(103);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(103);
      pushbackInputStream0.unread(344);
      byteArrayInputStream1.mark(17);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream1, 111, (byte)91, 9);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1160), (-1160));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 36, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 36);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1160), 65, 3373);
      pushbackInputStream0.mark(55);
      pushbackInputStream0.unread((-1160));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)111, 3373);
      pushbackInputStream0.mark((byte)111);
      pushbackInputStream0.unread(105);
      bufferedInputStream0.skip((-1336L));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-27);
      byte[] byteArray1 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte) (-27), (byte) (-27));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, 241, 241);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 241);
      byteArrayInputStream0.mark(241);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.read(byteArray1);
      pushbackInputStream0.unread(49);
      pushbackInputStream0.unread(49);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)119;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)119, (byte)77);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)119);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.skip((byte)119);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 279;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 279, (byte)119, (byte)119);
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0);
      pushbackInputStream0.unread((-1));
      simpleCharStream0.GetImage();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
      pushbackInputStream0.unread(50);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 66, 66);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-621), 6, 86);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 6, 6, (-621));
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(bufferedInputStream0, (-1), 86, 2604);
      pushbackInputStream0.unread(1397);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 81, 81);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-620), 6, 88);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, (-463), (-463), 92);
      pushbackInputStream0.mark((-904));
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(bufferedInputStream0, (-1), 88, 2604);
      pushbackInputStream0.unread(1397);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 81, 81);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-620), 6, 88);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, (-463), (-463), 92);
      pushbackInputStream0.mark((-904));
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(bufferedInputStream0, (-1), 88, 2604);
      pushbackInputStream0.unread(88);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)91, (byte)91);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)91);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-4436), (byte)91);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0, 2648);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(byteArrayInputStream1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream1, 111, 103, (-1212));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(sequenceInputStream0, (-1), 87, 87);
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(pushbackInputStream0, (byte)91, 2648, 117);
      pushbackInputStream0.unread((int) (byte)91);
      SimpleCharStream simpleCharStream3 = new SimpleCharStream(pushbackInputStream0, 111, 4606);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "pt");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 81, 81);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(oJ%hr ");
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream1.mark(13);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream1, (byte)111, 13, 724);
      bufferedInputStream1.read(byteArray0);
      pushbackInputStream0.unread(724);
      pushbackInputStream0.unread(123);
      byteArrayInputStream0.mark(42);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 81, 1349, (-908));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)22);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)22);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)22, 29);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 68);
      pushbackInputStream0.mark((byte)0);
      pushbackInputStream0.unread(101);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-2147483618), 1688, 33);
      pushbackInputStream0.available();
      pushbackInputStream0.unread(1071);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 255, 255);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 255);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      bufferedInputStream0.mark((byte)0);
      pushbackInputStream0.unread((-197));
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream1, 9, 102, 111);
      bufferedInputStream0.available();
      simpleCharStream0.ReInit((InputStream) pushbackInputStream0);
      pushbackInputStream0.mark(718);
      byteArrayInputStream1.mark(1852);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 131);
      FileSystemHandling.shouldAllThrowIOExceptions();
      pushbackInputStream0.mark(38);
      pushbackInputStream0.unread(22);
      pushbackInputStream0.unread(69);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)66);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 131);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      pushbackInputStream0.unread((int) (byte)66);
      pushbackInputStream0.mark(38);
      pushbackInputStream0.unread(22);
      pushbackInputStream0.unread(57);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      byteArrayInputStream0.read(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 81, 81);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-620), 6, 88);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedInputStream0, 88, (-2420), (-2420));
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream0, 61, 87, 81);
      bufferedInputStream0.read();
      pushbackInputStream0.skip(81);
      bufferedInputStream0.available();
      pushbackInputStream0.unread(2088);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      byteArrayInputStream0.skip((-3121L));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-1080), (byte)106);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1, 3156);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 1782, (byte)77, 114);
      pushbackInputStream1.mark(128);
      pushbackInputStream0.unread(55);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 279, (byte)106, (byte)106);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(279);
      pushbackInputStream0.unread((int) (byte)77);
      byte[] byteArray1 = new byte[1];
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)106, 107);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)77);
      byteArrayInputStream0.read();
      byteArrayInputStream0.skip((-3121L));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.unread(1839);
      int int0 = 51;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 51, (-1144), 51);
      int int1 = 109;
      pushbackInputStream0.unread(109);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-27);
      byteArray0[3] = (byte) (-27);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte) (-27), (byte) (-27));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, 241, 241);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 241);
      byteArrayInputStream0.mark(241);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.read(byteArray1);
      pushbackInputStream0.unread(51);
      bufferedInputStream0.available();
      pushbackInputStream0.unread(51);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-2763), (-2763));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 27);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte) (-27), (byte) (-27), (-1));
      pushbackInputStream0.unread(121);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 122, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      byteArrayInputStream0.mark((byte)0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      pushbackInputStream0.unread(122);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream2, 87, 108, (byte)0);
      simpleCharStream1.ReInit((InputStream) bufferedInputStream0);
      pushbackInputStream0.mark(119);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArrayInputStream0.mark(87);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-40), (byte) (-40));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-40), 81);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 593);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, bufferedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 18);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream1, (byte) (-40), (byte) (-40), 593);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, (byte) (-40), (byte) (-40), 3520);
      bufferedInputStream0.read();
      pushbackInputStream0.skip((-1544L));
      bufferedInputStream1.available();
      pushbackInputStream0.unread((-1186));
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      XPathParserTokenManager xPathParserTokenManager0 = new XPathParserTokenManager((org.apache.commons.jxpath.ri.parser.SimpleCharStream) null);
      char[] charArray0 = new char[10];
      charArray0[0] = 'T';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(charArrayReader0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1513);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 118, 81, (-425));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 81, 85, (-2135));
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(pushbackInputStream0, 971);
      bufferedInputStream2.skip((-425));
      byteArrayInputStream0.reset();
      bufferedInputStream1.available();
      pushbackInputStream0.unread(118);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.skip(87);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      pushbackInputStream0.unread(byteArray0);
      simpleCharStream0.prevCharIsCR = false;
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)0;
      intArray0[1] = 61;
      intArray0[2] = 87;
      intArray0[3] = 87;
      intArray0[4] = 117;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      pushbackInputStream0.unread(61);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1144), 87, (byte)0);
      pushbackInputStream0.mark((byte)0);
      byteArrayInputStream0.mark((-1144));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)22, (byte)113);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 806, (byte)113);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 100);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, 806, 806, (-770));
      pushbackInputStream0.unread(37);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)106, (byte)106, (byte)106);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      pushbackInputStream0.unread((-1204));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 19, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 87);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.unread(19);
      byteArrayInputStream0.skip(1742L);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      byteArrayInputStream0.mark(19);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/2_jxpath/D");
      boolean boolean0 = simpleCharStream0.prevCharIsLF;
      simpleCharStream0.prevCharIsCR = false;
      pushbackInputStream0.unread(34);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-1144), 87, (byte)0);
      simpleCharStream1.ReInit((InputStream) byteArrayInputStream0);
      pushbackInputStream0.mark(19);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      byteArrayInputStream0.mark((-1144));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)111);
      byteArrayInputStream0.read(byteArray0, (int) (byte)0, (int) (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 39);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 39);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.mark((byte)0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)111, (byte)0, 97);
      pushbackInputStream0.markSupported();
      pushbackInputStream0.unread(1066);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.markSupported();
      pushbackInputStream0.mark(39);
      pushbackInputStream0.unread(97);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 89);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)0, (byte)0, (byte)0);
      byteArrayInputStream1.mark(11);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream1, (byte)0, (byte)0, (-904));
      boolean boolean0 = SimpleCharStream.staticFlag;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream2 = new SimpleCharStream(byteArrayInputStream1, 4606, 20, (-1));
      pushbackInputStream0.unread(89);
      SimpleCharStream simpleCharStream3 = new SimpleCharStream(bufferedInputStream0, 16, 16);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)94;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)94, (byte)94);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)94, 25);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 25);
      byteArrayInputStream1.mark((byte)94);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream1.read(byteArray0);
      pushbackInputStream0.unread((int) (byte)94);
      pushbackInputStream0.unread(119);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0, charset0);
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)106);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      FileSystemHandling.shouldAllThrowIOExceptions();
      pushbackInputStream0.unread(22);
      pushbackInputStream0.unread(69);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)18);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)18, (byte)18);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream0.unread(48);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 48, 103);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)18);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)18, (byte)0, (byte)0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(bufferedInputStream0, (byte)18, 33, (-1));
      pushbackInputStream0.unread(102);
      pushbackInputStream0.unread(102);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 159, 159);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      pushbackInputStream0.unread(112);
      pushbackInputStream0.mark(112);
      pushbackInputStream0.unread((int) (byte)111);
      pushbackInputStream0.unread(112);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0, charset0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(inputStreamReader0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[0] = (byte)114;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)114, (byte)114);
      byteArrayInputStream0.mark((-2767));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)114);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(dataInputStream0, (byte)114, (byte)114, (-707));
      pushbackInputStream0.unread((int) (byte)114);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, 119);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 59);
      pushbackInputStream0.read(byteArray0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      bufferedInputStream1.read();
      pushbackInputStream0.unread((int) (byte)106);
      pushbackInputStream0.unread(93);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-4436), (byte)106);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1205), (-1205));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)111);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)111);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-1205), (-1205), 3373);
      pushbackInputStream0.mark((-1148));
      pushbackInputStream0.unread(99);
      int int0 = 109;
      pushbackInputStream0.unread(109);
      pushbackInputStream0.mark(483);
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream0.mark((byte)111);
      pushbackInputStream0.unread(53);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)18);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 94);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.skip((byte)18);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 94, 94, (byte)0);
      pushbackInputStream0.unread(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      pushbackInputStream0.unread(86);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, 100, 94, 2764);
      pushbackInputStream0.mark((-1));
      byteArrayInputStream0.mark((-3138));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)105);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 9, 62);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 103);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(bufferedInputStream0, (byte)105, (byte)106, 62);
      pushbackInputStream0.mark(279);
      pushbackInputStream0.unread(1579);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      byteArray0[0] = (byte)91;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)91, (byte)91);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)91);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)91;
      pushbackInputStream0.read(byteArray1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (byte)91, 102, (-4436));
      pushbackInputStream0.unread((int) (byte)91);
      pushbackInputStream0.skip((byte)91);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      pushbackInputStream0.unread(90);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(pushbackInputStream0, (byte)91, 104, 2);
      byteArrayInputStream0.skip(104);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)62);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)106);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, 279, (byte)106, (byte)106);
      bufferedInputStream0.read(byteArray0);
      pushbackInputStream0.unread(279);
      pushbackInputStream0.unread((int) (byte)62);
      byte[] byteArray1 = new byte[1];
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)106, 107);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i}~h");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3794), (-4946));
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 77);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0, (-3794), (-3794), 43);
      pushbackInputStream0.unread((-3794));
  }
}
