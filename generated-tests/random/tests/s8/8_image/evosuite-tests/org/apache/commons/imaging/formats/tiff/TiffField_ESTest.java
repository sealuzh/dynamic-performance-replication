/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 16:52:39 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.CharArrayWriter;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-25);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1969), 340, fieldTypeShort0, 4L, 5416L, byteArray0, byteOrder0, 2147475402);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1969), tiffField0.getTag());
      assertEquals(2147475402, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(340, tiffField0.getDirectoryType());
      assertEquals(231, int0);
      assertEquals(5416, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1969), 340, fieldTypeShort0, 4L, 5416L, byteArray0, byteOrder0, 2147475402);
      int int0 = tiffField0.getTag();
      assertEquals((-1969), int0);
      assertEquals(5416, tiffField0.getOffset());
      assertEquals(2147475402, tiffField0.getSortHint());
      assertEquals(340, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(283, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)70;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-25), 283, fieldTypeLong0, 379L, 283, byteArray0, byteOrder0, (-383));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-25), tiffField0.getTag());
      assertEquals(1516, tiffField0.getBytesLength());
      assertEquals(283, tiffField0.getOffset());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals((-383), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-86);
      byteArray0[4] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5654), 450, fieldTypeRational0, 1854L, (-1L), byteArray0, byteOrder0, (byte)121);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(450, tiffField0.getDirectoryType());
      assertEquals(14832, tiffField0.getBytesLength());
      assertEquals((-1), int0);
      assertEquals((-5654), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)44;
      TiffField tiffField0 = new TiffField(5, 1173, fieldTypeByte0, 1L, (-2252L), byteArray0, byteOrder0, 529);
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals(1173, tiffField0.getDirectoryType());
      assertEquals((-2252), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(529, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-731), fieldTypeShort0, 255L, 0, byteArray0, byteOrder0, 2);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-731), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(510, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2466), (-2466), fieldTypeByte0, 255L, 0, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldTypeName();
      assertEquals((-2466), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2466), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 1L, (-662L), byteArray0, byteOrder0, (byte)47);
      tiffField0.getCount();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-662), tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1820), (-1820), fieldTypeRational0, (-1820), 991L, byteArray0, (ByteOrder) null, 65535);
      tiffField0.getByteOrder();
      assertEquals((-1820), tiffField0.getDirectoryType());
      assertEquals(991, tiffField0.getOffset());
      assertEquals((-1820), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(142, 1, fieldTypeAscii0, 1L, 1, byteArray0, byteOrder0, (byte)49);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1, byteArray1.length);
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(142, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(1307);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(446, 2146365749, fieldTypeLong0, 446, 446, byteArray0, byteOrder0, (-996));
      tiffField0.getByteArrayValue();
      assertEquals(446, tiffField0.getTag());
      assertEquals((-996), tiffField0.getSortHint());
      assertEquals(2146365749, tiffField0.getDirectoryType());
      assertEquals(446, tiffField0.getOffset());
      assertEquals(1784, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1533, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2358), 1533, fieldTypeFloat0, 179L, 1533, byteArray0, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1820), (-1820), fieldTypeRational0, (-1820), 991L, byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 454, fieldTypeRational0, 2115L, 454, (byte[]) null, byteOrder0, 50);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "z`^eC(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, (byte)19);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 1L, (-662L), byteArray0, byteOrder0, (byte)47);
      tiffField0.getFieldType();
      assertEquals(5, tiffField0.getTag());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals((-662), tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1461), 0, fieldTypeDouble0, 0, 8408L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals((-1461), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(8408, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5909), (-181), fieldTypeDouble0, 0L, (byte) (-1), byteArray0, byteOrder0, 273);
      tiffField0.getTagInfo();
      assertEquals((-5909), tiffField0.getTag());
      assertEquals((-181), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(273, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, (byte)19);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      int int0 = tiffField0.getBytesLength();
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(694, int0);
      assertEquals((-2599), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147108541, "... (");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "... (");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3187, 3187, fieldTypeFloat0, 5728L, (-1485L), byteArray0, byteOrder0, (-826));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 1L, (-662L), byteArray0, byteOrder0, (byte)47);
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-662), tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(283, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-25), 283, fieldTypeLong0, 379L, 283, byteArray0, byteOrder0, (-383));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1516, tiffField0.getBytesLength());
      assertEquals(283, tiffField0.getDirectoryType());
      assertEquals((-383), tiffField0.getSortHint());
      assertEquals(283, tiffField0.getOffset());
      assertEquals((-25), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2514, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5930, 5930, fieldTypeByte0, 43L, 2514, byteArray0, byteOrder0, (byte) (-124));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4a72e838 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 1L, (-662L), byteArray0, byteOrder0, (byte)47);
      tiffField0.getIntValueOrArraySum();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-662), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3140, 3140, fieldTypeByte0, 3140, 3140, byteArray0, byteOrder0, (-1182));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2f402145 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1982292597), "Unknown: ");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4330, (-1982292597), fieldTypeFloat0, 4330, 1L, byteArray0, byteOrder0, 4330);
      tiffField0.getDoubleArrayValue();
      assertEquals(4330, tiffField0.getSortHint());
      assertEquals(4330, tiffField0.getTag());
      assertEquals(17320, tiffField0.getBytesLength());
      assertEquals((-1982292597), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, " (0x");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, 716L, 716L, byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getDoubleArrayValue();
      assertEquals(5728, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(716, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(694, tiffField0.getBytesLength());
      assertEquals((-2599), tiffField0.getTag());
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1864, fieldTypeRational0, 255L, (-297L), byteArray0, byteOrder0, (byte) (-36));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-297), tiffField0.getOffset());
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals(1864, tiffField0.getDirectoryType());
      assertEquals(2040, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, 1, byteArray0, byteOrder0, (byte) (-98));
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-98), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(226, 32898, fieldTypeLong0, 4L, 226, byteArray0, byteOrder0, (-2145786031));
      tiffField0.getIntArrayValue();
      assertEquals(32898, tiffField0.getDirectoryType());
      assertEquals((-2145786031), tiffField0.getSortHint());
      assertEquals(226, tiffField0.getOffset());
      assertEquals(226, tiffField0.getTag());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeAscii0, 2190L, 122, byteArray0, byteOrder0, (byte) (-112));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5d4e40ee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1540, "^jS8");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-120);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-750), 1540, fieldTypeRational0, 1540, 2612L, byteArray0, byteOrder0, (byte)90);
      tiffField0.getIntArrayValue();
      assertEquals(1540, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals((-750), tiffField0.getTag());
      assertEquals(12320, tiffField0.getBytesLength());
      assertEquals(2612, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2380, 2380, fieldTypeByte0, 1L, 2380, byteArray0, (ByteOrder) null, (-1488));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(2380, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2380, tiffField0.getDirectoryType());
      assertEquals((-1488), tiffField0.getSortHint());
      assertEquals(2380, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2599), tiffField0.getTag());
      assertEquals(347L, tiffField0.getCount());
      assertEquals(694, tiffField0.getBytesLength());
      assertEquals(287, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-988), "SG{8c7");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte)95;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "SG{8c7");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1633, 622, fieldTypeAscii0, 851L, 622, byteArray0, byteOrder0, (byte) (-10));
      String string0 = tiffField0.getStringValue();
      assertEquals(622, tiffField0.getOffset());
      assertEquals(1633, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(622, tiffField0.getDirectoryType());
      assertEquals((-10), tiffField0.getSortHint());
      assertEquals(851, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-988), "SG{8c7");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "SG{8c7");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1633, 622, fieldTypeAscii0, 851L, 622, byteArray0, byteOrder0, (byte) (-10));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@6fabf979
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4204, "z6");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, 4204, 4204, byteArray0, byteOrder0, 109);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffffef)", string0);
      assertEquals(109, tiffField0.getSortHint());
      assertEquals((-17), tiffField0.getDirectoryType());
      assertEquals(4204, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(48324, 0, fieldTypeByte0, 2147483647L, 2147483647L, byteArray0, byteOrder0, 2147127927);
      String string0 = tiffField0.getTagName();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals("ImageDataDiscard", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(48324, tiffField0.getTag());
      assertEquals(2147127927, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2153, "");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2153, 50833, fieldTypeFloat0, 2153, (-197L), byteArray0, byteOrder0, (byte) (-88));
      String string0 = tiffField0.toString();
      assertEquals(50833, tiffField0.getDirectoryType());
      assertEquals((-88), tiffField0.getSortHint());
      assertEquals((-197), tiffField0.getOffset());
      assertEquals("2153 (0x869: Unknown Tag): 0.0, 0.0 (2153 )", string0);
      assertEquals(8612, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(8, "");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeByte0, 8, (-269L), byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-269), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 793);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "f#*iX7cJ");
      assertEquals(63, charArrayWriter0.size());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1461), 0, fieldTypeDouble0, 0, 8408L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8408, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1461), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2900), (-2900), fieldTypeLong0, 2491L, 2491L, byteArray0, (ByteOrder) null, (byte)100);
      String string0 = tiffField0.toString();
      assertEquals(2491, tiffField0.getOffset());
      assertEquals(100, tiffField0.getSortHint());
      assertEquals("-2900 (0xfffff4ac: Unknown Tag): 0, 0 (2491 SLong)", string0);
      assertEquals((-2900), tiffField0.getDirectoryType());
      assertEquals(9964, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OriginalRawFileDigest");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2599), tiffField0.getTag());
      assertEquals(694, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(347L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(122, 122, fieldTypeAscii0, 2190L, 122, byteArray0, byteOrder0, (byte) (-112));
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(122, tiffField0.getOffset());
      assertEquals(2190L, tiffField0.getCount());
      assertEquals(2190, tiffField0.getBytesLength());
      assertEquals(122, tiffField0.getTag());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(122, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(142, 1, fieldTypeAscii0, 1L, 1, byteArray0, byteOrder0, (byte)49);
      String string0 = tiffField0.getValueDescription();
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(142, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoUndefined");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1434), (-2365), fieldTypeByte0, 1L, 12224L, byteArray0, byteOrder0, 2250);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(12224, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2250, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2365), tiffField0.getDirectoryType());
      assertEquals((-1434), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1260), 0, fieldTypeByte0, (-1260), 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1260), tiffField0.getBytesLength());
      assertNull(tiffElement0);
      assertEquals((-1260), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-731), fieldTypeShort0, 255L, 0, byteArray0, byteOrder0, 2);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-731), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4204, "z6");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, 4204, 4204, byteArray0, byteOrder0, 109);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-121), 4204);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(4204, tiffField0.getOffset());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals((-17), tiffField0.getTag());
      assertEquals((-17), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4204, "z6");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, 4204, 4204, byteArray0, byteOrder0, 109);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-121), 4204);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(109, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: z6", string0);
      assertEquals(4204, tiffField0.getOffset());
      assertEquals((-17), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-17), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1461), 0, fieldTypeDouble0, 0, 8408L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(8408, tiffField0.getOffset());
      assertEquals((-1461), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147108541, "... (");
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "... (");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3187, 3187, fieldTypeFloat0, 5728L, (-1485L), byteArray0, byteOrder0, (-826));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-826), tiffField0.getSortHint());
      assertEquals(3187, tiffField0.getDirectoryType());
      assertEquals(3187, tiffField0.getTag());
      assertEquals((-1485), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-988), "SG{8c7");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "SG{8c7");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1633, 622, fieldTypeAscii0, 851L, 622, byteArray0, byteOrder0, (byte) (-10));
      tiffField0.getFieldTypeName();
      assertEquals(622, tiffField0.getOffset());
      assertEquals((-10), tiffField0.getSortHint());
      assertEquals(1633, tiffField0.getTag());
      assertEquals(622, tiffField0.getDirectoryType());
      assertEquals(851L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      int int0 = tiffField0.getOffset();
      assertEquals(287, tiffField0.getSortHint());
      assertEquals((-2599), tiffField0.getTag());
      assertEquals(347L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, (byte)19);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, (byte)19);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(19, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(347, "JPEGQTables");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2599), 1, fieldTypeShort0, 347, 1, byteArray0, byteOrder0, 287);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(694, tiffField0.getBytesLength());
      assertEquals("-2599 (0xfffff5d9: Unknown Tag): ", string0);
      assertEquals(287, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4204, "z6");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-17), (-17), fieldTypeShort0, 4204, 4204, byteArray0, byteOrder0, 109);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1079, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3520, 1626, fieldTypeLong0, 1079, 3520, byteArray0, byteOrder0, (byte)11);
      tiffField0.getDoubleArrayValue();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(4316, tiffField0.getBytesLength());
      assertEquals(3520, tiffField0.getTag());
      assertEquals(3520, tiffField0.getOffset());
      assertEquals(1079L, tiffField0.getCount());
      assertEquals(1626, tiffField0.getDirectoryType());
  }
}
