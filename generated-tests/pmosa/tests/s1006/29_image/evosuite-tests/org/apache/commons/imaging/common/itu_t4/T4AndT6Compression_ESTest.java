/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 05:41:30 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, 18, (byte) (-1), false);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      T4AndT6Compression.decompressT6(byteArray0, (byte)0, (-122));
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (-122), (-122));
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)95, (byte)95, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 0, 0, false);
      T4AndT6Compression.compressModifiedHuffman(byteArray1, (-1053), 64);
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-113);
      byte byte0 = (byte)3;
      byteArray2[1] = (byte)3;
      byteArray2[2] = (byte)0;
      byte byte1 = (byte)0;
      byteArray2[3] = (byte)0;
      int int0 = 17;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray2, 1101, 17, true, (-813));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-50);
      byte byte0 = (byte) (-2);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-71);
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte) (-98);
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, (byte)0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte) (-2), 3, true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 24, 24, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-3);
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)48;
      byte byte1 = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)6;
      int int0 = 562;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, 562, 0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray1, 8, (-90));
      T4AndT6Compression.compressT4_1D(byteArray1, 0, 63, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT4_2D(byteArray2, (-2741), (-2), true, (byte)6);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, 0, 0);
      byte[] byteArray2 = new byte[0];
      T4AndT6Compression.compressT4_2D(byteArray2, 0, 0, false, 0);
      T4AndT6Compression.compressT6(byteArray1, 0, 0);
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray2, 1008, 0, false);
      byte[] byteArray4 = T4AndT6Compression.decompressModifiedHuffman(byteArray2, 0, 0);
      T4AndT6Compression.compressT6(byteArray0, 0, 1625);
      byte[] byteArray5 = T4AndT6Compression.compressT4_1D(byteArray4, 64, (-511), true);
      byte[] byteArray6 = T4AndT6Compression.compressT4_2D(byteArray3, 0, (-151), false, 746);
      T4AndT6Compression.compressModifiedHuffman(byteArray3, 0, 746);
      T4AndT6Compression.compressModifiedHuffman(byteArray5, (-511), 8);
      T4AndT6Compression.decompressModifiedHuffman(byteArray6, 9, 0);
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-128);
      byteArray7[1] = (byte)0;
      byteArray7[2] = (byte) (-1);
      byteArray7[3] = (byte)0;
      byteArray7[4] = (byte) (-108);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray7, 1318, 74, false, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 0);
      T4AndT6Compression.compressT4_1D(byteArray0, 0, 0, true);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 0, 45, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1619), 42);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      byte byte0 = (byte)40;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byte byte1 = (byte) (-86);
      byteArray0[6] = (byte) (-86);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)40, 1037);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-128);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1, 128);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)104;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)104, (byte)104);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.compressT4_1D(byteArray0, 0, 0, true);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 0, 0);
      T4AndT6Compression.compressT4_1D(byteArray0, 0, 0, true);
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)40;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte) (-28);
      byteArray2[3] = (byte)30;
      byteArray2[4] = (byte)26;
      byteArray2[5] = (byte)3;
      byteArray2[6] = (byte) (-77);
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray2, 0, 304, true);
      T4AndT6Compression.compressT6(byteArray3, 0, 704);
      byte[] byteArray4 = T4AndT6Compression.decompressT6(byteArray1, 0, 0);
      assertNotSame(byteArray4, byteArray2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, true, 2);
      T4AndT6Compression.decompressT4_1D(byteArray1, (-909), (-909), true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-72), (byte)0, (byte)1, (byte)64, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-2);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)2;
      byteArray0[8] = (byte)2;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, 42, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)16;
      byteArray0[0] = (byte)16;
      byte byte1 = (byte)44;
      byteArray0[1] = (byte)44;
      byte byte2 = (byte)3;
      byteArray0[2] = (byte)3;
      int int0 = 1;
      boolean boolean0 = false;
      T4AndT6Compression.compressT4_1D(byteArray0, 1, (byte)3, false);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)3, 697, false, (-535));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 0);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 0, 4, false, 4);
      assertArrayEquals(new byte[] {(byte)0, (byte)25, (byte) (-88), (byte)0, (byte) (-128), (byte)4, (byte)0, (byte)32, (byte)1}, byteArray2);
      
      byte[] byteArray3 = T4AndT6Compression.compressT6(byteArray1, 4, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)16, (byte)1}, byteArray3);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      int int0 = 26;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 26, 26, true, 26);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)73;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)90;
      byte byte0 = (byte)117;
      byteArray0[5] = (byte)117;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)1;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)2, 749);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1, 4607);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)57;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)57, (byte)57, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1376, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      byteArray0[2] = (byte)82;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 18, 1792, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      byteArray0[2] = (byte)95;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)95, (byte)95, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      byteArray0[2] = (byte)114;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)114, (byte)114, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, 1);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 1, 1, true, 1);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-102), (byte) (-96), (byte)1}, byteArray2);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)0;
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte)12, 0, true);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)52;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)12;
      byteArray1[4] = (byte) (-128);
      byteArray1[5] = (byte)12;
      byteArray1[6] = (byte) (-128);
      byteArray1[7] = (byte)0;
      byteArray1[8] = (byte)12;
      // Undeclared exception!
      T4AndT6Compression.compressT4_2D(byteArray1, 0, 2047, true, (byte) (-128));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 0, 1);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, (-1473), 1, true, 380);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)54;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)37;
      byteArray0[6] = (byte)125;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-2603), (byte)0);
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)54, 0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray1, (byte)0, 0);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray2, (-764), (byte)116, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1397, (-48));
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-48), 1397, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)95;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 64, (byte)95, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, 0, true);
      T4AndT6Compression.decompressT6(byteArray0, 0, 0);
      T4AndT6Compression.compressT4_1D(byteArray0, 0, 0, true);
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)40;
      byteArray2[2] = (byte) (-28);
      byteArray2[3] = (byte)30;
      byteArray2[4] = (byte)26;
      byteArray2[5] = (byte)3;
      byteArray2[6] = (byte) (-77);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 27, 13, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-70);
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-46);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)52, 43);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 52
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte)14;
      byteArray0[1] = (byte)14;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 460, 670);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)1;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)1, 39);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)121;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 11, 1712);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)95;
      int int0 = 0;
      T4AndT6Compression.compressT6(byteArray0, 0, 64);
      int int1 = 6;
      int int2 = 24;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 6, 24, true, (byte)95);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 90, 29, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)121;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)121, 11);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-96);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-87);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)12;
      byteArray0[8] = (byte)9;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)15, 44);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)6;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)4, (byte)63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)102;
      byteArray0[2] = (byte)102;
      byte byte3 = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 64, 28, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      int int0 = 1;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      int int1 = 8;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 8, 8, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte) (-2);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)9;
      byte byte0 = (byte)0;
      byteArray0[8] = (byte)0;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)9, 42, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)112;
      byteArray0[7] = (byte) (-54);
      byteArray0[8] = (byte)13;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)15, 34, false, 25);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte) (-2);
      byteArray0[3] = (byte)15;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)12;
      byteArray0[8] = (byte)9;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)15, 44);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      int int0 = 9;
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 9, 9);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 9, 4704);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 132, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-753), 6, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 18, 6, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      int int0 = (-1);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), 413, true);
      // Undeclared exception!
      T4AndT6Compression.decompressT4_2D(byteArray1, 1301, 1301, true);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)73;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)73, (byte)73, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-7);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (-2209), 21, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)81;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)2, (byte)52, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[32];
      byteArray0[2] = (byte)119;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)119, 27, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      byte byte0 = (byte)112;
      byteArray0[2] = (byte)112;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)112, (byte)112, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 9, 9, true);
      int int0 = 11;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 11, 126, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
