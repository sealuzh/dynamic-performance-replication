/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:40:12 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StreamCorruptedException;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Enumeration;
import java.util.zip.Inflater;
import okio.Buffer;
import okio.BufferedSink;
import okio.BufferedSource;
import okio.ByteString;
import okio.HashingSink;
import okio.HashingSource;
import okio.InflaterSource;
import okio.Options;
import okio.Pipe;
import okio.RealBufferedSink;
import okio.RealBufferedSource;
import okio.Segment;
import okio.SegmentPool;
import okio.SegmentedByteString;
import okio.Source;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Buffer_ESTest extends Buffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte byte0 = (byte)49;
      buffer0.indexOf((byte)49, 4657L, 4657L);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString0 = realBufferedSource0.readByteString();
      // Undeclared exception!
      try { 
        buffer0.indexOf(byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bytes is empty
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      Pipe.PipeSink pipe_PipeSink0 = pipe0.new PipeSink();
      Buffer buffer0 = pipe0.buffer;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Z(", true);
      Buffer buffer1 = buffer0.writeLongLe(16711680L);
      // Undeclared exception!
      try { 
        buffer0.writeAll(buffer1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString0 = realBufferedSource0.readByteString();
      // Undeclared exception!
      try { 
        buffer0.hmacSha256(byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.writeTo((OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 72;
      Buffer buffer1 = buffer0.writeByte(72);
      long long0 = (-1153L);
      ByteString byteString0 = null;
      Buffer buffer2 = buffer1.writeDecimalLong(1000000000000L);
      // Undeclared exception!
      try { 
        buffer2.indexOfElement((ByteString) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      Pipe.PipeSink pipe_PipeSink0 = pipe0.new PipeSink();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(pipe_PipeSink0);
      pipe_PipeSink0.flush();
      Buffer buffer0 = realBufferedSink0.buffer.writeUtf8("");
      ByteString[] byteStringArray0 = new ByteString[0];
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.segmentSizes();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      ByteString byteString0 = hashingSource0.hash();
      hashingSource0.hash();
      buffer0.readUtf8Line();
      realBufferedSource0.buffer.indexOfElement(byteString0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeIntLe(95);
      buffer1.readByteArray();
      buffer1.sha512();
      // Undeclared exception!
      try { 
        buffer0.readShortLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("ZhAe(:E@t");
      buffer1.readShortLe();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = new Integer(2238);
      buffer0.readUtf8CodePoint();
      Charset.defaultCharset();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer(100000000000000000L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // resizeBuffer() only permitted for read/write buffers
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong((byte)114);
      buffer0.readDecimalLong();
      buffer0.readAll(buffer1);
      buffer1.sha1();
      buffer1.readUnsafe();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readUnsafe(buffer_UnsafeCursor0);
      // Undeclared exception!
      try { 
        buffer0.readAndWriteUnsafe(buffer_UnsafeCursor1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffer
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      Pipe.PipeSink pipe_PipeSink0 = pipe0.new PipeSink();
      Buffer buffer0 = pipe0.buffer;
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      ByteString byteString0 = hashingSource0.hash();
      HashingSink hashingSink0 = HashingSink.hmacSha1(buffer0, byteString0);
      ByteString byteString1 = hashingSink0.hash();
      hashingSink0.hash();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString[] byteStringArray0 = new ByteString[1];
      byteStringArray0[0] = byteString1;
      Options options0 = Options.of(byteStringArray0);
      options0.get(0);
      buffer0.rangeEquals((long) 0, byteString0);
      buffer0.writeAll(hashingSource0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(72);
      buffer1.rangeEquals(942L, (ByteString) null, 72, 2146760592);
      buffer1.sha1();
      // Undeclared exception!
      try { 
        buffer1.write((byte[]) null, 557, 72);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString[] byteStringArray0 = new ByteString[4];
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString0 = realBufferedSource0.readByteString(0L);
      byteStringArray0[0] = byteString0;
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      ByteString byteString1 = hashingSource0.hash();
      byteStringArray0[1] = byteString1;
      HashingSink hashingSink0 = HashingSink.hmacSha1(realBufferedSource0.buffer, byteString1);
      ByteString byteString2 = hashingSink0.hash();
      byteStringArray0[2] = byteString2;
      hashingSink0.hash();
      Options options0 = Options.of(byteStringArray0);
      ByteString byteString3 = options0.get(0);
      buffer0.rangeEquals(0L, byteString3);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeByte(79);
      // Undeclared exception!
      try { 
        buffer0.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x4f
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLong(800L);
      buffer0.writeInt((-515));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Pipe pipe0 = new Pipe(14L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.buffer();
      Buffer buffer2 = buffer0.writeHexadecimalUnsignedLong(14L);
      buffer1.snapshot();
      buffer2.size();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Pipe pipe0 = new Pipe(8L);
      Buffer buffer0 = pipe0.buffer;
      try { 
        buffer0.readUtf8LineStrict();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readByteArray();
      // Undeclared exception!
      try { 
        buffer0.readUtf8Line(10L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=9 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.snapshot();
      ByteString[] byteStringArray0 = new ByteString[2];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      Options.of(byteStringArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      // Undeclared exception!
      try { 
        buffer0.readFully((Buffer) null, (long) 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer1 = buffer0.writeByte(72);
      // Undeclared exception!
      try { 
        buffer1.readAll(buffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.readByteString(0L);
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      hashingSource0.hash();
      buffer0.readFully(realBufferedSource0.buffer, 0L);
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.readByte();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readAndWriteUnsafe();
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      realBufferedSink0.writeShort((-1));
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newSize < 0: -1
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeShort(3270);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.readByteString(0L);
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      hashingSource0.hash();
      try { 
        buffer0.readFully(realBufferedSource0.buffer, 1125L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      Buffer buffer2 = buffer1.writeLongLe(1728L);
      buffer1.flush();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString0 = realBufferedSource0.readByteString();
      HashingSink hashingSink0 = HashingSink.hmacSha512(buffer_UnsafeCursor0.buffer, byteString0);
      ByteString byteString1 = hashingSink0.hash();
      buffer2.indexOfElement(byteString1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Pipe pipe0 = new Pipe(100000000L);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.start = (-421);
      // Undeclared exception!
      try { 
        buffer0.indexOf((byte)0, 100000000L, (long) (-421));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size=0 fromIndex=100000000 toIndex=-421
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.sha256();
      buffer0.emit();
      buffer0.readByteString();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeByte(72);
      try { 
        buffer0.readUtf8LineStrict(1000000000000L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=1 content=48\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Pipe pipe0 = new Pipe(1107L);
      pipe0.sinkClosed = true;
      Buffer buffer0 = pipe0.buffer;
      buffer0.size = 1107L;
      ByteString byteString0 = buffer0.sha512();
      buffer0.rangeEquals(717L, byteString0, 34, 34);
      Buffer buffer1 = new Buffer();
      buffer1.equals(byteString0);
      // Undeclared exception!
      try { 
        buffer0.readUtf8LineStrict();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      buffer1.equals(buffer0);
      buffer1.sha1();
      // Undeclared exception!
      try { 
        buffer0.getByte((-640L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=-640 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.snapshot();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer1 = buffer0.writeByte((-2019));
      // Undeclared exception!
      try { 
        buffer1.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x1d
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeByte(62);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      buffer0.sha1();
      // Undeclared exception!
      try { 
        buffer1.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x3e
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      MockFile mockFile0 = new MockFile(" > ", " > ");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.write(byteArray0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      buffer0.readUtf8Line();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      String string0 = " > ";
      // Undeclared exception!
      try { 
        buffer0.indexOf((byte)19, (-3112L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size=0 fromIndex=-3112 toIndex=9223372036854775807
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(99);
      buffer1.toString();
      buffer0.readHexadecimalUnsignedLong();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)53;
      ByteString byteString0 = new ByteString(byteArray0);
      buffer0.rangeEquals(8179L, byteString0, (int) (byte)25, (-511));
      buffer1.sha512();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      buffer0.writeHexadecimalUnsignedLong((byte)114);
      Buffer buffer1 = buffer0.writeByte(1898);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.sha1();
      buffer1.readHexadecimalUnsignedLong();
      // Undeclared exception!
      try { 
        buffer0.readUtf8LineStrict((-739L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit < 0: -739
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer1.indexOf((byte)100, 100000L, 100000L);
      buffer0.writeDecimalLong(100000L);
      // Undeclared exception!
      try { 
        buffer0.writeUtf8CodePoint(2084322386);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected code point: 7c3c3c52
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer1 = buffer0.writeIntLe(99);
      buffer1.readInt();
      Buffer buffer2 = buffer0.writeDecimalLong(99);
      Integer integer0 = new Integer(99);
      buffer2.buffer();
      buffer1.timeout();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(79);
      buffer1.toString();
      Buffer buffer2 = buffer0.writeDecimalLong((-3255L));
      // Undeclared exception!
      try { 
        buffer2.writeAll(buffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.flush();
      // Undeclared exception!
      try { 
        buffer0.readDecimalLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readUtf8();
      buffer0.sha1();
      ByteString[] byteStringArray0 = new ByteString[2];
      buffer0.toString();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer1.hmacSha1(byteString0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte byte0 = ObjectStreamConstants.SC_EXTERNALIZABLE;
      buffer1.hashCode();
      buffer1.readByteArray();
      MockFile mockFile0 = new MockFile("");
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      ByteString byteString0 = new ByteString(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hkY");
      // Undeclared exception!
      try { 
        buffer0.writableSegment(65533);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong((byte)114);
      buffer0.flush();
      buffer1.readUnsafe();
      Integer integer0 = new Integer((byte)114);
      buffer0.readShort();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      Pipe.PipeSink pipe_PipeSink0 = pipe0.new PipeSink();
      Buffer buffer0 = pipe0.buffer;
      Segment segment0 = buffer0.writableSegment(3804);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Charset charset0 = Charset.defaultCharset();
      Buffer buffer1 = buffer0.writeString("", charset0);
      segment0.unsharedCopy();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      buffer0.writeLong((-1));
      try { 
        buffer1.require(2506L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Pipe pipe0 = new Pipe(4L);
      Buffer buffer0 = pipe0.buffer;
      Charset charset0 = Charset.defaultCharset();
      charset0.aliases();
      buffer0.writeString("G", charset0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Pipe pipe0 = new Pipe(15L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.buffer();
      Buffer buffer2 = buffer1.writeLongLe(15L);
      pipe0.sourceClosed = false;
      ByteString byteString0 = buffer0.md5();
      buffer1.indexOfElement(byteString0, 15L);
      HashingSource hashingSource0 = HashingSource.md5(buffer2);
      hashingSource0.hash();
      ByteString[] byteStringArray0 = new ByteString[1];
      ByteString byteString1 = hashingSource0.hash();
      byteStringArray0[0] = byteString1;
      Options options0 = Options.of(byteStringArray0);
      buffer2.select(options0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.buffer.writeUtf8("?N]'yvCp]#D5HW;s:a", (-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // beginIndex < 0: -1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readByteString();
      buffer0.request(419L);
      // Undeclared exception!
      try { 
        buffer0.copyTo((OutputStream) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Pipe pipe0 = new Pipe(100L);
      Buffer buffer0 = pipe0.buffer;
      // Undeclared exception!
      try { 
        buffer0.writableSegment((-1614));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      Charset.defaultCharset();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer0.sha256();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer_UnsafeCursor0.buffer.exhausted();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.resizeBuffer(1353L);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not acquired
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      BufferedSink bufferedSink0 = realBufferedSink0.writeDecimalLong(738L);
      Segment segment0 = new Segment();
      ((RealBufferedSink) bufferedSink0).buffer.writableSegment(6);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        realBufferedSink0.buffer.readFrom((InputStream) pipedInputStream0, 6L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.readIntLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer2 = new Buffer();
      HashingSink.sha1(buffer1);
      buffer_UnsafeCursor0.seek(12);
      buffer_UnsafeCursor0.next();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(buffer_UnsafeCursor0.data);
      buffer_UnsafeCursor0.buffer.readFrom((InputStream) byteArrayInputStream0, 8192L);
      buffer0.buffer();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.sha1();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte) (-23);
      byteArray0[7] = (byte)125;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-2), (byte) (-2));
      byteArrayInputStream0.markSupported();
      try { 
        buffer0.readFrom((InputStream) byteArrayInputStream0, (long) (byte)125);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      buffer0.readFrom((InputStream) sequenceInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = new Buffer();
      buffer2.sha256();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2447L);
      buffer1.md5();
      buffer1.readLong();
      Buffer buffer2 = new Buffer();
      // Undeclared exception!
      try { 
        buffer1.readInt();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 4: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(72);
      buffer1.rangeEquals((-1153L), (ByteString) null, 72, 2146760589);
      buffer1.sha1();
      // Undeclared exception!
      try { 
        buffer1.write((byte[]) null, 557, 72);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Pipe pipe0 = new Pipe(2049L);
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.buffer();
      buffer1.rangeEquals(2049L, (ByteString) null, (-2147483646), 761);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong((-2371L));
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer0.readLong();
      buffer_UnsafeCursor0.buffer.snapshot();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      buffer1.writeDecimalLong((-678L));
      Segment segment0 = new Segment((byte[]) null, (-1), (-1), true, true);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Buffer buffer3 = realBufferedSink0.buffer();
      buffer_UnsafeCursor0.buffer.equals(buffer3);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.copyTo(buffer0, (-1L), 9L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=4 offset=-1 byteCount=9
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.segmentSizes();
      buffer0.readUtf8CodePoint();
      // Undeclared exception!
      try { 
        buffer0.read(buffer_UnsafeCursor0.buffer, 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Integer integer0 = new Integer((-2147483625));
      realBufferedSink0.buffer.writeDecimalLong((-2147483625));
      Integer integer1 = new Integer((-2147483625));
      Integer integer2 = new Integer((-2147483625));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Pipe pipe0 = new Pipe(6L);
      Buffer buffer0 = pipe0.buffer;
      buffer0.snapshot();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      buffer0.close();
      buffer0.sha512();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.timeout();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(".outputStream()", true);
      mockFileOutputStream0.flush();
      try { 
        buffer0.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLong(95L);
      byte[] byteArray0 = new byte[6];
      try { 
        buffer0.skip(95L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer1.readByte();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer1.readAndWriteUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.close();
      buffer0.writeUtf8("F%Hh5PWA#_n.e");
      buffer1.indexOfElement(byteString0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Pipe pipe0 = new Pipe(1000L);
      Buffer buffer0 = pipe0.buffer;
      // Undeclared exception!
      try { 
        buffer0.readLongLe();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 8: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2447L);
      Buffer buffer2 = new Buffer();
      buffer1.readInt();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readByteString();
      // Undeclared exception!
      try { 
        buffer0.indexOf((byte)49, (-1L), (-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size=0 fromIndex=-1 toIndex=-1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer;
      // Undeclared exception!
      try { 
        buffer0.readFully((Buffer) null, (long) (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.indexOf((byte) (-77), (long) 8, (long) 8);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Buffer buffer1 = buffer0.writeUtf8CodePoint(19);
      buffer1.segmentSizes();
      // Undeclared exception!
      try { 
        buffer1.readFully((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(79);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      OutputStream outputStream0 = realBufferedSink0.outputStream();
      buffer0.writeTo(outputStream0);
      // Undeclared exception!
      try { 
        buffer1.readHexadecimalUnsignedLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Pipe pipe0 = new Pipe(2L);
      Buffer buffer0 = pipe0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.readFrom((InputStream) pipedInputStream0, (-3054L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -3054
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong((byte)91);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.writeDecimalLong(1);
      try { 
        buffer1.readFully(realBufferedSink0.buffer, (long) (byte)91);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer1 = new Buffer();
      buffer1.writeDecimalLong(0L);
      buffer_UnsafeCursor0.buffer.segmentSizes();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer1.exhausted();
      buffer_UnsafeCursor0.buffer.emitCompleteSegments();
      buffer0.segmentSizes();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer.readAndWriteUnsafe();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        realBufferedSink0.writeString("", (Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // charset == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(95L);
      byte[] byteArray0 = new byte[6];
      HashingSink hashingSink0 = HashingSink.hmacSha256(buffer1, byteString0);
      byteString0.lastIndexOf(byteArray0, 5);
      buffer0.skip((-1639L));
      ByteString byteString1 = hashingSink0.hash();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      realBufferedSource0.buffer.write(byteString0);
      realBufferedSource0.indexOfElement(byteString1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      realBufferedSource0.buffer.readShort();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      Pipe pipe0 = new Pipe(1);
      Buffer buffer0 = pipe0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.seek(37);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=37 > size=0
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-32);
      ByteString byteString0 = new ByteString(byteArray0);
      Buffer buffer1 = buffer0.writeLongLe((byte)121);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteString0.toAsciiUppercase();
      buffer0.clear();
      Buffer buffer2 = buffer1.write(byteArray0);
      buffer0.indexOf(byteString0);
      buffer2.writeDecimalLong((byte) (-32));
      try { 
        buffer2.require((byte)121);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      ByteString byteString0 = buffer1.sha1();
      Buffer buffer2 = buffer1.writeLong(95L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer1.writeUtf8("");
      ByteString[] byteStringArray0 = new ByteString[4];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      byteStringArray0[1] = byteString0;
      byteStringArray0[3] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer2);
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(realBufferedSource0);
      HashingSink hashingSink0 = HashingSink.sha1(realBufferedSource1.buffer);
      hashingSink0.hash();
      Options options1 = Options.of(byteStringArray0);
      // Undeclared exception!
      try { 
        buffer1.selectPrefix(options1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(95L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/T4Z{HOkbT.53");
      FileSystemHandling.createFolder(evoSuiteFile0);
      buffer0.skip((-3446L));
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer2 = realBufferedSource0.buffer.write(byteString0);
      Segment segment0 = realBufferedSource0.buffer.head;
      ByteString[] byteStringArray0 = new ByteString[3];
      byteStringArray0[0] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer2.select(options0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer2.readUnsafe();
      buffer_UnsafeCursor0.next();
      try { 
        realBufferedSource0.buffer.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rNP#}s62,7!'");
      ByteString byteString0 = buffer0.sha1();
      buffer1.writeLong(2811L);
      Pipe pipe0 = new Pipe(1363L);
      Buffer buffer2 = pipe0.buffer;
      byte[] byteArray0 = new byte[0];
      buffer2.read(byteArray0);
      ByteString[] byteStringArray0 = new ByteString[8];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString0;
      HashingSink hashingSink0 = HashingSink.sha1(buffer1);
      ByteString byteString1 = hashingSink0.hash();
      byteStringArray0[2] = byteString1;
      byteStringArray0[3] = byteString0;
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      ByteString byteString2 = hashingSource0.hash();
      byteStringArray0[4] = byteString2;
      byteStringArray0[5] = byteString0;
      byteStringArray0[6] = byteString0;
      byteStringArray0[7] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      buffer0.select(options0);
      // Undeclared exception!
      try { 
        options0.add(byteString0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer.readAndWriteUnsafe();
      realBufferedSink0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      realBufferedSink0.writeDecimalLong((-1L));
      ByteString byteString0 = new ByteString((byte[]) null);
      ByteString byteString1 = new ByteString((byte[]) null);
      // Undeclared exception!
      try { 
        byteString1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Pipe pipe0 = new Pipe(2811L);
      Charset.defaultCharset();
      Buffer buffer0 = pipe0.buffer;
      buffer0.completeSegmentByteCount();
      buffer0.writeHexadecimalUnsignedLong(2811L);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Pipe pipe0 = new Pipe(8192L);
      Buffer buffer0 = pipe0.buffer;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)43;
      ByteString byteString0 = new ByteString(byteArray0);
      buffer0.hmacSha256(byteString0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.close();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not attached to a buffer
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Pipe pipe0 = new Pipe(28L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.buffer();
      Buffer buffer2 = buffer0.writeHexadecimalUnsignedLong(28L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer2.readAndWriteUnsafe();
      buffer1.readUtf8CodePoint();
      long long0 = buffer_UnsafeCursor0.offset;
      buffer0.writeDecimalLong(1000000000000000L);
      buffer2.sha1();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.writeAll((Source) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer.readAndWriteUnsafe();
      realBufferedSink0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      realBufferedSink0.writeDecimalLong((-922337203685477580L));
      ByteString byteString0 = new ByteString((byte[]) null);
      ByteString byteString1 = new ByteString((byte[]) null);
      // Undeclared exception!
      try { 
        byteString1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong(1087L);
      buffer0.readDecimalLong();
      // Undeclared exception!
      try { 
        buffer1.readAll(buffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer1 = buffer0.writeLong(2797L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(".outputStream()", true);
      mockFileOutputStream0.flush();
      buffer1.copyTo((OutputStream) mockFileOutputStream0);
      buffer1.readUtf8CodePoint();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Pipe pipe0 = new Pipe(2L);
      Buffer buffer0 = pipe0.buffer;
      buffer0.readByteArray();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer0.readAndWriteUnsafe(buffer_UnsafeCursor0);
      buffer_UnsafeCursor1.next();
      // Undeclared exception!
      try { 
        buffer0.writeUtf8("|Wt$tC(._w !\"", 2102744405, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex: -1 < 2102744405
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Buffer buffer0 = new Buffer();
      buffer0.require((-1441L));
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong((-1441L));
      Buffer buffer2 = buffer1.writeHexadecimalUnsignedLong((-1441L));
      buffer2.writeLong(71776119061217280L);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer2 = buffer0.writeByte(72);
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer1.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer1.sha1();
      buffer2.hmacSha256(byteString0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      buffer0.rangeEquals((-807L), (ByteString) null, 2940, 2940);
      buffer0.sha1();
      buffer0.readByteArray();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      realBufferedSink0.buffer.readAndWriteUnsafe();
      BufferedSink bufferedSink0 = realBufferedSink0.writeInt((-1));
      realBufferedSink0.writeShort(10);
      buffer0.segmentSizes();
      ((RealBufferedSink) bufferedSink0).buffer.readUtf8Line();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Segment segment0 = new Segment();
      buffer0.writeLong(8197L);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.toString();
      Charset charset0 = Charset.defaultCharset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer0.readString(4L, charset0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("yv#@Oq5$b5c{5");
      buffer1.readShortLe();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.buffer.inputStream();
      Integer integer0 = new Integer(2237);
      buffer0.readUtf8CodePoint();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yv#@Oq5$b5c{5");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      buffer0.size();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.buffer.readDecimalLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9] or '-' character but was 0x23
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pipe pipe0 = new Pipe(15L);
      Buffer buffer0 = pipe0.buffer;
      Buffer buffer1 = buffer0.buffer();
      buffer1.writeLongLe(15L);
      pipe0.sourceClosed = false;
      buffer0.clone();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong((byte)91);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q~EUP1p4v");
      buffer1.indexOf((byte)0, (long) 1, (long) (byte)91);
      buffer1.completeSegmentByteCount();
      buffer0.request(1L);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.snapshot();
      ByteString[] byteStringArray0 = new ByteString[2];
      byteStringArray0[1] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      // Undeclared exception!
      try { 
        buffer0.selectPrefix(options0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = pipe0.buffer;
      byte[] byteArray0 = new byte[1];
      ByteString byteString0 = new ByteString(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Segment segment0 = buffer0.head;
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      BufferedSink bufferedSink0 = realBufferedSink0.writeDecimalLong(3804);
      realBufferedSink0.buffer.clear();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HashingSink hashingSink0 = HashingSink.hmacSha1(buffer0, byteString0);
      hashingSink0.hash();
      ByteString[] byteStringArray0 = new ByteString[1];
      byteStringArray0[0] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      realBufferedSink0.buffer.selectPrefix(options0);
      ((RealBufferedSink) bufferedSink0).buffer.segmentSizes();
      ((RealBufferedSink) bufferedSink0).close();
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.write(byteArray0, (-928), 449);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=1 offset=-928 byteCount=449
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer0.toString();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.writeHexadecimalUnsignedLong(37L);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      HashingSource hashingSource0 = HashingSource.sha1(realBufferedSink0.buffer);
      ByteString byteString0 = hashingSource0.hash();
      buffer0.indexOf(byteString0, 8192L);
      Buffer buffer2 = realBufferedSink0.buffer.writeUtf8("[size=0]");
      buffer1.writeDecimalLong(2147483647L);
      buffer_UnsafeCursor0.buffer.readInt();
      // Undeclared exception!
      try { 
        buffer2.readString(1823L, (Charset) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=8 offset=0 byteCount=1823
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer1.indexOf((byte)100, 99991L, 1000010L);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      buffer0.writeDecimalLong(99991L);
      Pipe pipe0 = new Pipe(99991L);
      Buffer buffer2 = new Buffer();
      buffer2.writeUtf8CodePoint((byte)100);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.writeUtf8("5u0K nS(Wg[5}j&h\",%", 97, 1647);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex > string.length: 1647 > 19
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      ByteString byteString1 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer2);
      realBufferedSource0.indexOf(byteString0, 492L);
      realBufferedSource0.readByteString(2L);
      HashingSource hashingSource0 = HashingSource.hmacSha256(buffer1, byteString1);
      hashingSource0.hash();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteString byteString2 = hashingSource0.hash();
      buffer3.indexOfElement(byteString2, (long) 8);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)118;
      Buffer buffer2 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-1179);
      Segment segment0 = new Segment(byteArray0, 2556, (byte)118, true, true);
      buffer0.write(byteArray0);
      buffer1.writeDecimalLong(9223372036854775807L);
      try { 
        buffer0.require((byte)118);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      buffer1.indexOf(byteString0);
      buffer0.writeIntLe((byte)100);
      // Undeclared exception!
      try { 
        buffer1.readFrom((InputStream) null, (long) (byte)100);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // in == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Charset.defaultCharset();
      Buffer buffer1 = (Buffer)buffer0.emit();
      Inflater inflater0 = new Inflater(false);
      InflaterSource inflaterSource0 = new InflaterSource((BufferedSource) buffer1, inflater0);
      buffer1.write((Source) inflaterSource0, (long) (byte) (-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z|niaBB0oHLB$ba");
      buffer1.indexOf((byte) (-1));
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      MockFile mockFile0 = new MockFile(" > ", " > ");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer0.hashCode();
      // Undeclared exception!
      try { 
        buffer0.readDecimalLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      Integer integer0 = new Integer((-3632));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      HashingSource.sha1(hashingSource0);
      ByteString byteString0 = hashingSource0.hash();
      buffer0.hmacSha512(byteString0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer2 = buffer1.writeHexadecimalUnsignedLong(95);
      buffer1.readByte();
      buffer0.readUtf8();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      ByteString[] byteStringArray0 = new ByteString[0];
      Options options0 = Options.of(byteStringArray0);
      buffer2.select(options0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      Buffer buffer3 = realBufferedSource0.buffer();
      RealBufferedSource realBufferedSource1 = new RealBufferedSource(buffer3);
      RealBufferedSource realBufferedSource2 = new RealBufferedSource(buffer1);
      Options options1 = Options.of(byteStringArray0);
      realBufferedSource2.buffer.selectPrefix(options1);
      realBufferedSource2.buffer.segmentSizes();
      realBufferedSource0.readByteString();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)100;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte)0;
      try { 
        buffer0.readFully(byteArray0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Pipe pipe0 = new Pipe(2506L);
      Buffer buffer0 = pipe0.buffer;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-3);
      ByteString byteString0 = new ByteString(byteArray0);
      Segment segment0 = buffer0.head;
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      BufferedSink bufferedSink0 = realBufferedSink0.writeDecimalLong(3804);
      realBufferedSink0.buffer.clear();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      realBufferedSink0.buffer.write(byteArray0);
      HashingSink hashingSink0 = HashingSink.hmacSha1(buffer0, byteString0);
      hashingSink0.hash();
      ByteString[] byteStringArray0 = new ByteString[1];
      byteStringArray0[0] = byteString0;
      Options options0 = Options.of(byteStringArray0);
      realBufferedSink0.buffer.selectPrefix(options0);
      ((RealBufferedSink) bufferedSink0).buffer.segmentSizes();
      ((RealBufferedSink) bufferedSink0).close();
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.write(byteArray0, 0, 449);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=1 offset=0 byteCount=449
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("yv#@Oq5$b5c{5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer1.writableSegment(953);
      buffer1.readUtf8Line();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Charset charset0 = Charset.defaultCharset();
      Buffer buffer2 = realBufferedSink0.buffer.writeByte(953);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer3 = buffer2.writeString("yv#@Oq5$b5c{5", charset0);
      Buffer buffer4 = buffer1.buffer();
      try { 
        buffer4.write((Source) buffer3, (long) 953);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.equals(buffer0);
      buffer0.sha1();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Inflater inflater0 = new Inflater(true);
      buffer0.snapshot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer0.writeUtf8CodePoint(56319);
      Integer integer0 = new Integer(2126429886);
      realBufferedSink0.buffer();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-952));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      Buffer buffer1 = realBufferedSource0.buffer();
      HashingSink hashingSink0 = HashingSink.sha512(realBufferedSource0.buffer);
      buffer0.writeUtf8CodePoint(8192);
      buffer1.readAll(hashingSink0);
      buffer1.emitCompleteSegments();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      Buffer buffer1 = realBufferedSource0.buffer;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)71;
      ByteString byteString0 = new ByteString(byteArray0);
      // Undeclared exception!
      try { 
        buffer1.indexOf(byteString0, (-4571L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2447L);
      buffer1.readLong();
      Buffer buffer2 = new Buffer();
      // Undeclared exception!
      try { 
        buffer2.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HashingSource hashingSource0 = HashingSource.md5(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      Buffer buffer1 = realBufferedSource0.buffer();
      HashingSink hashingSink0 = HashingSink.sha512(buffer1);
      ByteString byteString0 = hashingSink0.hash();
      Buffer buffer2 = realBufferedSource0.buffer.write(byteString0);
      buffer2.readLongLe();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("byteCount < 0: ", "B'Tg]ma");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // B'Tg]ma
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeByte(72);
      buffer1.rangeEquals((-1153L), (ByteString) null, 72, 2146760589);
      buffer1.sha1();
      Charset.defaultCharset();
      buffer1.writableSegment(72);
      Buffer buffer2 = buffer0.writeShortLe(2146760589);
      // Undeclared exception!
      try { 
        buffer0.writeAll(buffer2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      BufferedSink bufferedSink0 = buffer0.emit();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(bufferedSink0);
      Buffer buffer1 = realBufferedSink0.buffer;
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer1.writeString("timeout", (-2147483646), (-1), charset0);
        fail("Expecting exception: IllegalAccessError");
      
      } catch(IllegalAccessError e) {
         //
         // beginIndex < 0: -2147483646
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readAndWriteUnsafe();
      BufferedSink bufferedSink0 = realBufferedSink0.writeInt(10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ((RealBufferedSink) bufferedSink0).buffer.inputStream();
      realBufferedSink0.writeShort(Integer.MAX_VALUE);
      buffer0.readUtf8Line();
      realBufferedSink0.buffer.hashCode();
      Buffer buffer1 = buffer_UnsafeCursor0.buffer.clone();
      buffer1.writeHexadecimalUnsignedLong(2L);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.readUtf8Line((-664L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=-664
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeDecimalLong(99);
      Integer integer0 = new Integer(99);
      Buffer buffer2 = buffer1.buffer();
      buffer0.timeout();
      buffer2.readHexadecimalUnsignedLong();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readAndWriteUnsafe();
      buffer_UnsafeCursor0.resizeBuffer(99);
      // Undeclared exception!
      try { 
        buffer1.readUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffe
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      ByteString byteString0 = buffer2.sha256();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer_UnsafeCursor0.buffer);
      ByteString byteString1 = new ByteString(buffer_UnsafeCursor0.data);
      buffer2.hmacSha512(byteString0);
      // Undeclared exception!
      try { 
        buffer1.writeUtf8CodePoint(16711680);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected code point: ff0000
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      ByteString byteString0 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = buffer_UnsafeCursor0.buffer;
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer2);
      realBufferedSource0.readByteString(2L);
      HashingSource hashingSource0 = HashingSource.hmacSha256(buffer1, byteString0);
      hashingSource0.hash();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteString byteString1 = hashingSource0.hash();
      buffer3.indexOfElement(byteString1, (long) 8);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte) (-95);
      Charset.defaultCharset();
      Charset.defaultCharset();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      realBufferedSink1.writeDecimalLong(1000000L);
      buffer0.emit();
      realBufferedSink1.buffer.readFully(realBufferedSink0.buffer, 4L);
      realBufferedSink1.buffer.writeAll(buffer0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      Buffer buffer0 = new Buffer();
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer0.writeString("", 65571, (int) (short) (-21267), charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex < beginIndex: -21267 < 65571
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer1 = buffer0.writeLong(2797L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      buffer2.flush();
      // Undeclared exception!
      try { 
        buffer0.readAll(buffer_UnsafeCursor0.buffer);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Buffer buffer0 = new Buffer();
      try { 
        buffer0.readUtf8LineStrict(3804L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=0 content=\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(95L);
      HashingSink hashingSink0 = HashingSink.hmacSha256(buffer1, byteString0);
      buffer0.skip((-1629L));
      hashingSink0.hash();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      realBufferedSource0.buffer();
      Segment segment0 = realBufferedSource0.buffer.head;
      try { 
        buffer0.readUtf8LineStrict(5L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=5 content=000000000000005f\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      buffer0.snapshot();
      Integer integer0 = new Integer((-1701));
      buffer0.writeUtf8CodePoint(1674);
      // Undeclared exception!
      try { 
        buffer1.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer1.writeUtf8("");
      Buffer buffer3 = buffer1.writeLong(2812L);
      buffer3.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer3.readUnsafe();
      buffer_UnsafeCursor0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer2.write(buffer_UnsafeCursor0.data);
      buffer1.readUtf8LineStrict(2147483647L);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(95L);
      byte[] byteArray0 = new byte[2];
      buffer1.readFully(byteArray0);
      HashingSink hashingSink0 = HashingSink.hmacSha256(buffer1, byteString0);
      ByteString byteString1 = hashingSink0.hash();
      ByteString byteString2 = new ByteString(byteArray0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.indexOfElement(byteString2);
      byteString1.indexOf(byteString2);
      realBufferedSource0.buffer.readShort();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer((-1));
      ByteString[] byteStringArray0 = new ByteString[0];
      byteString2.indexOf(byteString0, (int) (short)0);
      Options options0 = Options.of(byteStringArray0);
      options0.iterator();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer1.select(options0);
      // Undeclared exception!
      try { 
        options0.get((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("okio.Options", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Buffer buffer0 = new Buffer();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-32);
      Integer integer0 = new Integer(1073741824);
      Buffer buffer1 = new Buffer();
      buffer0.writeDecimalLong(100000000000000L);
      buffer0.writeShortLe((byte) (-32));
      Integer integer1 = new Integer((byte) (-32));
      ByteString byteString0 = new ByteString(byteArray0);
      byteString0.toAsciiUppercase();
      buffer1.indexOf(byteString0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 72;
      buffer0.writeByte(72);
      long long0 = (-1153L);
      ByteString byteString0 = null;
      int int1 = 2146760589;
      // Undeclared exception!
      try { 
        buffer0.write((ByteString) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteString == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      MockFile mockFile0 = new MockFile(" > ", " > ");
      byte[] byteArray0 = new byte[1];
      Buffer buffer1 = buffer0.writeUtf8(" > ");
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(hashingSource0);
      ByteString byteString0 = new ByteString(byteArray0);
      realBufferedSource0.rangeEquals((-7L), byteString0);
      buffer1.readShort();
      realBufferedSource0.readByte();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.close();
      Charset.defaultCharset();
      HashingSink hashingSink0 = HashingSink.md5(realBufferedSource0.buffer);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink0);
      Buffer buffer2 = realBufferedSink0.buffer;
      String string0 = "JZ`a8(q7r<`e5f'u@M";
      // Undeclared exception!
      try { 
        Charset.forName("HmacSHA1");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // HmacSHA1
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("|Wtt(.UY_w !\"");
      buffer1.writeLong(2797L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer1.readUtf8CodePoint();
      Buffer buffer2 = new Buffer();
      buffer0.sha256();
      HashingSink.sha1(buffer1);
      buffer_UnsafeCursor0.seek(0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=21 > size=20
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      ByteString byteString0 = realBufferedSource0.readByteString(0L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/jntMuE&%");
      FileSystemHandling.createFolder(evoSuiteFile0);
      HashingSource hashingSource0 = HashingSource.sha1(buffer0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/25_okio/jntMuE&%");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      hashingSource0.hash();
      hashingSource0.hash();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HashingSource hashingSource1 = HashingSource.md5(buffer0);
      HashingSink hashingSink0 = HashingSink.md5(realBufferedSource0.buffer);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(hashingSink0);
      realBufferedSink0.outputStream();
      realBufferedSink0.writeHexadecimalUnsignedLong(0L);
      hashingSource1.close();
      hashingSource0.hash();
      // Undeclared exception!
      try { 
        HashingSink.hmacSha256(hashingSink0, byteString0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Empty key
         //
         verifyException("javax.crypto.spec.SecretKeySpec", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readAndWriteUnsafe();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      realBufferedSink0.writeDecimalLong((-1L));
      ByteString byteString0 = new ByteString((byte[]) null);
      buffer_UnsafeCursor0.buffer.writeUtf8CodePoint(65535);
      // Undeclared exception!
      try { 
        buffer0.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      int int0 = 99;
      Buffer buffer1 = buffer0.writeByte(99);
      buffer0.readHexadecimalUnsignedLong();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Inflater inflater0 = new Inflater();
      inflater0.reset();
      Buffer buffer2 = realBufferedSink0.buffer;
      Buffer buffer3 = realBufferedSink0.buffer;
      buffer3.readAndWriteUnsafe();
      buffer1.writeDecimalLong(10000000000000L);
      // Undeclared exception!
      try { 
        buffer0.getByte((-1L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=14 offset=-1 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        buffer0.readString((Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // charset == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      buffer1.readUtf8LineStrict(2797L);
      buffer0.snapshot();
      try { 
        buffer0.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // size < 3: 1 (to read code point prefixed 0xffffffed)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong((byte)114);
      buffer0.readDecimalLong();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer2 = buffer0.writeUtf8CodePoint((-1355));
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      buffer0.readAndWriteUnsafe();
      buffer2.inputStream();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer0 = new Integer((-1355));
      buffer1.readUtf8CodePoint();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|RqaC");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      buffer0.size();
      // Undeclared exception!
      try { 
        buffer0.readDecimalLong();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size == 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.snapshot();
      Segment segment0 = new Segment();
      buffer0.head = segment0;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        buffer0.md5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        buffer0.copyTo((Buffer) null, 255L, 10000000L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // out == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HashingSink.sha1(buffer1);
      int int0 = buffer_UnsafeCursor0.start;
      buffer_UnsafeCursor0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer4 = realBufferedSource0.buffer;
      ByteString byteString0 = realBufferedSource0.readByteString((long) 0);
      ByteString byteString1 = byteString0.toAsciiUppercase();
      realBufferedSource0.indexOfElement(byteString1);
      buffer2.rangeEquals((-2348L), byteString0);
      Buffer buffer5 = realBufferedSource0.buffer;
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer5.readUnsafe();
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor1.seek((-604L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=-604 > size=8203
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2830L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer2.toString();
      byte byte0 = ObjectStreamConstants.TC_BLOCKDATA;
      Segment segment0 = new Segment();
      buffer0.writeUtf8("[size=8200 hex=0000000000000b0e0000000000000b0e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\u2026]");
      // Undeclared exception!
      try { 
        buffer2.readHexadecimalUnsignedLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9a-fA-F] character but was 0x0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)50;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte) (-67);
      byteArray0[7] = (byte)75;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Buffer buffer0 = new Buffer();
      buffer0.clear();
      Buffer buffer1 = buffer0.writeUtf8("rNP#}b62,7!'");
      buffer1.writeLong(2811L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rNP#}b62,7!'");
      byte byte0 = ObjectStreamConstants.TC_LONGSTRING;
      buffer1.readUtf8();
      Charset.defaultCharset();
      buffer_UnsafeCursor0.buffer.writeUtf8("rNP#}b62,7!'\u0000\u0000\u0000\u0000\u0000\u0000\n\uFFFD");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer1.skip(12);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rGP#}b62,7!'");
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      int int0 = 2048;
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      realBufferedSink0.buffer.indexOfElement(byteString0, (long) 2048);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      realBufferedSink0.writeByte(2048);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.next();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rNP#}b62,7!'");
      Buffer buffer2 = buffer1.writeLong(2811L);
      buffer2.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      ByteString byteString0 = buffer0.sha256();
      buffer_UnsafeCursor0.end = 20;
      HashingSink.sha1(buffer1);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer.write(byteString0);
      buffer_UnsafeCursor0.buffer.readUtf8LineStrict(2811L);
      buffer4.rangeEquals(0L, byteString0);
      buffer_UnsafeCursor0.seek(20);
      buffer4.segmentSizes();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.sha1();
      buffer0.skip((-1637L));
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = new Buffer.UnsafeCursor();
      // Undeclared exception!
      try { 
        buffer0.write((Buffer) null, 901L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("yv#@Oq5$b5c{5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      realBufferedSink0.writeDecimalLong((-1));
      ByteString byteString0 = new ByteString((byte[]) null);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      Integer integer0 = new Integer(8192);
      buffer0.readUtf8CodePoint();
      buffer2.size();
      realBufferedSink0.buffer.readDecimalLong();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.resizeBuffer(13);
      // Undeclared exception!
      try { 
        buffer2.read(buffer0, 854L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == this
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(95L);
      HashingSink hashingSink0 = HashingSink.hmacSha256(buffer1, byteString0);
      buffer0.skip((-1636L));
      ByteString byteString1 = hashingSink0.hash();
      ByteString[] byteStringArray0 = new ByteString[2];
      byteStringArray0[1] = byteString1;
      Options.of(byteStringArray0);
      buffer1.outputStream();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink0.buffer;
      // Undeclared exception!
      try { 
        buffer0.read(buffer2, (-1095L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1095
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer2.sha256();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer_UnsafeCursor0.buffer);
      realBufferedSource0.readByteString(486L);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      // Undeclared exception!
      try { 
        buffer1.writeUtf8CodePoint(16711680);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected code point: ff0000
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer buffer2 = buffer1.writeLong(2811L);
      ByteString byteString0 = buffer2.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      buffer_UnsafeCursor0.end = 20;
      HashingSink.sha1(buffer1);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer.write(byteString0);
      buffer_UnsafeCursor0.buffer.readUtf8LineStrict(2811L);
      buffer4.rangeEquals(0L, byteString0);
      buffer_UnsafeCursor0.seek(20);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(buffer_UnsafeCursor0.data);
      buffer_UnsafeCursor0.buffer.readFrom((InputStream) byteArrayInputStream0, 20L);
      buffer0.buffer();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "E?aWtWB");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Pipe pipe0 = new Pipe(1095216660504L);
      pipe0.sourceClosed = false;
      Buffer buffer0 = pipe0.buffer;
      buffer0.buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong(1095216660504L);
      Buffer buffer2 = buffer1.writeByte((-4008));
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-1);
      ByteString byteString0 = new ByteString(byteArray0);
      buffer2.indexOf(byteString0);
      buffer0.toString();
      buffer2.readHexadecimalUnsignedLong();
      buffer0.equals(byteArray0);
      buffer1.size();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
      int int0 = buffer_UnsafeCursor0.start;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.buffer.readByteArray();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.readShort();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // size < 2: 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      ByteString byteString0 = buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong(121L);
      HashingSink hashingSink0 = HashingSink.hmacSha256(buffer1, byteString0);
      buffer0.skip((-1637L));
      ByteString byteString1 = hashingSink0.hash();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer1);
      Buffer buffer2 = realBufferedSource0.buffer();
      Segment segment0 = realBufferedSource0.buffer.head;
      ByteString[] byteStringArray0 = new ByteString[3];
      byteStringArray0[0] = byteString0;
      byteStringArray0[1] = byteString1;
      byteStringArray0[2] = byteString1;
      Options options0 = Options.of(byteStringArray0);
      buffer2.select(options0);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.seek((-1));
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      hashingSink0.hash();
      byteString1.sha256();
      // Undeclared exception!
      try { 
        byteString1.substring((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // beginIndex < 0
         //
         verifyException("okio.ByteString", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer1 = buffer0.writeLong(1000000000000L);
      buffer1.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      int int0 = buffer_UnsafeCursor0.end;
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      Buffer buffer3 = new Buffer();
      buffer1.writeDecimalLong(10000000000L);
      buffer2.segmentSizes();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer_UnsafeCursor0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor1.resizeBuffer(0);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7!'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer2 = new Buffer();
      HashingSink.sha1(buffer1);
      buffer_UnsafeCursor0.seek(8192);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.next();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=8204 > size=8203
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLong(95);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)25;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)25;
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer0.writeString("\u2026]", (int) (byte)25, (int) (byte)25, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endIndex > string.length: 25 > 2
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = buffer_UnsafeCursor0.buffer;
      buffer2.clone();
      // Undeclared exception!
      try { 
        buffer0.readUtf8LineStrict((-999998L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // limit < 0: -999998
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer1.writeUtf8("o>3/3jJ?No8>C$MOa;l");
      Buffer buffer3 = buffer1.writeLong(2797L);
      buffer3.snapshot();
      buffer3.readUnsafe();
      Buffer buffer4 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer2.inputStream();
      Integer integer0 = new Integer((-1));
      buffer3.readUtf8CodePoint();
      buffer0.writeDecimalLong(100000000L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4Wk;]Km#w");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4Wk;]Km#w");
      long long0 = buffer_UnsafeCursor0.offset;
      buffer2.size();
      // Undeclared exception!
      try { 
        buffer3.readDecimalLong();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Expected leading [0-9] or '-' character but was 0x3e
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      byte byte0 = (byte)120;
      realBufferedSource0.buffer.writableSegment((byte)120);
      realBufferedSource0.buffer.readUtf8Line();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(realBufferedSource0.buffer);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteString byteString0 = new ByteString(byteArray0);
      boolean boolean0 = realBufferedSource0.closed;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Segment segment0 = new Segment();
      Pipe pipe0 = new Pipe(797L);
      Pipe pipe1 = new Pipe(1000000000000000L);
      Pipe.PipeSource pipe_PipeSource0 = pipe1.new PipeSource();
      realBufferedSink0.buffer.sha1();
      realBufferedSource0.readByteString();
      realBufferedSource0.indexOfElement(byteString0);
      realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        realBufferedSink0.buffer.read(buffer0, (-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rGP#}b62,7'");
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer1.skip(11);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer0);
      realBufferedSink1.buffer.writeShort(65);
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink1.buffer);
      ByteString byteString0 = realBufferedSource0.readByteString();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rGP#}b62,7'");
      buffer0.readFrom((InputStream) mockFileInputStream0, (long) 0);
      BufferedSink bufferedSink0 = realBufferedSink1.writeHexadecimalUnsignedLong(11);
      HashingSink.hmacSha256(bufferedSink0, byteString0);
      realBufferedSink1.buffer.skip(0L);
      realBufferedSource0.indexOfElement(byteString0);
      realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        realBufferedSource0.readByteString((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -1
         //
         verifyException("okio.RealBufferedSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLong(2797L);
      ByteString byteString0 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer0.readUtf8CodePoint();
      Buffer buffer1 = new Buffer();
      Buffer buffer2 = buffer0.write(byteString0);
      buffer2.readUtf8LineStrict(2797L);
      buffer2.rangeEquals(966L, byteString0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.seek((-1063L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=-1063 > size=9
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      buffer1.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      buffer_UnsafeCursor0.next();
      ByteString byteString0 = buffer0.sha256();
      buffer_UnsafeCursor0.buffer.readByte();
      buffer_UnsafeCursor0.end = 8;
      HashingSink.sha1(buffer0);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer.write(byteString0);
      buffer_UnsafeCursor0.buffer.readUtf8LineStrict(2797L);
      buffer4.rangeEquals(8L, byteString0);
      buffer_UnsafeCursor0.seek(0);
      buffer_UnsafeCursor0.next();
      buffer0.readShort();
      buffer_UnsafeCursor0.close();
      buffer2.readUtf8Line();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      int int0 = (-3632);
      buffer2.writeShortLe(8);
      byte byte0 = ObjectStreamConstants.TC_CLASS;
      buffer2.readUtf8CodePoint();
      buffer2.writableSegment(8);
      FileSystemHandling.shouldAllThrowIOExceptions();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer_UnsafeCursor0.buffer);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      buffer1.readByte();
      HashingSource.sha256(buffer1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer_UnsafeCursor0.buffer.indexOf(byteString0);
      // Undeclared exception!
      try { 
        buffer0.readUtf8Line((-713L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=8200 offset=0 byteCount=-713
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("yv#@Oq5$b5c{5");
      buffer1.readShortLe();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.buffer.inputStream();
      Integer integer0 = new Integer(2237);
      buffer0.readUtf8CodePoint();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yv#@Oq5$b5c{5");
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer_UnsafeCursor0.buffer);
      realBufferedSink0.buffer();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer1);
      Buffer buffer2 = realBufferedSink1.buffer;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((short)30329);
      buffer0.writeTo((OutputStream) byteArrayOutputStream0, 5L);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.writeLong(2797L);
      ByteString byteString0 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer0.readUtf8CodePoint();
      buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer1 = new Buffer();
      buffer0.sha256();
      Buffer buffer2 = buffer0.write(byteString0);
      buffer2.readUtf8LineStrict(2797L);
      buffer2.rangeEquals(966L, byteString0);
      // Undeclared exception!
      try { 
        buffer_UnsafeCursor0.seek((-1063L));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // offset=-1063 > size=8201
         //
         verifyException("okio.Buffer$UnsafeCursor", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      buffer2.toString();
      Integer integer0 = new Integer(1674);
      buffer_UnsafeCursor0.buffer.readByte();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[size=8200 hex=0000000000000aed0000000000000aed000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\u2026]");
      buffer2.readUtf8CodePoint();
      buffer_UnsafeCursor0.buffer.writeDecimalLong(8);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "]NR";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]NR");
      HashingSource.sha256(buffer0);
      buffer0.readUtf8();
      Pipe pipe0 = null;
      try {
        pipe0 = new Pipe((byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxBufferSize < 1: 0
         //
         verifyException("okio.Pipe", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      ByteString byteString0 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      buffer2.indexOf((byte) (-4), 0L);
      Segment segment0 = new Segment();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      HashingSource hashingSource0 = HashingSource.md5(buffer3);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink0.buffer);
      Charset charset0 = Charset.defaultCharset();
      realBufferedSource0.readString(0L, charset0);
      realBufferedSource0.readByteString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      OutputStream outputStream0 = realBufferedSink0.outputStream();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer3);
      ByteString byteString1 = hashingSource0.hash();
      byteString0.asByteBuffer();
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      buffer2.readShort();
      Buffer buffer5 = buffer0.copyTo(outputStream0);
      buffer5.copyTo(buffer1, 2849L, 2696L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",:]S0O'dp+5.~(;*");
      HashingSource hashingSource1 = HashingSource.sha256(buffer3);
      hashingSource1.hash();
      // Undeclared exception!
      try { 
        buffer3.indexOfElement(byteString1, (-1640L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex < 0
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer_UnsafeCursor0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor1.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      buffer_UnsafeCursor1.buffer.write(buffer_UnsafeCursor1.data);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      ByteString.decodeBase64("\"Av~\"7V{6QlFY");
      buffer_UnsafeCursor0.buffer.hashCode();
      buffer_UnsafeCursor0.buffer.skip(0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      ByteString byteString0 = buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer0.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      FileSystemHandling.shouldAllThrowIOExceptions();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer2);
      buffer2.indexOf((byte) (-4), 0L);
      Segment segment0 = new Segment();
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer1);
      HashingSource hashingSource0 = HashingSource.md5(buffer2);
      Buffer buffer3 = buffer_UnsafeCursor0.buffer;
      buffer2.sha1();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(realBufferedSink1.buffer);
      realBufferedSource0.readByteString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      OutputStream outputStream0 = realBufferedSink1.outputStream();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x4U V`F<eNE^");
      FileSystemHandling.shouldAllThrowIOExceptions();
      RealBufferedSink realBufferedSink2 = new RealBufferedSink(buffer2);
      ByteString byteString1 = hashingSource0.hash();
      byteString0.asByteBuffer();
      HashingSink.hmacSha256(realBufferedSink0, byteString1);
      short short0 = ObjectStreamConstants.STREAM_MAGIC;
      buffer2.readShort();
      Buffer buffer4 = buffer0.copyTo(outputStream0);
      Buffer buffer5 = buffer4.buffer();
      buffer5.readAll(realBufferedSink2);
      Buffer buffer6 = realBufferedSource0.buffer;
      // Undeclared exception!
      try { 
        buffer6.read(buffer0, (-2166L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // byteCount < 0: -2166
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)100);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(buffer1);
      realBufferedSink1.writeDecimalLong(100000000000L);
      byte byte0 = ObjectStreamConstants.TC_ENUM;
      realBufferedSink0.emit();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      // Undeclared exception!
      try { 
        buffer2.write((byte[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // source == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeUtf8("rNP#}b62,7!'");
      Buffer buffer2 = buffer0.writeLong(1616L);
      ByteString byteString0 = buffer2.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer2.readUtf8CodePoint();
      buffer_UnsafeCursor0.buffer.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      buffer1.sha256();
      buffer3.read(buffer_UnsafeCursor0.data, 114, 0);
      HashingSink.sha1(buffer_UnsafeCursor0.buffer);
      buffer1.write(byteString0);
      try { 
        buffer2.readUtf8LineStrict(8191L);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // \\n not found: limit=8191 content=4e50237d6236322c3721270000000000000650724e50237d6236322c37212700\u2026
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Buffer buffer1 = buffer0.writeLong(945L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      buffer_UnsafeCursor0.next();
      Buffer buffer3 = new Buffer();
      buffer_UnsafeCursor0.start = 1668;
      buffer_UnsafeCursor0.buffer.segmentSizes();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer_UnsafeCursor0.buffer.readAndWriteUnsafe();
      buffer_UnsafeCursor1.resizeBuffer(4L);
      buffer0.toString();
      buffer_UnsafeCursor1.resizeBuffer(0L);
      byte byte0 = (byte) (-65);
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      Integer integer0 = new Integer((-1));
      try { 
        buffer1.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeHexadecimalUnsignedLong((byte)120);
      Buffer buffer2 = buffer0.clone();
      buffer2.readDecimalLong();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      buffer0.sha1();
      Buffer buffer3 = buffer0.writeLong(209241L);
      buffer3.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      int int0 = buffer_UnsafeCursor0.start;
      Buffer buffer4 = new Buffer();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer_UnsafeCursor0.buffer.readAndWriteUnsafe();
      Buffer buffer5 = buffer_UnsafeCursor1.buffer;
      buffer1.sha256();
      ByteString byteString0 = new ByteString(buffer_UnsafeCursor0.data);
      Buffer buffer6 = new Buffer();
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      OutputStream outputStream0 = buffer_UnsafeCursor0.buffer.outputStream();
      buffer3.writeUtf8CodePoint((-3039));
      Buffer buffer7 = buffer5.write(byteString0);
      buffer4.writeAll(buffer2);
      buffer7.copyTo(outputStream0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer1 = buffer0.writeUtf8("o>3/3jJ?No8>C$MOa;l");
      Buffer buffer2 = buffer1.writeLong((-72057594037927936L));
      buffer1.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer2.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer3 = buffer2.write(buffer_UnsafeCursor0.data);
      buffer2.toString();
      buffer3.writeShort(1674);
      Integer integer0 = new Integer((-1150));
      buffer_UnsafeCursor0.buffer.readUtf8CodePoint();
      buffer2.writeDecimalLong((-72057594037927936L));
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      buffer_UnsafeCursor0.buffer.writeUtf8CodePoint(10);
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer1);
      RealBufferedSink realBufferedSink1 = new RealBufferedSink(realBufferedSink0);
      Buffer buffer5 = realBufferedSink1.buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer_UnsafeCursor0.buffer);
      Buffer buffer6 = realBufferedSource0.buffer;
      buffer4.exhausted();
      buffer3.indexOf((byte) (-128));
      Charset.defaultCharset();
      Buffer buffer7 = buffer_UnsafeCursor0.buffer;
      try { 
        realBufferedSource0.buffer.readFully(buffer5, (long) 16711673);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      buffer1.writeUtf8("o>3/3jJ?No8>C$MOa;l");
      Buffer buffer2 = buffer1.writeLong(2797L);
      buffer2.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer2.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer3 = buffer1.write(buffer_UnsafeCursor0.data);
      buffer3.readByteString(8L);
      buffer3.toString();
      buffer_UnsafeCursor0.buffer.writeShort(27);
      Integer integer0 = new Integer(1674);
      buffer3.readUtf8CodePoint();
      buffer_UnsafeCursor0.buffer.writeDecimalLong(27);
      Buffer buffer4 = buffer_UnsafeCursor0.buffer;
      buffer_UnsafeCursor0.buffer.indexOf((byte)16, 4863L);
      boolean boolean0 = buffer_UnsafeCursor0.readWrite;
      // Undeclared exception!
      try { 
        buffer0.writeUtf8CodePoint(16711673);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected code point: fefff9
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Buffer buffer1 = buffer0.writeLong((byte)78);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)85;
      Buffer buffer2 = buffer1.write(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        buffer2.writeString((String) null, (int) (byte)85, 2407, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // string == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Segment segment0 = new Segment();
      HashingSource.sha256(buffer0);
      int int0 = 2092419964;
      Buffer buffer1 = buffer0.writeShort(2092419964);
      buffer0.readShort();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      byte[] byteArray0 = new byte[2];
      Buffer buffer2 = new Buffer();
      buffer1.read(buffer2, 1000L);
      byteArray0[1] = (byte) (-128);
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        realBufferedSink0.writeUtf8((String) null, (int) (byte) (-128), (int) (short) (-13444));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // string == null
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Buffer buffer1 = buffer0.writeByte(97);
      buffer1.sha1();
      buffer0.size = (long) 97;
      buffer0.readHexadecimalUnsignedLong();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte) (-42);
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte) (-12);
      buffer1.write(byteArray0);
      buffer1.toString();
      Buffer buffer2 = buffer1.writeShort(116);
      Integer integer0 = new Integer(857);
      buffer1.readUtf8CodePoint();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      // Undeclared exception!
      try { 
        buffer2.readUnsafe(buffer_UnsafeCursor0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // already attached to a buffe
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2797L);
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer buffer2 = buffer0.write(buffer_UnsafeCursor0.data);
      Buffer buffer3 = new Buffer();
      buffer2.toString();
      Integer integer0 = new Integer((-3632));
      Buffer buffer4 = buffer1.write(buffer_UnsafeCursor0.data);
      buffer4.toString();
      Buffer buffer5 = buffer3.writeShort((-2826));
      Integer integer1 = new Integer(2986);
      try { 
        buffer5.readUtf8CodePoint();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // size < 4: 2 (to read code point prefixed 0xfffffff4)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Segment segment0 = new Segment();
      HashingSource hashingSource0 = HashingSource.sha256(buffer0);
      Buffer buffer1 = buffer0.writeShort(2092419964);
      buffer0.readShort();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RealBufferedSink realBufferedSink0 = new RealBufferedSink(buffer0);
      byte[] byteArray0 = new byte[2];
      buffer1.read(buffer1, 1000L);
      ByteString byteString0 = hashingSource0.hash();
      buffer0.writableSegment(53);
      buffer0.indexOf(byteString0);
      realBufferedSink0.buffer.size();
      ByteString byteString1 = realBufferedSink0.buffer.sha512();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = realBufferedSink0.buffer.readUnsafe();
      buffer_UnsafeCursor0.next();
      buffer_UnsafeCursor0.buffer.read(byteArray0);
      buffer0.write(byteString0);
      buffer1.hmacSha1(byteString1);
      buffer_UnsafeCursor0.buffer.require((short) (-13444));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("'H)k9", false);
      mockFileOutputStream0.flush();
      Buffer buffer2 = buffer_UnsafeCursor0.buffer.copyTo((OutputStream) mockFileOutputStream0);
      buffer1.readUtf8CodePoint();
      // Undeclared exception!
      try { 
        buffer2.getByte(0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // size=0 offset=0 byteCount=1
         //
         verifyException("okio.Util", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = buffer0.writeLong(2447L);
      buffer1.readLong();
      Buffer buffer2 = new Buffer();
      int int0 = (-2676);
      Buffer buffer3 = buffer0.writeIntLe((-2676));
      buffer3.size = 2447L;
      buffer1.readInt();
      Segment segment0 = new Segment();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HmacSHA256");
      buffer2.writeShort((-2676));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Buffer buffer4 = buffer1.writeByte((-1930035201));
      // Undeclared exception!
      try { 
        buffer4.readInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      byte byte0 = (byte)89;
      buffer0.sha1();
      Buffer buffer1 = buffer0.writeLong((byte)89);
      buffer0.snapshot();
      Buffer.UnsafeCursor buffer_UnsafeCursor0 = buffer1.readAndWriteUnsafe();
      buffer_UnsafeCursor0.next();
      Buffer.UnsafeCursor buffer_UnsafeCursor1 = buffer1.readAndWriteUnsafe();
      InputStream inputStream0 = buffer_UnsafeCursor1.buffer.inputStream();
      EvoSuiteFile evoSuiteFile0 = null;
      buffer_UnsafeCursor1.buffer.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Buffer buffer2 = buffer_UnsafeCursor0.buffer;
      Integer integer0 = new Integer((-1));
      buffer2.readUtf8CodePoint();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(inputStream0);
        fail("Expecting exception: StreamCorruptedException");
      
      } catch(Throwable e) {
         //
         // invalid stream header: 00000000
         //
         verifyException("java.io.ObjectInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Buffer buffer0 = new Buffer();
      RealBufferedSource realBufferedSource0 = new RealBufferedSource(buffer0);
      realBufferedSource0.buffer.writableSegment((byte)120);
      realBufferedSource0.buffer.readUtf8Line();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      ByteString byteString0 = new ByteString(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Segment segment0 = new Segment();
      Pipe pipe0 = new Pipe((byte)120);
      Pipe.PipeSource pipe_PipeSource0 = pipe0.new PipeSource();
      ByteString byteString1 = realBufferedSource0.readByteString();
      realBufferedSource0.indexOfElement(byteString1);
      realBufferedSource0.buffer();
      // Undeclared exception!
      try { 
        realBufferedSource0.buffer.read((Buffer) null, (long) (byte)120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // sink == null
         //
         verifyException("okio.Buffer", e);
      }
  }
}
