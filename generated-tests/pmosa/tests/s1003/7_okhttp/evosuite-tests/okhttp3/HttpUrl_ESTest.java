/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 23:53:12 GMT 2018
 */

package okhttp3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import okhttp3.HttpUrl;
import okio.Buffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpUrl_ESTest extends HttpUrl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("username == null");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.password("username == null");
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.setQueryParameter("", "");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removeAllQueryParameters("");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.encodedPath("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.password("\n");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedUsername("]");
      String string0 = ":";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("!");
      String string0 = ":";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = HttpUrl.canonicalize("*s4%5c_*'s4", "UTF-16BE", true, true, true, true);
      assertEquals("*s4%5c_*'s4", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedQuery("");
      httpUrl_Builder0.removeAllQueryParameters("");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      List<String> list0 = HttpUrl.queryStringToNamesAndValues(" text=");
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ":";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment(":");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.addQueryParameter((String) null, "^nNwLn67*5L&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "%2e";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(1335, "%2e");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1335, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("1F+o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: 1F+o
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = HttpUrl.percentEncoded("size=%s offset=%s byteCount=%s", 11, 1613);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-274), "%");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.query("[e.b:");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      assertSame(httpUrl_Builder0, httpUrl_Builder1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment(97);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 97, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      try { 
        HttpUrl.getChecked("C|");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for C|
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HttpUrl.percentDecode("#CX%&", false);
      try { 
        HttpUrl.getChecked("c[@4Kk:a]bVO2~0Q+q");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for c[@4Kk:a]bVO2~0Q+q
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      int int0 = 15;
      String string0 = "\\\\fW%{G*/]8T{=b*z";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(15, "\\fW%{G*/]8T{=b*z");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "vF)42%60g%7Cj)H;OAx5i-)";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(1581, ":");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1581, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      int int0 = 32;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(3474);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegment("=wc4@83x<h~/`V(iE");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.removeAllEncodedQueryParameters("=wc4@83x<h~/`V(iE");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.encodedFragment("d5}K[m!@4SBO4vH");
      assertSame(httpUrl_Builder3, httpUrl_Builder5);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.port(3474);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(3474);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 3474, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s.limit == s.pos");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllEncodedQueryParameters("username == null");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(95);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 95, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment("\r");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPassword == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      httpUrl_Builder0.removeAllQueryParameters("TW");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("");
      httpUrl_Builder1.encodedFragment("");
      String string1 = null;
      String string2 = "okio.GzipSource";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addQueryParameter((String) null, "okio.GzipSource");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removePathSegment(0);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ")0Bdedi_$o+ kTCFQ";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword(")0Bdedi_$o+ kTCFQ");
      String string1 = "T$5n@2x[sI>egPq[";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.scheme("T$5n@2x[sI>egPq[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: T$5n@2x[sI>egPq[
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(2434, "uwP/1F+");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2434, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      try { 
        HttpUrl.getChecked("WeMU]$Y1}5");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for WeMU]$Y1}5
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "!#Mj<";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("!#Mj<", "u\"P/1F+o");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(45);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedFragment("u\"P/1F+o");
      String string1 = "|kMN*$J";
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.fragment("|kMN*$J");
      httpUrl_Builder4.removeAllQueryParameters("|kMN*$J");
      httpUrl_Builder4.query("u\"P/1F+o");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.port(45);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.query("");
      String string0 = ":";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(70, "+");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 70, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.query(",3g?+*lU:*gjKChc");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(1278);
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("%40");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: %40
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedQueryParameter("http::&lm1z", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "~%Bt8VusB";
      String string1 = "sW/MhnS*T@oP*yDI@-";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("~%Bt8VusB", "sW/MhnS*T@oP*yDI@-");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedQuery("sW/MhnS*T@oP*yDI@-");
      String string2 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedQueryParameter((String) null, "Ih$zcj(of");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("e");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addQueryParameter("e", "[text=");
      httpUrl_Builder2.addEncodedQueryParameter("[text=", "e");
      httpUrl_Builder2.encodedQuery("e");
      String string0 = "";
      httpUrl_Builder2.addEncodedPathSegments("z(lh(C2H;d3JFc\"");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedQueryParameter("", "");
      httpUrl_Builder2.setQueryParameter("[text=", "");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme(":@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: :@
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("%2e%2e");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("%2e%2e", "%2e%2e");
      int int0 = 1554;
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setPathSegment(1554, "%2e%2e");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1554, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      try { 
        HttpUrl.getChecked("K:U%3");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for K:U%3
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.addEncodedPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      URI uRI0 = MockURI.URI((String) null, "", "x&u23R9");
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      HttpUrl.get(uRI1);
      // Undeclared exception!
      try { 
        HttpUrl.percentDecode("", (-730), (-730), false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HttpUrl.percentDecode((Buffer) null, "DH($", 405, 405, true);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("DH($");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("DH($");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("+/<VnQ|NRf");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.encodedPassword("+/<VnQ|NRf");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removeAllQueryParameters("DH($");
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.addEncodedQueryParameter("DH($", "");
      assertSame(httpUrl_Builder2, httpUrl_Builder6);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HttpUrl.decodeHexDigit('%');
      HttpUrl.percentEncoded("unexpected scheme: ", 45, 0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("unexpected scheme: ");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("unexpected scheme: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: unexpected scheme: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ":";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HttpUrl.decodeHexDigit('g');
      try { 
        HttpUrl.getChecked("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "o/A^V^ZAaRqNN\\Z";
      try { 
        HttpUrl.getChecked("o/A^V^ZAaRqNNZ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for o/A^V^ZAaRqNNZ
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HttpUrl.parse("");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("");
      String string0 = "64RgXvJt#R{g<N]d";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("64RgXvJt#R{g<N]d");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.port((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -1
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("");
      String string0 = "g1b";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedQuery("g1b");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(98);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addQueryParameter(".inputStream()", "");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.encodedUsername("$tX");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.password("lZ3md");
      String string0 = "([";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegment("([");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment((-995), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "!#Mj<";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("!#Mj<", "u\"P/1F+o");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(45);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedFragment("u\"P/1F+o");
      String string1 = "|kMN*$J";
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.fragment("|kMN*$J");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removeAllQueryParameters("|kMN*$J");
      httpUrl_Builder4.query("u\"P/1F+o");
      httpUrl_Builder5.username("m%236z");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(3474);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("");
      httpUrl_Builder2.encodedFragment((String) null);
      httpUrl_Builder1.addEncodedPathSegment("V@");
      httpUrl_Builder2.password("~f3(c_)>DV$XiV<v");
      try { 
        HttpUrl.getChecked("_7 S_H=S8O(\"3dR;o%");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for _7 S_H=S8O(\"3dR;o%
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HttpUrl.parse("a7scT4n+t-Mpl.d bZ");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(80);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.password("a7scT4n+t-Mpl.d bZ");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("a7scT4n+t-Mpl.d bZ", "a7scT4n+t-Mpl.d bZ");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedQueryParameter("scheme == null", "a7scT4n+t-Mpl.d bZ");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.query("scheme == null");
      httpUrl_Builder5.port(80);
      HttpUrl.Builder httpUrl_Builder6 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder7 = httpUrl_Builder6.encodedPassword("6z,CvR!Nx$");
      HttpUrl.Builder httpUrl_Builder8 = httpUrl_Builder7.removeAllEncodedQueryParameters("Civ0's;u1 l");
      assertFalse(httpUrl_Builder8.equals((Object)httpUrl_Builder1));
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "u\"P/1F+o";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("u\"P/1F+o");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: u\"P/1F+o
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)36;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("/");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.setEncodedQueryParameter("/", (String) null);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedUsername("!%23Mj%3C");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.encodedQuery("!%23Mj%3C");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addPathSegment(")@{5 y7V0DkrRrj*");
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.encodedPassword(")@{5 y7V0DkrRrj*");
      assertSame(httpUrl_Builder6, httpUrl_Builder2);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("H");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.host("H");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath("Oc[th");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: Oc[th
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "u\"P/1F+o";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(12);
      httpUrl_Builder0.addPathSegments("u\"P/1F+o");
      String string1 = "";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment((-1375), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"*]WM");
      byteArray0[0] = (byte)65;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("Ynu");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder2.addEncodedPathSegment("Ynu");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.port(5);
      List<String> list0 = httpUrl_Builder3.encodedPathSegments;
      httpUrl_Builder5.encodedQueryNamesAndValues = list0;
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.encodedUsername("Ynu");
      httpUrl_Builder6.encodedPassword("Ynu");
      HttpUrl.Builder httpUrl_Builder7 = httpUrl_Builder0.addPathSegment("Ynu");
      HttpUrl.Builder httpUrl_Builder8 = httpUrl_Builder7.password("Ynu");
      assertSame(httpUrl_Builder8, httpUrl_Builder3);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\r";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("\r");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("\r");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegments("file:/");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for https
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5dM['a1PtP6TH0");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(3474);
      String string0 = "W!R";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(3474, ".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: .
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("[unexpected scheme: ", "[unexpected scheme: ");
      httpUrl_Builder1.setEncodedQueryParameter("[unexpected scheme: ", "[unexpected scheme: ");
      String string0 = "N1JdP^e,zG5g";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(49, "N1JdP^e,zG5g");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 49, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\\%;^";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment((-474), "%;^");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "}/Wv%j+1\"hw";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("}/Wv%j+1\"hw");
      String string1 = "h6)}(M^<:5";
      httpUrl_Builder1.addPathSegment("h6)}(M^<:5");
      String string2 = "fromIndex < 0";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("}/Wv%j+1\"hw", "fromIndex < 0");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath("fromIndex < 0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: fromIndex < 0
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "7r%7D76PK%7DSQFkkD";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("7r%7D76PK%7DSQFkkD", (String) null);
      String string1 = "";
      httpUrl_Builder1.addEncodedPathSegments("");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/wwsoef(kbutelformedul\"r/foxj(e");
      httpUrl0.encodedUsername();
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(1062);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.querySize();
      String string0 = ":S4A_y${";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: 0
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.getChecked("http:k");
      assertEquals(80, httpUrl0.port());
      assertEquals("http://k/", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http:/");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http:/
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http::");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http::
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.scheme("https");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/ww.soef(kfbutelformedul\"r/foIxj_e");
      assertNotNull(httpUrl0);
      
      httpUrl0.query();
      httpUrl0.querySize();
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("https://ww.soef(kfbutelformedul\"r/foIxj_e", httpUrl0.toString());
      assertEquals(443, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      httpUrl_Builder0.query("t%26NY6%2BCu");
      httpUrl_Builder1.encodedQuery("t%26NY6%2BCu");
      httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedQuery(" \"'<>#");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.scheme("https");
      httpUrl_Builder1.username("https");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.addEncodedPathSegments("FHCRC");
      httpUrl_Builder2.query("1F+o");
      httpUrl_Builder0.encodedQuery("https");
      httpUrl_Builder0.encodedQuery("4J Rebuf'2~z~");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "1:";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("1:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 1:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("^8%XF3r");
      httpUrl_Builder0.setEncodedQueryParameter("~Q)>'lPL\"o`VLB", "c[@4Kk:a]bVO2~0Q+q");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("c[@4Kk:a]bVO2~0Q+q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: c[@4Kk:a]bVO2~0Q+q
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "1Z:";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("1Z:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 1Z:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.encodedUsername();
      httpUrl0.redact();
      httpUrl0.redact();
      try { 
        HttpUrl.getChecked("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("http:k");
      assertNotNull(httpUrl0);
      
      List<String> list0 = httpUrl0.encodedPathSegments();
      assertEquals(1, list0.size());
      assertEquals("http://k/", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.somefakebutellformedul.r/fooxjle");
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl0.queryParameterValues("https:/www.somefakebutellformedul.r/fooxjle");
      httpUrl0.newBuilder("r3");
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.SUCCESS;
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("%3FJp+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: %3FJp+
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      httpUrl_Builder0.addEncodedPathSegment("^8%XF3r");
      httpUrl_Builder0.setEncodedQueryParameter("~Q)>'lPL\"o`VLB", "^8%XF3r");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("^8%XF3r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ^8%XF3r
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery((String) null);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.removeAllEncodedQueryParameters("V}ixPK:!Z!4*$:ns+.");
      httpUrl_Builder2.password("username == null");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder1.encodedFragment(" ");
      httpUrl_Builder3.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(49, ".outputStream()");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 49, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(1336);
      httpUrl_Builder1.addPathSegments(":");
      httpUrl_Builder0.fragment(":");
      httpUrl_Builder0.addEncodedPathSegments("size=%s offset=%s byteCount=%s");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("@ix", "}M");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.password("scheme == null");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedQueryParameter("a`MK,3}Z", ":.$RJk=Yvw8R-$' +C");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedPathSegments("@ix");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder6 = httpUrl_Builder5.port(46);
      HttpUrl.Builder httpUrl_Builder7 = httpUrl_Builder0.fragment("n]o%{,x,4yRLmm ERWT");
      httpUrl_Builder7.addPathSegment("=wc4@83x<h~/`V(iE");
      httpUrl_Builder6.removeAllEncodedQueryParameters("scheme == null");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = HttpUrl.canonicalize("&X{EoA>p$%", "http", true, true, true, true);
      assertEquals("%7F&%7FX{EoA>%70$%25", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      httpUrl0.encodedUsername();
      httpUrl0.redact();
      String string0 = httpUrl0.redact();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http://www.somefakebutwellformedurl.org/...", string0);
      
      HttpUrl httpUrl1 = HttpUrl.getChecked("http://www.somefakebutwellformedurl.org/...");
      assertEquals(1, httpUrl1.pathSize());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = new HttpUrl.Builder();
      httpUrl_Builder0.port(12);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "%7F1F+o";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.removeAllEncodedQueryParameters("%7F1F+o");
      httpUrl_Builder2.encodedFragment = "<!D";
      httpUrl_Builder2.addPathSegments("%7F1F+o");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.fragment((String) null);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedQuery("_G=L?Zu2yo&B'dSRK");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter("fooExample", "fooExample");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "SUCCESS";
      HttpUrl.defaultPort("SUCCESS");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string1 = "::";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(2629, "::");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2629, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.somefakebutellformedul.r/fooxjle");
      httpUrl0.queryParameterNames();
      assertEquals(443, httpUrl0.port());
      assertEquals("https://www.somefakebutellformedul.r/fooxjle", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      httpUrl0.encodedUsername();
      httpUrl0.host();
      httpUrl0.encodedUsername();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      httpUrl0.hashCode();
      String string0 = httpUrl0.fragment();
      assertEquals(80, httpUrl0.port());
      assertNull(string0);
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.parse("http:k");
      assertNotNull(httpUrl0);
      
      httpUrl0.equals("http:k");
      assertEquals(80, httpUrl0.port());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals("http://k/", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "c:@4Kk:a]bVO2~0Q+q";
      try { 
        HttpUrl.getChecked("c:@4Kk:a]bVO2~0Q+q");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for c:@4Kk:a]bVO2~0Q+q
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("1f+b");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("size%20%3e%20integer.max_value:%20");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(8192);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedPathSegments("size%20%3e%20integer.max_value:%20");
      String string0 = "..";
      // Undeclared exception!
      try { 
        httpUrl_Builder4.setPathSegment(8192, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      httpUrl0.encodedUsername();
      URI uRI0 = httpUrl0.uri();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", uRI0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals(1, httpUrl0.pathSize());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutellformedul.r/fooxjle");
      assertNotNull(httpUrl0);
      
      httpUrl0.newBuilder();
      httpUrl0.queryParameterNames();
      assertEquals("https://www.somefakebutellformedul.r/fooxjle", httpUrl0.toString());
      assertEquals(443, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutwellformedurl.org/fooexamle");
      assertNotNull(httpUrl0);
      
      String string0 = httpUrl0.encodedPath();
      assertEquals("/fooexamle", string0);
      
      String string1 = httpUrl0.encodedFragment();
      assertNull(string1);
      assertEquals("https://www.somefakebutwellformedurl.org/fooexamle", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(443, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("http:k");
      assertNotNull(httpUrl0);
      
      httpUrl0.encodedQuery();
      assertEquals("http://k/", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "]:");
      HttpUrl httpUrl0 = HttpUrl.get(uRL1);
      assertNotNull(httpUrl0);
      
      httpUrl0.queryParameter("]:");
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/]:", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl httpUrl0 = HttpUrl.parse("http:k:a]bvo2~0q+q");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https://htp:>/[ht::]:-32?htp::");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.CANADA_FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode0);
      HttpUrl.namesAndValuesToQueryString((StringBuilder) null, list2);
      httpUrl0.queryParameter("/If/Qiv/Bpw=_Me<S=");
      String string0 = httpUrl0.encodedFragment();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertNull(string0);
      assertEquals(1, httpUrl0.pathSize());
      assertEquals(80, httpUrl0.port());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      try { 
        HttpUrl.getChecked("https:");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      String string0 = httpUrl0.encodedUsername();
      assertEquals("", string0);
      
      List<String> list0 = httpUrl0.pathSegments();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      int int0 = httpUrl0.pathSize();
      assertEquals(80, httpUrl0.port());
      assertEquals(1, int0);
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegments("fNv=AmX~s");
      httpUrl_Builder0.removePathSegment(0);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutwellformedurl.org/fooexamle");
      String string0 = httpUrl0.username();
      assertEquals("", string0);
      assertEquals(443, httpUrl0.port());
      assertEquals("https://www.somefakebutwellformedurl.org/fooexamle", httpUrl0.toString());
      assertEquals(1, httpUrl0.pathSize());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "?";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedPathSegment(0, "?");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MockURL.getHttpExample();
      int int0 = 0;
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("[\u0000-\u001F-\u009Fp{javaWhitespace}]", " text=");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("e#RRu=bF");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.setEncodedPathSegment(0, "e#RRu=bF");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme(" \"'<>#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme:  \"'<>#
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutwellformedurl.org/fooexample");
      httpUrl0.scheme();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/wwsoef(kbutellformedul\"r/fooxj(e");
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.soef(kfbutellformedul\"r/fooxj(e");
      httpUrl0.encodedPathSegments();
      httpUrl0.queryParameterValues("https:/www.soef(kfbutellformedul\"r/fooxj(e");
      httpUrl0.queryParameter("https:/www.soef(kfbutellformedul\"r/fooxj(e");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.url();
      httpUrl0.queryParameterNames();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      httpUrl0.encodedUsername();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "L$DGq3'Hqr";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(11, "L$DGq3'Hqr");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 11, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.somefakebutwellformedurl.org/fooexample");
      httpUrl0.encodedUsername();
      httpUrl0.port();
      httpUrl0.queryParameterNames();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.somefakebutwellformedurl.org/fooexamle");
      httpUrl0.queryParameterValues("https:/www.somefakebutwellformedurl.org/fooexamle");
      httpUrl0.newBuilder("CQk");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      try { 
        HttpUrl.getChecked("http:k:a]bvo2~0q+q");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: INVALID_PORT for http:k:a]bvo2~0q+q
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("file:/");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.fragment();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("pathSegments == null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:www.somefakebutwellformedurl.org2zwm#k_|p')|.eydd*");
      httpUrl0.query();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = "[]";
      URI uRI0 = MockURI.URI("https:/www.?omef_kebutwellformedurl.r/foVexEle", "[]", "UTF-8");
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      URI uRI2 = MockURI.normalize(uRI1);
      URL uRL0 = MockURI.toURL(uRI2);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.scheme();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("mJK_e&'<{");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegments("DcIlEE");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegment("mJK_e&'<{");
      String string1 = "ld";
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme("ld");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: ld
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutellforBedul.r?fooxjle");
      httpUrl0.queryParameterNames();
      httpUrl0.fragment();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("%2e.");
      httpUrl_Builder1.parse((HttpUrl) null, "%2e.");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword(" ' 0}qlb`[e~:S/");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("..", " ' 0}qlb`[e~:S/");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegments("..");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.removeAllEncodedQueryParameters(" ' 0}qlb`[e~:S/");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.query("..");
      httpUrl_Builder5.setEncodedQueryParameter(":", ")zkqqU");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/www.somefakebutwellformedurl.r/fooexjle");
      httpUrl0.query();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("[\u0000-\u001F-\u009Fp{javaWhitespace}]");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("-P<e[=x{^(J0>6b");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegment("/");
      httpUrl_Builder1.query("[\u0000-\u001F-\u009Fp{javaWhitespace}]");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.setEncodedQueryParameter("-P<e[=x{^(J0>6b", "https:/www.somefakebutwellformedurl.r/fooexjle");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.fragment("[\u0000-\u001F-\u009Fp{javaWhitespace}]");
      httpUrl_Builder5.parse(httpUrl0, "/");
      httpUrl_Builder0.port(443);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "UTF-8";
      String string1 = "[";
      URI uRI0 = MockURI.URI("https:/www.somefakebutwellformedurl.org/fooexamle", "fromIndex < 0", "[");
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockURI.normalize(uRI1);
      URL uRL0 = MockURI.toURL(uRI1);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.scheme();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("fromIndex < 0");
      httpUrl_Builder1.addPathSegments("+(eY/q,CbIp6FX");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegment("fromIndex < 0");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.scheme("-P%3Ce[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: -P%3Ce[
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      String string0 = "/If/Qiv/Bpw=_Me<S=";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPath("/If/Qiv/Bpw=_Me<S=");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("bq2fux");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setPathSegment((-129), "/If/Qiv/Bpw=_Me<S=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("%2e.");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegments("%2e.");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllQueryParameters("%2e.");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.effectivePort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String string0 = "https:/www.s]VeaSebutwellformdurl.org/foo^xamHe";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("\u2026]", "\u2026]");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("ht");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.password("\u2026]");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.username("5.%3E%60%3C'");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addPathSegments("ht");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.host("https:/www.s]VeaSebutwellformdurl.org/foo^xamHe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: https:/www.s]VeaSebutwellformdurl.org/foo^xamHe
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("\u2026");
      try { 
        HttpUrl.getChecked("UceL");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for UceL
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("3::h:5LAD3[3=V~^W[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3::h:5LAD3[3=V~^W[
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HttpUrl.parse("http:ht:@b[V2?ht::");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https://htp::@[htp::]:-32?htp::");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: INVALID_PORT for https://htp::@[htp::]:-32?htp::
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HttpUrl.parse("http:/htp:@[p]:32?ht::");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("\n");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedQueryParameter("3QeV", "3QeV");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.encodedFragment("j1DX7T");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addQueryParameter("\n", "j1DX7T");
      httpUrl_Builder5.query("j1DX7T");
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "%2#e";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("%2#e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: %2#e
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URI uRI0 = MockURI.URI("https", "https", "N");
      URL uRL0 = MockURI.toURL(uRI0);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      String string0 = ":::h:5LAD3[3=V~^W[";
      HttpUrl httpUrl1 = httpUrl0.resolve(":::h:5LAD3[3=V~^W[");
      httpUrl1.encodedQuery();
      HttpUrl.Builder httpUrl_Builder1 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment((-1738616716), "https");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      URI uRI0 = MockURI.URI("https:/www.somefakebutellformedul.r/fooxjle", "https:/www.somefakebutellformedul.r/fooxjle", "P?.^k");
      URL uRL0 = MockURI.toURL(uRI0);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.get(uRL0);
      MockURL.toExternalForm(uRL0);
      httpUrl0.encodedPath();
      httpUrl0.newBuilder();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter("eJ?gV!bBK'z-%I<hg", "https:/www.someakebutwellformedurl.org/fooexamle");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(1);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("https:/www.someakebutwellformedurl.org/fooexamle", "https:/www.someakebutwellformedurl.org/fooexamle");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.reencodeForUri();
      httpUrl_Builder4.addQueryParameter("https:", "MISSING_SCHEME");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.addEncodedPathSegments("https:");
      httpUrl_Builder5.host("Y+Oafa>GqA&H'iuKr");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/wwi.somefakebutellformedul.Q/fooxjle");
      httpUrl0.isHttps();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter(" q#CsO&YK<y]-Ub8~d", "https:/wwi.somefakebutellformedul.Q/fooxjle");
      String string0 = "http";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("http");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment(38, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.equals(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.password("thread interrupted");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("[", "thread interrupted");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.removeAllQueryParameters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      String string0 = "https:";
      httpUrl0.resolve("https:");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("https:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: https:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("Q`Y7<3nN83]s-]A");
      String string0 = "3:";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("3:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("::");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query(";#Lp,h");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "e.b:l~/$}:t9-0v4";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("e.b:l~/$}:t9-0v4");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedUsername("Invalid URL: ");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("e.b:l~/$}:t9-0v4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: e.b:l~/$}:t9-0v4
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedPassword = "5)";
      String string0 = "e.b:";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("e.b:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: e.b:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl.percentDecode(buffer0, "df>BIsb!f~y0Q<", 127, 53, false);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, ".%2e");
      HttpUrl httpUrl0 = HttpUrl.get(uRL1);
      httpUrl0.host();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      URI uRI0 = MockURI.URI("https:mnt/gaiagpfs/users/homedirs/apanichella/evosuite_performance/dataset/gordon_scripts_adaptive/projects/7_okhttp/%2e./%2e.");
      URI uRI1 = MockURI.resolve(uRI0, "https:mnt/gaiagpfs/users/homedirs/apanichella/evosuite_performance/dataset/gordon_scripts_adaptive/projects/7_okhttp/%2e./%2e.");
      HttpUrl.get(uRI1);
      HttpUrl.canonicalize("https:mnt/gaiagpfs/users/homedirs/apanichella/evosuite_performance/dataset/gordon_scripts_adaptive/projects/7_okhttp/%2e./%2e.", "https:mnt/gaiagpfs/users/homedirs/apanichella/evosuite_performance/dataset/gordon_scripts_adaptive/projects/7_okhttp/%2e./%2e.", false, false, false, false);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("1~X>9VtpU,j#");
      String string0 = "P+P V6@gJVn:\"";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.password("P+P V6@gJVn:\"");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedQuery("zL|5iPJ%Ts%fp~;;,p");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.reencodeForUri();
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      HttpUrl.parse("https://htp:@[htp:::-32?htp:");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.equals("Nrr?xG]?_sMbyq9r");
      HttpUrl httpUrl1 = httpUrl0.resolve("lXt_DxNhoumB)\u0001_");
      httpUrl1.password();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutellforBedul.r?fooxjle");
      httpUrl0.queryParameterValues("https:/www.somefakebutellforBedul.r?fooxjle");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        HttpUrl.getChecked((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutellforBedul.r?fooxjle");
      httpUrl0.queryParameterValues("https:/www.somefakebutellforBedul.r?fooxjle");
      String string0 = null;
      // Undeclared exception!
      try { 
        HttpUrl.getChecked((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("J\n");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedUsername(".%2e");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(41);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.encodedPassword("?#");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removeAllEncodedQueryParameters("Cs;?)@y#lz1 6");
      httpUrl_Builder5.username("?#");
      httpUrl_Builder5.addEncodedPathSegments(".%2e");
      try { 
        HttpUrl.getChecked("~^ybk`Dw");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for ~^ybk`Dw
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HttpUrl.parse("http://htp:@[\"p]:32?ht::");
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedPathSegment(0, "\"o76w5$GOsMRb");
      try { 
        HttpUrl.getChecked("https:htp@[\"]32?ht:");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:htp@[\"]32?ht:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "5.:";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("5.:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 5.:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutellforBedul.r?fooxjle");
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(2405);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4810, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("http:/Xt:@[\"p]:34?ht::");
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValue((-1011));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "2:a";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("2:a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 2:a
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      HttpUrl.parse("http:/X,pN@[\"l]:\u0004?h1::");
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "5.56g:";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("5.56g:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 5.56g:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }
}
