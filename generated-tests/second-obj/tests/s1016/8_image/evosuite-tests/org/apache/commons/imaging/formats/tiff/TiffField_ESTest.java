/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:37:52 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, 4, 4, (byte[]) null, (ByteOrder) null, 4);
      tiffField0.isLocalValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0, 43, 43, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 48257, (FieldType) null, 18, 72L, (byte[]) null, byteOrder0, 48257);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(28, 45);
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-18);
      TiffField tiffField0 = new TiffField(2941, 2941, fieldTypeByte0, 2941, 2941, byteArray0, (ByteOrder) null, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (byte) (-18));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2941, tiffField0.getOffset());
      assertEquals(2941, tiffField0.getTag());
      assertNull(string0);
      assertEquals(2941, tiffField0.getBytesLength());
      assertEquals(2941, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(741, 741, fieldTypeRational0, 741, 741, byteArray0, byteOrder1, 741);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1959), (byte)1, fieldTypeByte0, 0L, (-88L), byteArray0, byteOrder0, (byte)104);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@384f3a12 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(279, "");
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte) (-56);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte)84;
      byteArray0[5] = (byte) (-71);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(115, 0, fieldTypeLong0, 115, 0, byteArray0, byteOrder0, (byte) (-71));
      tiffField0.getIntArrayValue();
      assertEquals((-71), tiffField0.getSortHint());
      assertEquals(460, tiffField0.getBytesLength());
      assertEquals(115, tiffField0.getTag());
      assertEquals(115L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(107, 1175, fieldTypeRational0, 107, (-360L), byteArray0, byteOrder0, 107);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2941, 2941, fieldTypeByte0, 2941, 2941, byteArray0, (ByteOrder) null, (-33));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2941, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2941, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2941, tiffField0.getOffset());
      assertEquals(2941, tiffField0.getBytesLength());
      assertEquals(2941L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[162];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.nativeOrder();
      ByteOrder byteOrder4 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-643), "fT4V(rQ ");
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 120L, (-113L), byteArray0, byteOrder3, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(120L, tiffField0.getCount());
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals((-113), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(15, "xU1'Q7IW");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte) (-59);
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte) (-93);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 6848L, byteArray0, byteOrder0, 1063);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(6848, tiffField0.getOffset());
      assertEquals(30, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(1063, tiffField0.getSortHint());
      assertEquals(15L, tiffField0.getCount());
      assertArrayEquals(new int[] {256, 50652}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145, 2145, fieldTypeByte0, 2145, 2145, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      
      int int1 = tiffField0.getDirectoryType();
      assertTrue(int1 == int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[136];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 11, fieldTypeRational0, (byte)0, 166L, byteArray0, byteOrder1, 452);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(452, int0);
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(166, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1978), (-1978), fieldTypeFloat0, 1914L, (-1978), byteArray0, byteOrder0, (-1978));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@552ec0f9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0.SSHORT, 2152L, 2152L, byteArray0, byteOrder0, 12);
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@4d512a5d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";s1f`_%&");
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2147169918, ";s1f`_%&");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-115);
      TiffField tiffField0 = new TiffField((-1218), (byte) (-115), fieldTypeShort0, 8L, (-1218), byteArray0, byteOrder0, (byte) (-115));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {(-29440.0)}, doubleArray0, 0.01);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals((-1218), tiffField0.getTag());
      assertEquals((-1218L), tiffElement0.offset);
      assertEquals(8L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeShort0, 2608L, 2608L, byteArray0, (ByteOrder) null, 164);
      int int0 = tiffField0.getBytesLength();
      assertEquals(5216, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(164, tiffField0.getSortHint());
      assertEquals(2608L, tiffField0.getCount());
      assertEquals(34028, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(34028, tiffField0.getTag());
      assertEquals(2608, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65111, 65111, fieldTypeFloat0, 65111, (-540L), byteArray0, (ByteOrder) null, 40091);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(40091, tiffField0.getSortHint());
      assertEquals(65111, tiffField0.getDirectoryType());
      assertEquals((-540), tiffField0.getOffset());
      assertEquals("65111 (0xfe57: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1828), "");
      TiffField tiffField0 = new TiffField((-114), (-2810), fieldTypeDouble0, 16236L, 16236L, byteArray0, byteOrder0, (-19));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-114), tiffField0.getTag());
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(129888, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(16236L, tiffField0.getCount());
      assertEquals((-2810), tiffField0.getDirectoryType());
      assertEquals(16236, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 9, fieldTypeDouble0, 1, 1L, byteArray0, byteOrder0, 4);
      tiffField0.getValueDescription();
      Integer integer0 = new Integer(4);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int0 = Pattern.CANON_EQ;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2140956342, 128, fieldTypeRational0, 128, 3548L, byteArray0, byteOrder2, 1920);
      tiffField0.getDoubleArrayValue();
      assertEquals(2140956342, tiffField0.getTag());
      assertEquals(3548, tiffField0.getOffset());
      assertEquals(128, tiffField0.getDirectoryType());
      assertEquals(128L, tiffField0.getCount());
      assertEquals(1024, tiffField0.getBytesLength());
      assertEquals(1920, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=E#Mg");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, (String) null);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      Pattern.quote("=E#Mg");
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 2147444446, fieldTypeShort0, 1L, 297, byteArray0, byteOrder0, 297);
      tiffField0.getDoubleArrayValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(297, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(297, tiffField0.getOffset());
      assertEquals(2147444446, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-12);
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeByte0, 21, 962L, byteArray0, byteOrder0, 21);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@78f65a01 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@#:3=+r0/M:FB");
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3965, "E>(Z");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3965, 3965, fieldTypeDouble0, 3965, 94L, byteArray0, byteOrder0, 3965);
      tiffField0.getFieldTypeName();
      tiffField0.getDoubleArrayValue();
      assertEquals(3965L, tiffField0.getCount());
      assertEquals(3965, tiffField0.getTag());
      assertEquals(3965, tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getOffset());
      assertEquals(31720, tiffField0.getBytesLength());
      assertEquals(3965, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)16;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59932, 8, fieldTypeDouble0, 59932, (-891L), byteArray0, byteOrder0, (byte)16);
      String string0 = tiffField0.getTagName();
      assertEquals("Padding", string0);
      assertEquals(59932, tiffField0.getTag());
      assertEquals(16, tiffField0.getSortHint());
      assertEquals((-891), tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(760, 760, fieldTypeAscii0, 1421L, 1421L, byteArray0, byteOrder0, 182);
      tiffField0.toString();
      assertEquals(1421, tiffField0.getOffset());
      assertEquals(182, tiffField0.getSortHint());
      assertEquals(1421, tiffField0.getBytesLength());
      assertEquals(1421L, tiffField0.getCount());
      assertEquals(760, tiffField0.getTag());
      assertEquals(760, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-54);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte)25;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41992, 41992, fieldTypeLong0, 41992, (-4239L), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(41992, tiffField0.getDirectoryType());
      assertEquals(41992L, tiffField0.getCount());
      assertEquals(41992, tiffField0.getTag());
      assertEquals((-4239), tiffField0.getOffset());
      assertEquals(167968, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)86;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 50, 50, byteArray0, byteOrder0, (byte) (-127));
      int int0 = tiffField0.getSortHint();
      assertEquals((-127), int0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, int1);
      assertEquals(100, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j");
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Integer integer0 = new Integer(14);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(130, 31, fieldTypeRational0, 0, 0, byteArray0, byteOrder1, 14);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      
      int int1 = tiffField0.getDirectoryType();
      assertEquals(31, int1);
      assertEquals(130, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeRational0, 10, 10, byteArray0, byteOrder0, 10);
      int int0 = Pattern.COMMENTS;
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getByteOrder();
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)50;
      byteArray0[5] = (byte) (-124);
      byteArray0[7] = (byte)0;
      TiffField tiffField0 = new TiffField((-3956), (-3956), fieldTypeFloat0, 1236L, 1236L, byteArray0, (ByteOrder) null, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-3956), tiffField0.getTag());
      assertEquals((-3956), tiffField0.getDirectoryType());
      assertEquals(1236, tiffField0.getOffset());
      assertEquals(1236L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 50741, fieldTypeRational0.IFD, 50741, 50741, byteArray0, byteOrder0, 761);
      String string0 = tiffField0.getValueDescription();
      assertEquals(761, tiffField0.getTag());
      assertEquals(50741L, tiffField0.getCount());
      assertEquals(50741, tiffField0.getDirectoryType());
      assertEquals(761, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(50741, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      int int0 = (-3);
      FieldType fieldType0 = FieldType.getFieldType(1);
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3), 50727, fieldType0, 1, 4, byteArray0, byteOrder0, 1);
      ByteOrder.nativeOrder();
      tiffField0.getIntArrayValue();
      try { 
        FieldType.getFieldType(64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 64 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(18, "Expected String value(");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte)28;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 18, 2831L, byteArray0, (ByteOrder) null, (-169));
      tiffField0.getDoubleArrayValue();
      assertEquals(18L, tiffField0.getCount());
      assertEquals(2831, tiffField0.getOffset());
      assertEquals(18, tiffField0.getTag());
      assertEquals((-169), tiffField0.getSortHint());
      assertEquals(18, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      System.setCurrentTimeMillis((-1273L));
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-1598), (-1598), fieldTypeLong0, 12728L, 82L, byteArray0, byteOrder0, 3796);
      tiffField0.getIntValueOrArraySum();
      assertEquals(3796, tiffField0.getSortHint());
      assertEquals((-1598), tiffField0.getDirectoryType());
      assertEquals(12728L, tiffField0.getCount());
      assertEquals(82, tiffField0.getOffset());
      assertEquals((-1598), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      FieldTypeByte fieldTypeByte1 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(10, 50, fieldTypeRational0, 50, 10, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)18;
      byteArray0[2] = (byte)21;
      byteArray0[4] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 1, fieldTypeFloat0, 1, 25, byteArray0, byteOrder0, (byte)21);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(25, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[132];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldType.getFieldType(11);
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 52, fieldTypeAscii0, 1983L, (-824L), byteArray0, byteOrder2, (-1922));
      ByteOrder.nativeOrder();
      tiffField0.dump();
      assertEquals((-1922), tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals((-824), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1368), "Expected String value(");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)36;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)36);
      ByteBuffer byteBuffer1 = byteBuffer0.duplicate();
      ByteBuffer byteBuffer2 = byteBuffer1.slice();
      ByteOrder byteOrder0 = byteBuffer2.order();
      byteBuffer0.putShort((short) (byte)36);
      TiffField tiffField0 = new TiffField(37388, 37388, fieldTypeAscii0, 4L, 523L, byteArray0, byteOrder0, (byte)36);
      String string0 = tiffField0.getStringValue();
      assertEquals(523, tiffField0.getOffset());
      assertEquals(36, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(37388, tiffField0.getTag());
      assertEquals(37388, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[119];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldType.getFieldType(1);
      TiffField tiffField0 = new TiffField(25, 1, fieldTypeRational0.SSHORT, 2134L, 2134L, byteArray0, byteOrder1, 1);
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      tiffField0.getValueDescription();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      tiffField0.isLocalValue();
      FieldTypeShort fieldTypeShort1 = FieldType.SSHORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.getTagName();
      MockFile mockFile0 = new MockFile("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59)");
      MockFile mockFile1 = new MockFile(mockFile0, "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59)");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile1, true);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      bufferedWriter0.append((CharSequence) "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59)", 1, 25);
      try { 
        bufferedWriter0.close();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[261];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1038, ";0z0OC]n.0dn~4`y");
      TiffField tiffField0 = new TiffField(16, 1038, fieldTypeLong0, 2351L, 16, byteArray0, (ByteOrder) null, 250);
      tiffField0.getBytesLength();
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getValue();
      assertEquals(16, tiffField0.getTag());
      assertEquals(1038, tiffField0.getDirectoryType());
      assertEquals(250, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      int int0 = 41725;
      long long0 = (-23L);
      TiffField tiffField0 = new TiffField(2185, 41725, fieldTypeFloat0, 2185, (-23L), byteArray0, byteOrder0, 41725);
      tiffField0.getValueDescription();
      tiffField0.getValue();
      try { 
        FieldType.getFieldType(50);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 50 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }
}
