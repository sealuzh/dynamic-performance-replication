/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 10:19:45 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Map;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.compile.CompilerContext;
import org.apache.derby.iapi.sql.execute.CursorResultSet;
import org.apache.derby.iapi.store.raw.RawStoreFactory;
import org.apache.derby.iapi.store.raw.log.LogInstant;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.Predicate;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.io.StorageFile;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.impl.DatabaseParameterBufferExtension;
import org.firebirdsql.jdbc.FBArray;
import org.h2.command.ddl.CreateTableData;
import org.h2.engine.SessionRemote;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-46);
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "QE+HIm", true, true, true, false, "QE+HIm", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("a\"*-8", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.resetMonitors();
      SessionRemote sessionRemote0 = new SessionRemote();
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("XSDF6.S", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      Connection connection0 = null;
      boolean boolean0 = false;
      String string0 = "opening connection to ";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("opening connection to ");
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "0I";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "0I", false, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, dBPrimaryKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = DatabaseParameterBufferExtension.RESULT_SET_HOLDABLE;
      DBUtil.available((String) null, (String) null, "XSDF6.S", (String) null);
      Class<DBNonUniqueIndex> class0 = DBNonUniqueIndex.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("XSDF6.S", "Wpmd", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: XSDF6.S
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.escape("+o`5oc8H");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/+o`5oc8H.env.properties");
      byte[] byteArray0 = new byte[5];
      DBUtil.existsEnvironment("+o`5oc8H");
      byteArray0[0] = (byte)3;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "+o`5oc8H");
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)78;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      DBUtil.escape("+o`5oc8H");
      DBUtil.getConnectData("+o`5oc8H");
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.connect("@", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '@.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = "2)U$#`f-G@7znbBJ";
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("2)U$#`f-G@7znbBJ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = CompilerContext.IGNORE_MISSING_CLASSES;
      DBUtil.getOpenConnectionCount();
      FBArray fBArray0 = new FBArray();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("_fR;'O2[+\"p", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Recover recover0 = new Recover();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("{&0:YV;ht76y5y", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: {&0:YV;ht76y5y
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = DatabaseParameterBuffer.QUIT_LOG;
      DBUtil.getOpenPreparedStatementCount();
      Predicate predicate0 = new Predicate();
      predicate0.getSearchClauseHT();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((long) 0, (-1036), (Map) null);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Class<DBTrigger> class0 = DBTrigger.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "fnOrk+GR1v`46rjF";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "or;.databene.jdbacl.model.FKChangeRule", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'fnOrk+GR1v`46rjF' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getTargetResultSet();
      constantActionActivation0.setForUpdateIndexScan((CursorResultSet) null);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      DBUtil.nextLine(simpleResultSet0);
      Predicate predicate0 = new Predicate();
      Class<jdbcConnection> class0 = jdbcConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Recover recover0 = new Recover();
      Connection connection0 = recover0.getLobConnection();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = StorageFile.NO_FILE_LOCK_SUPPORT;
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.getOpenConnectionCount();
      ConstraintDefinitionNode constraintDefinitionNode0 = new ConstraintDefinitionNode();
      ConstraintDefinitionNode constraintDefinitionNode1 = new ConstraintDefinitionNode();
      // Undeclared exception!
      try { 
        constraintDefinitionNode1.getExecutionFactory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.compile.QueryTreeNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = DatabaseParameterBuffer.QUIT_LOG;
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.setDoc((String) null);
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.getOpenPreparedStatementCount();
      long long0 = LogInstant.INVALID_LOG_INSTANT;
      HsqlProperties hsqlProperties0 = new HsqlProperties((String) null);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.query((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      int int0 = RawStoreFactory.CONTAINER_CACHE_SIZE_MAXIMUM;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("UNION JOIN", "(U3?vAg@F", "(U3?vAg@F", "UNION JOIN");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting (U3?vAg@F failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Recover recover0 = new Recover();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getMaxRows();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((-1866L), (-1));
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData(" ?aN_", "", " ?aN_", " ?aN_");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Recover recover0 = new Recover();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBArray fBArray0 = new FBArray();
      String string0 = "Expected a row.";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "4Nh6yoe_>}", (String) null, "Expected a row.", "", (String) null);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Recover recover0 = new Recover();
      DBUtil.close((Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("=vaYEfUCjt]C;9!", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = StorageFile.NO_FILE_LOCK_SUPPORT;
      Class<DBTrigger> class0 = DBTrigger.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("updateByte", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: updateByte
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = StorageFile.NO_FILE_LOCK_SUPPORT;
      ErrorHandler.getDefault();
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      FBArray fBArray0 = new FBArray();
      FBArray fBArray1 = new FBArray();
      fBArray1.getResultSet((long) 0, 90051);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = CompilerContext.IGNORE_MISSING_CLASSES;
      String string0 = "''";
      DBSchema dBSchema0 = new DBSchema("''");
      DBUtil.dependencyOrderedTables(dBSchema0);
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getLobConnection();
      CreateTableData createTableData0 = new CreateTableData();
      DBUtil.executeUpdate((String) null, (Connection) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData(") or wrong URL format (", (String) null, "''", "One-row database query returned multiple rows: ", "$!9vS", ")");
      // Undeclared exception!
      try { 
        DBUtil.runScript("One-row database query returned multiple rows: ", (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Random.setNextRandom(250);
      DBUtil.existsEnvironment("c2D");
      DBUtil.close((Statement) null);
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("c2D");
      Level level0 = Level.fatal;
      ErrorHandler.setDefaultLevel(level0);
      sessionRemote0.setAutoCommit(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "c2D");
      // Undeclared exception!
      try { 
        DBUtil.runScript("c2D", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
