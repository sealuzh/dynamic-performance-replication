/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 13:04:23 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.ResultItems;
import us.codecraft.webmagic.selector.AndSelector;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.JsonPathSelector;
import us.codecraft.webmagic.selector.Selectable;
import us.codecraft.webmagic.selector.Selector;
import us.codecraft.webmagic.selector.SmartContentSelector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setRawText("text/xml");
      assertEquals(200, page1.getStatusCode());
      
      page1.setStatusCode(0);
      assertEquals(0, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = new Page();
      Json json0 = page0.getJson();
      Class<String> class0 = String.class;
      json0.toList(class0);
      // Undeclared exception!
      try { 
        page0.addTargetRequests((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setSkip(false);
      page1.setRawText("");
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = Page.fail();
      byte[] byteArray0 = new byte[4];
      String string0 = "\\wO+'2-k*1Y";
      page0.setCharset("wO+'2-k*1Y");
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)72;
      page0.setBytes(byteArray0);
      page0.setDownloadSuccess(true);
      page0.getStatusCode();
      String string1 = "";
      JsonPathSelector jsonPathSelector0 = null;
      try {
        jsonPathSelector0 = new JsonPathSelector("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/jayway/jsonpath/Predicate
         //
         verifyException("us.codecraft.webmagic.selector.JsonPathSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getUrl();
      AndSelector andSelector0 = new AndSelector((List<Selector>) null);
      // Undeclared exception!
      try { 
        andSelector0.selectList((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.AndSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getJson();
      // Undeclared exception!
      try { 
        page0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("us.codecraft.webmagic.selector.AbstractSelectable", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = new Page();
      String string0 = "[an=/et\"Wx";
      Page page1 = page0.setRawText("[an=/et\"Wx");
      page0.getRawText();
      page1.toString();
      page1.getTargetRequests();
      page1.getRawText();
      page0.getHeaders();
      page0.setSkip(true);
      SmartContentSelector smartContentSelector0 = new SmartContentSelector();
      // Undeclared exception!
      try { 
        smartContentSelector0.selectList("Page{request=null, resultItems=ResultItems{fields={}, request=null, skip=false}, html=null, json=null, rawText='[an=/et\"Wx', url=null, headers=null, statusCode=200, downloadSuccess=true, targetRequests=[], charset='null', bytes=null}");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.selector.SmartContentSelector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setSkip(true);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page1.addTargetRequests((List<String>) linkedList0, (-402L));
      assertEquals(200, page1.getStatusCode());
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      long long0 = 0L;
      page0.addTargetRequests((List<String>) linkedList0, 0L);
      Page page1 = page0.setSkip(true);
      page0.getJson();
      page1.setSkip(true);
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setRawText("");
      Request request0 = new Request("RJ.Rxs}#,u.|");
      Request request1 = request0.setCharset((String) null);
      page1.setRequest(request1);
      assertEquals(200, page1.getStatusCode());
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setRawText("");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      page1.setHeaders(hashMap0);
      assertEquals(200, page1.getStatusCode());
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Page page0 = new Page();
      page0.setBytes((byte[]) null);
      page0.getTargetRequests();
      page0.isDownloadSuccess();
      boolean boolean0 = page0.isDownloadSuccess();
      assertEquals(200, page0.getStatusCode());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Page page0 = Page.fail();
      Request request0 = new Request();
      request0.setCharset("]k9DEr(yK.W");
      request0.setCharset("_Zf<");
      page0.addTargetRequest(request0);
      page0.getJson();
      page0.addTargetRequest(request0);
      // Undeclared exception!
      try { 
        page0.addTargetRequest("]k9DEr(yK.W");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Page page0 = new Page();
      String string0 = "N9jYN";
      Page page1 = page0.setRawText("N9jYN");
      page1.setDownloadSuccess(true);
      page1.getBytes();
      // Undeclared exception!
      try { 
        page1.addTargetRequest("N9jYN");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0, (-402L));
      page0.addTargetRequests((List<String>) linkedList0);
      assertEquals(200, page0.getStatusCode());
      assertFalse(page0.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Page page0 = Page.fail();
      page0.setUrl((Selectable) null);
      page0.setSkip(true);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ResultItems resultItems0 = page0.getResultItems();
      assertTrue(resultItems0.isSkip());
      
      Object object0 = new Object();
      page0.putField("2'X=1>a>ER(oUJP(", object0);
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Page page0 = new Page();
      page0.getHeaders();
      page0.getJson();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      linkedList0.parallelStream();
      linkedList0.add("");
      page0.getJson();
      // Undeclared exception!
      try { 
        page0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/collections/CollectionUtils
         //
         verifyException("us.codecraft.webmagic.selector.AbstractSelectable", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setSkip(false);
      page0.getCharset();
      assertTrue(page0.isDownloadSuccess());
      
      page1.setDownloadSuccess(false);
      assertFalse(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.setHtml((Html) null);
      assertEquals(200, page0.getStatusCode());
      assertFalse(page0.isDownloadSuccess());
  }
}
