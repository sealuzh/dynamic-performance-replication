/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 00:25:46 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k2.D?~");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("2.", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";k<A");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(";", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LiowDl\"{:");
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?KM=!YlxA3");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("an?0mp_]5rc)");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a6?KS=!Ylx3");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dq~*](x4msWy!6Tb!:");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pa!G>%1_q8.y9K");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("p", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xy1f>:9");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      assertEquals("xy1f", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")..B#=/$@T");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hQ7uAj$9im`1OzBj`}M");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$O");
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y9Et'!/");
      Token token0 = xPathLexer0.not();
      assertEquals("y", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("9", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("E", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("'", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("!", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      int int0 = xPathLexer0.endPosition();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hQ7uAj$9im`1OzBj`}M");
      xPathLexer0.consume((-1));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*QO(R:.u[6");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      char char0 = xPathLexer0.LA(8);
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[BT0?'1s'8!0X");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("[B", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("T", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("?", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("'", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("1", token5.getTokenText());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('s', char0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("");
      assertEquals("", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals("", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("S (");
      Token token0 = new Token(0, "[ (23) (S)", 49, (-1));
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.getPreviousToken();
      assertSame(token1, token0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("LiowDl\"{:");
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CJ2?jKmPfZ7T#VX");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('2');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.isIdentifierChar('\\');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('5');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume(0);
      assertEquals("", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z0");
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#}e9VpyGs;S-.");
      char char0 = xPathLexer0.LA(2604);
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?KM=!YlxA3");
      xPathLexer0.consume((-968));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?KM=!YlxA3");
      xPathLexer0.consume((-968));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1428));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3734));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      String string0 = xPathLexer0.getXPath();
      assertEquals("x.^l.EA", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Qf=z$/rCF}'R");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("f", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("$/", token4.getTokenText());
      assertEquals(12, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")..B#=/$@T");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";as/lB5'M,");
      Token token0 = xPathLexer0.pipe();
      assertEquals(";", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("as", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("anl?0mp_]5rc)");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ymy!Er`uW&q=T_G");
      xPathLexer0.not();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v^d:X[X| 9A9\"");
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?'(KM|!YlxA3");
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = new Token(29, "com.werken.saxpath.XPathLexer", 29, 96);
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      xPathLexer0.at();
      Token token0 = xPathLexer0.literal();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ERJ@bxb:OHdPH!=Krr");
      Token token0 = xPathLexer0.notEquals();
      Token token1 = xPathLexer0.dots();
      assertEquals("J", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("ER", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("bxb", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLex+r");
      Token token0 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLex", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(18, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      Token token0 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("x", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("^l", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("EA", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = new Token(12, "com.werken.saxpath.XPathLexer", 2648, 12);
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("fxhR", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("xy1f>:9");
      Token token0 = xPathLexer0.slashes();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("xy1f", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("fxhR", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-$L46LQ[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("-", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~h:f;mLY@4i");
      Token token0 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(5, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Eib4~9K'/");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`Z.4i(");
      Token token0 = xPathLexer0.dots();
      assertEquals("`", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".4", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ERJ@bxb:OdPH!=Krr");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("ER", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("Od", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("P", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals("H", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(22, token8.getTokenType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|\"T-zi(p@36NbG]%gK");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7{3%R.l1:");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("7", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("{3%R.l1:", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cz5wQEG,H~pa");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("z5wQEG", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xy1f>:9");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("y1f", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v^d:X[X| 9A9\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("v", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hQ7uAj$9im`1OzBj`}M");
      Token token0 = xPathLexer0.dots();
      assertEquals("h", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("uAj", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y9Et'!/");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("y9", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("E", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("t", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";as/lB5'M,");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(";a", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q<410bTtr#Q;US>m");
      xPathLexer0.consume(8);
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q@M");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.consume(10);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("x", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("path.Token", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertEquals(27, token1.getTokenType());
      assertEquals("m.werken.saxpath.T", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("ke", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.Token", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("x.", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("l.EA", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals("m.werken.saxpath.T", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("ken", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}Hj+v<");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("}H", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("j", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Eib4~9K'/");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("ib4", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~h:f;mLY@4i");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("h", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gm&vH");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("gm", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("w", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d-9t");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("d-9t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_+n6a FMFrGDt%9@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("^l.EA", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3x*]TlMt4");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("]", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath(" `5&ne)YO 4x:LK,iW");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("`5&ne)YO 4x:LK,iW", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(3, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",?Zz-!xv|5bI1{x");
      Token token0 = xPathLexer0.star();
      assertEquals(",", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("Zz-", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#Y6SVe");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Y6SVe", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v^d:X[X| 9A9\"");
      Token token0 = xPathLexer0.star();
      assertEquals("v", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("d", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(":", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("WU.", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GVTG+7~C0m");
      Token token0 = xPathLexer0.dots();
      assertEquals("G", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("VTG", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(WU.");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("(", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("U.", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UDTYTFvF%](");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("UD", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("TYTFvF", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a6=US5YlxA3");
      xPathLexer0.setXPath("SD%;Wb_%FkAs;)e'1SB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("SD", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ERJ@bxb:OdPH!=Krr");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("RJ", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q=vZT9zi=zU");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Q", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ERJ@bxb:OHdPH!=Krr");
      Token token0 = xPathLexer0.at();
      assertEquals("E", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("R", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      xPathLexer0.plus();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("b", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("xb", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("OH", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("d", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("PH", token8.getTokenText());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*QO(R:.uB6");
      Token token0 = xPathLexer0.plus();
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|\"T-zi(p@36NbG]%gK");
      xPathLexer0.consume(11);
      Token token0 = xPathLexer0.nextToken();
      assertEquals("NbG", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("M>Z\"5mx/");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-$L46LQ[");
      Token token0 = xPathLexer0.star();
      assertEquals("-", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("$", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("L46LQ", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a6?KS=!YlxA3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("a6", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("?", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("KS=!YlxA3", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zq&");
      xPathLexer0.setXPath("J*=h25*0V:W^fs@g");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("J", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I-E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("I-E", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?k(KM!YlxA3");
      xPathLexer0.setXPath("H. IY3L:@=>d&O1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("H.", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.setXPath("7{G/f");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("G", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8F\"rv_");
      Token token0 = xPathLexer0.plus();
      assertEquals("8", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")..B#=/$@T");
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("..", token2.getTokenText());
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("B#=/$@T", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x.^l.EA");
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertEquals("^l", token1.getTokenText());
      assertEquals(27, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("A", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ERJ@bxb:OHdPH!=Krr");
      Token token0 = xPathLexer0.at();
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(16, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CJ2?jKmPfZ7T#VX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("CJ2", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("?jKmPfZ7T#VX", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=5w");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q<410bTtr#Q;US>m");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("410bTtr", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(";", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hQ7uAj$9im`1OzBj`}M");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertEquals("hQ7uAj", token0.getTokenText());
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("$", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q>8??Ld* =`!3");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(">", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z7bqFiB(]d}41BN");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("z", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("7", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6{=%q?}");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("6", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=5w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("5", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("w", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~h:f;mLY@4i");
      Token token0 = xPathLexer0.plus();
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("f;", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer0.dots();
      assertEquals("@", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("4", token6.getTokenText());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("37P^KK#C9");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("37", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k2.D?~");
      Token token0 = xPathLexer0.dots();
      assertEquals("k", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals("2.", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("D?~", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z1?' -A");
      Token token0 = xPathLexer0.minus();
      assertEquals("Z", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R20n3Z;!w>M");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("R", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("0", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";as/lB5'M,");
      Token token0 = xPathLexer0.pipe();
      assertEquals(";", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("as", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".7&;FzNe");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".7", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c>fxhR,498).");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(">", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("fxhR", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(32, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":L%bLsz+");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(":L", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("bLsz", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("a?'(KM|!YlxA3");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" `5&neYO 4x:LK,iW");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("`5", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("&neYO 4x:LK,iW", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("SD%;Wb_%FkAs;)e'1SB");
      Token token0 = xPathLexer0.colon();
      assertEquals("S", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("D", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%;Wb_%FkAs;)e'1SB", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-$L46LQ[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(6, token0.getTokenType());
      assertEquals("-", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E#XCi2i0mBr3=%");
      Token token0 = xPathLexer0.not();
      assertEquals("E", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("#XCi2i0mBr3=%", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]\"5 x2s1AB\"6P-X`k;,");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(27, token1.getTokenType());
      assertEquals("5 x2s1AB", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("v!#M");
      Token token0 = xPathLexer0.plus();
      assertEquals("v", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(23, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }
}
