/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:06:46 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.Driver;
import org.h2.engine.ConnectionInfo;
import org.h2.expression.Function;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.jdbc4.Jdbc4Connection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("?nM!Z~0_cjgT4=3w");
      DBUtil.dependencyOrderedTables(tableContainer0);
      boolean boolean0 = DBUtil.available((String) null, "6=qJu0", (String) null, "vh4[(+U");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.escape("Mk9|L>zkj1!?{O5hOm");
      DBUtil.assertAllDbResourcesClosed(true);
      Class<DBTrigger> class0 = DBTrigger.class;
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("--X=K", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('#');
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      DBUtil.getOpenPreparedStatementCount();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection((ConnectionInfo) null, true);
        fail("Expecting exception: JdbcSQLException");
      
      } catch(Throwable e) {
         //
         // General error: \"java.lang.NullPointerException\" [50000-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.close((Statement) null);
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("9HX", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 9HX
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      ErrorHandler errorHandler0 = new ErrorHandler("pa");
      DBUtil.getOpenResultSetCount();
      List<Object[]> list0 = new ColumnDescriptorList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getParentResultSets();
      fBArray0.getResultSet((-1577L), (-2118), (Map) null);
      DBUtil.close((ResultSet) null);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\u0003u'", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "\u0003u'";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "\u0003u'";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      boolean boolean0 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.existsEnvironment("re");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("re", (String) null, "&8/3SkshBI3Mw", (String) null, "--", "&8/3SkshBI3Mw");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.escape("Mk9|L>zkj1!d{O5hOm");
      Recover recover0 = new Recover();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUtil.getOpenResultSetCount();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((String) null, false, false, false, true, (String) null, false, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char char0 = 'l';
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      ErrorHandler errorHandler0 = new ErrorHandler("Connecting ");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "Connecting ", 'l', (Connection) proxy0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Driver> class0 = Driver.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("3q Tb:h", '\\', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "3q Tb:h";
      char char0 = '\\';
      Connection connection0 = null;
      boolean boolean0 = false;
      Class<Driver> class0 = Driver.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      String string1 = "org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory";
      try { 
        DBUtil.getMetaData((Connection) null, "3q Tb:h", "", false, true, false, false, "org.apache.derby.impl.sql.catalog.SYSCONGLOMERATESRowFactory", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.close((Statement) null);
      DBUtil.getOpenResultSetCount();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("'U-~NCj&4BLi UsU", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = FileUtil.fsNormalizesPosixSeparator;
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("EbErBM=C%+tOquKUb(c", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil.checkReadOnly("COMMIT PREPARED '", false);
      // Undeclared exception!
      try { 
        DBUtil.connect("Failed to fetch metadata from connection ", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Failed to fetch metadata from connection .env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.close((ResultSet) null);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("mozilla-firefox");
      // Undeclared exception!
      try { 
        DBUtil.runScript("97 {J", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.close((Statement) null);
      DBUtil.getOpenResultSetCount();
      DBUtil.checkReadOnly("EG|hyj<(UK-.&", false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<Object[]> vector0 = new Vector<Object[]>();
      Recover recover0 = new Recover();
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      DBCatalog dBCatalog0 = new DBCatalog("Using driver ");
      TableContainer tableContainer0 = new TableContainer("7Y|A", dBCatalog0);
      assertEquals("container", tableContainer0.getObjectType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      FBArray fBArray0 = new FBArray();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("AFxCq:/Df^8$s8i");
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("''", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      Recover recover0 = new Recover();
      DBUtil.resetMonitors();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.close((ResultSet) null);
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("mozilla-firefox");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("", (Connection) null, true, errorHandler0);
      assertNotNull(dBExecutionResult0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.existsEnvironment("y?W;>UCp=E|WnP");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y?W;>UCp=E|WnP";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/y?W;>UCp=E|WnP.env.properties");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      stringArray0[2] = "y?W;>UCp=E|WnP";
      stringArray0[6] = "y?W;>UCp=E|WnP";
      // Undeclared exception!
      try { 
        HsqlProperties.argArrayToProps(stringArray0, "y?W;>UCp=E|WnP");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.persist.HsqlProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      Recover recover0 = new Recover();
      DBUtil.resetMonitors();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.close((ResultSet) null);
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = new ErrorHandler("mozilla-firefox");
      try { 
        DBUtil.runScript("", "\"q\"PxHB`%I{z2H&DJ$S", (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      boolean boolean0 = false;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = ":bR7";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("AFxCq:/Df^8$s8i", ":bR7", "AFxCq:/Df^8$s8i", "1_", "1_", ":bR7");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting :bR7 failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "--42X09";
      // Undeclared exception!
      try { 
        DBUtil.countRows("--42X09", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBSchema dBSchema0 = new DBSchema("org.apache.derby.impl.io.DirFile");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9HX", dBSchema0);
      DBUtil.dependencyOrderedTables(dBSchema0);
      DBUtil.resetMonitors();
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DBUtil.close((Statement) null);
      DBUtil.getOpenResultSetCount();
      Class<DBSchema> class0 = DBSchema.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      errorHandler0.setLoggingStackTrace(false);
      DBUtil.runScript("--", 'Y', (Connection) null, false, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.parseResultRow(simpleResultSet0);
      String string0 = DBUtil.format(simpleResultSet0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBUtil.close((Statement) null);
      DBUtil.getOpenResultSetCount();
      Class<DBSchema> class0 = DBSchema.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      errorHandler0.setLoggingStackTrace(true);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      errorHandler0.setLoggingStackTrace(false);
      DBUtil.runScript("--", 'Y', (Connection) null, false, errorHandler0);
      DBUtil.close((Connection) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Function.USER;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "LATIN5", "CREATE SCHEMA", "CREATE SCHEMA", "", "CREATE SCHEMA");
      DBUtil.getOpenStatementCount();
      Random.setNextRandom((-1996));
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
