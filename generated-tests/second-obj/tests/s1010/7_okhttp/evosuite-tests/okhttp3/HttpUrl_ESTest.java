/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:32:31 GMT 2018
 */

package okhttp3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.net.UnknownHostException;
import java.util.List;
import okhttp3.HttpUrl;
import okio.Buffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpUrl_ESTest extends HttpUrl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      try { 
        HttpUrl.getChecked("");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("SHA-1");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.setQueryParameter("mS02;FAU8r=xS", "mS02;FAU8r=xS");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.host("ISIZE");
      HttpUrl httpUrl0 = HttpUrl.parse("q");
      assertNull(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HttpUrl.decodeHexDigit('a');
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "[b:eC.unt > zteger.AXVALU: ";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "U7h=6M:I:n)TI";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("U7h=6M:I:n)TI");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(64, "U7h=6M:I:n)TI");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 64, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("v");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("9DutgR1k1Va -A");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("9DutgR1k1Va -A", "v");
      assertSame(httpUrl_Builder3, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("e]Mhcyg}>gi8EWK_u");
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("U#5]p]&bUf0c");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(87);
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme("uDX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: uDX
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(1934);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(4, "<WU`enK3b");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("Y42V~9~.");
      String string0 = ".d>f}|";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(99, ".d>f}|");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 99, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      try { 
        HttpUrl.getChecked("[n./f]XXl");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for [n./f]XXl
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = "Q#SmTiZH'Qtr|XAbPl";
      try { 
        HttpUrl.getChecked("Q#SmTiZH'Qtr|XAbPl");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for Q#SmTiZH'Qtr|XAbPl
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        HttpUrl.getChecked("beC.unt > ztege1.AXVAU: ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for beC.unt > ztege1.AXVAU: 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = "UsN;XsPIQQ";
      try { 
        HttpUrl.getChecked("UsN;XsPIQQ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for UsN;XsPIQQ
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("Nt-Vs");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("Nt-Vs");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath("Nt-Vs");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: Nt-Vs
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.percentEncoded("NH@", (-56321), (-56321));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedQueryParameter("b.teCount > Integer.MAX_VALUE: ", "host == null");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      httpUrl_Builder0.query("");
      httpUrl_Builder0.removeAllEncodedQueryParameters("R</>0<?3.Z(zN{");
      Buffer buffer0 = new Buffer();
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("z'6l>nf(|Vmb");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("z'6l>nf(|Vmb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: z'6l>nf(|Vmb
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "https:";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("https:", "https:");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("https:");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.username("https:");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.setEncodedPathSegment((-1456), "https:");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\u2026*";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("\u2026*");
      httpUrl_Builder0.encodedQuery("\u2026*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      httpUrl_Builder1.addEncodedQueryParameter("\n", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("A:::,9!/.^`T~  ^TVa");
      String string0 = null;
      httpUrl_Builder1.addEncodedQueryParameter("pathSegments == null", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("J%\"Eh");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(1934);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removePathSegment(0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder1.query("5''dr%607y,g%23hqvpj");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("],{,x3~2dJpM%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ],{,x3~2dJpM%
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\u2026*";
      String string1 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("%60%23]%5cc)x%7fe", (String) null);
      httpUrl_Builder1.addEncodedPathSegments("\u2026*");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setQueryParameter((String) null, "?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      Buffer buffer0 = new Buffer();
      httpUrl_Builder0.password(") and stream length (");
      Buffer buffer1 = new Buffer();
      HttpUrl.percentDecode(buffer1, "(ES", 547, 547, true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(268);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedUsername((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedUsername == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "X*O]";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("X*O]");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder2.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("n!x");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("n!x");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username("\u2026]");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.scheme("\u2026]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: \u2026]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegments("+M]");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-573), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("INVALID_PORT");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedPassword("&`!*g0fa3@U!Fs&Wnb!");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegments("INVALID_PORT");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.setQueryParameter("", "&`!*g0fa3@U!Fs&Wnb!");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("n!x");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllEncodedQueryParameters("n!x");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.username("\u2026]");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.scheme("\u2026]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: \u2026]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = "https:";
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        HttpUrl.getChecked("https:");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.newBuilder("l@b[tw%23");
      httpUrl0.pathSize();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "\u2026";
      MockURL.getQuery(uRL0);
      MockURI.create("\u2026");
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.toString();
      String string1 = "xlno,rvyxt%3e$x6o%25";
      HttpUrl.parse("xlno,rvyxt%3e$x6o%25");
      try { 
        HttpUrl.getChecked("/...");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for /...
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      httpUrl0.resolve(")");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("%3chyg=%7drav_)kq%2fh=k&b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: %3chyg=%7drav_)kq%2fh=k&b
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("beC.unt > 9tee1.XVAU: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: beC.unt > 9tee1.XVAU: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.parse("fooexample");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(12);
      HttpUrl.Builder.ParseResult.values();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 48;
      httpUrl_Builder1.port(48);
      httpUrl_Builder0.encodedQuery(".-PW[+7496p.;h");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "feff";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("feff");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(53);
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "=KM%aHl.m#S";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(8230, "=KM%aHl.m#S");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 8230, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.encodedFragment();
      httpUrl0.encodedUsername();
      httpUrl0.queryParameterValues("INVALID_PORT");
      httpUrl0.isHttps();
      MockURL.toExternalForm(uRL0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append(false);
      StringBuilder stringBuilder2 = stringBuilder1.append(0.0);
      Object object0 = new Object();
      StringBuilder stringBuilder3 = stringBuilder2.append(object0);
      // Undeclared exception!
      try { 
        stringBuilder3.insert(276, 276);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 276
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      httpUrl0.queryParameterValues(")");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      httpUrl0.pathSize();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ">>6&2.`m]tx";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query(">>6&2.`m]tx");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      String string1 = "b";
      // Undeclared exception!
      try { 
        httpUrl_Builder2.encodedPath("b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: b
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "Eg%.sSy9;b0`";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("Eg%.sSy9;b0`");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.port(65535);
      String string1 = "b@3Ur9,}FD}";
      httpUrl_Builder1.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder2.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "Unexpected code point: ";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("Unexpected code point: ");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPassword == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      httpUrl0.pathSize();
      httpUrl0.equals((Object) null);
      httpUrl0.queryParameterNames();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MockURL.getHttpExample();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.query();
      Buffer buffer0 = new Buffer();
      int int0 = 57;
      String string0 = "..";
      String string1 = "/]ZF|C|";
      // Undeclared exception!
      try { 
        HttpUrl.get((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.password((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // password == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("\n");
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder1.addEncodedQueryParameter((String) null, "\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "size=%s offset=%s byteCount=%s";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("size=%s offset=%s byteCount=%s");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment(6, "size=%s offset=%s byteCount=%s");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "tH%23Wo";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("%2e%2e", "wppl=");
      String string1 = "Bw?(/436_s1P|0MMW=";
      httpUrl_Builder0.encodedFragment = "%2e%2e";
      String string2 = "wppl=";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("Bw?(/436_s1P|0MMW=", "wppl=");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters("%2e%2e");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.setPathSegment((-1789569704), "Bw?(/436_s1P|0MMW=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword(":@");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(32);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.setQueryParameter(":@", ":@");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "";
      try { 
        HttpUrl.getChecked("fRp+|j]y9@");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for fRp+|j]y9@
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("\r");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("\r");
      httpUrl_Builder0.addPathSegment("\r");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedQuery("8YQ|$LQ");
      httpUrl_Builder0.password("Ha%|P?/t+PbvK");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MockURL.getHttpExample();
      String string0 = "::";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MockURL.getHttpExample();
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllEncodedQueryParameters("tH#Wo");
      httpUrl_Builder0.addEncodedPathSegment(".%2e");
      HttpUrl.defaultPort("/...");
      // Undeclared exception!
      try { 
        HttpUrl.Builder.ParseResult.valueOf("/...");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant okhttp3.HttpUrl.Builder.ParseResult./...
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%2e%2e");
      int int0 = (-2028);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment((-2028));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.decodeHexDigit('=');
      String string0 = "%0d";
      httpUrl_Builder0.addPathSegment("%0d");
      String string1 = "tx1";
      String string2 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%2e%2e");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment((-1826), "zVVX_Vs?e4}Bb0Ky");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        HttpUrl.getChecked("|'g&0jsIgLe%7@mD~v");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for |'g&0jsIgLe%7@mD~v
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "+U";
      httpUrl_Builder0.query("+U");
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append((-1137L));
      stringBuilder0.append(true);
      StringBuffer stringBuffer0 = new StringBuffer(stringBuilder1);
      stringBuilder0.append((-1137L));
      // Undeclared exception!
      try { 
        stringBuilder1.replace(69, (-1442), (String) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "v,kFvN)C)x9EYg";
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string1 = "NB5vZR6cs~#;`+";
      httpUrl_Builder0.encodedQuery("NB5vZR6cs~#;`+");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(65536, "v,kFvN)C)x9EYg");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 65536, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.username("okhttp3.HttpUrl$1");
      httpUrl_Builder0.encodedPassword("SWysf=~l ");
      String string0 = "bH::e.";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("bH::e.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: bH::e.
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "%#>C+ti]";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%#>C+ti]");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("%#>C+ti]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: %#>C+ti]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue((-1627488195));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegment(".");
      int int0 = 313;
      String string0 = "xKmTU'iy";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(".outputStream()");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: .outputStream()
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.pathSegments();
      Buffer buffer0 = new Buffer();
      httpUrl0.uri();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      MockURL.toString(uRL0);
      httpUrl0.queryParameterValues("http://www.someFakeButWellFormedURL.org/fooExample");
      httpUrl0.isHttps();
      MockURL.getPath(uRL0);
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append("http://www.someFakeButWellFormedURL.org/fooExample");
      stringBuilder1.append(156.71412319732);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl0.encodedQuery();
      httpUrl_Builder0.query("");
      httpUrl0.querySize();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("([0-a-fA-F*:[-9a-fA-F.*)|([d.]+)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ([0-a-fA-F*:[-9a-fA-F.*)|([d.]+)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      Buffer buffer0 = new Buffer();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "4<XUE0rrK#3vn";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("4<XUE0rrK#3vn");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment((String) null);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters("h");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.removePathSegment((-788));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      httpUrl_Builder0.query("\u2026*");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(268);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedFragment((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder2.scheme("`LQe /z3`>*|Z @03");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: `LQe /z3`>*|Z @03
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      String string0 = "..";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegment("..");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedQueryParameter("..", "..");
      httpUrl_Builder0.encodedPassword("..");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.password("..");
      int int0 = (-651);
      // Undeclared exception!
      try { 
        httpUrl_Builder4.port((-651));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -651
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "Unexpected code point: ";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("Unexpected code point: ");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query((String) null);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MockURL.getHttpExample();
      StringBuilder stringBuilder0 = new StringBuilder();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username(".n;8%7b3");
      httpUrl_Builder1.addEncodedPathSegments("%2e.");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        MockURL.URL("z84|X}}'q<", "%2e.", 275, (String) null, uRLStreamHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Parts", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      HttpUrl.parse("hw+,{@c\"O]}04FxGr");
      httpUrl_Builder1.parse((HttpUrl) null, "https:/www.somefakebutwellformedurl.org/fooexample");
      httpUrl_Builder1.setQueryParameter("HV", "hw+,{@c\"O]}04FxGr");
      HttpUrl httpUrl0 = httpUrl_Builder1.build();
      httpUrl0.newBuilder();
      // Undeclared exception!
      try { 
        HttpUrl.canonicalize("beC::nt p 9tee1.XVAU: ", 8192, 8192, "p5#-A{NJzH[w|Yw:^", false, false, false, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MockURL.getHttpExample();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hi!.%7BI6pQal.%7F*_");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removePathSegment(0);
      HttpUrl.percentDecode("hi!.%7BI6pQal.%7F*_", false);
      HttpUrl.Builder.ParseResult.values();
      httpUrl0.url();
      MockURI.create("hi!.%7BI6pQal.%7F*_");
      httpUrl_Builder1.addEncodedQueryParameter("", ".=");
      httpUrl0.querySize();
      int int0 = ObjectStreamConstants.baseWireHandle;
      httpUrl0.fragment();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl httpUrl1 = httpUrl0.resolve("?#");
      httpUrl1.url();
      try { 
        MockURI.URI("encodedUsername == null", "https:", "encodedUsername == null", (String) null, " content=");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: encodedUsername == null://https:encodedUsername%20==%20null#%20content=
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.addPathSegments("");
      HttpUrl.Builder httpUrl_Builder3 = new HttpUrl.Builder();
      httpUrl_Builder2.host("smGWs");
      httpUrl_Builder3.addPathSegments("smGWs");
      String string1 = "https";
      httpUrl_Builder0.scheme("https");
      httpUrl_Builder1.encodedPassword("smGWs");
      httpUrl_Builder1.username("encodd7ame%20==%20null");
      httpUrl_Builder2.toString();
      Buffer buffer0 = new Buffer();
      try { 
        MockURL.URL("smGWs", "https", "https");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: smgws
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\u2026";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("\u2026");
      int int0 = 2;
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setPathSegment(2, "RweIc=x");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder1.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      httpUrl_Builder0.removePathSegment(0);
      MockURL.getProtocol(uRL0);
      httpUrl_Builder0.scheme("http");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.url();
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fooexample");
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      httpUrl0.url();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("\u2026");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.addEncodedQueryParameter("[", (String) null);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegment("[");
      httpUrl_Builder3.host("w9DJ");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      try { 
        HttpUrl.getChecked("fooexample");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for fooexample
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::':;<=>@[]^`{}|/?#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ::':;<=>@[]^`{}|/?#
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HttpUrl.percentDecode(buffer0, "::P;oB:?:=O", 3555, 3555, true);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("::P;oB:?:=O", "unexpected host: ");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedFragment("unexpected host: ");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(92);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedPathSegment("%2e");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.username("n\"A&6Q5\"$x7ifz2C");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.host("unexpected host: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: unexpected host: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.parse(httpUrl0, "");
      httpUrl_Builder0.parse(httpUrl0, "");
      String string0 = ".d>f}|";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-4696), "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("");
      HttpUrl.Builder httpUrl_Builder2 = new HttpUrl.Builder();
      httpUrl_Builder1.host("sXGWs");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegments("sXGWs");
      String string1 = "https";
      httpUrl_Builder0.scheme("https");
      String string2 = "/FO8{3";
      httpUrl_Builder3.encodedPath("/FO8{3");
      httpUrl_Builder0.username("encodd7ame%20==20null");
      HttpUrl httpUrl0 = new HttpUrl(httpUrl_Builder1);
      httpUrl0.queryParameterNames();
      Buffer buffer0 = new Buffer();
      try { 
        MockURL.URL("sXGWs", "https", "https");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: sxgws
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl0.redact();
      httpUrl0.pathSegments();
      httpUrl0.port();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "T}\\f:@";
      MockURL.getProtocol(uRL0);
      httpUrl_Builder0.parse(httpUrl0, "T}\f:@");
      Buffer buffer0 = new Buffer();
      boolean boolean0 = false;
      httpUrl0.encodedUsername();
      MockURI.URI("");
      int int0 = (-2154);
      httpUrl_Builder0.username("::C.unt > ztege1.AXVAU: ");
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(447);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.pathSegments();
      httpUrl0.port();
      httpUrl0.queryParameter("mR?lp|=TB]K[jY`G");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("\n", "$WY&vB`.TX{xIx_/\"1x");
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedQueryParameter("\n", "");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment(1298, "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1298, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      Buffer buffer0 = new Buffer();
      httpUrl0.password();
      MockURL.getPath(uRL0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.equals(httpUrl_Builder0);
      httpUrl0.host();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port(65536);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: 65536
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MockURL.getHttpExample();
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword(":@");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(32);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.removeAllEncodedQueryParameters(":@");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedPathSegments(":@");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.setQueryParameter(":@", ":@");
      String string0 = "?*%Am";
      // Undeclared exception!
      try { 
        httpUrl_Builder5.host("?*%Am");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ?*%Am
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MockURL.getHttpExample();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments(".%2e");
      HttpUrl.Builder.ParseResult.values();
      httpUrl0.url();
      MockURI.create("%2e.");
      httpUrl_Builder1.addQueryParameter("%2e.", ".%2e");
      httpUrl0.querySize();
      httpUrl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:/:b@3ur9,}fd}@www.somefakebutwellformedurl.org:1/fooexample#http://www.somefakebutwellformedurl.org/...");
      httpUrl0.encodedPath();
      httpUrl0.pathSegments();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e%2e");
      httpUrl_Builder0.setQueryParameter("%2e%2e", "%2e%2e");
      Buffer buffer0 = new Buffer();
      httpUrl_Builder0.parse(httpUrl0, "b::eC::nt > Integer.MAX_VALUE: ");
      Buffer buffer1 = new Buffer();
      HttpUrl httpUrl1 = httpUrl_Builder0.build();
      httpUrl1.querySize();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.MISSING_SCHEME;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      MockURL.toString(uRL0);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("%uzZn`vO");
      HttpUrl.Builder httpUrl_Builder2 = new HttpUrl.Builder();
      httpUrl_Builder0.port(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.reencodeForUri();
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-3);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte)5;
      byteArray0[2] = (byte)5;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "5cs\"1*<@,T|E}D");
      try { 
        HttpUrl.getChecked("b:D:ec");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for b:D:ec
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = HttpUrl.get(uRL0);
      httpUrl1.encodedPath();
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("/fooExample");
      StringBuilder stringBuilder0 = new StringBuilder();
      URL uRL1 = MockURL.getHttpExample();
      MockURL.toURI(uRL1);
      httpUrl1.queryParameter("/fooExample");
      httpUrl_Builder0.setEncodedQueryParameter("https:2?&qib8m imng", (String) null);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("SWysf=~l ");
      httpUrl_Builder1.username("okhttp3.HttpUrl$Builder$ParseResult");
      HttpUrl.defaultPort("SWysf=~l ");
      httpUrl0.scheme();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.encodedPathSegments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      httpUrl_Builder0.parse(httpUrl0, "_E_f?n");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("_E_f?n");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.username(":");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setPathSegment((-2587), "[sRxize=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("|;");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      httpUrl0.encodedPath();
      httpUrl_Builder0.build();
      httpUrl1.query();
      Buffer buffer0 = new Buffer();
      String string0 = "[[+6(6\\*Brl$%";
      try { 
        MockURI.URI("", "\r", "[[+6(6*Brl$%", "|;");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: ://\r%5B%5B+6(6*Brl$%25#%7C;
         //
         verifyException("java.net.URI", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:izze#[izze");
      httpUrl0.uri();
      httpUrl0.encodedPathSegments();
      httpUrl0.encodedPassword();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      httpUrl_Builder0.encodedFragment("fgKQ.d0q'");
      httpUrl_Builder0.removeAllQueryParameters("fgKQ.d0q'");
      httpUrl0.username();
      httpUrl_Builder0.encodedQuery((String) null);
      httpUrl_Builder0.removeAllEncodedQueryParameters("encodedUsername == null");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\n";
      httpUrl_Builder0.setEncodedQueryParameter("\n", "\u2026*");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("q?^rm[U`:.:~");
      List<String> list0 = httpUrl1.queryParameterValues("?9`]W");
      httpUrl_Builder0.encodedQueryNamesAndValues = list0;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      String string0 = "%2e";
      httpUrl_Builder0.password("%2e");
      Buffer buffer0 = new Buffer();
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      httpUrl_Builder1.build();
      String string1 = "b::C.unt > zteger.AXVALU: ";
      httpUrl_Builder1.parse(httpUrl1, "%2e");
      String string2 = "%uzZn%60vO";
      // Undeclared exception!
      try { 
        HttpUrl.Builder.ParseResult.valueOf("b::C.unt > zteger.AXVALU: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant okhttp3.HttpUrl.Builder.ParseResult.b::C.unt > zteger.AXVALU: 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment = "c~ceL+w>M";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "c~ceL+w>M");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedPathSegment(0, "c~ceL+w>M");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder0);
      Buffer buffer0 = new Buffer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "p7jaBU6[";
      httpUrl1.queryParameterValues("p7jaBU6[");
      StringBuilder stringBuilder0 = new StringBuilder("p7jaBU6[");
      int int1 = 20;
      stringBuilder0.appendCodePoint(20);
      httpUrl0.equals(httpUrl0);
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterName(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      httpUrl0.pathSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.addEncodedPathSegment("(ES");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("(ES");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.setEncodedQueryParameter("(ES", "(ES");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedFragment("e{e=.,_U?apD$?~>T}");
      httpUrl_Builder3.encodedUsername = "_7L29?mA}cV+";
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder3);
      httpUrl1.encodedUsername();
      httpUrl0.uri();
      httpUrl_Builder3.query("");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("D6lNZ+RLUMJxw80NK.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: D6lNZ+RLUMJxw80NK.
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      httpUrl_Builder0.parse(httpUrl0, "(");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{z4>@O~v!UwMpSrsK");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter(" text=", "uU`");
      HttpUrl httpUrl1 = httpUrl_Builder1.build();
      httpUrl1.queryParameter("\u2026");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e%2e");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("%2e%2e");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("%2e%2e");
      httpUrl_Builder3.addEncodedPathSegment("%2e%2e");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder3);
      HttpUrl httpUrl2 = new HttpUrl(httpUrl_Builder2);
      HttpUrl httpUrl3 = new HttpUrl(httpUrl_Builder2);
      httpUrl3.queryParameterValues("%2e%2e");
      httpUrl1.queryParameter("L56rJeQ0YoJLI");
      httpUrl_Builder0.fragment("^qO,V:yQ{5");
      try { 
        MockURL.URL("[: ", "{`", 2369, "L56rJeQ0YoJLI");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: [: 
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("b::e.");
      httpUrl_Builder0.query("4&X${H=ddP\fnFkj(l");
      httpUrl_Builder0.fragment("b::e.");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addQueryParameter("b::e.", ".u");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.reencodeForUri();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      int int0 = 97;
      Buffer buffer0 = new Buffer();
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder1.fragment("}Ty}c[bgHVE");
      String string0 = "source == null";
      httpUrl_Builder4.removeAllQueryParameters("source == null");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      MockURL.getFile(uRL0);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(255);
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.removeAllQueryParameters("5cs\"1*<@,T|E}D");
      HttpUrl httpUrl1 = httpUrl_Builder1.build();
      httpUrl_Builder0.addPathSegment("b");
      httpUrl1.url();
      httpUrl1.newBuilder();
      httpUrl_Builder1.build();
      int int0 = (-24589507);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment((-24589507));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      MockURL.getHttpExample();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.parse(httpUrl0, "https:/www.somefakebutwellformedurl.org:255/fooexample");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment((-1408), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("|;");
      httpUrl_Builder1.setQueryParameter("|;", "|;");
      httpUrl0.redact();
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder1);
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValue(541);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1083, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.get(uRL0);
      Buffer buffer0 = new Buffer();
      MockURL.getRef(uRL0);
      httpUrl0.resolve("#,pZkzU7J9y2(7KWRl");
      HttpUrl httpUrl1 = null;
      try {
        httpUrl1 = new HttpUrl((HttpUrl.Builder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      String string0 = "B\u2026";
      httpUrl_Builder0.addEncodedPathSegments("B\u2026");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removePathSegment(0);
      MockURL.getQuery(uRL0);
      String string1 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("6<,9rO>y8RPmQouDj+");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query(")");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.username("6<,9rO>y8RPmQouDj+");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addEncodedPathSegment(")");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder2);
      HttpUrl httpUrl2 = new HttpUrl(httpUrl_Builder4);
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder0.encodedUsername("6<,9rO>y8RPmQouDj+");
      httpUrl_Builder3.build();
      HttpUrl httpUrl3 = httpUrl1.resolve("Z('/0 tG7T+Kp~Cl");
      httpUrl3.resolve("6<,9rO>y8RPmQouDj+");
      httpUrl1.resolve("..");
      httpUrl_Builder0.parse(httpUrl2, "`q&5T6z4BqH\"");
      httpUrl_Builder4.encodedPassword("`q&5T6z4BqH\"");
      Buffer buffer0 = new Buffer();
      HttpUrl.percentDecode(buffer0, "$VALUES", 4115, (-533), false);
      httpUrl_Builder5.setEncodedQueryParameter("`q&5T6z4BqH\"", "#hpLj]L2![:E");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("%2e%2e");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter("%2e%2e", "%2e%2e");
      Buffer buffer0 = new Buffer();
      MockURL.getAuthority(uRL0);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("www.someFakeButWellFormedURL.org");
      httpUrl_Builder2.addPathSegment("Y*Dy3@me`");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.password("www.someFakeButWellFormedURL.org");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder0);
      httpUrl_Builder3.removeAllEncodedQueryParameters("www.someFakeButWellFormedURL.org");
      httpUrl_Builder3.addEncodedQueryParameter("u,l", "/pcXFZtTMa");
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterName(128);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 256, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("6<,9rO>y8RPmQouDj+");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query(")");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.username("6<,9rO>y8RPmQouDj+");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder2);
      Buffer buffer0 = new Buffer();
      httpUrl1.uri();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      httpUrl0.queryParameterValues("[hex=");
      StringBuilder stringBuilder0 = new StringBuilder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringBuilder0.appendCodePoint(3);
      httpUrl1.equals(httpUrl0);
      // Undeclared exception!
      try { 
        httpUrl_Builder3.setEncodedPathSegment((-337), "[hex=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      MockURL.getFile(uRL0);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.username("/fooExample");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.reencodeForUri();
      httpUrl_Builder2.removeAllQueryParameters("5cs\"1*<@,T|E}D");
      HttpUrl httpUrl1 = httpUrl_Builder1.build();
      httpUrl_Builder2.addPathSegment("b");
      URL uRL1 = httpUrl1.url();
      httpUrl1.newBuilder();
      httpUrl_Builder1.build();
      HttpUrl.get(uRL1);
      int int0 = (-24589507);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment((-24589507));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "";
      String string1 = "6<,9rO>y8RPmQouDj+";
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("6<,9rO>y8RPmQouDj+");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedFragment("");
      HttpUrl httpUrl1 = new HttpUrl(httpUrl_Builder2);
      HttpUrl httpUrl2 = new HttpUrl(httpUrl_Builder2);
      httpUrl2.queryParameterValues("]y7LtI.;wyZ");
      httpUrl2.queryParameter("");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "[ \"':;<=>@[]^`{}|/\\?#";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[ \"':;<=>@[]^`{}|/?#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [ \"':;<=>@[]^`{}|/?#
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("%2e%2e");
      httpUrl_Builder1.setQueryParameter("%2e%2e", "%2e%2e");
      HttpUrl httpUrl1 = httpUrl0.resolve("rw");
      httpUrl_Builder0.parse(httpUrl1, "%2e%2e");
      String string0 = "b:eC.unt > zteger.AXVALU: ";
      String string1 = "[ \"':;<=>@[]^`{}|/\\?#]";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("[ \"':;<=>@[]^`{}|/?#]");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("[ \"':;<=>@[]^`{}|/?#]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [ \"':;<=>@[]^`{}|/?#]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.MISSING_SCHEME;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("");
      String string1 = "%uzzn%60vo";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.removeAllQueryParameters("%uzZn%60vO");
      httpUrl_Builder0.addPathSegment("%uzZn%60vO");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.host("b::eC::nt > zteger.MAXVALUE: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b::eC::nt > zteger.MAXVALUE: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "Ut??";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ut??");
      String string1 = "b::ec";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b::ec");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "b:D:ec";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b:D:ec");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b:D:ec
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockURL.getFile(uRL0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("B)(0S");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      httpUrl_Builder0.build();
      URL uRL1 = httpUrl0.url();
      httpUrl0.resolve("_\"");
      HttpUrl.get(uRL1);
      MockURL.getFile(uRL0);
      MockURL.getPath(uRL0);
      String string0 = "..";
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.setEncodedQueryParameter("..", "=FAuTjw#o?");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.setPathSegment(67, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = " for ";
      httpUrl_Builder0.parse(httpUrl0, " for ");
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult1 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      httpUrl_Builder0.addEncodedPathSegments("..");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removePathSegment(0);
      MockURL.getQuery(uRL0);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.password(" for ");
      httpUrl_Builder2.build();
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment(0, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      MockURL.getProtocol(uRL0);
      MockURL.getAuthority(uRL0);
      MockURI.URI("www.someFakeButWellFormedURL.org");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("www.someFakeButWellFormedURL.org");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.scheme("http");
      httpUrl_Builder2.addEncodedQueryParameter("http", "www.someFakeButWellFormedURL.org");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.addEncodedPathSegments("?#");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      EvoSuiteFile evoSuiteFile0 = null;
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      String string0 = "\\8Q3g.J*wo7zh:nRy{5";
      httpUrl_Builder0.parse(httpUrl0, "8Q3g.J*wo7zh:nRy{5");
      HttpUrl.Builder.ParseResult httpUrl_Builder_ParseResult0 = HttpUrl.Builder.ParseResult.INVALID_PORT;
      String string1 = "\u2026";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("\u2026");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: \u2026
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b:9e.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b:9e.
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }
}
