/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 21 21:55:28 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)38;
      byteArray0[4] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(671, 50738, fieldTypeRational0, 1086L, (-2089443548), byteArray0, byteOrder0, (byte) (-93));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2089443548), tiffField0.getOffset());
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals(50738, tiffField0.getDirectoryType());
      assertEquals(671, tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)38;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(671, 50738, fieldTypeRational0, 1086L, (-2089443548), byteArray0, byteOrder0, (byte) (-93));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50738, tiffField0.getDirectoryType());
      assertEquals(671, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals((-2089443548), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-357), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-357), fieldTypeFloat0.RATIONAL, 2265L, 5672L, byteArray0, byteOrder0, 28);
      String string0 = tiffField0.toString();
      assertEquals(5672, tiffField0.getOffset());
      assertEquals((-357), tiffField0.getDirectoryType());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (2265 Rational)", string0);
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1656, 8, fieldTypeShort0, 676L, 6278L, byteArray0, byteOrder0, (-299));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-299), tiffField0.getSortHint());
      assertEquals(1656, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(6278, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(27, (byte) (-118), fieldTypeShort0, (-8456L), (-672L), byteArray0, byteOrder0, (byte)87);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-118), tiffField0.getDirectoryType());
      assertEquals((-672), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(324, 337, fieldTypeLong0, (byte) (-51), (-2139500436L), byteArray0, byteOrder0, (byte)18);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(324, tagInfo0.tag);
      assertEquals(337, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getTag());
      assertEquals((-2139500436), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 196, fieldTypeRational0, (byte)0, 1, byteArray0, byteOrder0, (byte)8);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(196, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-23), (-153), fieldTypeByte0, 1104L, (-1040L), byteArray0, byteOrder0, (-153));
      int int0 = tiffField0.getTag();
      assertEquals((-153), tiffField0.getDirectoryType());
      assertEquals((-1040), tiffField0.getOffset());
      assertEquals((-23), int0);
      assertEquals((-153), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-99);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-17);
      TiffField tiffField0 = new TiffField(2599, 774, fieldTypeAscii0, 421L, 1194L, byteArray0, byteOrder0, 774);
      String string0 = tiffField0.getStringValue();
      assertEquals(774, tiffField0.getDirectoryType());
      assertEquals(1194, tiffField0.getOffset());
      assertEquals(2599, tiffField0.getTag());
      assertEquals(774, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2128136948, 2599, fieldTypeAscii0, 2599, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2599, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2128136948, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(733, (byte)0, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, 2936);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2936, int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(733, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 2599, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SBYTE).SRATIONAL, 0L, (byte)0, byteArray0, byteOrder0, 2128136948);
      tiffField0.getOffset();
      assertEquals(2128136948, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2599, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1107), 610, fieldTypeShort0, 255L, 12824L, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(12824, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1107), tiffField0.getTag());
      assertEquals(610, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)91;
      TiffField tiffField0 = new TiffField((-1107), 610, fieldTypeShort0, 255L, 12824L, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(610, tiffField0.getDirectoryType());
      assertEquals(91, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1107), tiffField0.getTag());
      assertEquals(12824, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-33);
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2140442687, tiffField0.getOffset());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2140442687, tiffField0.getDirectoryType());
      assertEquals(34023, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)68;
      TiffField tiffField0 = new TiffField((byte)50, (-2103), fieldTypeFloat0.SLONG, 1L, 1L, byteArray0, byteOrder0, (byte)68);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-33);
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getIntValue();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(2140442687, tiffField0.getDirectoryType());
      assertEquals(2140442687, tiffField0.getOffset());
      assertEquals((-33), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1994), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeRational0, 805L, 0L, byteArray0, byteOrder0, 2128136948);
      tiffField0.getFieldTypeName();
      assertEquals(2128136948, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2390, (byte) (-90), fieldTypeFloat0, (byte)32, (-954L), byteArray0, byteOrder0, (byte) (-81));
      tiffField0.getFieldTypeName();
      assertEquals(2390, tiffField0.getTag());
      assertEquals((-954), tiffField0.getOffset());
      assertEquals((-90), tiffField0.getDirectoryType());
      assertEquals((-81), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3999, 2562, (FieldType) null, 0L, (-2553L), byteArray0, byteOrder0, 675);
      tiffField0.getFieldType();
      assertEquals(3999, tiffField0.getTag());
      assertEquals((-2553), tiffField0.getOffset());
      assertEquals(2562, tiffField0.getDirectoryType());
      assertEquals(675, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(86, (-350), fieldTypeShort0, 1900L, 83040L, byteArray0, byteOrder0, (-350));
      tiffField0.getFieldType();
      assertEquals(86, tiffField0.getTag());
      assertEquals((-350), tiffField0.getSortHint());
      assertEquals((-350), tiffField0.getDirectoryType());
      assertEquals(83040, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2147134632), "M");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0, 20, 354L, byteArray0, (ByteOrder) null, (-421));
      tiffField0.getFieldType();
      assertEquals(20, tiffField0.getTag());
      assertEquals(354, tiffField0.getOffset());
      assertEquals((-421), tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)68;
      TiffField tiffField0 = new TiffField((byte)50, (-2103), fieldTypeFloat0.SLONG, 1L, 1L, byteArray0, byteOrder0, (byte)68);
      tiffField0.getDoubleValue();
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-33);
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getDoubleValue();
      assertEquals(34023, tiffField0.getTag());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2140442687, tiffField0.getOffset());
      assertEquals(2140442687, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)120, (byte)0, fieldTypeLong0, 2136L, (byte)87, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(87, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(120, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(285, (-1382), fieldTypeByte0, 1L, (-2064), (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(285, tiffField0.getTag());
      assertEquals((-1382), int0);
      assertEquals((-2064), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-103), fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2250), (-2250), fieldTypeRational0, (-1L), (-2250), byteArray0, byteOrder0, 324);
      tiffField0.getCount();
      assertEquals((-2250), tiffField0.getTag());
      assertEquals((-2250), tiffField0.getOffset());
      assertEquals((-2250), tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)114, (byte)114, fieldTypeAscii0.SBYTE, (byte)0, (byte)114, byteArray0, byteOrder0, (-2147275173));
      tiffField0.getBytesLength();
      assertEquals(114, tiffField0.getOffset());
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(114, tiffField0.getTag());
      assertEquals((-2147275173), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37522, 37522, fieldTypeByte0, (-1881L), (-1881L), byteArray0, byteOrder0, 1);
      tiffField0.getBytesLength();
      assertEquals(37522, tiffField0.getDirectoryType());
      assertEquals((-1881), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(37522, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(845, (byte)114, fieldTypeAscii0, 845, (-1699L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(845, tiffField0.getTag());
      assertEquals((-1699), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-23), (-153), fieldTypeByte0, 1104L, (-1045L), byteArray0, byteOrder0, (-153));
      tiffField0.getByteArrayValue();
      assertEquals((-1045), tiffField0.getOffset());
      assertEquals((-153), tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getTag());
      assertEquals((-153), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "S|r");
      TiffField tiffField0 = new TiffField((-725), 0, fieldTypeRational0, (-2986L), 0, (byte[]) null, byteOrder0, 528);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(0, 313, fieldTypeFloat0, (-9112L), 0L, byteArray0, (ByteOrder) null, 3605);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), (-846), fieldTypeLong0, (-508L), (-508L), byteArray0, byteOrder0, 664);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-5157), "... (");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "... (");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1300), (-1300), fieldTypeAscii0, (-1300), 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1861), (-1861), fieldTypeAscii0, (-1861), 2599, (byte[]) null, byteOrder0, 1457);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50216, 50216, fieldTypeAscii0, (-3431L), (-3431L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte) (-33), fieldTypeLong0, (byte) (-90), 4L, byteArray0, byteOrder0, (-279));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1828), (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1832, (-1828), fieldTypeByte0, 1832, (-1828), byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2384, 2333, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).FLOAT).BYTE, (-3026L), 926L, byteArray0, byteOrder0, 2333);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2372), (-84), fieldTypeLong0, (-2372), 0L, byteArray0, byteOrder0, (-1297));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(557, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(557, 557, fieldTypeDouble0, 557, 557, byteArray0, byteOrder0, (-5377));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-596), "");
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0, 255L, 3283L, (byte[]) null, byteOrder0, (-596));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-1648L), 0L, byteArray0, byteOrder0, (byte) (-46));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, (byte[]) null, byteOrder0, (-2064));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[265];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-227), 65535, fieldTypeDouble0, (-465L), 50, byteArray0, byteOrder0, (-227));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      Byte byte0 = new Byte((byte)50);
      byte[] byteArray0 = fieldTypeRational0.writeData(byte0, byteOrder0);
      TiffField tiffField0 = new TiffField(1539, 6, fieldTypeRational0, 0L, (byte)50, byteArray0, byteOrder0, 128);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, 2, (byte)11, byteArray0, byteOrder0, (byte)11);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1656, 8, fieldTypeShort0, 676L, 6278L, byteArray0, byteOrder0, (-299));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1656, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-299), tiffField0.getSortHint());
      assertEquals(6278, tiffField0.getOffset());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2843L), 2165L, byteArray0, byteOrder0, 18246);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2165, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(18246, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(845, (byte)114, fieldTypeAscii0, 845, (-1699L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(845, tiffField0.getTag());
      assertEquals((-1699), tiffField0.getOffset());
      assertEquals(114, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getFieldType();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(2140442687, tiffField0.getOffset());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2140442687, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-23), (-153), fieldTypeByte0, 1104L, (-1040L), byteArray0, byteOrder0, (-153));
      tiffField0.getValue();
      assertEquals((-153), tiffField0.getDirectoryType());
      assertEquals((-153), tiffField0.getSortHint());
      assertEquals((-1040), tiffField0.getOffset());
      assertEquals((-23), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2140442718, 2140442718, fieldTypeAscii0.SRATIONAL, 34023, 2599, byteArray0, byteOrder0, 2599);
      int int0 = tiffField0.getTag();
      assertEquals(2599, tiffField0.getOffset());
      assertEquals(2599, tiffField0.getSortHint());
      assertEquals(2140442718, tiffField0.getDirectoryType());
      assertEquals(2140442718, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1878, 1878, fieldTypeByte0, 1878, 1878, byteArray0, byteOrder0, (-2527));
      tiffField0.getCount();
      assertEquals(1878, tiffField0.getTag());
      assertEquals(1878, tiffField0.getDirectoryType());
      assertEquals((-2527), tiffField0.getSortHint());
      assertEquals(1878, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-1), 50, fieldTypeAscii0, 50, 1104L, byteArray0, byteOrder0, (-1569));
      tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1104, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1569), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getDoubleValue();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(2140442687, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2140442687, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(2140442687, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(2140442687, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(342, (-1840700268), fieldTypeLong0, 10664L, 423L, byteArray0, byteOrder0, 2147282214);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147282214, tiffField0.getSortHint());
      assertEquals(342, tiffField0.getTag());
      assertEquals(423, tiffField0.getOffset());
      assertEquals(10664L, tiffField0.getCount());
      assertEquals((-1840700268), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2140442718, 2140442718, fieldTypeAscii0.RATIONAL, 34023, 2599, byteArray0, byteOrder0, 2599);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-1), 50, fieldTypeAscii0, 50, 1104L, byteArray0, byteOrder0, (-1569));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1043, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeDouble0, 1043, (-202L), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(1043L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-202), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(133, (-528), fieldTypeFloat0, (byte)42, (-3048L), byteArray0, byteOrder0, (byte)42);
      tiffField0.getDoubleArrayValue();
      assertEquals(133, tiffField0.getTag());
      assertEquals((-528), tiffField0.getDirectoryType());
      assertEquals(42L, tiffField0.getCount());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-3048), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1679, (-1840700268), fieldTypeShort0.LONG, (byte)2, (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getDoubleArrayValue();
      assertEquals(2L, tiffField0.getCount());
      assertEquals(1679, tiffField0.getTag());
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals((-6), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2936, 50935, fieldTypeShort0, 2659L, 6, byteArray0, byteOrder0, 6);
      tiffField0.getDoubleArrayValue();
      assertEquals(2659L, tiffField0.getCount());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(2936, tiffField0.getTag());
      assertEquals(50935, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-23), (-166), fieldTypeByte0, 1104L, (-166), byteArray0, byteOrder0, (byte)4);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@649e2501 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1789569705), 24, fieldTypeFloat0, (byte)1, 2980L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1789569705), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2980, tiffField0.getOffset());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2140442718, 2140442718, fieldTypeAscii0.SRATIONAL, 34023, 2599, byteArray0, byteOrder0, 2599);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2599, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2140442718, tiffField0.getTag());
      assertEquals(34023L, tiffField0.getCount());
      assertEquals(2140442718, tiffField0.getDirectoryType());
      assertEquals(2599, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1840700268), fieldTypeLong0, 0, 2035L, byteArray0, byteOrder0, (-1840700268));
      tiffField0.getIntArrayValue();
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2035, tiffField0.getOffset());
      assertEquals((-1840700268), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(6825, 6825, fieldTypeShort0, 1104L, 3650L, byteArray0, byteOrder0, 1293);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1293, tiffField0.getSortHint());
      assertEquals(1104L, tiffField0.getCount());
      assertEquals(6825, tiffField0.getTag());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(3650, tiffField0.getOffset());
      assertEquals(6825, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147275173), (byte)0, fieldTypeAscii0.RATIONAL, (byte)114, 1104L, byteArray0, byteOrder0, (byte)114);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 2599, fieldTypeAscii0.SRATIONAL, 0L, (byte)0, byteArray0, byteOrder0, 2128136948);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(2128136948, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2599, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(559, (-674), fieldTypeShort0, 1L, (-2147483648L), byteArray0, byteOrder0, (-674));
      tiffField0.getIntArrayValue();
      assertEquals(559, tiffField0.getTag());
      assertEquals((-674), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-674), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)114, (byte)114, fieldTypeAscii0.UNDEFINED, (byte)0, (byte)114, byteArray0, byteOrder0, (-2147275173));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@42ad3423 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2599, "r54uq}{jpBHfx=+a");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)50, 6, fieldTypeAscii0, 1320L, 1680L, byteArray0, byteOrder0, (byte)114);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@3c669fa8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-1), 50, fieldTypeAscii0, 50, 1104L, byteArray0, byteOrder0, (-1569));
      String string0 = tiffField0.getStringValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals((-1569), tiffField0.getSortHint());
      assertEquals(1104, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(53, 53, fieldTypeByte0, (-454L), 53, byteArray0, byteOrder0, (-3480));
      String string0 = tiffField0.getTagName();
      assertEquals((-3480), tiffField0.getSortHint());
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x35)", string0);
      assertEquals(53, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34023, 2140442687, fieldTypeByte0, 1L, 2140442687, byteArray0, byteOrder0, (byte) (-33));
      String string0 = tiffField0.getTagName();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(2140442687, tiffField0.getOffset());
      assertEquals(2140442687, tiffField0.getDirectoryType());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals("ImageColorIndicator", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(895, 2907, fieldTypeFloat0, 2907, (-1L), byteArray0, byteOrder0, 2907);
      String string0 = tiffField0.getValueDescription();
      assertEquals(895, tiffField0.getTag());
      assertEquals(2907, tiffField0.getSortHint());
      assertEquals(2907, tiffField0.getDirectoryType());
      assertEquals(11628, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2907L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[77];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(355, 2652, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).DOUBLE).BYTE, 4563L, (-360L), byteArray0, byteOrder0, 34023);
      String string0 = tiffField0.toString();
      assertEquals(4563, tiffField0.getBytesLength());
      assertEquals((-360), tiffField0.getOffset());
      assertEquals(34023, tiffField0.getSortHint());
      assertEquals("355 (0x163: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (77) (4563 Byte)", string0);
      assertEquals(2652, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-23), (-166), fieldTypeByte0, 1104L, (-166), byteArray0, byteOrder0, (byte)4);
      String string0 = tiffField0.toString();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-166), tiffField0.getOffset());
      assertEquals(1104, tiffField0.getBytesLength());
      assertEquals((-166), tiffField0.getDirectoryType());
      assertEquals("-23 (0xffffffe9: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0 (1104 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1828, 1828, fieldTypeRational0.DOUBLE, (byte)11, 255L, byteArray0, byteOrder0, (-1029));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("vGSV!v4;");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Y0]M.&&)4R*G");
      assertEquals(1828, tiffField0.getDirectoryType());
      assertEquals(1828, tiffField0.getTag());
      assertEquals(11L, tiffField0.getCount());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals((-1029), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2333, 2333, fieldTypeDouble0.SLONG, 2333, 2333, byteArray0, byteOrder0, 2333);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(34714);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": 2333 (0x91d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (2333 SLong)\n", byteArrayOutputStream0.toString());
      assertEquals(202, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "?(Dubk.4@wo--");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 2128136948, fieldTypeLong0, 1744L, (byte)80, byteArray0, byteOrder0, (-4022));
      String string0 = tiffField0.getValueDescription();
      assertEquals(4, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1744L, tiffField0.getCount());
      assertEquals(2128136948, tiffField0.getDirectoryType());
      assertEquals((-4022), tiffField0.getSortHint());
      assertEquals(6976, tiffField0.getBytesLength());
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-69), fieldTypeLong0, 0, (-523L), byteArray0, byteOrder0, 1482);
      tiffField0.dump();
      assertEquals(1482, tiffField0.getSortHint());
      assertEquals((-523), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-69), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[104];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (-2597), fieldTypeShort0, 335936L, 313, byteArray0, byteOrder0, 660);
      String string0 = tiffField0.toString();
      assertEquals((-2597), tiffField0.getDirectoryType());
      assertEquals(660, tiffField0.getSortHint());
      assertEquals("50 (0x32: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (335936 SShort)", string0);
      assertEquals(313, tiffField0.getOffset());
      assertEquals(671872, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(9, "@e8Juv8&W");
      TiffField tiffField0 = new TiffField(42037, 50, fieldTypeAscii0, 830L, 50, byteArray0, byteOrder0, 2362);
      String string0 = tiffField0.getValueDescription();
      assertEquals(830, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(42037, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2362, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(744, 744, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).RATIONAL).ASCII, 288L, 744, byteArray0, byteOrder0, 5);
      tiffField0.toString();
      assertEquals(288L, tiffField0.getCount());
      assertEquals(744, tiffField0.getOffset());
      assertEquals(744, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(744, tiffField0.getTag());
      assertEquals(288, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-166), 8, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 41993);
      tiffField0.toString();
      assertEquals(41993, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-166), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1828), (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(3492, 3492, fieldTypeByte0, (-1828), (-19960L), byteArray0, byteOrder0, (byte)108);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(108, tiffField0.getSortHint());
      assertEquals((-19960), tiffField0.getOffset());
      assertEquals(3492, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(3492, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2843L), 2165L, byteArray0, byteOrder0, 18246);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41490, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(18246, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2165, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (-115));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1546), "l<uWv\u0000{l+@,Q9O43");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1274, (-1546), fieldTypeByte0, 1744L, 1723L, byteArray0, byteOrder0, 50715);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(50715, tiffField0.getSortHint());
      assertEquals(1723L, tiffElement0.offset);
      assertEquals(1274, tiffField0.getTag());
      assertEquals((-1546), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(301, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(301, 0, fieldTypeByte0, 301, (-1L), byteArray0, byteOrder0, (byte)117);
      tiffField0.getFieldTypeName();
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(301, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50, 610, fieldTypeDouble0, 2147483647L, (-1828L), byteArray0, byteOrder0, (byte) (-115));
      int int0 = tiffField0.getOffset();
      assertEquals(610, tiffField0.getDirectoryType());
      assertEquals((-1828), int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals((-115), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (-115));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2390, (byte) (-90), fieldTypeFloat0, (byte)32, (-954L), byteArray0, byteOrder0, (byte) (-81));
      tiffField0.dump();
      assertEquals(2390, tiffField0.getTag());
      assertEquals((-90), tiffField0.getDirectoryType());
      assertEquals((-954), tiffField0.getOffset());
      assertEquals(32L, tiffField0.getCount());
      assertEquals(128, tiffField0.getBytesLength());
      assertEquals((-81), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-23), (-153), fieldTypeByte0, 1104L, (-1040L), byteArray0, byteOrder0, (-153));
      int int0 = tiffField0.getSortHint();
      assertEquals((-23), tiffField0.getTag());
      assertEquals((-153), tiffField0.getDirectoryType());
      assertEquals((-1040), tiffField0.getOffset());
      assertEquals(1104L, tiffField0.getCount());
      assertEquals((-153), int0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2140442718, 2140442718, fieldTypeAscii0.SRATIONAL, 34023, 2599, byteArray0, byteOrder0, 2599);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(34023L, tiffField0.getCount());
      assertEquals(2599, tiffField0.getOffset());
      assertEquals("2140442718 (0x7f94905e: Unknown Tag): ", string0);
      assertEquals(2140442718, tiffField0.getDirectoryType());
      assertEquals(2599, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 1332, fieldTypeByte0, 0, 0L, byteArray0, (ByteOrder) null, (byte)1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ImageColorIndicator");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1332, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2843L), 2165L, byteArray0, byteOrder0, 18246);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41490, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      assertEquals((-2843L), tiffField0.getCount());
      assertEquals(2165, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(18246, tiffField0.getSortHint());
  }
}
