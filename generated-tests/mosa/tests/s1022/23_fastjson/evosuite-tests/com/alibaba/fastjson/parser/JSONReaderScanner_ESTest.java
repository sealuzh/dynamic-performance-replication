/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:55:15 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.CharArrayReader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("jQrF],1U5cp+");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1LmQxus");
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanType("1LmQxus");
      BigDecimal bigDecimal0 = new BigDecimal(0);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("*HIvsGF]#'pQG$");
      byte[] byteArray0 = jSONReaderScanner0.bytesValue();
      assertEquals('*', jSONReaderScanner0.getCurrent());
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 100, 100);
      jSONReaderScanner0.sub_chars(100, 100);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NotWriteDefaultValue");
      jSONReaderScanner0.nextToken(0);
      assertEquals(18, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ey");
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertEquals('e', jSONReaderScanner0.getCurrent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.util.OptionalLong");
      char char0 = jSONReaderScanner0.charAt(68);
      assertFalse(jSONReaderScanner0.isEOF());
      assertEquals('j', jSONReaderScanner0.getCurrent());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 100, 100);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(100, charArray0, 100, 100);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NotWriteDefaultValue");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[4];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 42);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      
      jSONReaderScanner0.nextToken(42);
      assertEquals('\u001A', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NotWriteDefaultValue");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-760), (-760));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -760
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[44];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.subString(40, 40);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 68);
      jSONReaderScanner0.charAt(68);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";,]_4%n:%*S{E]ls]");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N#WiDWfauP{V%lu");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString((-908), (-908));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -908
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" x");
      jSONReaderScanner0.indexOf('e', 2000);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero");
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.sub_chars(0, 7);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NotWriteDefaultValue");
      SymbolTable symbolTable0 = new SymbolTable(16384);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("NotWriteDefaultValue");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol(16384, 16384, 16384, symbolTable0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("vLcE`0L6SU/");
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("N#WDWfauP{V%lWu");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.charAt(65290);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = 'S';
      charArray0[2] = 'h';
      charArray0[4] = '=';
      charArray0[5] = 'c';
      charArray0[6] = 'S';
      charArray0[7] = '|';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34);
      jSONReaderScanner0.nextToken(34);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.skip(0L);
      charArrayReader0.ready();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.indexOf('!', 1582);
      jSONReaderScanner0.scanNumber();
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars(103, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W{-kj6? XE98");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = '\u0080';
      charArray0[1] = 'S';
      charArray0[4] = '\u0080';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 62);
      jSONReaderScanner0.matchField(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(1063);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Xv3Vk46yC-|P8Y3;em");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.charAt(840);
      jSONReaderScanner0.indexOf('\u001A', 840);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner");
      jSONReaderScanner0.hasSpecial = true;
      jSONReaderScanner0.stringVal();
      char[] charArray0 = new char[4];
      charArray0[0] = '/';
      charArray0[1] = '/';
      charArray0[2] = ')';
      charArray0[3] = '8';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.bytesValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.charAt(76);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      charArrayReader0.reset();
      jSONReaderScanner0.nextToken((-3690));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[18];
      charArray0[0] = '\n';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      Locale locale0 = Locale.ITALIAN;
      jSONReaderScanner0.locale = locale0;
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("vLcELPL6S/");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.close();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("not support type : ");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("UTF-8");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e3L W,-WGMv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0?\"BK$fv,Y#>S!Eg_", (-2327));
      char[] charArray0 = new char[9];
      charArray0[0] = 'B';
      charArray0[1] = '!';
      charArray0[2] = 'a';
      charArray0[3] = 'B';
      charArray0[4] = 'L';
      charArray0[5] = '$';
      charArray0[6] = '.';
      charArray0[7] = '6';
      charArray0[8] = 'p';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanType(".\"g2`LS7nvfoO53W3z");
      JSON.DEFAULT_PARSER_FEATURE = 0;
      jSONReaderScanner0.np = (-2327);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1LmQxus");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.decimalValue();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[18];
      charArray0[0] = '\u001A';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      Locale locale0 = Locale.ITALIAN;
      jSONReaderScanner0.locale = locale0;
      jSONReaderScanner0.isBlankInput();
  }
}
