/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:11:29 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeFloat0, 43, 43, byteArray0, byteOrder0, 43);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeByte0, 59, 59, byteArray0, byteOrder0, 59);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(59, 59);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      
      String string1 = tiffField0.toString();
      assertEquals(59, tiffField0.getOffset());
      assertEquals("59 (0x3b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (59 Undefined)", string1);
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0.DOUBLE, 9, 9, byteArray0, byteOrder0, 9);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0.DOUBLE, 9, 9, byteArray0, byteOrder0, 9);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5995f163 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)70, (byte)70, fieldTypeShort0, (byte)70, (byte)70, byteArray0, byteOrder0, (byte)70);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(70, tiffField0.getOffset());
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(70, tiffField0.getTag());
      assertEquals(140, tiffField0.getBytesLength());
      assertEquals(70L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeByte0, 59, 59, byteArray0, byteOrder0, 59);
      tiffField0.dump();
      assertEquals(59, tiffField0.getOffset());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(59L, tiffField0.getCount());
      assertEquals(59, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 9, 9, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals(9, tiffField0.getTag());
      assertEquals(18, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(984, 984, fieldTypeShort0, 984, 984, byteArray0, byteOrder0, 984);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.toString();
      assertEquals(984, tiffField0.getDirectoryType());
      assertEquals(984, tiffField0.getSortHint());
      assertEquals("984 (0x3d8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (984 SShort)", string0);
      assertEquals(984, tiffField0.getOffset());
      assertEquals(1968, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[40];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0.DOUBLE, 9, 9, byteArray0, byteOrder0, 9);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals("9 (0x9: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(101, 101, fieldTypeShort0.IFD, 101, 101, byteArray0, byteOrder0, 101);
      int int0 = tiffField0.getSortHint();
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(101, int0);
      assertEquals(101, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[367];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65580, 65580, fieldTypeFloat0, 65580, 65580, byteArray0, byteOrder0, 65580);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@58c771fb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeShort0, 18, 18, byteArray0, byteOrder0, 18);
      tiffField0.getIntArrayValue();
      assertEquals(18L, tiffField0.getCount());
      assertEquals(36, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[39];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0.DOUBLE, 9, 9, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(72, tiffField0.getBytesLength());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[230];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeShort0, 1L, (-2147483648L), byteArray0, byteOrder0, 32);
      tiffField0.getDoubleArrayValue();
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 6, 6, byteArray0, byteOrder0, 6);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@50b989e1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1), (-1), byteArray0, byteOrder0, (-1));
      tiffField0.getOversizeValueElement();
      int int0 = Pattern.UNICODE_CASE;
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50969, 50969, fieldTypeLong0, 50969, 50969, byteArray0, byteOrder0, 50969);
      String string0 = tiffField0.toString();
      assertEquals("50969 (0xc719: PreviewSettingsDigest): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (50969 Long)", string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50969, 50969);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50969, tiffField0.getOffset());
      assertEquals(50969, tiffField0.getSortHint());
      assertEquals(50969, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: PreviewSettingsDigest, fieldType: Long", string1);
      assertEquals(203876, tiffField0.getBytesLength());
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50706, 2939, fieldTypeRational0, 703L, 2238L, byteArray0, byteOrder0, 81);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5624, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(2939, tiffField0.getDirectoryType());
      assertEquals(50706, tiffField0.getTag());
      assertEquals(2238, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[68];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0.FLOAT, 20, 20, byteArray0, byteOrder0, 20);
      tiffField0.getFieldTypeName();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(20, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65486, 65486, fieldTypeRational0, 65486, 65486, byteArray0, byteOrder0, 65486);
      tiffField0.dump();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(65486, tiffField0.getDirectoryType());
      assertEquals(65486, tiffField0.getSortHint());
      assertEquals(65486, tiffField0.getTag());
      assertEquals(65486, tiffField0.getOffset());
      assertEquals(523888, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 518L, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      tiffField0.getDoubleValue();
      assertEquals(518, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeFloat0, 59, 59, byteArray0, byteOrder0, 59);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2378, 2378, fieldTypeFloat0, 1L, (-1L), byteArray0, byteOrder0, 2378);
      tiffField0.getIntValueOrArraySum();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeAscii0, 1, 1, byteArray0, (ByteOrder) null, (-1));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(101, 101, fieldTypeShort0.IFD, 101, 101, byteArray0, byteOrder0, 101);
      tiffField0.dump();
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(404, tiffField0.getBytesLength());
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(101, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50969, 50969, fieldTypeLong0, 50969, 50969, byteArray0, byteOrder0, 50969);
      String string0 = tiffField0.getTagName();
      assertEquals(50969, tiffField0.getDirectoryType());
      assertEquals(50969, tiffField0.getOffset());
      assertEquals("PreviewSettingsDigest", string0);
      assertEquals(50969, tiffField0.getTag());
      assertEquals(50969, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeShort0.FLOAT, 20, 20, byteArray0, byteOrder0, 20);
      String string0 = tiffField0.toString();
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals("20 (0x14: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (20 Float)", string0);
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag):  (65535 Rational)", string0);
      
      tiffField0.getIntArrayValue();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(101, 101, fieldTypeShort0.IFD, 101, 101, byteArray0, byteOrder0, 101);
      int int0 = tiffField0.getBytesLength();
      assertEquals(404, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(101, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[39];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(131, 131, fieldTypeShort0.IFD, 131, 131, byteArray0, byteOrder0, 131);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50969, 46, fieldTypeLong0, 46, 46, byteArray0, (ByteOrder) null, 50969);
      tiffField0.getIntArrayValue();
      assertEquals(50969, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(50969, tiffField0.getTag());
      assertEquals(46, tiffField0.getOffset());
      assertEquals(184, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65544, 65544, fieldTypeRational0, 65544, 65544, byteArray0, byteOrder0, 65544);
      tiffField0.dump();
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeFloat0, 9, 9, byteArray0, byteOrder0, 9);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getTag());
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(541, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 541, 541, byteArray0, (ByteOrder) null, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(541, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(541, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(547, 547, fieldTypeAscii0, 547, 50, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(547, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(547, tiffField0.getTag());
      assertEquals(547, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldType fieldType0 = FieldType.getFieldType(6);
      TiffField tiffField0 = new TiffField(7, 1263, fieldType0, 1263, 1263, byteArray0, byteOrder0, 1263);
      String string0 = tiffField0.toString();
      assertEquals(1263, tiffField0.getOffset());
      assertEquals(1263, tiffField0.getSortHint());
      assertEquals(1263, tiffField0.getDirectoryType());
      assertEquals(1263, tiffField0.getBytesLength());
      assertEquals("7 (0x7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (71) (1263 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[175];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(215, 215, fieldTypeShort0, 215, 215, byteArray0, byteOrder0, 215);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(215, tiffField0.getTag());
      assertEquals(215, tiffField0.getOffset());
      assertEquals(215, tiffField0.getSortHint());
      assertEquals(215, tiffField0.getDirectoryType());
      assertEquals(430, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeFloat0, 55, 55, byteArray0, byteOrder0, 55);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(55, tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55)", string0);
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[369];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(65552, 65552, fieldTypeLong0, 65552, 65552, byteArray0, byteOrder0, 65552);
      String string0 = tiffField0.toString();
      assertEquals("65552 (0x10010: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (92) (65552 IFD)", string0);
      assertEquals(65552, tiffField0.getOffset());
      assertEquals(65552, tiffField0.getDirectoryType());
      assertEquals(65552, tiffField0.getSortHint());
      assertEquals(262208, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble1 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65554, 65554, fieldTypeDouble1, 65554, 65554, byteArray0, byteOrder0, 65554);
      fieldTypeDouble1.getValue(tiffField0);
      tiffField0.getTagName();
      tiffField0.toString();
      MockFile mockFile0 = new MockFile("Unknown Tag (0x10012)", "Unknown Tag (0x10012)");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Unknown Tag (0x10012)");
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)46;
      byteArray1[2] = (byte)45;
      byteArray1[3] = (byte)50;
      TiffField tiffField1 = new TiffField((-30), (byte)46, fieldTypeDouble1, 4L, (byte)50, byteArray0, byteOrder1, 1);
      // Undeclared exception!
      try { 
        tiffField1.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
