/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 07:22:19 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(337);
      classWriter0.version = 52;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-847), "L", "L", "L", "L");
      ByteVector byteVector0 = new ByteVector(2879);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(726);
      classWriter0.index = (-286);
      classWriter0.visitField((-286), "2", "Hd)|hTF?K|", "2", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(106, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(337);
      classWriter0.version = 52;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-847), "L", "L", "L", "L");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(726);
      classWriter0.index = (-286);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 226, "2", "", (String) null, "%\"t+vnjvO/");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(79, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(292);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "la(>+6Z", "la(>+6Z", "la(>+6Z", "la(>+6Z");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(314);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-792), "", "m<@9v)M,s6N", "", "m<@9v)M,s6N");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "p.@d0ER/b", "p.@d0ER/b", "p.@d0ER/b", "p.@d0ER/b");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(337);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-847), "L", "L", "L", "L");
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.length = 255;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1386);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1386, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "weheel.*stakJO", "weheel.*stakJO", "weheel.*stakJO", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3764));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "l", "l", "l", "l");
      Attribute attribute0 = new Attribute("l");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(337);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-847), "L", "L", "L", "L");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(102, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(314);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-792), "", "m<@9v)M,s6N", "", "m<@9v)M,s6N");
      fieldWriter0.visitAnnotation("", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(173, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(286);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "I\"No^'&3!P2G", "I\"No^'&3!P2G", "I\"No^'&3!P2G", "I\"No^'&3!P2G");
      fieldWriter0.visitAnnotation("I\"No^'&3!P2G", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(136, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(337);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-847), "L", "L", "L", "L");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 49, "L", "ConstantValue", "003S", "L");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(314);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "[`Tj(9|s~OCw", "The wildcard list must not be null", "ConstantValue", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(286);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label", "wheel.asm.Label");
      Attribute attribute0 = new Attribute("wheel.asm.Label");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
