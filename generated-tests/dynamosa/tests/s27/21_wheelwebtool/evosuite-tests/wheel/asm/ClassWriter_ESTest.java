/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 16:00:11 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      Float float0 = new Float((float) 40);
      int int0 = classWriter0.newConst(float0);
      assertEquals(1, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(29, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(935);
      Item item0 = classWriter0.newLong(935);
      String[] stringArray0 = new String[0];
      classWriter0.visit(935, 935, "wheel.asm.ByteVector", "wheel.asm.ByteVector", "wheel.asm.ByteVector", stringArray0);
      Item item1 = classWriter0.newLong(935);
      assertSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "java/lang/String";
      classWriter0.visit(39, 7, "", "java/lang/Object", "", stringArray0);
      ClassWriter classWriter1 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.NotFileFilter", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      String[] stringArray0 = new String[0];
      classWriter0.visit(51, 1, "", "", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(50, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.addUninitializedType("]?C8/9Y4QYD0", 1666);
      classWriter0.newClassItem("1:1J8h<hOnN");
      int int0 = classWriter0.addUninitializedType("1:1J8h<hOnN", 0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 0;
      classWriter0.toByteArray();
      Long long0 = new Long(0L);
      classWriter0.visitField(0, "C*(~f@advr==X+hr", "C*(~f@advr==X+hr", "Qc]\"4WnVOC", long0);
      classWriter0.newInteger(0);
      classWriter0.newField("", "Qc]\"4WnVOC", "C*(~f@advr==X+hr");
      classWriter0.newDouble(6);
      classWriter0.newDouble(79.0);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "C*(~f@advr==X+hr", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.toByteArray();
      Float float0 = new Float((-559.9818F));
      int int0 = ClassWriter.CLASS;
      classWriter0.visit(7, 16777220, "EnclosingMethod", (String) null, "", (String[]) null);
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.visitEnd();
      classWriter1.newDouble((-924.76828375));
      // Undeclared exception!
      try { 
        classWriter0.newField("EnclosingMethod", (String) null, "nVtp~JJ?S RO}<lN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-624));
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.firstField = null;
      classWriter0.addUninitializedType("", 1258);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 6222);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6222
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(38);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "short", (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Class<Short> class0 = Short.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("java/lang/String", "on](1", "on](1", false);
      classWriter0.addType("t4j");
      classWriter0.addUninitializedType("t4j", 1);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "java/lang/Short";
      stringArray0[1] = "on](1";
      stringArray0[2] = "Md";
      stringArray0[3] = "[bT";
      stringArray0[4] = "/YiAUa9O";
      stringArray0[5] = "[bT";
      classWriter0.visit(64, 64, "Md", "uDR0p5(Rs$FU3uU", "&Ntc/f5L1O75", stringArray0);
      classWriter0.addUninitializedType("t4j", 1);
      classWriter0.newNameType("ConstantValue", "Md");
      classWriter0.addType("[bT");
      int int0 = classWriter0.addUninitializedType("/YiAUa9O", 5);
      assertEquals(4, int0);
      
      int int1 = classWriter0.newNameType("EnclosingMethod", "SourceFile");
      assertEquals(22, int1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        classWriter0.visit(40, 1, "u", "u", "u", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1081));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      Character character0 = new Character('R');
      int int0 = classWriter0.newConst(character0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.Type", "java/lang/Object");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = (-2755);
      ClassWriter classWriter0 = new ClassWriter((-2755));
      int int1 = 10;
      Item[] itemArray0 = new Item[6];
      String string0 = "uWNj#w\\o''pw";
      Item item0 = classWriter0.newClassItem("uWNj#wo''pw");
      itemArray0[0] = item0;
      int int2 = (-1072);
      ClassWriter classWriter1 = new ClassWriter((-1072));
      Item item1 = classWriter1.key2;
      itemArray0[1] = item1;
      String string1 = "";
      String string2 = "1";
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("", "1", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(345);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConst(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@460af8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "SourceFile";
      ClassWriter classWriter0 = new ClassWriter((-3119));
      String string1 = "~n)qZMBgk'VfX>";
      classWriter0.newClassItem("~n)qZMBgk'VfX>");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.newClass("~n)qZMBgk'VfX>");
      String string2 = null;
      String string3 = "wheel.asm.FieldWriter";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-3119), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (String) null, (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 57;
      ClassWriter classWriter0 = new ClassWriter(57);
      String string0 = "[9m[tjK-=OV";
      String string1 = "The FileFilter must not be null";
      String string2 = "C*(~f@advr==X+hr";
      String string3 = "Qc]\"4WnVOC";
      Long long0 = new Long(2);
      classWriter0.visitField(57, "[9m[tjK-=OV", "[9m[tjK-=OV", "[9m[tjK-=OV", "Qc]\"4WnVOC");
      classWriter0.threshold = 9;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The FileFilter must not be null";
      stringArray0[1] = "The FileFilter must not be null";
      stringArray0[2] = "Qc]\"4WnVOC";
      stringArray0[3] = "(wxyN";
      stringArray0[4] = "The FileFilter must not be null";
      classWriter0.visitInnerClass("", "F?[q|", "(wxyN", (-263));
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "(wxyN", "Qc]\"4WnVOC", "HmKPa{", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      String string0 = ".";
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-3975), ".", ".", ".", ".");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.next = fieldWriter1;
      classWriter0.lastField = fieldWriter0;
      // Undeclared exception!
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      classWriter0.addUninitializedType("Signature", 3);
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter1 = new ClassWriter(classReader0, 681);
      Item item1 = classWriter1.newFloat((-315.2963F));
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      classWriter0.newUTF8("java/lang/Object");
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.visitInnerClass("java/lang/String", "^4lyRJ +g", "", 8);
      classWriter0.newField("org.apache.commons.io.IOCase", "^4lyRJ +g", "");
      // Undeclared exception!
      try { 
        classWriter0.newClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2755));
      Item[] itemArray0 = new Item[6];
      Item item0 = classWriter0.newClassItem("uWNj#wo''pw");
      itemArray0[0] = item0;
      ClassWriter classWriter1 = new ClassWriter((-1072));
      Item item1 = classWriter1.key2;
      itemArray0[1] = item1;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("", "", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      int int0 = classWriter0.newMethod("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      int int0 = classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      assertEquals(6, int0);
      
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      classWriter0.visitInnerClass("a&?^`oE}-M+)j_$J", (String) null, "N2TRVqn\"MDeSzmn", 4);
      ClassWriter classWriter1 = new ClassWriter(6);
      int int1 = classWriter1.newField("#8J*%2cKv>J", "EnclosingMethod", "|<OT.@?a\u0005`+~WJqe");
      assertEquals(6, int1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newFieldItem("(NrCWnT}5WzkG##N&e", "(NrCWnT}5WzkG##N&e", "(NrCWnT}5WzkG##N&e");
      int int0 = classWriter0.newNameType("(NrCWnT}5WzkG##N&e", "(NrCWnT}5WzkG##N&e");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      Long long0 = new Long(0L);
      classWriter0.visitField(0, "C*(~f@advr==X+hr", "C*(~f@advr==X+hr", "Qc]\"4WnVOC", long0);
      classWriter0.newInteger(0);
      classWriter0.newField("", "Qc]\"4WnVOC", "C*(~f@advr==X+hr");
      classWriter0.newDouble(6);
      int int0 = classWriter0.newField("Qc]\"4WnVOC", "Synthetic", "");
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String string0 = null;
      classWriter0.visitSource((String) null, (String) null);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(917);
      classWriter0.visitSource("", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(77, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(268435456);
      int int0 = classWriter0.addType("f0?mcXj");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalAnd(false, false);
      classWriter0.newConst(boolean0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitAnnotation("", false);
      int int0 = ClassWriter.TYPE_UNINIT;
      String string0 = "*v,~B(_#qh}=g";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      int int0 = classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      assertEquals(6, int0);
      
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("", 1);
      String[] stringArray0 = new String[0];
      classWriter0.visit(70, 4, "[bT", "java/lang/String", "", stringArray0);
      classWriter0.addUninitializedType("java/lang/String", 10);
      int int1 = classWriter0.newNameType("Deprecated", "");
      assertEquals(13, int1);
      
      int int2 = classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      assertEquals(4, int2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      classWriter0.visit(54, 54, "K", "K", (String) null, (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.visitInnerClass((String) null, (String) null, " ", 9);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(59, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(108);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalVariableTable";
      classWriter0.visit(108, 108, "LocalVariableTable", "LocalVariableTable", "LocalVariableTable", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(70, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(957);
      Short short0 = new Short((short) (-129));
      classWriter0.newConst(short0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(957, 957);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(438);
      String string0 = "SourceFile";
      classWriter0.newClassItem("SourceFile");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.newClass("SourceFile");
      String string1 = null;
      Long long0 = new Long(0L);
      String string2 = "";
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField(438, "InnerClasses", "SourceFile", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@62f47ce4
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.visitOuterClass("2r[L", "2r[L", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(70, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131070);
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.addUninitializedType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", 131070);
      Item item0 = classWriter0.newInteger(1);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      String string0 = "Deprecated";
      classWriter0.visitInnerClass("TsWL#.PciL6.", "", "", 268435455);
      classWriter0.newMethodItem("Deprecated", "Deprecated", "Deprecated", false);
      ClassReader classReader0 = new ClassReader(byteArray0);
      int int0 = (-2199);
      // Undeclared exception!
      try { 
        classReader0.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      classWriter0.newClassItem("SourceFile");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.newClass("SourceFile");
      String string0 = "Qc]\"4WnVOC";
      Long long0 = new Long(1);
      // Undeclared exception!
      try { 
        classWriter0.visitField(416, (String) null, "C*(~f@advr==X+hr", (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      classWriter0.addType("gapache.commons.io.filefilter.AgeFileFilter");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'gapache/commons/io/filefilter/AgeFileFilter.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 57;
      ClassWriter classWriter0 = new ClassWriter(57);
      String string0 = "gf1b\\ZSrJf8l;|PKV)";
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "gf1bZSrJf8l;|PKV)", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Double double0 = new Double(0.0);
      classWriter0.newConstItem(double0);
      ClassWriter classWriter1 = new ClassWriter(24);
      assertFalse(classWriter1.equals((Object)classWriter0));
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.visitAnnotation("/b nW#M$E\"8PphoaG4C", false);
      int int0 = classWriter0.newField("", "org.apache.commons.io.IOCase", "InnerClasses");
      assertEquals(7, int0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(107, 7, "", "org.apache.commons.io.IOCase", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(172, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      classWriter0.newMethod("wheel.asm.ByYeVector", "wheel.asm.ByYeVector", "wheel.asm.ByYeVector", false);
      Item item0 = classWriter0.newMethodItem("wheel.asm.ByYeVector", "wheel.asm.ByYeVector", "wheel.asm.ByYeVector", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      int int0 = classWriter0.newField("", "g+W", "");
      assertEquals(5, int0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[1] = "";
      classWriter0.newFieldItem("", "XH'=qLaG7~6}zX", "");
      classWriter0.visit(5, (-2370), "StackMap", "", "0", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(156, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      Item item0 = classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      classWriter0.visitSource(" Jmm*", (String) null);
      int int0 = classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      assertEquals(9, int0);
      
      classWriter0.visitSource("EnclosingMethod", "");
      Item item1 = classWriter0.newFloat(563);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      classWriter0.newConst("I\"Nf9)Zo?rZ-*");
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item[] itemArray0 = new Item[6];
      Item item0 = classWriter0.newDouble(0.0);
      itemArray0[0] = item0;
      String string0 = null;
      String string1 = "org.apache.commons.io.filefilter.DirectoryFileFilter";
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, "org.apache.commons.io.filefilter.DirectoryFileFilter", "RuntimeInvisibleAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "I\"Nf9)Zo?PZs-*";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string1 = "E'#@+q~CK/}}X%tw";
      String[] stringArray0 = new String[0];
      int int0 = 1886;
      ClassWriter classWriter0 = new ClassWriter(1886);
      int int1 = (-3813);
      classWriter0.version = (-3813);
      String string2 = null;
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(1886, "I\"Nf9)Zo?PZs-*", (String) null, "I\"Nf9)Zo?PZs-*", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 220;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(220);
      classWriter0.newNameType("B1S}gyWf0f<~l", "B1S}gyWf0f<~l");
      classWriter0.newMethodItem("pu4#Zd!Y", "QtEUN2Q)pNO", "pu4#Zd!Y", false);
      classWriter0.toByteArray();
      classWriter0.newDouble(1.0);
      classWriter0.index = 220;
      Item item0 = classWriter0.newLong(220);
      String string0 = "RuntimeVisibleParameterAnnotations";
      item0.set((-1.0));
      classWriter0.addType("RuntimeVisibleParameterAnnotations");
      classWriter0.addUninitializedType("pdo#G", 2);
      int int1 = 131072;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'RuntimeVisibleParameterAnnotations.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4008);
      Item item0 = classWriter0.newInteger(4008);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitAnnotation("vYz+e,=9St6W?9e$^h", false);
      classWriter0.visitInnerClass("", "vYz+e,=9St6W?9e$^h", "mOgCh0x*\"(d", 563);
      classWriter0.newMethodItem("mOgCh0x*\"(d", "The FileFilter must not be null", "C)A_", false);
      int int0 = classWriter0.newConst("The FileFilter must not be null");
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      Item item0 = classWriter0.newFloat(14);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(184);
      classWriter0.newMethodItem("fnxt<J9y:4g2", "5se^V$-U&@}};2`TaP", "p1t9r", false);
      classWriter0.newMethod("", "5se^V$-U&@}};2`TaP", "5se^V$-U&@}};2`TaP", false);
      classWriter0.newClass("");
      classWriter0.newNameType("RuntimeVisibleAnnotations", "java/lang/Object");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "fnxt<J9y:4g2";
      stringArray0[1] = "fnxt<J9y:4g2";
      stringArray0[2] = "RuntimeVisibleAnnotations";
      stringArray0[3] = "RuntimeVisibleAnnotations";
      stringArray0[4] = "java/lang/Object";
      stringArray0[5] = "";
      stringArray0[6] = "p1t9r";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-1876), "RuntimeVisibleAnnotations", "fnxt<J9y:4g2", "RuntimeVisibleAnnotations", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      classWriter0.visitOuterClass("T,]^", "T,]^", "T,]^");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(67, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(603);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      String[] stringArray0 = new String[0];
      classWriter0.visit(40, 1, "B", "B", "B", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalAnd(false, false);
      Character character0 = new Character('-');
      classWriter0.newConst(character0);
      ClassWriter classWriter1 = new ClassWriter(416);
      classWriter1.visitAnnotation("", false);
      int int0 = ClassWriter.CLASS;
      classWriter1.visit(1, 2, "", "", "Z:Y]j6%\"_EN", (String[]) null);
      classWriter1.visitEnd();
      classWriter1.newDouble(1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("EnclosingMethod");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = (-1025);
      ClassWriter classWriter0 = new ClassWriter((-1025));
      String string0 = "";
      classWriter0.newFieldItem("", "@", "");
      classWriter0.newInteger((-1025));
      classWriter0.visitSource("", "org.apache.commons.io.filefilter.FileFileFilter");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1025), (-1025));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|,l+/L:FB0Yg h86B7");
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Type");
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter1.toByteArray();
      classWriter1.visitInnerClass("", "org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Type", 51);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275730));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisinleAn`otations";
      classWriter0.visit((-889275730), (-889275730), "RuntimeVisinleAn`otations", "RuntimeVisinleAn`otations", "RuntimeVisinleAn`otations", stringArray0);
      classWriter0.newConst("RuntimeVisinleAn`otations");
      int int0 = classWriter0.newConst("RuntimeVisinleAn`otations");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.newClassItem("");
      int int0 = classWriter0.newField("C]'u", "[9m[tjK-=OV", "C]'u");
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(849);
      // Undeclared exception!
      try { 
        classWriter0.newClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 57;
      ClassWriter classWriter0 = new ClassWriter(57);
      String string0 = "[9m[tjK-=OV";
      String string1 = "The FileFilter must not be null";
      String string2 = "C*(~f@advr==X+hr";
      String string3 = "Qc]\"4WnVOC";
      Long long0 = new Long(2);
      classWriter0.visitField(57, "[9m[tjK-=OV", "[9m[tjK-=OV", "[9m[tjK-=OV", "Qc]\"4WnVOC");
      classWriter0.threshold = 9;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The FileFilter must not be null";
      stringArray0[1] = "The FileFilter must not be null";
      stringArray0[2] = "Qc]\"4WnVOC";
      stringArray0[3] = "(wxyN";
      stringArray0[4] = "The FileFilter must not be null";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 1, "(wxyN", "Qc]\"4WnVOC", "HmKPa{", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      // Undeclared exception!
      try { 
        classWriter0.visitField(68, (String) null, (String) null, "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2149));
      classWriter0.newInteger((-2149));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField((-2149), "}-&/^T;7\"Ta(]b<`-G$", "}-&/^T;7\"Ta(]b<`-G$", "}-&/^T;7\"Ta(]b<`-G$", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@3dc5aa05
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.visitAnnotation("java/lang/Object", false);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275737));
      String string0 = classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Type");
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      Class<Double> class0 = Double.class;
      Type.getInternalName(class0);
      Type.getInternalName(class0);
      classWriter0.newMethod("java/lang/Double", "", "_evO*KU{LRRGv5", false);
      classWriter0.addType("java/lang/Double");
      classWriter0.addUninitializedType("", 63);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "t4j";
      stringArray0[1] = "java/lang/Double";
      stringArray0[2] = null;
      stringArray0[3] = "_evO*KU{LRRGv5";
      stringArray0[4] = "java/lang/Double";
      stringArray0[5] = "";
      stringArray0[6] = "gI";
      // Undeclared exception!
      try { 
        classWriter0.visit(70, 416, (String) null, "", "[bT", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      Byte byte0 = new Byte((byte)3);
      classWriter0.newConstItem(byte0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(29, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("_e{gtwUr/h Js~^", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      int int0 = classWriter0.newField("InnerClasses", "InnerClasses", "InnerClasses");
      assertEquals(4, int0);
      
      classWriter0.index = (-2649);
      int int1 = classWriter0.newMethod("", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "", true);
      assertEquals((-2645), int1);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = 416;
      ClassWriter classWriter0 = new ClassWriter(416);
      classWriter0.newClassItem("SourceFile");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.newClass("SourceFile");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "SourceFile";
      stringArray0[1] = "SourceFile";
      stringArray0[2] = "SourceFile";
      stringArray0[3] = null;
      stringArray0[4] = null;
      // Undeclared exception!
      try { 
        classWriter0.visit(2, 2, "SourceFile", "SourceFile", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFloat(1);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      Float float0 = new Float(236.0F);
      classWriter0.newLong((-1L));
      Float.max(2, 0);
      Float.isFinite(0.0F);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@6f9c9e9b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ClassWriter classWriter0 = new ClassWriter((-2108));
      classWriter0.newUTF8("");
      classWriter0.newClassItem("");
      Attribute attribute0 = new Attribute("M2Ym2]");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-75);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)16;
      byteArray0[6] = (byte) (-1);
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      classWriter0.visitInnerClass("", "", "uJe3Vt03}V!I??b$", 4367);
      classWriter0.newNameType("uJe3Vt03}V!I??b$", "");
      classWriter0.toByteArray();
      classWriter0.newFloat((-2108));
      classWriter0.visitMethod((-2108), "", "M2Ym2]", "", (String[]) null);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-2108), "", "?@&AXW^gQ.V1Xt%sh", "", "");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      Float float0 = new Float(0.0F);
      Float.max(563, 563);
      Float.isFinite(1.0F);
      Item item0 = classWriter0.newFloat(0.0F);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      int int0 = classWriter0.newField("", "", "");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newMethod("`V|Z", "", "", true);
      classWriter0.addType("`V|Z");
      classWriter0.visitOuterClass("", "9esCg98UIQlq", (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)8;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFloat(1327.54F);
      Type type0 = Type.getObjectType("a&=^`oE}-M+)j_%J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      classWriter0.newConstItem(type0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(0.0);
      classWriter0.newNameType("t4j", "InnerClasses");
      classWriter0.visitSource("org.apache.commons.io.filefilter.SuffixFileFilter", "java/lang/Object");
      classWriter0.newFloat(1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "java/lang/String";
      stringArray0[1] = "a&=^`oE}-M+)j_%J";
      classWriter0.visitMethod(5, "java/lang/Object", "D#$uUF", "D#$uUF", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, "java/lang/String");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "LocalVariableTable";
      stringArray0[3] = " Jmm*";
      stringArray0[4] = "TOU^-";
      stringArray0[5] = "*v,~B(_#qh}=g";
      stringArray0[6] = "";
      stringArray0[7] = "  VG4";
      classWriter0.visit(1920, 1351, "*v,~B(_#qh}=g", "", "  VG4", stringArray0);
      classWriter0.visitEnd();
      classWriter0.newDouble(563);
      int int0 = classWriter0.newField("qBx,} bt", "<init>", "qBx,} bt");
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(550);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(550);
      classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      classWriter0.visitSource("", (String) null);
      classWriter0.newFloat(1.0F);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(2, "", "EnclosingMethod", "", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("7I'i4\"Zf(XIAL{", "7I'i4\"Zf(XIAL{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '7I'i4\"Zf(XIAL{.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(639);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KY!b{uIIN5");
      classWriter0.newInteger(28);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      assertEquals("java/lang/Object", string0);
      
      int int0 = classWriter0.newClass("\"");
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275737));
      classWriter0.toByteArray();
      Long long0 = new Long(1);
      Item item0 = classWriter0.newConstItem(long0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.newMethodItem("[9j[`tjK-=OV", "[9j[`tjK-=OV", "", false);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "[9j[`tjK-=OV";
      stringArray0[2] = "";
      stringArray0[3] = "[9j[`tjK-=OV";
      stringArray0[4] = "";
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(57, "[9j[`tjK-=OV", "", "", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      classWriter0.visitOuterClass("", "", (String) null);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(19, 19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.WildcardFilter");
      classWriter0.visitAttribute(attribute0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)110;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte) (-108);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)11;
      byteArray0[7] = (byte) (-23);
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, byteArray0, 0, (byte) (-108), (byte)68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      Long long0 = new Long(0L);
      classWriter0.visitField(0, "C*(~f@advr==X+hr", "C*(~f@advr==X+hr", "Qc]\"4WnVOC", long0);
      classWriter0.newInteger(0);
      int int0 = classWriter0.newField("", "Qc]\"4WnVOC", "C*(~f@advr==X+hr");
      assertEquals(14, int0);
      
      int int1 = classWriter0.newMethod("gW24", "", "", true);
      assertEquals(18, int1);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      classWriter0.newMethodItem("", "", "", false);
      int int0 = classWriter0.newMethod("", "", "", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(541);
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(131066, 131066);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275737));
      classWriter0.visitInnerClass("SourceFile", "SourceFile", "SourceFile", (-889275737));
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(71, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.newLong(563);
      classWriter0.visitOuterClass("", "", "");
      Item item0 = classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      int int0 = classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      assertEquals(10, int0);
      
      classWriter0.visitSource("EnclosingMethod", "");
      Item item1 = classWriter0.newFloat(563);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type type0 = Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Item item1 = classWriter0.newConstItem(type0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      classWriter0.visitOuterClass("t4j", "value ", "");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item1;
      itemArray0[1] = item1;
      itemArray0[2] = item1;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("", 1);
      String[] stringArray0 = new String[0];
      classWriter0.visit(77, 4, "[bT", "java/lang/String", "", stringArray0);
      classWriter0.addUninitializedType("java/lang/String", 10);
      Item item2 = classWriter0.newClassItem("Deprecated");
      assertNotSame(item2, item0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      Type type0 = Type.SHORT_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
      
      classWriter0.visitAnnotation("INf9)Zo?PZs-*", false);
      ClassWriter classWriter1 = new ClassWriter(16);
      int int1 = classWriter1.newUTF8("E'#@+q~CK/}}X%tw");
      assertEquals(1, int1);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E'#@+q~CK/}}X%tw";
      stringArray0[1] = "i03MJv5~V;";
      stringArray0[2] = "INf9)Zo?PZs-*";
      stringArray0[3] = "4(^oPi4c<Qw";
      stringArray0[4] = "";
      stringArray0[5] = "i03MJv5~V;";
      stringArray0[6] = "i03MJv5~V;";
      stringArray0[7] = "INf9)Zo?PZs-*";
      stringArray0[8] = "";
      classWriter1.visit(16, 2, "4(^oPi4c<Qw", "4(^oPi4c<Qw", "i03MJv5~V;", stringArray0);
      classWriter1.visitEnd();
      classWriter1.newDouble((-240.20111781997));
      int int2 = classWriter1.newField("", "", "");
      assertEquals(14, int2);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.addUninitializedType("The FileFilter must not be null", (-948));
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter1.newClassItem("The FileFilter must not be null");
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = "";
      int int0 = 103;
      ClassWriter classWriter0 = new ClassWriter(103);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SuffixFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      int int0 = classWriter0.newField(" Is)n]izV5", "org.apache.commons.io.filefilter.SuffixFileFilter", " Is)n]izV5");
      assertEquals(71, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int int0 = 131078;
      ClassWriter classWriter0 = new ClassWriter(131078);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-750), (String) null, (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String string0 = "";
      classWriter0.visitOuterClass("", "[9m[tjK-=OV", "z-\",");
      classWriter0.newFloat(57);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-42);
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)15;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-42), (byte) (-42));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -34
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitMethod(0, "", "Y3^o8S]R>0z,4X", "Y3^o8S]R>0z,4X", (String[]) null);
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      // Undeclared exception!
      try { 
        classWriter0.visit(0, 0, "", (String) null, "!B6u!|Hr?fQ|-xS", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      String string0 = classWriter0.getCommonSuperClass("wheel.asm.Type", "wheel.asm.Type");
      assertEquals("wheel.asm.Type", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Boolean.valueOf("");
      Item item0 = classWriter0.newFloat(2957.0F);
      Item item1 = classWriter0.newFloat(2957.0F);
      assertSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<String> class0 = String.class;
      Type.getInternalName(class0);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      String[] stringArray0 = new String[0];
      classWriter0.visit(4, 4, "a&?^`oE}-M+)j_$J", "java/lang/String", "t4j", stringArray0);
      classWriter0.addUninitializedType("java/lang/String", 4);
      int int0 = classWriter0.addType("a&?^`oE}-M+)j_$J");
      assertEquals(1, int0);
      
      int int1 = classWriter0.addUninitializedType("a&?^`oE}-M+)j_$J", 1652);
      assertEquals(3, int1);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      int int0 = 57;
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.toByteArray();
      Float float0 = new Float((float) 57);
      String string0 = "2PR5Wr.x`nsa9u3W";
      Item[] itemArray0 = new Item[6];
      Item item0 = new Item(57);
      itemArray0[0] = item0;
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(109);
      classWriter0.visitInnerClass("X@vW=X;hmk4d[gG{?", "The suffix must not be null", "The suffix must not be null", 3);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(111, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("java/lang/String", 1);
      String[] stringArray0 = new String[0];
      classWriter0.visit(4, 4, "=bw", "java/lang/String", "t4j", stringArray0);
      classWriter0.addUninitializedType("java/lang/String", 4);
      classWriter0.addUninitializedType("", 2701);
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.addUninitializedType("t4j", 7);
      int int0 = classWriter0.addUninitializedType("a&?^`oE}-M+)j_$J", 1652);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      classWriter0.visitSource("wheel.asm.Type", "int");
      classWriter0.toByteArray();
      classWriter0.visitInnerClass("int", "wheel.asm.Type", "int", 1258);
      Item item0 = classWriter0.newFloat(1258);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = 720;
      ClassWriter classWriter0 = new ClassWriter(720);
      String string0 = "The array of names must not be null";
      String string1 = ")ZVA^#j)b=^R";
      classWriter0.newNameType("The array of names must not be null", ")ZVA^#j)b=^R");
      classWriter0.newUTF8(")ZVA^#j)b=^R");
      classWriter0.index = 285212676;
      String string2 = "StackMapTable";
      classWriter0.newField("StackMapTable", "org.apache.commons.io.filefilter.SizeFileFilter", "The array of names must not be null");
      int int1 = (-2617);
      // Undeclared exception!
      classWriter0.newMethodItem("The array of names must not be null", "", "J", false);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      Item item0 = classWriter0.newMethodItem("f", "f", "f", false);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type type0 = Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Item item1 = classWriter0.newConstItem(type0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      int int0 = classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      classWriter0.visitOuterClass("t4j", "value ", "");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item1;
      itemArray0[1] = item1;
      itemArray0[2] = item1;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("", 1);
      String[] stringArray0 = new String[0];
      classWriter0.visit(70, 4, "[bT", "java/lang/String", "", stringArray0);
      int int1 = classWriter0.addUninitializedType("java/lang/String", 10);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(935);
      classWriter0.visitInnerClass("q", "", (String) null, 935);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(68, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(76);
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-94));
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(133, "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "1K[JrOVZ*?X:WG", stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(116);
      classWriter0.visitAnnotation("", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalariableTable";
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(67, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Item item0 = classWriter0.newMethodItem("[9m[tjK-=OV", "The FileFilter must not be null", "", false);
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 3;
      ClassWriter classWriter0 = new ClassWriter(3);
      boolean boolean0 = true;
      Item[] itemArray0 = new Item[0];
      classWriter0.typeTable = itemArray0;
      classWriter0.invalidFrames = true;
      String string0 = "";
      String string1 = "a&Y<";
      // Undeclared exception!
      try { 
        classWriter0.addType("Wlx");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      // Undeclared exception!
      try { 
        classWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.invalidFrames = true;
      ClassWriter classWriter1 = new ClassWriter(3);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = 563;
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.newLong(563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      String string0 = "EnclosingMethod";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("EnclosingMethod", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'EnclosingMethod.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      classWriter0.newClassItem("SourceFile");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.newClass("SourceFile");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "SourceFile";
      stringArray0[1] = "SourceFile";
      stringArray0[2] = "SourceFile";
      stringArray0[3] = "SourceFile";
      stringArray0[4] = "SourceFile";
      classWriter0.visit(2, 2, "SourceFile", "SourceFile", "SourceFile", stringArray0);
      classWriter0.firstMethod = null;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(416, (-1633));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      String string0 = "-YfPL";
      classWriter0.addUninitializedType("-YfPL", Integer.MAX_VALUE);
      String string1 = "wheel.asm.ClassAdapter";
      classWriter0.newClassItem("wheel.asm.ClassAdapter");
      int int0 = (-1364);
      String string2 = "Wu_v\\|@aK-+";
      try { 
        Short.decode("org.apache.commons.io.filefilter.WildcardFilter");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"org.apache.commons.io.filefilter.WildcardFilter\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(24, "", "", "", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      classWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(64, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1067);
      // Undeclared exception!
      try { 
        classWriter0.visitOuterClass((String) null, "KgY&EoKXuQ8m;A\"}wY", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.visitAnnotation("vYz+e,=9St6W?9e$^h", false);
      classWriter0.visitInnerClass("vYz+e,=9St6W?9e$^h", "dYS|CTtlT", "Deprecated", 6);
      Item item0 = classWriter0.newMethodItem("[9m[tjK-=OV", "The FileFilter must not be null", "", false);
      // Undeclared exception!
      try { 
        classWriter0.newConst(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@13
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-745));
      int int0 = ClassWriter.TYPE_INSN;
      String[] stringArray0 = new String[0];
      classWriter0.visit(12, (-737), "", "", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(87, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275737));
      String[] stringArray0 = new String[0];
      classWriter0.visit((-889275737), (-889275737), "kNNheL1R,e6p~'", "kNNheL1R,e6p~'", "kNNheL1R,e6p~'", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(83, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalVariableTable";
      Float float0 = new Float(0.0F);
      Float.max(2, 0.0F);
      Short short0 = new Short((short)12);
      Item item0 = classWriter0.newConstItem(short0);
      Item item1 = classWriter0.newFloat(1.0F);
      assertNotSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      String string0 = "";
      String string1 = "";
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      int int0 = 16777226;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(563, 16777226);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      boolean boolean0 = true;
      ClassWriter classWriter0 = new ClassWriter(68);
      byte[] byteArray0 = classWriter0.toByteArray();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = new ClassReader(byteArrayInputStream0);
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter(classReader0, 68);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 104;
      ClassWriter classWriter0 = new ClassWriter(104);
      String string0 = "";
      String string1 = "long";
      classWriter0.visitInnerClass("long", "", "", 104);
      classWriter0.visitField(104, "P@q2F=Uy Rt*M", "", "", "");
      String string2 = "";
      classWriter0.newUTF8("");
      classWriter0.newInteger(104);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("", "P@q2F=Uy Rt*M", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = 7;
      ClassWriter classWriter0 = new ClassWriter(7);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      Boolean boolean0 = Boolean.TRUE;
      classWriter0.newConstItem(boolean0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(29, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Boolean boolean0 = Boolean.valueOf("");
      Boolean.getBoolean("");
      Item item0 = classWriter0.newConstItem(boolean0);
      Item item1 = classWriter0.newConstItem(boolean0);
      assertSame(item1, item0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(29, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2856));
      classWriter0.visit((-2856), (-2856), "S", "S", "S", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3044));
      classWriter0.newNameType("EnclosingMethod", "");
      classWriter0.newNameType("", "");
      classWriter0.newNameType("", "");
      Item item0 = classWriter0.newConstItem("");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1268);
      classWriter0.visitSource("9d1zte 55", "9d1zte 55");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The array of names ust not be null";
      stringArray0[1] = "The array of names ust not be null";
      stringArray0[2] = "The array of names ust not be null";
      stringArray0[3] = "=bw";
      stringArray0[4] = "The array of names ust not be null";
      classWriter0.visit(2, 131066, "q()>", "=bw", "The array of names ust not be null", stringArray0);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.key3;
      item0.longVal = 2022L;
      itemArray0[0] = item0;
      item0.index = 1;
      classWriter0.typeTable = itemArray0;
      classWriter0.addType("The array of names ust not be null");
      int int0 = classWriter0.addUninitializedType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", 1);
      assertEquals(2, int0);
      
      int int1 = classWriter0.newField("", "", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      assertEquals(11, int1);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      int int0 = classWriter0.addUninitializedType("", 1490);
      assertEquals(1, int0);
      
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      int int1 = classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      assertEquals(8, int1);
      
      classWriter0.visitSource("", "EnclosingMethod");
      classWriter0.newFloat((-2005.48F));
      int int2 = classWriter0.newConst("");
      assertEquals(10, int2);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      ClassWriter classWriter1 = new ClassWriter(3884);
      ClassWriter classWriter2 = new ClassWriter(3884);
      classWriter2.addUninitializedType("InnerClasses", (-1370));
      classWriter2.visitOuterClass("", "f=%:M{", "");
      classWriter1.newFloat(1.0F);
      ClassWriter classWriter3 = new ClassWriter((-1370));
      classWriter3.newDouble(1261.3951);
      classWriter3.newNameType("", "");
      classWriter3.visitSource("", "");
      classWriter3.newFloat(1);
      // Undeclared exception!
      try { 
        classWriter2.getCommonSuperClass("", "EnclosingMethod");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      classWriter0.visitSource((String) null, "");
      classWriter0.toByteArray();
      Item item0 = classWriter0.newFloat(51);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      int int0 = classWriter0.newConst("I\"Nf9)Zo?PZs-*");
      assertEquals(2, int0);
      
      classWriter0.visitAnnotation("I\"Nf9)Zo?PZs-*", true);
      int int1 = classWriter0.newUTF8("E'#@+q~CK/}}X%tw");
      assertEquals(3, int1);
      
      String[] stringArray0 = new String[0];
      classWriter0.visit(0, 0, "I\"Nf9)Zo?PZs-*", "I\"Nf9)Zo?PZs-*", "I\"Nf9)Zo?PZs-*", stringArray0);
      classWriter0.visitEnd();
      classWriter0.newDouble(0);
      int int2 = classWriter0.newField("I\"Nf9)Zo?PZs-*", "I\"Nf9)Zo?PZs-*", "I\"Nf9)Zo?PZs-*");
      assertEquals(8, int2);
      
      classWriter0.newInteger(9);
      classWriter0.newMethodItem("E'#@+q~CK/}}X%tw", "Synthetic", "0H} iwi<7*2o[Z?Fup/", true);
      int int3 = classWriter0.newNameType("E'#@+q~CK/}}X%tw", "K_%e Vd/&3F*|e!\"");
      assertEquals(16, int3);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = (-2657);
      ClassWriter classWriter0 = new ClassWriter((-2657));
      classWriter0.newClass("Deprecated");
      classWriter0.threshold = (-2657);
      String string0 = "System";
      classWriter0.visitSource("InnerClasses", "System");
      String string1 = "Hk";
      classWriter0.addType("Hk");
      String string2 = null;
      // Undeclared exception!
      try { 
        classWriter0.newUTF8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = 720;
      ClassWriter classWriter0 = new ClassWriter(720);
      String string0 = "The array of names must not be null";
      String string1 = ")ZVA^#j)b=^R";
      classWriter0.index = 285212676;
      // Undeclared exception!
      classWriter0.newField("", "org.apache.commons.io.filefilter.SizeFileFilter", "The array of names must not be null");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "LocalVariableTable";
      classWriter0.visit(2091, 57, "LocalVariableTable", "LocalVariableTable", "LocalVariableTable", stringArray0);
      ClassWriter classWriter1 = new ClassWriter(1481);
      int int0 = 0;
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(57, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "I\"Nf9)Zo?PZs-*";
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      classWriter0.newConst("I\"Nf9)Zo?PZs-*");
      Long long0 = new Long(0L);
      classWriter0.visitField((-1048576), "", "", "java/lang/Object", (Object) null);
      classWriter0.newInteger(14);
      // Undeclared exception!
      try { 
        classWriter0.newField("I\"Nf9)Zo?PZs-*", (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.newLong(563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.visitOuterClass("", (String) null, "");
      Type type0 = Type.DOUBLE_TYPE;
      // Undeclared exception!
      try { 
        classWriter0.newField("C]'u", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.addUninitializedType("", 563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      classWriter0.visitSource("EnclosingMethod", "");
      classWriter0.newFloat(563);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("h? ", "org.apache.commons.io.filefilter.CanWriteFileFilter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'h? .class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.toByteArray();
      Class<String> class0 = String.class;
      Type type0 = Type.getType(class0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-372), "StackMap", "SourceFile", "StackMap", type0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ClassReader classReader0 = null;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 2763);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      Float float0 = new Float((-761.929F));
      Float.max(2, 10);
      Float.isFinite((-761.929F));
      Item item0 = classWriter0.newConstItem(float0);
      classWriter0.cr = null;
      Item item1 = classWriter0.newFloat((-2903.367F));
      assertNotSame(item1, item0);
      assertNotNull(item1);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int int0 = 3225;
      ClassWriter classWriter0 = new ClassWriter(3225);
      classWriter0.threshold = 3225;
      classWriter0.visitInnerClass((String) null, "java/lang/Throwable", (String) null, 15);
      classWriter0.addType("}");
      String string0 = "jsF\"+D\\w";
      classWriter0.newUTF8("jsF\"+Dw");
      classWriter0.visitAnnotation("jsF\"+Dw", true);
      // Undeclared exception!
      try { 
        classWriter0.visitField(1, (String) null, "}", (String) null, "jsF\"+Dw");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(546);
      classWriter0.visit(546, 38, "SourceDebugExtension", (String) null, "SourceDebugExtension", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = 720;
      ClassWriter classWriter0 = new ClassWriter(720);
      String string0 = "The array of names must not be null";
      String string1 = ")ZVA^#j)b=^R";
      classWriter0.newNameType("The array of names must not be null", ")ZVA^#j)b=^R");
      classWriter0.index = 285212676;
      classWriter0.newField("StackMapTable", "org.apache.commons.io.filefilter.SizeFileFilter", "The array of names must not be null");
      // Undeclared exception!
      classWriter0.newInteger((-2617));
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      classWriter0.newUTF8("E'#@+q~CK/}}X%tw");
      classWriter0.visitEnd();
      Item item0 = classWriter0.newDouble(0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      classWriter0.visitField(50, "F#czDO0^aY_3{N-r%$G", "F#czDO0^aY_3{N-r%$G", "e", "e");
      classWriter0.toByteArray();
      Item item0 = classWriter0.newFieldItem("F#czDO0^aY_3{N-r%$G", "SourceFile", "i@F}![*#3\"*2r");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.toByteArray();
      Float float0 = new Float((-559.9818F));
      ClassWriter classWriter1 = new ClassWriter((-3784));
      // Undeclared exception!
      try { 
        classWriter1.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      classWriter0.newConst("I\"Nf9)Zo?PZs-*");
      Long long0 = new Long(2);
      Integer integer0 = new Integer(2);
      classWriter0.visitField((-2518), "I\"Nf9)Zo?PZs-*", "", "I\"Nf9)Zo?PZs-*", integer0);
      classWriter0.newInteger(2);
      classWriter0.newField("", "", "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "", "gW24", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(41);
      Short short0 = Short.valueOf((short)0);
      classWriter0.newConst(short0);
      Item item0 = classWriter0.newConstItem(short0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      String[] stringArray0 = new String[0];
      classWriter0.visit(68, 1, "w", "w", "w", stringArray0);
      classWriter0.newFieldItem("w", "w", "w");
      Item item0 = classWriter0.newFieldItem("w", "w", "w");
      Item item1 = classWriter0.newMethodItem("T6Svz1w\"4l9,NA>6", "", "17c/", true);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.addUninitializedType("", 563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      classWriter0.visitSource("EnclosingMethod", "");
      classWriter0.newFloat(563);
      classWriter0.newClass("EnclosingMethod");
      classWriter0.visitInnerClass("RuntimeInvisibleAnnotations", ";d}+ar=PsJ[>1L0yD$", "", 563);
      classWriter0.newFieldItem("#59]T]>UhO4VtgbH", "EnclosingMethod", "g&P!I[,VoIQR{]cyG-P");
      classWriter0.newField("", "", "org.apache.commons.io.filefilter.CanWriteFileFilter");
      classWriter0.visitInnerClass("org.apache.commons.io.filefilter.CanWriteFileFilter", "", "O$EOrGm1]kqNl#8pUxY", 10);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("h? ", "org.apache.commons.io.filefilter.CanWriteFileFilter");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'h? .class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      classWriter0.visitAnnotation("Qc]\"4WnVOC", false);
      classWriter0.newUTF8("E'#@+q~CK/}}X%tw");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "E'#@+q~CK/}}X%tw";
      stringArray0[1] = "";
      stringArray0[2] = "E'#@+q~CK/}}X%tw";
      classWriter0.visit(6, 12, "", "'!#UMn=?k", "C*(~f@advr==X+hr", stringArray0);
      classWriter0.visitEnd();
      classWriter0.newDouble(6);
      int int0 = classWriter0.newField("", "'!#UMn=?k", "EnclosingMethod");
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 3887);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      Item item0 = classWriter0.newDouble(563);
      int int0 = classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      assertEquals(8, int0);
      
      classWriter0.visitSource("EnclosingMethod", "");
      Item item1 = classWriter0.newFloat(563);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalAnd(false, false);
      classWriter0.newConst(boolean0);
      classWriter0.visitAnnotation("", false);
      int int0 = ClassWriter.CLASS;
      classWriter0.visit(15, 4885, "LocalVariableTable", "*v,~B(_#qh}=g", "", (String[]) null);
      classWriter0.visitEnd();
      classWriter0.newDouble((-924.76828375));
      int int1 = classWriter0.newField("", "*v,~B(_#qh}=g", "java/lang/Object");
      assertEquals(11, int1);
      
      int int2 = classWriter0.newConst("*v,~B(_#qh}=g");
      assertEquals(12, int2);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "K8z9Y";
      classWriter0.visit((-1572), 115, "Deprecated", "Deprecated", "", stringArray0);
      classWriter0.invalidFrames = true;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, (-1572));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1994));
      String string0 = "";
      classWriter0.newMethod("", "", "", true);
      classWriter0.newFloat((byte)15);
      Byte byte0 = new Byte((byte)15);
      Byte.toUnsignedLong((byte) (-54));
      Byte.compare((byte) (-16), (byte) (-16));
      Integer integer0 = new Integer(1);
      classWriter0.newConstItem(integer0);
      Byte.compare((byte) (-54), (byte)0);
      classWriter0.newConstItem(byte0);
      classWriter0.newUTF8("v,0H=u@&c>m+y");
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      String[] stringArray0 = new String[5];
      stringArray0[1] = null;
      stringArray0[4] = null;
      classWriter0.firstMethod = null;
      // Undeclared exception!
      try { 
        classWriter0.newNameType("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777216);
      Item item0 = classWriter0.newDouble(16777216);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3650);
      Boolean boolean0 = Boolean.valueOf(false);
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275737));
      classWriter0.visitOuterClass("", "", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(917);
      byte[] byteArray0 = ClassWriter.TYPE;
      Integer integer0 = new Integer(202);
      int int0 = classWriter0.newConst(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("wheel.asm.AnnotationWriter", (String) null, "[9m[tjK-=OV", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      classWriter0.addType("");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(51, 51);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalAnd(false, false);
      classWriter0.newConst(boolean0);
      Boolean.logicalXor(true, true);
      classWriter0.visitSource("", "@A.yi`w 4=%0?:");
      int int0 = classWriter0.newNameType("RuntimeInvisibleAnnotations", "RuntimeVisibleParameterAnnotations");
      assertEquals(5, int0);
      
      classWriter0.visitField(5, "@A.yi`w 4=%0?:", "", "Q7Yt$7DF", "[{Kv");
      classWriter0.visitSource("", "The list of prefixes must not be null");
      classWriter0.newFloat(1);
      int int1 = classWriter0.addType("");
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      classWriter0.toByteArray();
      FieldVisitor fieldVisitor0 = classWriter0.visitField(37, "", "", "", "");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.newInteger(9);
      String string0 = "value ";
      classWriter0.addType("value ");
      int int0 = 76;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 76, "value ", "%:<~G,lY^]PO3~nL@", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      Integer integer0 = new Integer(2910);
      Boolean boolean0 = Boolean.valueOf((String) null);
      // Undeclared exception!
      try { 
        classWriter0.visitField(0, (String) null, "}z~m<)t C}If7=sH0", "", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.newFloat(1327.54F);
      Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      Item[] itemArray0 = new Item[7];
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      item0.strVal1 = "J \"HC})cMF%xAl{F";
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[5] = item0;
      itemArray0[6] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("java/lang/String", 1);
      String[] stringArray0 = new String[0];
      classWriter0.visit(70, 4, "[bT", "java/lang/String", "t4j", stringArray0);
      classWriter0.addUninitializedType("java/lang/String", 10);
      classWriter0.newNameType("Deprecated", "");
      classWriter0.addType("a&?^`oE}-M+)j_$J");
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "java/lang/Object", "LineNumberTable");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.addUninitializedType("]?C8/9Y4QYD0", (-948));
      classWriter0.newClassItem("]?C8/9Y4QYD0");
      int int0 = classWriter0.addUninitializedType("]?C8/9Y4QYD0", 57);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      classWriter0.toByteArray();
      String string0 = "C*(~f@advr==X+hr";
      String string1 = "&z5X,rZY=H]5sGy";
      String string2 = "";
      String[] stringArray0 = new String[0];
      classWriter0.visit(0, 6, "&z5X,rZY=H]5sGy", "", "C*(~f@advr==X+hr", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1633), (-1190));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1182));
      Item[] itemArray0 = new Item[9];
      Item item0 = classWriter0.key;
      itemArray0[0] = item0;
      Item item1 = classWriter0.key2;
      itemArray0[1] = item1;
      Item item2 = classWriter0.newDouble(0);
      itemArray0[2] = item2;
      Item item3 = classWriter0.newInteger((-1182));
      itemArray0[3] = item3;
      Item item4 = classWriter0.newMethodItem("", "-H3+P'I.Pj^4[m3MF;", "", false);
      itemArray0[4] = item4;
      Item item5 = classWriter0.key2;
      itemArray0[5] = item5;
      Item item6 = classWriter0.newInteger(0);
      itemArray0[6] = item6;
      Item item7 = classWriter0.key3;
      itemArray0[7] = item7;
      Item item8 = classWriter0.newFieldItem("", "SourceDebugExtension", "S }o%To#sw\"|%c9");
      itemArray0[8] = item8;
      classWriter0.typeTable = itemArray0;
      Double double0 = new Double(0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(0, "", "-H3+P'I.Pj^4[m3MF;", "]N-$}YiI3-bkG", double0);
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      String[] stringArray0 = new String[0];
      classWriter0.visit(3900, 2446, "value ", "", "value ", stringArray0);
      classWriter0.addUninitializedType("(wT\"#X", (-791));
      Item item0 = classWriter0.key3;
      classWriter0.addType("(wT\"#X");
      classWriter0.addUninitializedType("(wT\"#X", (-791));
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(166);
      // Undeclared exception!
      try { 
        classWriter0.newUTF8((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Boolean boolean0 = Boolean.FALSE;
      classWriter0.newClassItem("(<SM|xw");
      classWriter0.newClass("Deprecated");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?$o";
      classWriter0.visit((-2764), (-4039), "(<SM|xw", "?$o", "t{lc$", stringArray0);
      int int0 = (-1633);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(40, 416);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Item item0 = classWriter0.newMethodItem("f", "f", "f", true);
      assertNotNull(item0);
      
      classWriter0.toByteArray();
      classWriter0.visitOuterClass("", (String) null, "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2465));
      String string0 = "/_**[Pf";
      String string1 = "";
      classWriter0.visitOuterClass("/_**[Pf", "", (String) null);
      classWriter0.newLong(0L);
      // Undeclared exception!
      try { 
        Type.getType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      String string0 = "";
      classWriter0.visitOuterClass("", "", "");
      classWriter0.newFloat(1.0F);
      classWriter0.newDouble(563);
      classWriter0.newNameType("EnclosingMethod", "EnclosingMethod");
      String string1 = "";
      classWriter0.newDouble(1.0F);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte)49;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 18, (-1375));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 26
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(563);
      classWriter0.visitOuterClass("", "", "");
      Float.max(2, 1);
      Float.isFinite(2.0F);
      ClassWriter classWriter1 = new ClassWriter(2602);
      // Undeclared exception!
      try { 
        classWriter1.newConstItem(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.newMethodItem("java/lang/Object", "RuntimeVisibleAnnotations", "java/lang/Object", true);
      classWriter0.newConst("java/lang/Object");
      FieldVisitor fieldVisitor0 = classWriter0.visitField(57, "java/lang/Object", "", "XE)9Y1IP", "java/lang/Object");
      assertNotNull(fieldVisitor0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newDouble(3);
      classWriter0.newDouble(3);
      classWriter0.newDouble(3);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(3, 25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      int int0 = 416;
      ClassWriter classWriter0 = new ClassWriter(416);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      String[] stringArray0 = new String[5];
      stringArray0[1] = null;
      stringArray0[4] = null;
      classWriter0.firstMethod = null;
      // Undeclared exception!
      try { 
        classWriter0.newConst(stringArray0[4]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5882));
      Item item0 = classWriter0.newLong((-5882));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(535);
      Item item0 = classWriter0.newLong(535);
      Item item1 = classWriter0.newLong(535);
      assertSame(item1, item0);
      
      Double double0 = new Double(1);
      ClassWriter classWriter1 = new ClassWriter(37);
      Item item2 = classWriter0.newFloat(2);
      Item item3 = classWriter0.newFieldItem("D3l-", "", "");
      assertNotSame(item3, item2);
      assertNotNull(item3);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newFloat(1327.54F);
      Type type0 = Type.getObjectType("a&?^`oE}-M+)j_$J");
      Class<Object> class0 = Object.class;
      Type.getInternalName(class0);
      classWriter0.newConstItem(type0);
      Class<String> class1 = String.class;
      Type.getInternalName(class1);
      classWriter0.newMethod("a&?^`oE}-M+)j_$J", "t4j", "a&?^`oE}-M+)j_$J", false);
      ClassWriter classWriter1 = new ClassWriter(10);
      classWriter1.visitAnnotation("t4j", false);
      classWriter1.newUTF8("a&?^`oE}-M+)j_$J");
      String[] stringArray0 = new String[6];
      classWriter1.newInteger(1);
      stringArray0[0] = "";
      stringArray0[1] = "Ekg{Ey-(e%r";
      stringArray0[2] = "E'#@+q~CK/}}X%tw";
      stringArray0[3] = "a&?^`oE}-M+)j_$J";
      stringArray0[4] = "java/lang/String";
      stringArray0[5] = "E'#@+q~CK/}}X%tw";
      classWriter1.visit(2563, 0, "E'#@+q~CK/}}X%tw", "java/lang/String", "E'#@+q~CK/}}X%tw", stringArray0);
      classWriter0.visitEnd();
      classWriter1.newDouble((-1.0));
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.newField("E'#@+q~CK/}}X%tw", "java/lang/String", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(921);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Synthetic";
      classWriter0.visit(921, 921, "Synthetic", "Synthetic", "Synthetic", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      classWriter0.visitSource("wheel.asm.Type", "int");
      classWriter0.getCommonSuperClass("wheel.asm.Type", "java/lang/Object");
      Item item0 = classWriter0.newInteger((-2142));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2213));
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      classWriter0.addUninitializedType("q()>", (-423));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The array of names must not be null";
      stringArray0[1] = "The array of names must not be null";
      stringArray0[2] = "The array of names must not be null";
      stringArray0[3] = "=bw";
      stringArray0[4] = "The array of names must not be null";
      classWriter0.visit(1, 131066, "q()>", "=bw", "The array of names must not be null", stringArray0);
      classWriter0.addUninitializedType("The array of names must not be null", (-423));
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.key3;
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      String string0 = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      // Undeclared exception!
      try { 
        classWriter0.addType("The array of names must not be null");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131066);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "The array of names ust not be null";
      stringArray0[1] = "The array of names ust not be null";
      stringArray0[2] = "The array of names ust not be null";
      stringArray0[3] = "=bw";
      stringArray0[4] = "The array of names ust not be null";
      classWriter0.visit(2, 131066, "q()>", "=bw", "The array of names ust not be null", stringArray0);
      Item[] itemArray0 = new Item[1];
      Item item0 = classWriter0.key3;
      item0.longVal = 2022L;
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addType("The array of names ust not be null");
      int int0 = classWriter0.addUninitializedType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", 1);
      assertEquals(2, int0);
      
      int int1 = classWriter0.newField("", "", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      assertEquals(11, int1);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(577);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("org.apache.commons.io.filefilter.CanWriteFileFilter", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int int0 = 720;
      ClassWriter classWriter0 = new ClassWriter(720);
      String string0 = "The array of names must not be null";
      String string1 = ")ZVA^#j)b=^R";
      classWriter0.newNameType("The array of names must not be null", ")ZVA^#j)b=^R");
      classWriter0.index = 285212676;
      classWriter0.visitOuterClass(".Y3}mkj\"6'", "", "");
      String string2 = "StackMapTable";
      String string3 = "org.apache.commons.io.filefilter.SizeFileFilter";
      // Undeclared exception!
      classWriter0.newClass("!");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(416);
      ClassWriter classWriter1 = new ClassWriter(2);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter1.newConst("I\"N(9)=Zo?vZs-*");
      classWriter1.visitAnnotation("3/I", true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "I\"N(9)=Zo?vZs-*";
      classWriter0.visitMethod(416, "3/I", "k#ZtBFyn}au0]&PI", "3/I", stringArray0);
      int int0 = classWriter1.newUTF8("E'#@+q~CK/}}X%tw");
      assertEquals(4, int0);
      
      classWriter0.visit((-1256), 1200, "3/I", "I\"N(9)=Zo?vZs-*", "k*SYN*s;ubAM(J", (String[]) null);
      classWriter1.visitEnd();
      classWriter0.newDouble(2);
      int int1 = classWriter0.newField("3/I", "I\"N(9)=Zo?vZs-*", "3/I");
      assertEquals(11, int1);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275688));
      classWriter0.visitInnerClass("&t)>wtMZqhhw", "&t)>wtMZqhhw", "&t)>wtMZqhhw", 270);
      classWriter0.newMethodItem("&t)>wtMZqhhw", ":'y'* ]kv+2 23SK(", "&t)>wtMZqhhw", false);
      classWriter0.visitInnerClass("SourceFile", ":'y'* ]kv+2 23SK(", "c<8\\8R", 44);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2755));
      Item[] itemArray0 = new Item[6];
      Item item0 = classWriter0.newClassItem("uWNj#wo''pw");
      itemArray0[0] = item0;
      ClassWriter classWriter1 = new ClassWriter((-1072));
      Item item1 = classWriter1.key2;
      itemArray0[1] = item1;
      String string0 = "";
      String string1 = null;
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = "uWNj#wo''pw";
      stringArray0[2] = null;
      stringArray0[3] = "uWNj#wo''pw";
      // Undeclared exception!
      try { 
        classWriter1.visitMethod((-2755), (String) null, "org.apache.commons.io.IOCase", "|6x_z&c*E}}s/<oY!B)", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      int int0 = 131072;
      ClassWriter classWriter0 = new ClassWriter(131072);
      Attribute attribute0 = new Attribute("J%mk");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newLong(0);
      classWriter0.visitInnerClass("", "", "", 0);
      classWriter0.addUninitializedType("", 1929);
      classWriter0.toByteArray();
      classWriter0.visitAnnotation("", true);
      String string0 = "wheel.asm.Attribute";
      classWriter0.newField("", "wheel.asm.Attribute", "wheel.asm.Attribute");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(256, 33554432);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 256
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.newConstItem("7I'i4\"Zf(XIAL{");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(44, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1625);
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(636);
      classWriter0.visitField((-762), "", "", "Tci:~@'2z&0s#lV?dk", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(140, byteArray0.length);
      
      int int0 = classWriter0.newClass("21FJ /Q");
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(40);
      Boolean boolean0 = Boolean.TRUE;
      Item item0 = classWriter0.newConstItem(boolean0);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[0];
      classWriter0.visit(40, 1, "", "", "", stringArray0);
      Item item1 = classWriter0.newFloat(40);
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      int int0 = classWriter0.addUninitializedType("#</ a[U", 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      Boolean boolean0 = Boolean.valueOf("");
      classWriter0.newConstItem(boolean0);
      int int0 = classWriter0.newField("", "org.apache.commons.io.IOCase", "InnerClasses");
      assertEquals(7, int0);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "InnerClasses";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "org.apache.commons.io.IOCase";
      stringArray0[6] = "";
      classWriter0.visit(2528, (-2370), "", "", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(150, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(24, byteArray0.length);
      
      classWriter0.visitAnnotation("^;WMA[U83U<", true);
      classWriter0.newUTF8("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Qc]\"4WnVOC";
      stringArray0[1] = "Signature";
      stringArray0[2] = "Qc]\"4WnVOC";
      Item[] itemArray0 = new Item[1];
      Item item0 = new Item();
      itemArray0[0] = item0;
      classWriter0.typeTable = itemArray0;
      stringArray0[3] = "E'#@+q~CK/}}X%tw";
      stringArray0[4] = "";
      stringArray0[5] = "Qc]\"4WnVOC";
      stringArray0[6] = "^;WMA[U83U<";
      stringArray0[7] = "";
      classWriter0.visit(0, 403, "^;WMA[U83U<", "", "&]EHxp32#", stringArray0);
      classWriter0.visitEnd();
      classWriter0.newDouble(7);
      int int0 = classWriter0.newField("2|JxNa(", "Qc]\"4WnVOC", "");
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      classWriter0.newInteger(6);
      classWriter0.getCommonSuperClass("java/lang/Object", "java/lang/Object");
      Float float0 = new Float(1274.36268368);
      classWriter0.newConst(float0);
      Float.isFinite(624.0F);
      classWriter0.newMethod("", "", "", true);
      int int0 = classWriter0.newConst(float0);
      assertEquals(2, int0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(50, byteArray0.length);
      
      int int1 = classWriter0.newMethod("Deprecated", "Deprecated", "", true);
      assertEquals(10, int1);
      
      classWriter0.index = (-37);
      classWriter0.newClassItem("");
      classWriter0.newClassItem("");
      classWriter0.newClass("java/lang/Object");
      classWriter0.newMethod("java/lang/Object", "", "java/lang/Object", true);
      int int2 = classWriter0.newNameType("iJktj6ipuz?7(U&.@s4", "Q0m!S|i l");
      assertEquals((-31), int2);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.index = 6;
      classWriter0.toByteArray();
      Long long0 = new Long(0L);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      int int0 = ClassWriter.SBYTE_INSN;
      classWriter0.visitField(0, "1[xrv)m8*TPg]`0$k\u0004", "1[xrv)m8*TPg]`0$k\u0004", "E#@]UqBt/#k]HH PL ", "1[xrv)m8*TPg]`0$k\u0004");
      classWriter0.visitSource((String) null, "EnclosingMethod");
      Item item0 = classWriter0.key;
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2915));
      classWriter0.newField("n[]/B0e$", "n[]/B0e$", "n[]/B0e$");
      Item item0 = classWriter0.newLong(4);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275721));
      Type type0 = Type.BYTE_TYPE;
      classWriter0.newConstItem(type0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(31, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1258);
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      int int0 = 101;
      ClassWriter classWriter0 = new ClassWriter(101);
      String string0 = "";
      String string1 = null;
      // Undeclared exception!
      try { 
        classWriter0.visitField((-1366), "", (String) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "+,_yUr{*TPki";
      classWriter0.visitMethod(131072, "+,_yUr{*TPki", "-=?OkAFE>VL@>", "-=?OkAFE>VL@>", stringArray0);
      classWriter0.newMethodItem("", "SourceDebugExtension", "", false);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(131072, 131072);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
