/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:49:53 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(511, 511);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass0.appendFoldedRange(617, 617);
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(223, 223);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      int[][] intArray0 = new int[0][4];
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 0);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[18];
      intArray0[1] = (-6);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(11513, 11513);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharGroup charGroup0 = null;
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange((-2435), 8116);
      boolean boolean0 = false;
      charClass0.appendGroup(charGroup0, boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = charClass0.toArray();
      charClass1.appendClassWithSign(intArray0, 45);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][5];
      charClass0.appendTable(intArray0);
      charClass0.appendNegatedTable(intArray0);
      charClass0.negateClass();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 43600;
      intArray0[2] = 43600;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.appendNegatedTable(intArray1);
      charClass1.appendTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[3][5];
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 4771;
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass0.toArray();
      CharClass charClass2 = charClass1.appendFoldedRange((-677), (-677));
      charClass2.cleanClass();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 43600;
      intArray0[2] = 43600;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[8];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass0.appendLiteral(0, 0);
      charClass2.appendFoldedRange(0, 0);
      charClass1.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(1333, 1333);
      int[] intArray0 = new int[6];
      intArray0[0] = 1333;
      intArray0[1] = 1333;
      intArray0[2] = 1333;
      intArray0[3] = 1333;
      intArray0[4] = 1333;
      intArray0[5] = 1333;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, (-1167));
      charClass3.cleanClass();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign((int[]) null, (-357));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(11376, 11376);
      charClass1.toString();
      // Undeclared exception!
      try { 
        charClass1.appendTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      charClass1.toString();
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][6];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 42873);
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(3, 3);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendNegatedClass(intArray0);
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = 66640;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      CharClass charClass2 = charClass1.negateClass();
      charClass1.appendTableWithSign(intArray1, 66640);
      CharClass charClass3 = charClass1.appendNegatedTable(intArray1);
      CharClass charClass4 = charClass2.appendTableWithSign(intArray1, 0);
      CharClass charClass5 = charClass4.appendNegatedClass(intArray1[0]);
      charClass3.appendClass(intArray0);
      CharClass charClass6 = new CharClass(intArray0);
      int int0 = 4696;
      int int1 = (-672);
      charClass5.appendFoldedRange(int0, int1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[0] = 32;
      intArray0[1] = (-2408);
      charClass0.appendNegatedClass(intArray0);
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass0.negateClass();
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(999602, 999602);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[11][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = new CharClass();
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-1299), (-1299));
      charClass1.appendFoldedRange((-1299), 666401);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[2] = 43600;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass0.appendRange(43600, 43600);
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = charClass0.toArray();
      charClass1.appendFoldedRange((-180), (-180));
      charClass1.appendNegatedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][0];
      charClass0.appendTableWithSign(intArray0, (-872));
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      // Undeclared exception!
      charClass0.appendFoldedRange(1727, 128591);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[2] = 66640;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass0.appendTableWithSign(intArray1, 733040);
      charClass0.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.appendLiteral(0, 66640);
      CharClass charClass4 = charClass1.appendRange(849, (-3039));
      CharClass charClass5 = charClass4.cleanClass();
      charClass5.appendLiteral(66640, 1756);
      charClass3.cleanClass();
      CharClass charClass6 = charClass4.appendNegatedTable(intArray1);
      CharClass charClass7 = charClass6.appendNegatedClass(intArray0);
      charClass7.appendFoldedRange(66640, 1113887);
  }
}
