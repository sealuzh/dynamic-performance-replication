/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 07:53:16 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2223, (-4088), fieldTypeShort0, 8L, 8L, byteArray0, byteOrder0, (-4088));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(2223, tiffField0.getTag());
      assertEquals((-4088), tiffField0.getDirectoryType());
      assertEquals((-4088), tiffField0.getSortHint());
      assertEquals(50, int0);
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-570), "SNyV9vml2`2ikqa)6");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)50;
      byteArray0[5] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, int0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 2193L, 1315L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1315, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(8772, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getIntValueOrArraySum();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(339, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getFieldType();
      assertEquals((-1633), tiffField0.getTag());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(6041, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getDoubleValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(339, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2144437570), "khR");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2144437570), (-2144437570), fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, 1245);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2144437570), int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1245, tiffField0.getSortHint());
      assertEquals((-2144437570), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getByteOrder();
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(339, tiffField0.getTag());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 2193L, 1315L, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1315, tiffField0.getOffset());
      assertEquals(8772, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (-2146072685));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals((-2146072685), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(41492);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-1286), fieldTypeAscii0, 1, (-546L), byteArray0, byteOrder0, 1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      assertEquals(100, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1976, "NoiseReductionApplied");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1976, 1976, fieldTypeDouble0, 4L, 1976, byteArray0, byteOrder0, 1976);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(735, 735, fieldTypeRational0, 735, 735, byteArray0, byteOrder0, (byte)86);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(735, tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(735, tiffField0.getTag());
      assertEquals(735, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getFieldType();
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(339, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(293);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(168, 293, fieldTypeAscii0, 168, 168, byteArray0, byteOrder0, 168);
      tiffField0.getValue();
      assertEquals(168, tiffField0.getOffset());
      assertEquals(168, tiffField0.getTag());
      assertEquals(168, tiffField0.getBytesLength());
      assertEquals(293, tiffField0.getDirectoryType());
      assertEquals(168, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147284603), 2344, fieldTypeFloat0, (byte)96, 1475L, byteArray0, byteOrder0, 1852);
      int int0 = tiffField0.getOffset();
      assertEquals(1852, tiffField0.getSortHint());
      assertEquals(1475, int0);
      assertEquals((-2147284603), tiffField0.getTag());
      assertEquals(2344, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getTagInfo();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(6041, tiffField0.getOffset());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals((-1633), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34737, 34737, fieldTypeLong0, 34737, 1860L, byteArray0, byteOrder0, 1795);
      int int0 = tiffField0.getTag();
      assertEquals(34737, int0);
      assertEquals(1860, tiffField0.getOffset());
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals(34737, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      int int0 = tiffField0.getBytesLength();
      assertEquals(6041, tiffField0.getOffset());
      assertEquals(12082, int0);
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals((-1633), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(339, tiffField0.getTag());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(55, "DNGVersion");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(32909, 32909, fieldTypeByte0, 250L, 0L, byteArray0, (ByteOrder) null, (-1074));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 2193L, 1315L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(8772, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1315, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (-2146072685));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@77c58b72 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(3112, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeAscii0, 3112, 65535, byteArray0, byteOrder0, (byte)96);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@6c0e41b6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1976, "NoiseReductionApplied");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1976, 1976, fieldTypeDouble0, 4L, 1976, byteArray0, byteOrder0, 1976);
      tiffField0.getDoubleArrayValue();
      assertEquals(1976, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(1976, tiffField0.getOffset());
      assertEquals(1976, tiffField0.getSortHint());
      assertEquals(1976, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34737, 34737, fieldTypeLong0, 34737, 1860L, byteArray0, byteOrder0, 1795);
      tiffField0.getDoubleArrayValue();
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals(1860, tiffField0.getOffset());
      assertEquals(34737, tiffField0.getTag());
      assertEquals(34737, tiffField0.getDirectoryType());
      assertEquals(138948, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147284603), 2344, fieldTypeFloat0, (byte)96, 1475L, byteArray0, byteOrder0, 1852);
      tiffField0.getDoubleArrayValue();
      assertEquals(1475, tiffField0.getOffset());
      assertEquals(1852, tiffField0.getSortHint());
      assertEquals(2344, tiffField0.getDirectoryType());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals((-2147284603), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-570), "SNyV9vml2`2ikqa)6");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, (byte)1);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-518), (-518), fieldTypeShort0, 1L, 2121L, byteArray0, (ByteOrder) null, 1212);
      tiffField0.getDoubleArrayValue();
      assertEquals((-518), tiffField0.getDirectoryType());
      assertEquals((-518), tiffField0.getTag());
      assertEquals(1212, tiffField0.getSortHint());
      assertEquals(2121, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getDoubleArrayValue();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(12082, tiffField0.getBytesLength());
      assertEquals(6041, tiffField0.getOffset());
      assertEquals((-1633), tiffField0.getTag());
      assertEquals(1114, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2794), "0^iqE=5NTV-Sp)<%&U");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(339, (-2794), fieldTypeAscii0, 339, (-2794), byteArray0, (ByteOrder) null, 1555);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@390d693d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(6041, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(12082, tiffField0.getBytesLength());
      assertEquals((-1633), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(735, 735, fieldTypeRational0, 735, 735, byteArray0, byteOrder0, (byte)86);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, 99, fieldTypeRational0, 3140L, 0L, byteArray0, byteOrder0, (byte)22);
      tiffField0.getIntArrayValue();
      assertEquals(10, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(25120, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(339, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2029, 1059, fieldTypeLong0, 1059, 0L, byteArray0, byteOrder0, 3194);
      tiffField0.getIntArrayValue();
      assertEquals(1059L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3194, tiffField0.getSortHint());
      assertEquals(4236, tiffField0.getBytesLength());
      assertEquals(2029, tiffField0.getTag());
      assertEquals(1059, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(293);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(168, 293, fieldTypeAscii0, 168, 168, byteArray0, byteOrder0, 168);
      String string0 = tiffField0.getStringValue();
      assertEquals(168, tiffField0.getBytesLength());
      assertEquals(168, tiffField0.getSortHint());
      assertEquals(168, tiffField0.getTag());
      assertEquals(293, tiffField0.getDirectoryType());
      assertEquals(168, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(428, 428, fieldTypeByte0, 428, 428, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@69e46a74
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      String string0 = tiffField0.getTagName();
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals(6041, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffff99f)", string0);
      assertEquals(73, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34737, 34737, fieldTypeLong0, 34737, 1860L, byteArray0, byteOrder0, 1795);
      String string0 = tiffField0.getTagName();
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals(34737, tiffField0.getDirectoryType());
      assertEquals(34737L, tiffField0.getCount());
      assertEquals("GeoAsciiParamsTag", string0);
      assertEquals(1860, tiffField0.getOffset());
      assertEquals(34737, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1608, ": ");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1356, 1608, fieldTypeFloat0, 1608, 1244L, byteArray0, (ByteOrder) null, 2147240857);
      String string0 = tiffField0.toString();
      assertEquals(6432, tiffField0.getBytesLength());
      assertEquals("1356 (0x54c: Unknown Tag): 0.0, 0.0 (1608 : )", string0);
      assertEquals(2147240857, tiffField0.getSortHint());
      assertEquals(1608, tiffField0.getDirectoryType());
      assertEquals(1244, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(428, 428, fieldTypeByte0, 428, 428, byteArray0, byteOrder0, (byte)0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(": ");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(428, tiffField0.getDirectoryType());
      assertEquals(428L, tiffField0.getCount());
      assertEquals(428, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(428, tiffField0.getBytesLength());
      assertEquals(428, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 526, fieldTypeDouble0, 526, 4L, byteArray0, byteOrder0, (byte) (-47));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1613);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": 0 (0x0: Unknown Tag): 0.0 (526 )\n", charArrayWriter0.toString());
      assertEquals(35, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1633), "Missing value: ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1633), 1114, fieldTypeShort0, 6041L, 6041L, byteArray0, byteOrder0, (byte)73);
      String string0 = tiffField0.getValueDescription();
      assertEquals(6041, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(6041L, tiffField0.getCount());
      assertEquals(1114, tiffField0.getDirectoryType());
      assertEquals(12082, tiffField0.getBytesLength());
      assertEquals((-1633), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2603, (-250), fieldTypeAscii0, 2603, (-250), byteArray0, byteOrder0, 32895);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-570), "SNyV9vml2`2ikqa)6");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, (byte)1);
      tiffField0.dump();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2131, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 1L, 2131, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2131, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (-2146072685));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2146072685), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2223, (-4088), fieldTypeShort0, 8L, 8L, byteArray0, byteOrder0, (-4088));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)50, (-4420));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-4088), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(2223, tiffField0.getTag());
      assertEquals((-4088), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-570), "SNyV9vml2`2ikqa)6");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, (byte)1);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, (byte) (-28));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SNyV9vml2`2ikqa)6", string0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(339, tiffField0.getTag());
      assertEquals((-66), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34737, 34737, fieldTypeLong0, 34737, 1860L, byteArray0, byteOrder0, 1795);
      tiffField0.getFieldTypeName();
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals(34737, tiffField0.getTag());
      assertEquals(1860, tiffField0.getOffset());
      assertEquals(34737L, tiffField0.getCount());
      assertEquals(34737, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2029, 1059, fieldTypeLong0, 1059, 0L, byteArray0, byteOrder0, 3194);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1059, tiffField0.getDirectoryType());
      assertEquals(0L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(3194, tiffField0.getSortHint());
      assertEquals(2029, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2029, 1059, fieldTypeLong0, 1059, 0L, byteArray0, byteOrder0, 3194);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1059, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4236, tiffField0.getBytesLength());
      assertEquals(3194, tiffField0.getSortHint());
      assertEquals(2029, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2029, 1059, fieldTypeLong0, 1059, 0L, byteArray0, byteOrder0, 3194);
      tiffField0.dump();
      assertEquals(3194, tiffField0.getSortHint());
      assertEquals(4236, tiffField0.getBytesLength());
      assertEquals(2029, tiffField0.getTag());
      assertEquals(1059L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1059, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2223, (-4088), fieldTypeShort0, 8L, 8L, byteArray0, byteOrder0, (-4088));
      int int0 = tiffField0.getSortHint();
      assertEquals((-4088), tiffField0.getDirectoryType());
      assertEquals(2223, tiffField0.getTag());
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-4088), int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50216, "2Yhz76GrT'x$");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(339, 50216, fieldTypeByte0, 1L, 255L, byteArray0, byteOrder0, (byte) (-66));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(50216, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals("339 (0x153: SampleFormat): ", string0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147284603), 2344, fieldTypeFloat0, (byte)96, 1475L, byteArray0, byteOrder0, 1852);
      fieldTypeFloat0.getValue(tiffField0);
      assertEquals(2344, tiffField0.getDirectoryType());
      assertEquals((-2147284603), tiffField0.getTag());
      assertEquals(96L, tiffField0.getCount());
      assertEquals(384, tiffField0.getBytesLength());
      assertEquals(1852, tiffField0.getSortHint());
      assertEquals(1475, tiffField0.getOffset());
  }
}
