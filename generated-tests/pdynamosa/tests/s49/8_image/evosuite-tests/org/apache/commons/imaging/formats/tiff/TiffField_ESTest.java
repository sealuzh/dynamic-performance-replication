/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 13:42:37 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      byteArray0[4] = (byte)55;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0.SRATIONAL, 50, 1047, byteArray0, byteOrder0, 1409);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(1047, tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(1409, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeLong0, 1, 0L, (byte[]) null, byteOrder0, (-1717986917));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-572), (-1133), fieldTypeByte0, 0L, (-1133), byteArray0, byteOrder0, (-3373));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1133), tiffField0.getDirectoryType());
      assertEquals((-3373), tiffField0.getSortHint());
      assertEquals((-572), tiffField0.getTag());
      assertEquals("", string0);
      assertEquals((-1133), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)37, fieldTypeRational0, 2953L, 1, byteArray0, byteOrder0, 41491);
      tiffField0.getValue();
      assertEquals(41491, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(23624, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-3409), fieldTypeFloat0.BYTE, 0L, 0L, byteArray0, byteOrder0, (-1));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-3409), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2479, 1666, fieldTypeLong0, 472L, 0, byteArray0, byteOrder0, (byte)23);
      int int0 = tiffField0.getTag();
      assertEquals(1666, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2479, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1347), 0, fieldTypeFloat0, 3373L, (-1347), byteArray0, byteOrder0, (byte)3);
      int int0 = tiffField0.getTag();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-1347), tiffField0.getOffset());
      assertEquals((-1347), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      TiffField tiffField0 = new TiffField(1248, (-5342), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SSHORT).ASCII, 1, 1, byteArray0, byteOrder0, 52);
      String string0 = tiffField0.getStringValue();
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(1248, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-5342), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-116), (byte) (-116), fieldTypeShort0, 1425L, 1727L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1727, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-116), tiffField0.getTag());
      assertEquals((-116), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2479, 1666, fieldTypeLong0, 472L, 0, byteArray0, byteOrder0, (byte)23);
      int int0 = tiffField0.getSortHint();
      assertEquals(23, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1666, tiffField0.getDirectoryType());
      assertEquals(2479, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2479, 1666, fieldTypeLong0, 472L, 0, byteArray0, byteOrder0, (byte)23);
      int int0 = tiffField0.getOffset();
      assertEquals(1666, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2479, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50741, 50741, (FieldType) null, 1L, 1740L, byteArray0, byteOrder0, 50741);
      int int0 = tiffField0.getOffset();
      assertEquals(1740, int0);
      assertEquals(50741, tiffField0.getTag());
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals(50741, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)23;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-116), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-116);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147418359, (byte)0, fieldTypeShort0, 524264L, (byte)0, byteArray0, byteOrder0, 87);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2147418359, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1048528, tiffField0.getBytesLength());
      assertEquals((-29696), int0);
      assertEquals(87, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)79;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, 4);
      tiffField0.getIntValue();
      assertEquals(79, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(79, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-110);
      TiffField tiffField0 = new TiffField(1, 17, fieldTypeShort0, 1, 16, byteArray0, byteOrder0, (byte)33);
      tiffField0.getIntValue();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-325), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(23, (-325), fieldTypeShort0, 510L, (-195L), byteArray0, byteOrder0, (-1203));
      tiffField0.getFieldTypeName();
      assertEquals((-195), tiffField0.getOffset());
      assertEquals((-1203), tiffField0.getSortHint());
      assertEquals((-325), tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(23, "");
      TiffField tiffField0 = new TiffField((-1369), 63, fieldTypeShort0, 23, (-1369), (byte[]) null, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals((-1369), tiffField0.getTag());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1369), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50741, 50741, (FieldType) null, 1L, 1740L, byteArray0, byteOrder0, 50741);
      tiffField0.getFieldType();
      assertEquals(1740, tiffField0.getOffset());
      assertEquals(50741, tiffField0.getSortHint());
      assertEquals(50741, tiffField0.getTag());
      assertEquals(50741, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte) (-4), fieldTypeLong0, (-370L), 65535, (byte[]) null, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-4), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-27), " fo~:Z");
      TiffField tiffField0 = new TiffField((-106), 50725, fieldTypeLong0, 280L, 4L, byteArray0, byteOrder0, 43);
      tiffField0.getFieldType();
      assertEquals((-106), tiffField0.getTag());
      assertEquals(50725, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)25, (byte)1, fieldTypeByte0, (byte)1, 2479, byteArray0, byteOrder0, (-3369));
      tiffField0.getDoubleValue();
      assertEquals(2479, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getTag());
      assertEquals((-3369), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)79;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, 4);
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(79, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(79, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-110);
      TiffField tiffField0 = new TiffField(1, 17, fieldTypeShort0, 1, 16, byteArray0, byteOrder0, (byte)33);
      tiffField0.getDoubleValue();
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeDouble0, (-2890), (byte)0, (byte[]) null, byteOrder0, (byte)115);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-4302), "Q.YVvE_V2]aTdm@/4b");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 571, fieldTypeFloat0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, (byte)102);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(102, tiffField0.getSortHint());
      assertEquals(571, int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)16, 0, fieldTypeFloat0, 0L, (-1347), byteArray0, byteOrder0, (byte)16);
      tiffField0.getCount();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1347), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)25, (byte)1, fieldTypeByte0, (byte)1, 2479, byteArray0, byteOrder0, (-3369));
      tiffField0.getCount();
      assertEquals(2479, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getTag());
      assertEquals((-3369), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2145822793), 588, fieldTypeByte0, 0L, (-1L), byteArray0, byteOrder0, (byte) (-115));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(588, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2145822793), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2479, 2479, fieldTypeLong0, 2479, 0L, (byte[]) null, byteOrder0, 2479);
      int int0 = tiffField0.getBytesLength();
      assertEquals(9916, int0);
      assertEquals(2479, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2479, tiffField0.getDirectoryType());
      assertEquals(2479, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2146950509, (-1672), (FieldType) null, (-2662L), 3692L, byteArray0, (ByteOrder) null, (-1086));
      tiffField0.getByteOrder();
      assertEquals(2146950509, tiffField0.getTag());
      assertEquals(3692, tiffField0.getOffset());
      assertEquals((-1086), tiffField0.getSortHint());
      assertEquals((-1672), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1160, (-2144954219), fieldTypeRational0, 1160, 0L, byteArray0, byteOrder0, (-2045222520));
      tiffField0.getByteArrayValue();
      assertEquals((-2045222520), tiffField0.getSortHint());
      assertEquals(1160, tiffField0.getTag());
      assertEquals(9280, tiffField0.getBytesLength());
      assertEquals((-2144954219), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-325), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(23, (-325), fieldTypeShort0, 510L, (-195L), byteArray0, byteOrder0, (-1203));
      tiffField0.getByteArrayValue();
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getTag());
      assertEquals((-325), tiffField0.getDirectoryType());
      assertEquals((-1203), tiffField0.getSortHint());
      assertEquals((-195), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-116), (-5989), fieldTypeShort0, 2147483647L, (-969L), byteArray0, byteOrder0, (-1));
      File file0 = MockFile.createTempFile("+~(1k7", "+~(1k7");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1347), (-25), fieldTypeFloat0, 3373L, (-1347), byteArray0, byteOrder0, (byte)3);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "OversizeValueElement, tag: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-7808), 131, fieldTypeFloat0, 3622L, 3622L, byteArray0, byteOrder0, (byte) (-37));
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoDirectory");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(3622, tiffField0.getOffset());
      assertEquals((-37), tiffField0.getSortHint());
      assertEquals(131, tiffField0.getDirectoryType());
      assertEquals(14488, tiffField0.getBytesLength());
      assertEquals((-7808), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-185), (-185), fieldTypeShort0, (-185), 1L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1928, 1928, (FieldType) null, 1928, 1928, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, (-335L), 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2890), (-2890), fieldTypeDouble0, 0L, (-946L), (byte[]) null, byteOrder0, (-161));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1369), 63, fieldTypeLong0.SHORT, 23, (-1369), (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeRational0, 1, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2890), (-2890), fieldTypeDouble0, 0L, (-946L), (byte[]) null, byteOrder0, (-161));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1606), 10, fieldTypeDouble0.FLOAT, (-2515), (-2515), byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeShort0, 1727L, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 870L, 870L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(32895, (-2756), fieldTypeByte0, (byte)0, 1895L, (byte[]) null, byteOrder0, (-5442));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2045222520), "");
      TiffField tiffField0 = new TiffField((-816), 32997, fieldTypeShort0, (-1996), (-3455L), byteArray0, byteOrder0, 48325);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2240, 3026, fieldTypeDouble0, 1L, 0L, byteArray0, byteOrder0, 2240);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4325), (-3159), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).UNDEFINED).LONG, (-3159), 304L, byteArray0, byteOrder0, (-3159));
      MockFile mockFile0 = new MockFile("^?w4jWa+T");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1136), (FieldType) null, (-1136), (-1136), byteArray0, byteOrder0, (-1136));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1136), tiffField0.getSortHint());
      assertEquals((-1136), tiffField0.getDirectoryType());
      assertEquals((-1136), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2737), 983, fieldTypeByte0, (-2737), 0L, byteArray0, byteOrder0, 3186);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "qOMkr9");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2890), (-2890), fieldTypeDouble0, 0L, (-946L), (byte[]) null, byteOrder0, (-161));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2890), int0);
      assertEquals((-2890), tiffField0.getTag());
      assertEquals((-161), tiffField0.getSortHint());
      assertEquals((-946), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 0L, (byte[]) null, byteOrder0, 2479);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeByte0, 330, 330, byteArray0, byteOrder0, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (-3384));
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3384), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, (String) null);
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeRational0, (-1), 1400L, byteArray0, (ByteOrder) null, (-2365));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1400, tiffField0.getOffset());
      assertEquals((-2365), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147293890, 2147293890, fieldTypeLong0, (-1300L), 472L, (byte[]) null, byteOrder0, (-523));
      int int0 = tiffField0.getBytesLength();
      assertEquals(472, tiffField0.getOffset());
      assertEquals((-5200), int0);
      assertEquals(2147293890, tiffField0.getDirectoryType());
      assertEquals(2147293890, tiffField0.getTag());
      assertEquals((-523), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)37, fieldTypeRational0, 2953L, 1, byteArray0, byteOrder0, 41491);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1 (0x1: Unknown Tag): ", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals(41491, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 589L, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1476, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(1476, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2138345419, 2147335392, fieldTypeLong0, 4114767, 2479, byteArray0, byteOrder0, 52);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2138345419, tiffField0.getTag());
      assertEquals(2147335392, tiffField0.getDirectoryType());
      assertEquals(2479, tiffField0.getOffset());
      assertEquals(16459068, tiffField0.getBytesLength());
      assertEquals(52, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(4312, "*JYb&eXbqt.Jua");
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34677, (-1124), fieldTypeDouble0.SRATIONAL, 34677, 4294967294L, byteArray0, byteOrder0, (-1305));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2539, ">{?s,B0jmYA#t");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2539, 2539, fieldTypeAscii0, 238L, 238L, byteArray0, byteOrder0, (byte)111);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5a047b9e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(517, (byte)0, fieldTypeByte0, 9916L, (byte)0, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@37aeb4e0 for: 517 (0x205: JPEGLosslessPredictors): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(726, (byte)0, fieldTypeShort0.FLOAT, (byte)23, (byte)0, byteArray0, byteOrder0, (-4129));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(726, tiffField0.getTag());
      assertEquals(92, tiffField0.getBytesLength());
      assertEquals((-4129), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)16, 0, fieldTypeFloat0, 0L, (-1347), byteArray0, byteOrder0, (byte)16);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(16, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, doubleArray0.length);
      assertEquals(16, tiffField0.getSortHint());
      assertEquals((-1347), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-106), 50725, fieldTypeByte0.IFD, 280L, 4L, byteArray0, byteOrder0, 43);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(50725, tiffField0.getDirectoryType());
      assertEquals(1120, tiffField0.getBytesLength());
      assertEquals((-106), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(4312, "FP#Vks@k8TUv");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3230), (byte) (-90), fieldTypeDouble0, 3593L, 297L, byteArray0, byteOrder0, (byte) (-61));
      tiffField0.getDoubleArrayValue();
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals((-3230), tiffField0.getTag());
      assertEquals(297, tiffField0.getOffset());
      assertEquals((-90), tiffField0.getDirectoryType());
      assertEquals(28744, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)37, fieldTypeRational0, 2953L, 1, byteArray0, byteOrder0, 41491);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(23624, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(41491, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2146023766), (byte)1, fieldTypeByte0, (byte)1, (byte)25, byteArray0, byteOrder0, 2479);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getOffset());
      assertEquals((-2146023766), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1628, 344, fieldTypeFloat0.SHORT, 344, 1628, byteArray0, byteOrder0, 470);
      tiffField0.getDoubleArrayValue();
      assertEquals(1628, tiffField0.getOffset());
      assertEquals(344L, tiffField0.getCount());
      assertEquals(1628, tiffField0.getTag());
      assertEquals(344, tiffField0.getDirectoryType());
      assertEquals(470, tiffField0.getSortHint());
      assertEquals(688, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2479, 1666, fieldTypeLong0, 472L, 0, byteArray0, byteOrder0, (byte)23);
      tiffField0.getIntArrayValue();
      assertEquals(2479, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(472L, tiffField0.getCount());
      assertEquals(1888, tiffField0.getBytesLength());
      assertEquals(1666, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-116), (byte) (-116), fieldTypeShort0, 1440L, 1727L, byteArray0, byteOrder0, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(2880, tiffField0.getBytesLength());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1440L, tiffField0.getCount());
      assertEquals((-116), tiffField0.getTag());
      assertEquals(1727, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1160, (-2144954219), fieldTypeRational0, 1160, 0L, byteArray0, byteOrder0, (-2045222520));
      tiffField0.getIntArrayValue();
      assertEquals(1160, tiffField0.getTag());
      assertEquals(1160L, tiffField0.getCount());
      assertEquals((-2144954219), tiffField0.getDirectoryType());
      assertEquals(9280, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2045222520), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1347), 0, fieldTypeFloat0, 3373L, (-1347), byteArray0, byteOrder0, (byte)3);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7867b80e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-116), fieldTypeShort0, 1L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-2147314726), fieldTypeShort0.SRATIONAL, 1597L, 589L, byteArray0, byteOrder0, (-2147394022));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-1469), 16, fieldTypeByte0.ASCII, 791L, 16, byteArray0, byteOrder0, (-747));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@3cc794c2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(218, (String) null);
      TiffField tiffField0 = new TiffField(218, (-185), fieldTypeAscii0, 1526L, 218, byteArray0, byteOrder0, 2147324445);
      String string0 = tiffField0.getStringValue();
      assertEquals(218, tiffField0.getOffset());
      assertEquals(2147324445, tiffField0.getSortHint());
      assertEquals(218, tiffField0.getTag());
      assertEquals((-185), tiffField0.getDirectoryType());
      assertEquals(1526, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)33, 285, fieldTypeLong0, 269L, (byte)0, byteArray0, byteOrder0, 3824);
      String string0 = tiffField0.getTagName();
      assertEquals(285, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x21)", string0);
      assertEquals(3824, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(50);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(334, 334, fieldTypeLong0, 334, 0L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("NumberOfInks", string0);
      assertEquals(334, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(334, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1474, 2119594249, fieldTypeFloat0, (byte)16, (-1772L), byteArray0, byteOrder0, (byte)16);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-27), (-27), fieldTypeByte0, 4312, 17178466624L, byteArray0, byteOrder0, (-27));
      String string0 = tiffField0.toString();
      assertEquals("-27 (0xffffffe5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (4312 SByte)", string0);
      assertEquals((-27), tiffField0.getDirectoryType());
      assertEquals((-1402560), tiffField0.getOffset());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(4312, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34026, 34026, fieldTypeFloat0, 34026, 34026, byteArray0, byteOrder0, 34026);
      String string0 = tiffField0.toString();
      assertEquals("34026 (0x84ea: BackgroundColorValue): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (34026 Float)", string0);
      assertEquals(34026, tiffField0.getOffset());
      assertEquals(34026, tiffField0.getDirectoryType());
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals(136104, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[149];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-241), 10, fieldTypeDouble0, 80L, (-2397L), byteArray0, byteOrder0, 465);
      String string0 = tiffField0.getValueDescription();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals((-2397), tiffField0.getOffset());
      assertEquals((-241), tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(465, tiffField0.getSortHint());
      assertEquals(80L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2138, 3774, fieldTypeLong0, 3774, 2295L, byteArray0, byteOrder0, 3774);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3774, tiffField0.getSortHint());
      assertEquals(2295, tiffField0.getOffset());
      assertEquals(2138, tiffField0.getTag());
      assertEquals(15096, tiffField0.getBytesLength());
      assertEquals(3774L, tiffField0.getCount());
      assertEquals(3774, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147, 2147, fieldTypeLong0, 2147, 2147, byteArray0, byteOrder0, 2147);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147L, tiffField0.getCount());
      assertEquals(2147, tiffField0.getTag());
      assertEquals(8588, tiffField0.getBytesLength());
      assertEquals(2147, tiffField0.getDirectoryType());
      assertEquals(2147, tiffField0.getSortHint());
      assertEquals(2147, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2045222520), "");
      TiffField tiffField0 = new TiffField((byte)37, (-1996), fieldTypeShort0, 151L, (-1996), byteArray0, byteOrder0, 48325);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1996), tiffField0.getDirectoryType());
      assertEquals(151L, tiffField0.getCount());
      assertEquals(48325, tiffField0.getSortHint());
      assertEquals(302, tiffField0.getBytesLength());
      assertEquals((-1996), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(37, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(4312, "*JYb&eXbqt.Jua");
      byte[] byteArray0 = new byte[35];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-660), 3730, fieldTypeDouble0.RATIONAL, 48324, (-660), byteArray0, byteOrder0, 50);
      tiffField0.toString();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-660), tiffField0.getOffset());
      assertEquals((-660), tiffField0.getTag());
      assertEquals(386592, tiffField0.getBytesLength());
      assertEquals(3730, tiffField0.getDirectoryType());
      assertEquals(48324L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2539, ">{?s,B0jmYA#t");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)61;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2539, 2539, fieldTypeAscii0, 238L, 238L, byteArray0, byteOrder0, (byte)111);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2539, tiffField0.getDirectoryType());
      assertEquals(2539, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(238, tiffField0.getOffset());
      assertEquals(111, tiffField0.getSortHint());
      assertEquals(238, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 1476, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1476, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2890), (-2890), fieldTypeDouble0, 0L, (-946L), (byte[]) null, byteOrder0, (-161));
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals((-2890), tiffField0.getDirectoryType());
      assertEquals((-946), tiffField0.getOffset());
      assertEquals((-2890), tiffField0.getTag());
      assertEquals((-161), tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-161), (-3654), fieldTypeDouble0, 359L, (-2890), byteArray0, byteOrder0, (byte) (-11));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2890L), tiffElement0.offset);
      assertEquals((-11), tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals((-3654), tiffField0.getDirectoryType());
      assertEquals((-161), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1347), 0, fieldTypeFloat0, 3373L, (-1347), byteArray0, byteOrder0, (byte)3);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (byte)16);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1347), tiffField0.getOffset());
      assertEquals((-1347), tiffField0.getTag());
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3373L, tiffField0.getCount());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-116), (byte) (-116), fieldTypeShort0, 1425L, 1727L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1363, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1727, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals((-116), tiffField0.getTag());
      assertEquals((-116), tiffField0.getDirectoryType());
      assertEquals(2850, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2479, 2479, fieldTypeLong0, 2479, 0L, (byte[]) null, byteOrder0, 2479);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(2479, tiffField0.getDirectoryType());
      assertEquals(2479, tiffField0.getSortHint());
      assertEquals(2479, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1369), 63, fieldTypeLong0.SSHORT, 23, (-1369), (byte[]) null, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals((-1369), tiffField0.getOffset());
      assertEquals((-1369), tiffField0.getTag());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(23L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1136), (FieldType) null, (-1136), (-1136), byteArray0, byteOrder0, (-1136));
      int int0 = tiffField0.getOffset();
      assertEquals((-1136), tiffField0.getSortHint());
      assertEquals((-1136), tiffField0.getDirectoryType());
      assertEquals((-1136), int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, (-8589934592L), 45280L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(45280, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(27, (-1344), fieldTypeByte0, 4L, 3282, byteArray0, byteOrder0, (byte)114);
      String string0 = tiffField0.toString();
      assertEquals(114, tiffField0.getSortHint());
      assertEquals((-1344), tiffField0.getDirectoryType());
      assertEquals(3282, tiffField0.getOffset());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (4 SByte)", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((-1469), 16, fieldTypeByte0.ASCII, 791L, 16, byteArray0, byteOrder0, (-747));
      tiffField0.dump();
      assertEquals(791, tiffField0.getBytesLength());
      assertEquals((-747), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(791L, tiffField0.getCount());
      assertEquals((-1469), tiffField0.getTag());
      assertEquals(16, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[101];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1621, "YCbCrPositioning");
      TiffField tiffField0 = new TiffField(1621, 1621, fieldTypeShort0, 1621, 1621, byteArray0, byteOrder0, 1621);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1621L, tiffField0.getCount());
      assertEquals(1621, tiffField0.getTag());
      assertEquals(1621, tiffField0.getDirectoryType());
      assertEquals(3242, tiffField0.getBytesLength());
      assertEquals(1621, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1621, tiffField0.getOffset());
  }
}
