/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 21:29:54 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-260));
      classWriter0.index = (-260);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-260), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(99);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3629), "@a^rLe3<hdk+N7mDRD]", ";42Rj&2cysVhiSS$", "@a^rLe3<hdk+N7mDRD]", "@a^rLe3<hdk+N7mDRD]");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase", (String) null, (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-11), "b", "b", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-11);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3754);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 314, "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", (String) null, (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 47, ")V", (String) null, "uyY`~Gp+McLUE-", fieldWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "GhVi(=a12ZEBV^diE>", "GhVi(=a12ZEBV^diE>", "GhVi(=a12ZEBV^diE>", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3754);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 314, "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(314);
      byte[] byteArray0 = new byte[8];
      byteVector1.data = byteArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-5668), ")V", "Label offset position has not been resolved yet", (String) null, byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-");
      Attribute attribute0 = new Attribute("uyY`~Gp+McLUE-");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-288), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("uyY`~Gp+McL~E-", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      classWriter0.version = 73;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-288), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3754);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 314, "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16, ")Z*Y!&U9?hyVpj$l", ")Z*Y!&U9?hyVpj$l", ")Z*Y!&U9?hyVpj$l", ")Z*Y!&U9?hyVpj$l");
      Attribute attribute0 = new Attribute(")Z*Y!&U9?hyVpj$l");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3754);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "_6(h~ S(GpfJQ2i", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      classWriter0.version = 73;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-288), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-288), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-288));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-288), "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-", "uyY`~Gp+McL~E-");
      fieldWriter0.visitAnnotation("SourceFile", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3754);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 314, "uyY`~Gp+McLUE-", "uyY`~Gp+McLUE-", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(99);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3629), "@a^rLe3<hdk+N7mDRD]", "42Rj&2cysVhiSS$", "", "@a^rLe3<hdk+N7mDRD]");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(99);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3629), "@a^rLe3<hdk+N7mDRD]", "42Rj&2cysVhiSS$", "", "@a^rLe3<hdk+N7mDRD]");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
