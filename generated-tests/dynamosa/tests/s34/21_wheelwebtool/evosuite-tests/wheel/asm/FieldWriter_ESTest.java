/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 23:27:48 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.index = (-3623);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 48, "?/@=bfqL", "?/@=bfqL", "?/@=bfqL", (Object) null);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.index = (-3623);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (byte)36, "", "?/@=bfqL", "", "[WkRN-q]bcI!&w");
      fieldWriter0.next.put(byteVector0);
      assertNotSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      classWriter0.index = (-3623);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "9a=~P0`m1)z4{XZA:", "RuntimeInvisibleAnnotations", "^VDp\"?#", "RuntimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(237);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 237, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1668));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "JQHj", "JQHj", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[5];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("&&^Z-I9f<N", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter8NmeFileFilter", "org.apache.commons.io.filefilter8NmeFileFilter", "org.apache.commons.io.filefilter8NmeFileFilter", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(225);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "K", "K", "K", "K");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 225;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-2054);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2054
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1668));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1668), (String) null, (String) null, (String) null, classWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 36, "", "QB8ck[iEp3b<B4hEe", "?/@=bfqL", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-3623);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "", "jtwi-c;", "?+/6l", "jtwi-c;");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3623
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2016));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter8NmeFileFilter", "org.apache.commons.io.filefilter8NmeFileFilter", "org.apache.commons.io.filefilter8NmeFileFilter", (Object) null);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(228);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "tWJiG", "tWJiG", "tWJiG", "tWJiG");
      fieldWriter0.visitAnnotation("tWJiG", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1668));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "JQHj", "JQHj", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(228);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "tWJiG", "tWJiG", "tWJiG", "tWJiG");
      classWriter0.version = 228;
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2028));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1692));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "NWQ";
      stringArray0[1] = "wheel.asm.FieldWriter";
      stringArray0[2] = "wheel.asm.FieldWriter";
      stringArray0[3] = "NWQ";
      stringArray0[4] = "omQ*EMRb";
      stringArray0[5] = "NWQ";
      stringArray0[6] = "omQ*EMRb";
      stringArray0[7] = "LineNumberTable";
      stringArray0[8] = "NWQ";
      classWriter0.visit(65535, 4167, "wheel.asm.FieldWriter", "NWQ", "omQ*EMRb", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4167, "NWQ", "", "DcV=;1Xi1P@H5", "DcV=;1Xi1P@H5");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(228);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "tWJiG", "tWJiG", "tWJiG", "tWJiG");
      fieldWriter0.visitAnnotation("tWJiG", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3623), "", "", "", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1668));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "JQHj", "JQHj", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 248, "", "", "", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(248);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 248, "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
