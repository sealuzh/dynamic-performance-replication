/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 04:25:14 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendRange(2812, (-5036));
      int[] intArray0 = new int[6];
      intArray0[0] = (-5036);
      intArray0[1] = (-5036);
      intArray0[2] = 2812;
      intArray0[3] = 66640;
      intArray0[4] = 2812;
      intArray0[5] = (-5036);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, (-5036));
      // Undeclared exception!
      try { 
        charClass3.appendTableWithSign((int[][]) null, (-5036));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = new int[0];
      CharClass charClass2 = charClass0.appendClassWithSign(intArray0, (-505711));
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      intArray0[1] = 64335;
      charClass0.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 64335);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][3];
      int[] intArray1 = new int[0];
      intArray0[0] = intArray1;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray0, 158);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[] intArray0 = new int[5];
      intArray0[0] = (-2);
      int int0 = (-470);
      intArray0[1] = (-470);
      int int1 = 0;
      intArray0[2] = 0;
      int int2 = 0;
      intArray0[3] = 0;
      int int3 = (-2120);
      intArray0[4] = (-2120);
      int int4 = 3583;
      // Undeclared exception!
      try { 
        charClass1.appendClassWithSign(intArray0, 3583);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendClass(intArray0);
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendFoldedRange((-2019393), (-1841));
      CharClass charClass2 = charClass0.cleanClass();
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[3];
      intArray0[0] = 2801;
      intArray0[1] = 2801;
      intArray0[2] = 2801;
      CharClass charClass1 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][2];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-4431);
      intArray0[1] = 0;
      intArray0[2] = 3148;
      intArray0[3] = (-552);
      intArray0[4] = 1;
      intArray0[5] = 66640;
      intArray0[6] = 762;
      intArray0[7] = (-51);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[7][0];
      int[] intArray2 = new int[7];
      intArray2[0] = (-4431);
      intArray2[1] = 762;
      intArray2[2] = 762;
      intArray2[3] = (-51);
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 2;
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray1);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.appendRange(0, 3148);
      assertArrayEquals(new int[] {(-4431), 0, 3148, (-552), 1, 66640, 762, (-51)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[1] = 1763;
      charClass0.appendNegatedTable(intArray0);
      charClass1.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 228;
      intArray0[1] = 1443;
      intArray0[2] = 5;
      intArray0[3] = 4841;
      intArray0[4] = (-248);
      intArray0[5] = 484;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign((int[][]) null, 4841);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      CharClass charClass1 = charClass0.appendRange((-742), 119166);
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-2897), (-1277));
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = (-2057);
      CharClass charClass1 = charClass0.appendLiteral((-2057), (-2057));
      int[] intArray0 = new int[6];
      intArray0[0] = (-2057);
      intArray0[1] = (-2057);
      intArray0[2] = (-2057);
      intArray0[3] = (-2057);
      intArray0[4] = (-2057);
      intArray0[5] = (-2057);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[7][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = (-2057);
      intArray2[1] = (-2057);
      intArray2[2] = (-2057);
      intArray2[3] = (-2057);
      CharClass charClass4 = charClass1.appendTableWithSign(intArray1, 0);
      intArray2[4] = int0;
      intArray2[5] = int0;
      intArray1[5] = intArray2;
      intArray1[6] = intArray0;
      CharClass charClass5 = charClass3.appendNegatedTable(intArray1);
      int int1 = (-1137);
      CharClass charClass6 = charClass5.appendLiteral(int1, intArray0[1]);
      int int2 = 7410;
      charClass6.appendClassWithSign(intArray1[4], int2);
      CharClass charClass7 = charClass4.appendNegatedTable(intArray1);
      int int3 = 0;
      charClass5.appendFoldedRange(int3, intArray0[5]);
      charClass7.toString();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass0.appendLiteral((-519), (-716));
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(91, 91);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[1][4];
      int[] intArray1 = new int[5];
      intArray1[0] = 2382;
      intArray1[1] = 1763;
      intArray1[2] = 354;
      intArray1[3] = 91;
      int int0 = 9139;
      intArray1[4] = 9139;
      intArray0[0] = intArray1;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      CharClass charClass3 = charClass2.appendTable(intArray0);
      CharClass charClass4 = charClass3.appendFoldedRange(354, 354);
      // Undeclared exception!
      try { 
        charClass4.appendClassWithSign(intArray1, 354);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 1083;
      intArray0[1] = (-1271);
      intArray0[2] = 120712;
      intArray0[3] = (-1740);
      intArray0[4] = 3075;
      intArray0[5] = 66639;
      intArray0[6] = 0;
      intArray0[7] = 0;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[3][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, (-2872));
      charClass1.appendLiteral(0, 0);
      CharClass charClass4 = charClass3.cleanClass();
      CharClass charClass5 = charClass4.appendLiteral(32, (-1271));
      charClass5.appendTableWithSign(intArray1, 0);
      String string0 = charClass5.toString();
      assertEquals("[0xfffff935-0x10ffff]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][0];
      charClass0.appendNegatedTable(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1580);
      int int0 = 0;
      intArray0[1] = 0;
      int int1 = 0;
      intArray0[2] = 0;
      int int2 = 692;
      intArray0[3] = 692;
      CharClass charClass0 = new CharClass(intArray0);
      int int3 = (-5001);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-5001));
      int[] intArray1 = new int[2];
      intArray1[0] = 692;
      intArray1[1] = (-1580);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray1);
      CharClass charClass3 = charClass2.negateClass();
      CharClass charClass4 = charClass3.appendFoldedClass(intArray1);
      int int4 = 44025;
      int[][] intArray2 = new int[7][9];
      intArray2[0] = intArray1;
      intArray2[1] = intArray0;
      intArray2[2] = intArray0;
      intArray2[3] = intArray0;
      intArray2[4] = intArray1;
      int[] intArray3 = new int[7];
      intArray3[0] = 692;
      intArray3[1] = 0;
      intArray3[2] = 0;
      intArray3[3] = 0;
      intArray3[4] = (-827);
      intArray3[5] = 44025;
      intArray3[6] = 0;
      intArray2[5] = intArray3;
      intArray2[6] = intArray1;
      // Undeclared exception!
      try { 
        charClass4.appendTable(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-1870);
      intArray0[1] = 3507;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      charClass0.appendClass(intArray0);
      charClass0.appendClassWithSign(intArray0, (-1870));
      CharClass charClass1 = charClass0.appendFoldedRange((-2302), (-2302));
      charClass1.appendClassWithSign(intArray0, 3507);
      charClass0.toString();
      CharClass.charClassToString(intArray0, (-1870));
      int[][] intArray1 = new int[3][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[9];
      intArray0[0] = 312;
      intArray0[1] = (-2463);
      intArray0[2] = 1563;
      intArray0[3] = (-2334);
      intArray0[4] = 315;
      intArray0[5] = 2768;
      intArray0[6] = (-129);
      intArray0[7] = (-719);
      intArray0[8] = 2;
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.cleanClass();
      charClass0.appendClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
      int int0 = 32;
      charClass1.appendFoldedRange(int0, intArray0[0]);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.negateClass();
      int[] intArray0 = charClass1.toArray();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 1196;
      intArray0[1] = 64;
      intArray0[2] = 2074;
      intArray0[3] = 2228;
      intArray0[4] = 1200;
      intArray0[5] = 890;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray1 = new int[2][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, (-2192));
      CharClass charClass3 = charClass2.cleanClass();
      int[] intArray2 = new int[5];
      intArray2[0] = (-2192);
      intArray2[1] = 64;
      intArray2[2] = 2074;
      intArray2[3] = (-2192);
      intArray2[4] = 64;
      // Undeclared exception!
      try { 
        charClass3.appendClass(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[6];
      intArray1[1] = 2652;
      intArray1[2] = 2652;
      intArray1[1] = 0;
      intArray0[0] = intArray1;
      CharClass charClass1 = new CharClass(intArray1);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass1.appendFoldedRange(1, 1);
      charClass0.appendNegatedTable(intArray0);
      CharClass charClass4 = charClass2.appendNegatedClass(intArray1);
      CharClass charClass5 = charClass4.appendClass(intArray1);
      CharClass charClass6 = charClass5.cleanClass();
      charClass6.appendNegatedTable(intArray0);
      charClass3.appendClass(intArray1);
      // Undeclared exception!
      try { 
        charClass5.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
