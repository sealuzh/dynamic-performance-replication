/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 02:01:09 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1095;
      intArray0[1] = 692;
      intArray0[2] = 1705;
      int int0 = 394;
      intArray0[3] = 394;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[8][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      // Undeclared exception!
      charClass1.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 1095;
      intArray0[1] = 692;
      intArray0[2] = 1705;
      intArray0[3] = 394;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[8][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      CharClass charClass5 = charClass4.appendRange((-273), 394);
      charClass5.appendRange((-551), (-933));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-2813);
      intArray0[1] = (-1369);
      intArray0[2] = 3343;
      intArray0[3] = (-1496);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendRange((-1369), 1114112);
      int[][] intArray1 = new int[6][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[0] = 457;
      intArray2[1] = 1114112;
      intArray2[2] = 3343;
      intArray2[3] = (-1369);
      intArray1[5] = intArray2;
      CharClass charClass3 = charClass2.appendTable(intArray1);
      CharClass charClass4 = charClass3.appendClassWithSign(intArray0, 471);
      CharClass charClass5 = charClass4.cleanClass();
      CharClass charClass6 = charClass5.negateClass();
      assertSame(charClass6, charClass4);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 3630;
      intArray0[1] = 2529;
      intArray0[2] = 427;
      intArray0[3] = 1579;
      intArray0[4] = 4;
      intArray0[5] = 4;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(3556, 4);
      int[][] intArray1 = new int[3][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendClass(intArray0);
      CharClass charClass4 = charClass3.cleanClass();
      CharClass charClass5 = charClass4.appendClassWithSign(intArray0, 5364);
      charClass5.appendClassWithSign(intArray0, 1588);
      assertArrayEquals(new int[] {3630, 2529, 427, 1579, 4, 4}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][9];
      int[] intArray1 = new int[8];
      intArray1[0] = 748;
      intArray1[1] = 120301;
      intArray1[2] = 1;
      intArray1[3] = 91;
      intArray1[4] = 91;
      intArray1[5] = 66639;
      intArray1[6] = (-358);
      intArray1[7] = (-1309);
      intArray0[0] = intArray1;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      CharClass charClass2 = charClass1.appendClass(intArray1);
      CharClass charClass3 = charClass2.appendTable(intArray0);
      // Undeclared exception!
      charClass3.appendFoldedClass(intArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 1427;
      intArray0[0] = 1427;
      int int1 = (-522);
      intArray0[1] = (-522);
      int int2 = 2367;
      intArray0[2] = 2367;
      int int3 = 1866;
      intArray0[3] = 1866;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.appendFoldedClass(intArray0);
      charClass1.toArray();
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 8055);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1612);
      intArray0[1] = (-1365);
      intArray0[2] = (-573);
      intArray0[3] = (-3322);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass3.cleanClass();
      CharClass charClass5 = charClass4.appendClassWithSign(intArray0, (-1365));
      int[] intArray1 = new int[4];
      intArray1[0] = (-1365);
      intArray1[1] = (-1612);
      intArray1[2] = (-3322);
      intArray1[3] = (-1365);
      charClass5.appendClassWithSign(intArray1, 186);
      assertArrayEquals(new int[] {(-1612), (-1365), (-573), (-3322)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = (-802);
      charClass0.appendFoldedRange((-802), (-802));
      charClass0.toString();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        charClass1.appendFoldedClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[7];
      int int0 = (-1876);
      intArray0[0] = (-1876);
      int int1 = 3797;
      intArray0[1] = 3797;
      int int2 = (-2825);
      intArray0[2] = (-2825);
      int int3 = 772;
      intArray0[3] = 772;
      intArray0[4] = 477;
      int int4 = 2808;
      intArray0[5] = 2808;
      int int5 = 0;
      intArray0[6] = 0;
      // Undeclared exception!
      try { 
        charClass0.appendClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-2824), (-2824));
      CharClass charClass2 = charClass1.appendFoldedRange((-2), (-1925));
      int[][] intArray0 = new int[9][3];
      int[] intArray1 = new int[6];
      intArray1[0] = (-2824);
      intArray1[1] = 394;
      intArray1[2] = (-2824);
      intArray1[3] = (-1925);
      intArray1[4] = (-1925);
      intArray1[5] = (-2);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 394;
      intArray2[1] = (-2);
      intArray2[2] = (-586);
      intArray2[3] = 394;
      intArray2[4] = 394;
      intArray2[5] = 3342;
      intArray2[6] = (-2824);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[2];
      intArray3[0] = (-2);
      intArray3[1] = (-2);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = (-1925);
      intArray5[1] = 394;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = (-1925);
      intArray6[1] = (-1925);
      intArray6[2] = (-1925);
      intArray6[3] = 3342;
      intArray6[4] = (-1925);
      intArray6[5] = (-2);
      intArray6[6] = (-586);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[9];
      intArray7[0] = (-3274);
      intArray7[1] = 1422;
      intArray7[2] = (-1925);
      intArray7[3] = (-1925);
      intArray7[4] = (-2);
      intArray7[5] = 394;
      intArray7[6] = (-2824);
      intArray7[7] = (-2824);
      intArray7[8] = (-2);
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 3342;
      intArray8[1] = 3342;
      intArray8[2] = (-2824);
      intArray8[3] = (-3274);
      intArray8[4] = 0;
      intArray8[5] = (-1925);
      intArray8[6] = (-675);
      intArray8[7] = (-586);
      intArray8[8] = (-586);
      intArray0[7] = intArray8;
      int[] intArray9 = new int[6];
      intArray9[0] = (-2);
      intArray9[1] = (-2);
      intArray9[2] = (-2);
      intArray9[3] = 0;
      intArray9[4] = 3342;
      intArray9[5] = (-2824);
      intArray0[8] = intArray9;
      // Undeclared exception!
      charClass2.appendTableWithSign(intArray0, (-6203));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-3114);
      int int0 = (-2924);
      intArray0[1] = (-2924);
      int int1 = (-86);
      intArray0[2] = (-86);
      intArray0[3] = (-105);
      int int2 = (-404);
      intArray0[4] = (-404);
      intArray0[5] = 4;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int int3 = (-1730);
      CharClass charClass2 = charClass1.appendFoldedRange((-1730), (-2924));
      charClass2.appendLiteral((-105), (-2924));
      charClass1.toString();
      charClass1.appendFoldedClass(intArray0);
      CharClass.charClassToString(intArray0, (-86));
      int int4 = 1360;
      // Undeclared exception!
      charClass2.appendFoldedRange((-86), 1360);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-811);
      intArray0[1] = 327;
      intArray0[2] = 1207;
      intArray0[3] = (-496);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 327);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 1421;
      intArray0[1] = (-1821);
      intArray0[2] = (-2896);
      intArray0[3] = (-12);
      intArray0[4] = 9;
      intArray0[5] = 1136;
      intArray0[6] = 6600;
      intArray0[7] = (-1836);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendRange(409, 0);
      int[][] intArray1 = new int[6][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      assertSame(charClass3, charClass2);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[9][2];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[9];
      intArray2[0] = 149;
      intArray2[1] = 2;
      intArray2[2] = 4;
      intArray2[3] = 64;
      intArray2[4] = (-1717);
      intArray2[5] = 123;
      intArray2[6] = 3250;
      intArray2[7] = (-1114613);
      intArray2[8] = 3661;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      int[] intArray3 = new int[1];
      intArray3[0] = 8521;
      intArray1[3] = intArray3;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-5934);
      intArray0[1] = 94;
      intArray0[2] = 917537;
      intArray0[3] = 61;
      intArray0[4] = 1628;
      intArray0[5] = (-2814);
      intArray0[6] = 127344;
      intArray0[7] = 1200;
      intArray0[4] = (-2196);
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = charClass0.toArray();
      charClass0.appendFoldedRange(3264, 1628);
      assertSame(intArray0, intArray1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][8];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 1580);
      int[] intArray1 = new int[7];
      intArray1[0] = 1580;
      intArray1[1] = 1580;
      intArray1[2] = 1580;
      intArray1[3] = 1580;
      intArray1[4] = 1580;
      intArray1[5] = 1580;
      intArray1[6] = 1580;
      // Undeclared exception!
      try { 
        charClass1.appendClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1918593338);
      intArray0[1] = (-3176);
      intArray0[2] = 2435;
      intArray0[3] = 557;
      intArray0[4] = (-3176);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-505));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 71;
      intArray0[1] = 2771;
      intArray0[2] = (-28234352);
      intArray0[3] = (-593);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.negateClass();
      int[][] intArray1 = new int[4][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      CharClass charClass5 = charClass4.appendLiteral((-28234352), 2771);
      CharClass charClass6 = charClass4.appendLiteral((-1835), 2771);
      charClass6.appendNegatedClass(intArray0);
      charClass6.appendFoldedRange((-28234352), (-2145810751));
      CharClass charClass7 = charClass0.appendNegatedTable(intArray1);
      charClass7.negateClass();
      charClass3.appendNegatedClass(intArray0);
      CharClass charClass8 = charClass5.appendClass(intArray0);
      charClass5.appendTable(intArray1);
      charClass8.appendNegatedClass(intArray0);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[4][4];
      int[] intArray1 = new int[8];
      intArray1[0] = 122400;
      intArray1[1] = 121092;
      intArray1[2] = 0;
      intArray1[3] = 6152;
      intArray1[4] = 122401;
      intArray1[5] = 66639;
      intArray1[6] = 2;
      intArray1[7] = 1015;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[7];
      intArray2[0] = 64;
      intArray2[1] = 74;
      intArray2[2] = 66639;
      intArray2[3] = 122401;
      intArray2[4] = 0;
      intArray2[5] = 2;
      intArray2[6] = 121092;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[0] = 121092;
      intArray3[1] = 0;
      intArray3[2] = 6152;
      intArray3[3] = 6152;
      intArray3[4] = 122400;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[7];
      intArray4[0] = 93;
      intArray4[1] = 121092;
      intArray4[2] = 122400;
      intArray4[3] = 66639;
      intArray4[4] = 0;
      intArray4[5] = 6152;
      intArray4[6] = 121092;
      intArray0[3] = intArray4;
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass2.appendRange(4345, 162);
      // Undeclared exception!
      charClass3.appendFoldedClass(intArray1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[][] intArray0 = new int[0][2];
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendRange(653915, 7257);
      int[] intArray1 = new int[5];
      intArray1[0] = 653915;
      intArray1[1] = 7257;
      intArray1[2] = 62;
      intArray1[3] = 7257;
      intArray1[4] = 7257;
      // Undeclared exception!
      charClass4.appendFoldedClass(intArray1);
  }
}
