/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:45:00 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeFloat0, 282, 282, byteArray0, byteOrder0, 282);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(282, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(282, tiffField0.getTag());
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[46];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2431, 2431, fieldTypeDouble0, 2431, 2431, byteArray0, byteOrder0, 2431);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2431, tiffField0.getDirectoryType());
      assertEquals(2431, tiffField0.getSortHint());
      assertEquals(2431, tiffField0.getOffset());
      assertEquals("2431 (0x97f: Unknown Tag): ", string0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(677, 677, fieldTypeFloat0, 677, 677, byteArray0, byteOrder0, 677);
      tiffField0.dump();
      int int0 = tiffField0.getSortHint();
      assertEquals(677, int0);
      assertEquals(677, tiffField0.getDirectoryType());
      assertEquals(677L, tiffField0.getCount());
      assertEquals(677, tiffField0.getTag());
      assertEquals(2708, tiffField0.getBytesLength());
      assertEquals(677, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[34];
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0.SSHORT, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      tiffField0.dump();
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56L, tiffField0.getCount());
      assertEquals(56, tiffField0.getTag());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(677, 677, fieldTypeFloat0, 677, 677, byteArray0, byteOrder0, 677);
      tiffField0.getFieldTypeName();
      assertEquals(677, tiffField0.getOffset());
      assertEquals(677, tiffField0.getDirectoryType());
      assertEquals(677, tiffField0.getSortHint());
      assertEquals(677, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[49];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0.LONG, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOversizeValueElement();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@5a250ff0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[129];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeLong0, 49, 49, byteArray0, byteOrder0, 49);
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(49, 49);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(49, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeAscii0, 9, 9, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals(9L, tiffField0.getCount());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[129];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeLong0, 49, 49, byteArray0, byteOrder0, 49);
      tiffField0.getIntArrayValue();
      assertEquals(49L, tiffField0.getCount());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getOffset());
      assertEquals(196, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeFloat0, 282, 282, byteArray0, byteOrder0, 282);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@4bf659e for: 282 (0x11a: XResolution): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[51];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeByte0, 47, 47, byteArray0, byteOrder0, 35);
      tiffField0.dump();
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getBytesLength());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(47L, tiffField0.getCount());
      assertEquals(47, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[129];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeLong0, 49, 49, byteArray0, byteOrder0, 49);
      tiffField0.getDoubleArrayValue();
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getOffset());
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(49L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(311, 311, fieldTypeFloat0, 311, 311, byteArray0, byteOrder0, 311);
      tiffField0.getDoubleArrayValue();
      assertEquals(311, tiffField0.getTag());
      assertEquals(311L, tiffField0.getCount());
      assertEquals(1244, tiffField0.getBytesLength());
      assertEquals(311, tiffField0.getDirectoryType());
      assertEquals(311, tiffField0.getSortHint());
      assertEquals(311, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[51];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2498, 2498, fieldTypeDouble0, 2498, 2498, byteArray0, byteOrder0, 2498);
      tiffField0.dump();
      tiffField0.getDoubleArrayValue();
      assertEquals(19984, tiffField0.getBytesLength());
      assertEquals(2498, tiffField0.getSortHint());
      assertEquals(2498, tiffField0.getOffset());
      assertEquals(2498L, tiffField0.getCount());
      assertEquals(2498, tiffField0.getTag());
      assertEquals(2498, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(450, 450, fieldTypeFloat0, 450, 450, byteArray0, byteOrder0, 450);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Zh63tH-z!t2(/eYI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[118];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0, 26, 26, byteArray0, byteOrder0, 26);
      String string0 = tiffField0.getTagName();
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x1a)", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 36864, fieldTypeRational0, 36864, (-930L), byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(328, 328, fieldTypeRational0, 328, 328, byteArray0, byteOrder0, 26);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      tiffField0.getIntArrayValue();
      assertEquals(328, tiffField0.getOffset());
      assertEquals(2624, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(328, tiffField0.getDirectoryType());
      assertEquals(328, tiffField0.getTag());
      assertEquals(328L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeDouble0, 4, 0L, byteArray0, byteOrder0, 4);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(4, 4);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeFloat0, 282, 282, byteArray0, byteOrder0, 282);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(282, tiffField0.getOffset());
      assertEquals(282, tiffField0.getTag());
      assertEquals(282, tiffField0.getSortHint());
      assertEquals(282, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[103];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeLong0, 49, 49, byteArray0, byteOrder0, 49);
      tiffField0.getIntValueOrArraySum();
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(49, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(30, 30, fieldTypeAscii0, 30, 30, byteArray0, byteOrder0, 30);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1f1acba0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeAscii0, 9, 9, byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5259), 311, fieldTypeFloat0, 1L, 4848L, byteArray0, byteOrder0, (-5259));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-5259), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(311, tiffField0.getDirectoryType());
      assertEquals((-5259), tiffField0.getTag());
      assertEquals(4848, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeFloat0, 282, 282, byteArray0, byteOrder0, 282);
      tiffField0.dump();
      assertEquals(282, tiffField0.getOffset());
      assertEquals(1128, tiffField0.getBytesLength());
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getSortHint());
      assertEquals(282, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[103];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeFloat0.RATIONAL, 3, (-1L), byteArray0, byteOrder0, 282);
      tiffField0.dump();
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-15), tiffField0.getTag());
      assertEquals((-15), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(282, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147256664), "");
      TiffField tiffField0 = new TiffField(253, 3, fieldTypeRational0, (-2147256664), 836L, byteArray0, byteOrder0, 3);
      tiffField0.dump();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147256664), "");
      TiffField tiffField0 = new TiffField(282, 3, fieldTypeRational0, (-2147256664), 836L, byteArray0, byteOrder0, 3);
      assertEquals(1815872, tiffField0.getBytesLength());
      
      tiffField0.dump();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getTag());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(836, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeAscii0, 14, 14, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals(14, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(33451, 33451, fieldTypeAscii0.LONG, 33451, 33451, byteArray0, byteOrder0, 33451);
      tiffField0.getTagName();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeFloat0.SSHORT, (byte)13, (-675), byteArray0, byteOrder1, (byte)13);
      int int0 = new Integer((-675));
      tiffField0.getDoubleArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-675), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeFloat0.SSHORT, (byte)13, (-5059), byteArray0, byteOrder1, (byte)13);
      tiffField0.dump();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-5059), tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(13, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 255L, byteArray0, byteOrder0, 21);
      tiffField0.getDoubleArrayValue();
      tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[49];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "");
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeFloat0.SSHORT, (byte)13, (-5059), byteArray0, byteOrder0, (byte)13);
      tiffField0.getIntArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-5059), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[68];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(33446, 33446, fieldTypeLong0.UNDEFINED, 33446, 33446, byteArray0, byteOrder0, 52);
      tiffField0.dump();
      assertEquals(33446, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(33446, tiffField0.getTag());
      assertEquals(33446, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[62];
      TiffField tiffField0 = new TiffField((-1423), 43, fieldTypeAscii0, 33451, 43, byteArray0, byteOrder0, 33451);
      tiffField0.dump();
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(33451, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals((-1423), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[160];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(61, 61, fieldTypeShort0, 61, 61, byteArray0, byteOrder0, 61);
      tiffField0.dump();
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(61, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[208];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeLong0, 284, 40965, byteArray0, byteOrder0, 1863);
      tiffField0.dump();
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(1863, tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeFloat0, 273, 20, byteArray0, byteOrder0, 273);
      tiffField0.dump();
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
      assertEquals(20, tiffField0.getTag());
      assertEquals(20, tiffField0.getDirectoryType());
  }
}
