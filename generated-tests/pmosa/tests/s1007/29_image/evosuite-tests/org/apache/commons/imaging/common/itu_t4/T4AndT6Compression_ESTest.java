/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 08:26:41 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)90, (byte)90, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)64;
      byte byte0 = (byte)1;
      byteArray0[1] = (byte)1;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)88;
      byteArray0[5] = (byte) (-113);
      byte byte2 = (byte) (-28);
      byteArray0[6] = (byte) (-28);
      byteArray0[7] = (byte)104;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 48, (byte)88, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)90, (byte)90, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.compressT4_1D(byteArray0, 0, (byte)0, true);
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 0, 0, true);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte) (-14);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)38;
      T4AndT6Compression.compressT4_2D(byteArray0, 141, (byte) (-14), false, (byte)0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-14);
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (-2475), 717);
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)0;
      T4AndT6Compression.compressT4_1D(byteArray3, (byte)63, (byte)0, false);
      byte[] byteArray4 = T4AndT6Compression.compressT4_2D(byteArray2, (byte)0, 8, false, (-4761));
      byte[] byteArray5 = T4AndT6Compression.decompressT6(byteArray4, 0, 1120);
      assertFalse(byteArray5.equals((Object)byteArray2));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 63, 63, false, 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray0, 0, 2, false, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)25, (byte) (-88), (byte)0, (byte) (-128), (byte)4}, byteArray2);
      
      byte[] byteArray3 = T4AndT6Compression.compressT4_1D(byteArray1, (-4), 0, false);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressT6(byteArray0, 0, 2);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 1235, 6, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, true);
      T4AndT6Compression.compressT4_2D(byteArray1, 1, 1, false, 12);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 12, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-408);
      boolean boolean0 = false;
      T4AndT6Compression.decompressT4_1D(byteArray0, 1794, (-408), false);
      byte[] byteArray1 = new byte[3];
      byte byte0 = (byte)8;
      byteArray1[0] = (byte)8;
      byte byte1 = (byte)0;
      byteArray1[1] = (byte)0;
      byte byte2 = (byte)117;
      byteArray1[2] = (byte)117;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 1794, 3510);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)60;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte)34;
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, (byte)60, true);
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray1, 0, (byte)34);
      try { 
        T4AndT6Compression.compressT4_1D(byteArray2, (byte)34, (byte)34, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte)28, (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      T4AndT6Compression.compressT4_2D(byteArray0, 1812, 0, false, 2449);
      int int0 = 1066;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, 1066, (byte)0, false);
      T4AndT6Compression.decompressT6(byteArray1, 0, (-152));
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (-73), (byte) (-64), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte) (-96);
      byteArray0[3] = (byte) (-96);
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)0, 1901);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-96);
      byteArray1[2] = (byte)17;
      byteArray1[3] = (byte)17;
      T4AndT6Compression.decompressT6(byteArray1, 1901, (-2));
      byte[] byteArray2 = null;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6((byte[]) null, (byte) (-96), 1145);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.compressT6(byteArray0, 36, (-3));
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-3), 4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)109;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 448, (byte)109);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)1;
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)38, (byte)1, false, (byte) (-71));
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)38, 1517);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 38
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)63;
      byteArray0[0] = (byte)63;
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)63, 0);
      int int1 = 0;
      T4AndT6Compression.compressT6(byteArray1, (byte)63, 0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)63, 1792, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)17;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)17, (byte)17);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-51);
      int int0 = 0;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-51), 0, true);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 0, 4, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-39);
      byte byte0 = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      int int0 = 31;
      int int1 = 823;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 31, 823);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)11;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)11, (byte)93);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 0, (-2));
      assertArrayEquals(new byte[] {}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byte byte0 = (byte)4;
      byteArray0[9] = (byte)4;
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 3756, (-2484));
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)4;
      try { 
        T4AndT6Compression.decompressT6(byteArray1, (byte)4, (byte)4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-51);
      byteArray0[0] = (byte) (-51);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 41, 224);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-51);
      byteArray0[0] = (byte) (-51);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-51), 0, true);
      byte byte1 = (byte)1;
      boolean boolean0 = false;
      T4AndT6Compression.compressT4_2D(byteArray0, 1792, (byte) (-51), false, 8);
      int int0 = 47;
      try { 
        T4AndT6Compression.decompressT6(byteArray1, (byte)1, 47);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, (byte)47, true);
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)47, 2944);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 1);
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 2020, 0);
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = 36;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 36, (-3));
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-3), 1, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      int int0 = 1;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)13;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)2, (byte)2, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-51);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, 121, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 298, 189, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 298
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressT4_1D(byteArray0, 1, (-1145), true);
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1, (-1145));
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 1, 1, true, 1878);
      assertArrayEquals(new byte[] {(byte)0, (byte)1, (byte) (-114), (byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)93;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 0, (byte)93, true, (byte)93);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 0, 1277, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 0);
      T4AndT6Compression.decompressT4_2D(byteArray0, 0, 0, false);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 2, 2, false, 2);
      assertArrayEquals(new byte[] {(byte)0, (byte)27, (byte) (-128), (byte)10, (byte)0, (byte)32}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      T4AndT6Compression.compressT6(byteArray0, 2, 2);
      int int0 = 88;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 2, 40, true, 1952);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)25;
      byte byte0 = (byte)8;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte)23;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 1, (byte)8);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-67);
      byteArray0[0] = (byte) (-67);
      byte byte1 = (byte)19;
      byteArray0[1] = (byte)19;
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1604), (-1604));
      int int0 = 4;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 4, 4, true, (-1604));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 8, 8, false, 8);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 8, 2589, true, 877);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-6);
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte) (-64);
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)4, 339);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte)27;
      byteArray0[7] = (byte)14;
      byteArray0[8] = (byte)20;
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte) (-72), (byte) (-15));
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-15);
      byteArray1[1] = (byte)20;
      byteArray1[2] = (byte)20;
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte)3, (byte)14);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)3;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)12, (byte)3, false, (byte)0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte) (-17);
      byte byte0 = (byte) (-26);
      byteArray0[2] = (byte) (-26);
      byte byte1 = (byte)63;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)13;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)13, (byte)13, true, (-1588));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-3);
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)9;
      byte byte1 = (byte)64;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)13;
      int int0 = 14;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 14, 1792);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-58);
      byte byte1 = (byte)53;
      byteArray0[3] = (byte)53;
      byte byte2 = (byte) (-75);
      byteArray0[4] = (byte) (-75);
      byte byte3 = (byte)53;
      byteArray0[5] = (byte)53;
      byte byte4 = (byte)40;
      byteArray0[6] = (byte)40;
      byteArray0[7] = (byte)25;
      int int0 = 3;
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 3, (-2));
      int int1 = 1872;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 1872, 33, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 29, 13, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)0;
      byte byte0 = (byte)22;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)78;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)8;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)8, 40, false, (byte)21);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      int int0 = 4;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 4, 4, false);
      int int1 = 298;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 189, 22, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte byte0 = (byte)52;
      byte byte1 = (byte) (-26);
      byte byte2 = (byte)120;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)13;
      byte byte3 = (byte)13;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)52;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)52;
      byteArray0[8] = (byte)52;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)13, (byte)52, true, (byte)52);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 64, 41, false, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 90, 90, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)45;
      int int0 = 3;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 3, 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte) (-59);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1), 26);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 512, (byte)64, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)12;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, (byte)12, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)16;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)16, (byte)2, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte) (-59);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1), 26);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 512, (byte)64, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 512
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)13;
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)13, (byte)3);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 595, (byte)3, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)3, (byte)3, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      byteArray0[3] = (byte)13;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)13, (byte)13, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.4 control code 0000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)7;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)2, (byte)7, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      boolean boolean0 = true;
      int int0 = 1;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)3;
      byteArray0[1] = (byte)3;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)0, 1, true);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 539, (byte)3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 157, (byte)123);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)6;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 908, 327, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)57;
      byteArray0[3] = (byte)21;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)21;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, 2238, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)10;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)2, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
