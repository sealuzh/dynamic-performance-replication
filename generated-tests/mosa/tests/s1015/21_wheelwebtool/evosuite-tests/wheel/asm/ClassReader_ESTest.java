/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:22:10 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Frame;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("(T.'DYq7)Yj'fXp-v");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      ClassReader classReader1 = new ClassReader("java/lang/Throwable");
      classReader1.accept((ClassVisitor) classWriter0, 2);
      classReader0.getInterfaces();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 1);
      assertEquals(416, classReader1.header);
      
      short short0 = classReader0.readShort(1709);
      assertEquals(3025, classReader0.header);
      assertEquals((short)256, short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 1705, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 68677
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(8);
      Label label0 = new Label();
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      assertNotNull(methodWriter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.getInterfaces();
      classReader0.accept((ClassVisitor) classAdapter0, 1);
      classReader0.getSuperName();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute attribute0 = new Attribute("wheel.asm.Frame");
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.accept((ClassVisitor) classWriter0, 284);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.getClassName();
      classReader0.readShort(2097);
      classReader0.getInterfaces();
      classReader0.getInterfaces();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.accept((ClassVisitor) classWriter0, 821);
      classReader0.accept((ClassVisitor) classWriter0, 4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ClassReader classReader1 = new ClassReader(classReader0.b, 8, 2);
      // Undeclared exception!
      try { 
        classReader1.getItem(821);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 821
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      classReader0.getSuperName();
      int int0 = 294;
      Label[] labelArray0 = new Label[7];
      // Undeclared exception!
      try { 
        classReader0.readLabel(294, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 294
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      Label label0 = new Label();
      classReader0.getSuperName();
      classReader0.readByte(1348);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute attribute0 = new Attribute("wheel.asm.Frame");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      classReader1.accept((ClassVisitor) classWriter0, 912);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[2];
      Attribute[] attributeArray0 = new Attribute[6];
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, (-1574));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(4096);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 22);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.firstMethod;
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Label label0 = new Label();
      char[] charArray0 = new char[6];
      charArray0[0] = '/';
      charArray0[2] = 'i';
      charArray0[3] = 'F';
      charArray0[4] = 'v';
      charArray0[5] = 'F';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(3794, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      Label label0 = new Label();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 76);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classAdapter0, attributeArray0, 1630);
      char[] charArray0 = new char[5];
      charArray0[0] = 'U';
      charArray0[1] = '.';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = 'y';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(76, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.readShort(2);
      classReader0.getSuperName();
      classReader0.getAccess();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.firstMethod = null;
      Attribute attribute0 = new Attribute("wheel.asm.Frame");
      ClassWriter classWriter1 = new ClassWriter(4);
      MethodWriter methodWriter1 = classWriter1.firstMethod;
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      char[] charArray0 = new char[2];
      charArray0[0] = 'S';
      Attribute[] attributeArray0 = new Attribute[6];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      // Undeclared exception!
      try { 
        classReader1.readUTF8(5, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute attribute0 = new Attribute("wheel.asm.Frame");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      char[] charArray0 = new char[9];
      charArray0[0] = '!';
      charArray0[1] = ' ';
      charArray0[2] = ' ';
      charArray0[3] = ' ';
      charArray0[4] = ' ';
      charArray0[5] = ' ';
      charArray0[6] = '4';
      charArray0[7] = 'w';
      charArray0[8] = ' ';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(168, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      String string0 = null;
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = '_';
      charArray0[2] = ',';
      charArray0[3] = 'Y';
      charArray0[4] = '=';
      charArray0[5] = 'B';
      charArray0[6] = 'a';
      charArray0[7] = 'M';
      charArray0[8] = 'o';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(91, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      classReader0.readLong(2396);
      classReader0.readByte(59);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute attribute0 = new Attribute("java/lang/Throwable");
      ClassReader classReader1 = new ClassReader("java/lang/Throwable");
      classReader1.accept((ClassVisitor) classWriter0, 284);
      classReader0.getInterfaces();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      Attribute attribute0 = new Attribute("wheel.asm.Frame");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      ClassReader classReader1 = new ClassReader("wheel.asm.Frame");
      classReader1.getInterfaces();
      char[] charArray0 = new char[7];
      charArray0[0] = 't';
      charArray0[1] = '~';
      charArray0[2] = 't';
      charArray0[3] = 'U';
      charArray0[4] = 'w';
      charArray0[5] = '<';
      charArray0[6] = '\u0012';
      // Undeclared exception!
      try { 
        classReader0.readConst(108, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.readShort(1);
      String string0 = classWriter0.thisName;
      classReader0.accept((ClassVisitor) classWriter0, (-13));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Frame");
      // Undeclared exception!
      try { 
        classReader0.readUTF8(3789, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
