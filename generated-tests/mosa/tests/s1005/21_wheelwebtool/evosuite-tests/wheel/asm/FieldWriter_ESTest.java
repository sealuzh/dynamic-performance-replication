/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:30:38 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(310);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 310, "Gt4gs|L", "Gt4gs|L", "Gt4gs|L", "Gt4gs|L");
      Attribute attribute0 = new Attribute((String) null);
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "", "Er2", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1603), "", "nQ?:\"'VH3", "", "Synthetic");
      FieldWriter fieldWriter1 = fieldWriter0.next;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.getSize();
      fieldWriter0.visitEnd();
      FieldWriter fieldWriter3 = classWriter0.lastField;
      AnnotationVisitor annotationVisitor0 = fieldWriter3.visitAnnotation("nQ?:\"'VH3", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(473);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "MU'?EI1japoy-lR5,", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Synthetic", "");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[5];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)0, (byte)27);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1580), "nQb:\"JMH3", "nQb:\"JMH3", "nQb:\"JMH3", "nQb:\"JMH3");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      System.setCurrentTimeMillis(0L);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("nQb:\"JMH3", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      classWriter0.thisName = "n?:\"'VH3";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Synthetic", "");
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitAnnotation("", true);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      FieldWriter fieldWriter1 = fieldWriter0.next;
      int int1 = fieldWriter0.getSize();
      assertEquals(40, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1603), "", "nQ?:\"'VH3", "", "Synthetic");
      fieldWriter0.visitAnnotation("X", false);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("Synthetic", false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putInt((-4064));
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      classWriter0.thisName = "nQ?:\"'VH3";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Synthetic", "");
      Attribute attribute0 = new Attribute("");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      MockHijrahDate.now();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong((-1170L));
      ByteVector byteVector2 = byteVector1.putUTF8("Synthetic");
      ByteVector byteVector3 = byteVector2.put11((-783), (-783));
      byteVector3.put11(1, 1523);
      ByteVector byteVector4 = byteVector1.putUTF8("");
      fieldWriter0.put(byteVector4);
      fieldWriter0.getSize();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      FieldWriter fieldWriter1 = fieldWriter0.next;
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.visitAttribute(attribute0);
      System.setCurrentTimeMillis((byte)0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "", "", (String) null, (Object) null);
      fieldWriter0.visitEnd();
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute((String) null);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      classWriter0.thisName = null;
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 9, "=of~xigN", "", (String) null, (Object) null);
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute((String) null);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      FieldWriter fieldWriter2 = fieldWriter1.next;
      ByteVector byteVector0 = new ByteVector(131070);
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.apache.commons.io.filefilter.CanWriteFileFilter";
      stringArray0[1] = "nQ?:\"'VH3";
      classWriter0.visit(1523, (-628), "nQ?:\"'VH3", " ?|08{?B;e9=3iq0]", "org.apache.commons.io.filefilter.CanWriteFileFilter", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1603), "", "nQ?:\"'VH3", "", "Synthetic");
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.visitEnd();
      fieldWriter0.visitAnnotation("Synthetic", false);
      Attribute attribute0 = new Attribute("boolean");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1523);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1603), "", "nQ?:\"'VH3", "", "Synthetic");
      classWriter0.toByteArray();
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      Attribute attribute0 = new Attribute("Ko%pJ2I");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
