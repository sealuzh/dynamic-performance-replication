/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:08:04 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.Reader;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
import org.apache.derby.iapi.store.access.TransactionController;
import org.apache.derby.iapi.types.TypeId;
import org.databene.commons.ErrorHandler;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.jdbc.FBBlob;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.h2.Driver;
import org.h2.engine.SessionRemote;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.hsqldb.lib.FileUtil;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.ds.PGPooledConnection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      Recover recover0 = new Recover();
      // Undeclared exception!
      try { 
        DBUtil.connect("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBUtil.existsEnvironment("[}/?(%");
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection((HsqlProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.escape("42Y56");
      Driver.load();
      FileUtil.getDefaultInstance();
      FileUtil.delete("|L;z{M_e");
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      ErrorHandler errorHandler0 = new ErrorHandler("");
      assertTrue(errorHandler0.isLoggingStackTrace());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = true;
      String string0 = "";
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.available("", "", "", "");
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Driver driver0 = new Driver();
      String string0 = "(pip/P@dO";
      Properties properties0 = new Properties();
      driver0.connect("(pip/P@dO", properties0);
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DBUtil.getOpenStatementCount();
      ErrorHandler errorHandler0 = new ErrorHandler("JQNFUR`d");
      ErrorHandler errorHandler1 = new ErrorHandler("@!6");
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("y:bp@b)VNX}", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.decodeTime((byte[]) null);
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVAR1.deepCopy();
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      XSQLVAR xSQLVAR2 = new XSQLVAR();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      DBUtil.assertAllDbResourcesClosed(false);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("ry@5Rc_g", (String) null, (String) null, (String) null, "%3<G)\"I6Z9>5;)", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      String string0 = null;
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      Class<FBPreparedStatement> class0 = FBPreparedStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) jdbcConnection0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.getOpenPreparedStatementCount();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "8!v&{.");
      try { 
        DBUtil.getMetaData("", true, false, false, true, "", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", "d<|%EI.QaL,}E", "", "E>Oe#`5Xw", "E>Oe#`5Xw");
      try { 
        DBUtil.getMetaData((Connection) null, "4^whogY{t<:S%vygWfT", "E>Oe#`5Xw", false, false, false, true, "d<|%EI.QaL,}E", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.close((Connection) null);
      String string0 = "%4o6D:$?zTd]";
      Class<JdbcConnection> class0 = JdbcConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("%4o6D:$?zTd]", "pG", '&', (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: %4o6D:$?zTd]
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      DBUtil.checkReadOnly("", false);
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.query("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = TypeId.XML_NAME;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("XML");
      defaultDBTable0.getPrimaryKeyConstraint();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "XML", true, stringArray0);
      dBPrimaryKeyConstraint0.addColumnName("XML");
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, dBPrimaryKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      String string0 = "%4o6D:$?zTd]";
      TableContainer tableContainer0 = new TableContainer("%4o6D:$?zTd]");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "%4o6D:$?zTd]", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: %4o6D:$?zTd]
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultSet resultSet0 = null;
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = TransactionController.ISOLATION_READ_COMMITTED;
      TableContainer tableContainer0 = new TableContainer("");
      DBUtil.dependencyOrderedTables(tableContainer0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("h", "' found", "L9", "S$&,W5QF");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting ' found failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME;
      Driver.load();
      String string1 = "ctiZsFYAJTZ\")7g.";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "Error in executing SQL: ", "Error in executing SQL: ", "Error in executing SQL: ", "SYSIBM", "ctiZsFYAJTZ\")7g.");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Connection connection0 = null;
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("X", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getTables();
      DBUtil.dependencyOrderedTables(tableContainer0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      CompositeDBObject<DBPrimaryKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBPrimaryKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E>Oe#`5Xw";
      stringArray0[1] = "";
      stringArray0[2] = "write to page ";
      stringArray0[3] = "write to page ";
      stringArray0[4] = "";
      stringArray0[5] = "d<|%EI.QaL,}E";
      stringArray0[6] = "";
      stringArray0[7] = "d<|%EI.QaL,}E";
      stringArray0[8] = "write to page ";
      DBUtil.assertAllDbResourcesClosed(false);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "", (String) null, "d<|%EI.QaL,}E", "d<|%EI.QaL,}E", "");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
