/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:24:27 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1223);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1994, "e(w1Fd", "", "", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "b", "b", "b", "b");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.put12((-2689), (-2272));
      byteVector2.putShort(4096);
      ByteVector byteVector3 = byteVector2.put11((-2689), (-2272));
      fieldWriter0.visitAnnotation(".je_?*V2Z", false);
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "+Ij", "", "");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("Invalid IOCase name: ", true);
      Attribute attribute0 = new Attribute("+Ij");
      Attribute attribute1 = attribute0.next;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("q*#09Hbw|,c)");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2689), "3E", "]~=", "3E", "]~=");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      ByteVector byteVector2 = byteVector0.putByte(1);
      byteVector1.put12(1, 4);
      byteVector0.putShort(1);
      ByteVector byteVector3 = byteVector2.put11(4, 4);
      fieldWriter0.visitAnnotation("s)5$j0Arnj", true);
      fieldWriter0.put(byteVector3);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2722));
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.put12((-2722), (-2272));
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-2272), "byte", "", "", "");
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("Q9 i");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "]~=", "", "]~=");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = byteVector1.put12((-2689), (-2272));
      byteVector2.putShort(634);
      byteVector2.put11((-2689), (-2272));
      fieldWriter0.visitAnnotation("2uPa:XLfJ", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2722));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-17), "", "rh", "", "rh");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.put12((-2722), (-2272));
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      classWriter0.visitField((-2272), "byte", "", "wuQX%v]v&;7Pep^}", "rh");
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2722));
      int int0 = (-17);
      String string0 = "";
      String string1 = "rh";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-17), "", "rh", "", "rh");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = classWriter0.pool;
      byteVector0.put12((-2722), (-2272));
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2722));
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.version = (-3708);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-2272), "bte", "", "", "");
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("Q9 i");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldVisitor0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2689));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "]~=", "", "]~=");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.put11((-1386), (-1270));
      byteVector1.putByte((-1668));
      byteVector2.put12(5, (-2689));
      classWriter0.visitField((-1668), "Synthetic", "wuQX%v]v&;7Pep^}", (String) null, (Object) null);
      classWriter0.toByteArray();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }
}
