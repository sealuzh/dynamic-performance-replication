/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 12:15:12 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2732, "+Wu-M6Y`Z2G!E!XZr");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[4] = (byte)101;
      TiffField tiffField0 = new TiffField(2139440638, (-2728), fieldTypeRational0, 2732, (-838L), byteArray0, byteOrder0, (-2728));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2728), tiffField0.getDirectoryType());
      assertEquals((-2728), tiffField0.getSortHint());
      assertEquals(21856, tiffField0.getBytesLength());
      assertEquals(1, int0);
      assertEquals(2139440638, tiffField0.getTag());
      assertEquals((-838), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2732, "+Wu-M6Y`Z2G!E!XZr");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)101;
      TiffField tiffField0 = new TiffField(2139440638, (-2728), fieldTypeRational0, 2732, (-838L), byteArray0, byteOrder0, (-2728));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2139440638, tiffField0.getTag());
      assertEquals((-838), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(21856, tiffField0.getBytesLength());
      assertEquals((-2728), tiffField0.getSortHint());
      assertEquals((-2728), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2139440638, 2139440638, fieldTypeAscii0, 4L, 0L, (byte[]) null, byteOrder0, 2139440638);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2139440638, tiffField0.getSortHint());
      assertEquals(2139440638, tiffField0.getTag());
      assertEquals(2139440638, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-2222), fieldTypeFloat0, (-2222), (-113L), byteArray0, byteOrder0, 28);
      String string0 = tiffField0.getValueDescription();
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals((-2222), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals((-113), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)62, (byte)62, fieldTypeByte0.SSHORT, (byte)62, (byte)62, byteArray0, byteOrder0, (byte)62);
      tiffField0.dump();
      assertEquals(124, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getTag());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-155), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2146589235, fieldTypeFloat0, (byte)0, 419L, byteArray0, byteOrder0, (-1886));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1886), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2146589235, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(419, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3275, (byte)0, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, 1567);
      tiffField0.getValue();
      assertEquals(1567, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3275, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-2222), fieldTypeFloat0, (-2222), (-113L), byteArray0, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-113), tiffField0.getOffset());
      assertEquals((-2222), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "rL'1$/Jc{$gNtRM");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeByte0, 1, 40965, byteArray0, byteOrder0, 34152);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(40965, tagInfo0.tag);
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tiffField0.getOffset());
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(34152, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4150, 4150, (FieldType) null, 4L, 4150, byteArray0, byteOrder0, 505);
      int int0 = tiffField0.getTag();
      assertEquals(505, tiffField0.getSortHint());
      assertEquals(4150, tiffField0.getDirectoryType());
      assertEquals(4150, int0);
      assertEquals(4150, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-2764), 3233, fieldTypeLong0.SSHORT, 1704, 3073L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2764), int0);
      assertEquals(3233, tiffField0.getDirectoryType());
      assertEquals(3073, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2125114026, "o1xUC=Q,o]/");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)54;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)75;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 2747L, 947L, byteArray0, (ByteOrder) null, (-2573));
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(947, tiffField0.getOffset());
      assertEquals(2747, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals((-2573), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2615, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2615, 2615, fieldTypeShort0, 2615, 1904L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1904, tiffField0.getOffset());
      assertEquals(2615, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(2615, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2147348492, "un.j6XF6$(");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41995, (-2806), fieldTypeDouble0, 41995, 1L, byteArray0, byteOrder0, (byte) (-127));
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-127), int0);
      assertEquals((-2806), tiffField0.getDirectoryType());
      assertEquals(41995, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 2921, fieldTypeAscii0.RATIONAL, (-19424L), 0, byteArray0, byteOrder0, 973);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(2921, tiffField0.getDirectoryType());
      assertEquals(973, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40092, "($");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeDouble0, 40092, (-56L), byteArray0, byteOrder0, 40092);
      int int0 = tiffField0.getOffset();
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(40092, tiffField0.getSortHint());
      assertEquals((-56), int0);
      assertEquals(40092, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-101);
      TiffField tiffField0 = new TiffField((-2144966081), (-3367), fieldTypeLong0.SSHORT, 3171L, (-4032L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6342, tiffField0.getBytesLength());
      assertEquals((-2144966081), tiffField0.getTag());
      assertEquals((-4032), tiffField0.getOffset());
      assertEquals(155, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3367), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "rL'1$/Jc{$gNtRM");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeByte0, 1, 40965, byteArray0, byteOrder0, 34152);
      tiffField0.getIntValueOrArraySum();
      assertEquals(40965, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(34152, tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50723, 50723, fieldTypeAscii0.LONG, 1L, 904L, byteArray0, byteOrder0, 50723);
      tiffField0.getIntValue();
      assertEquals(904, tiffField0.getOffset());
      assertEquals(50723, tiffField0.getDirectoryType());
      assertEquals(50723, tiffField0.getTag());
      assertEquals(50723, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)101;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)101, (-1), fieldTypeByte0, 1L, 5528L, byteArray0, byteOrder0, (byte)101);
      tiffField0.getIntValue();
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(5528, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "rL'1$/Jc{$gNtRM");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40965, 40965, fieldTypeByte0, 1, 40965, byteArray0, byteOrder0, 34152);
      tiffField0.getIntValue();
      assertEquals(40965, tiffField0.getDirectoryType());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(34152, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(246, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 246, (-1267L), byteArray0, (ByteOrder) null, (byte) (-123));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1267), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-123), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-175), "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-26), (byte) (-26), fieldTypeFloat0, (-175), (-1334L), byteArray0, byteOrder0, (byte) (-26));
      tiffField0.getFieldTypeName();
      assertEquals((-26), tiffField0.getDirectoryType());
      assertEquals((-1334), tiffField0.getOffset());
      assertEquals((-26), tiffField0.getTag());
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(10, 10, (FieldType) null, (-2147483648L), 376L, byteArray0, byteOrder0, (byte)49);
      tiffField0.getFieldType();
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(376, tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, "LensSerialNumber");
      TiffField tiffField0 = new TiffField(0, (byte)38, fieldTypeByte0, 1915L, (-2792L), byteArray0, byteOrder0, (-3000));
      tiffField0.getFieldType();
      assertEquals((-3000), tiffField0.getSortHint());
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2792), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-353), (String) null);
      TiffField tiffField0 = new TiffField(1, 590, fieldTypeByte0, 590, 0L, byteArray0, byteOrder0, 19);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(590, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(25, "y7.n2;");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeFloat0, 1L, 6, byteArray0, byteOrder0, 6);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)41;
      TiffField tiffField0 = new TiffField((-1262), 1, fieldTypeByte0, 1, 2080L, byteArray0, byteOrder0, (-1262));
      tiffField0.getDoubleValue();
      assertEquals((-1262), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2080, tiffField0.getOffset());
      assertEquals((-1262), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-78);
      TiffField tiffField0 = new TiffField(1, (-2471), fieldTypeLong0, 1, (-2471), byteArray0, (ByteOrder) null, (byte) (-78));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-2471), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-2471), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeByte0.SSHORT, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      tiffField0.getDoubleArrayValue();
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(194, tiffField0.getBytesLength());
      assertEquals(97L, tiffField0.getCount());
      assertEquals(97, tiffField0.getTag());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, (-1L), 1, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-155), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(2147409012, (-1553), fieldTypeFloat0, 101L, (-2813L), byteArray0, byteOrder0, 2147409012);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1553), int0);
      assertEquals(2147409012, tiffField0.getTag());
      assertEquals(2147409012, tiffField0.getSortHint());
      assertEquals((-2813), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3597, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(270, 1, fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(270, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2202), (-2145526050), fieldTypeAscii0, 238L, (-2145526050), byteArray0, byteOrder0, 1725);
      long long0 = tiffField0.getCount();
      assertEquals((-2202), tiffField0.getTag());
      assertEquals((-2145526050), tiffField0.getDirectoryType());
      assertEquals(238L, long0);
      assertEquals((-2145526050), tiffField0.getOffset());
      assertEquals(1725, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-155), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0.SLONG, 601L, (-2915L), byteArray0, byteOrder0, 136);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-2915), tiffField0.getOffset());
      assertEquals(2404, int0);
      assertEquals(136, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1717986917), (-1203), fieldTypeAscii0.SLONG, (-2202), (byte) (-29), byteArray0, byteOrder0, 291);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-8808), int0);
      assertEquals(291, tiffField0.getSortHint());
      assertEquals((-1203), tiffField0.getDirectoryType());
      assertEquals((-29), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1554), (-318), fieldTypeRational0, 1L, (-1554), (byte[]) null, (ByteOrder) null, (-318));
      tiffField0.getByteOrder();
      assertEquals((-318), tiffField0.getSortHint());
      assertEquals((-318), tiffField0.getDirectoryType());
      assertEquals((-1554), tiffField0.getTag());
      assertEquals((-1554), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1701, "CameraCalibration2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(532, 532, fieldTypeLong0, 532, 532, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals(532, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(532, tiffField0.getTag());
      assertEquals(532, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 3, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, (-508));
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-508), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-175), (-175), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 1);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-175), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals((-175), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("TIFF/EPStandardID");
      TiffField tiffField0 = new TiffField(25, (-1789569705), fieldTypeDouble0, (-4679L), (-4679L), byteArray0, byteOrder0, (-1420));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)10, (byte)10, (FieldType) null, (byte)10, (byte)10, byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeRational0, (byte) (-9), (byte) (-9), byteArray0, byteOrder0, (byte) (-9));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeFloat0, 1L, (byte)97, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1840), 25, (FieldType) null, 276L, 1180L, byteArray0, byteOrder0, (-1840));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeRational0, (byte)27, (byte)27, (byte[]) null, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[85];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2625), (-2625), fieldTypeAscii0.SHORT, (-2625), (-2625), byteArray0, byteOrder0, (-2625));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2676, 2676, fieldTypeLong0, 2676, 2676, (byte[]) null, byteOrder0, 2676);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-755), (byte)44, fieldTypeRational0, (-755), (-755), byteArray0, byteOrder0, (-755));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (-1280));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)68, (byte)68, (FieldType) null, (byte)68, (byte)68, byteArray0, byteOrder0, (byte)68);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-21), (byte) (-21), fieldTypeByte0.SSHORT, (byte) (-21), (byte) (-21), byteArray0, byteOrder0, (byte) (-21));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (byte)97, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)87, (byte)87, fieldTypeShort0, (byte)87, 156L, (byte[]) null, byteOrder0, (byte)87);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, 4016L, (byte[]) null, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeByte0.SSHORT, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (-168), fieldTypeRational0, (-168), (-168), byteArray0, byteOrder0, 16);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)53, (byte)53, fieldTypeShort0, (byte)53, (byte)53, (byte[]) null, byteOrder0, (byte)53);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-73), (byte) (-73), fieldTypeRational0, (byte) (-73), (byte) (-73), byteArray0, byteOrder0, (byte) (-73));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeRational0, 1L, (byte)125, byteArray0, byteOrder0, (byte)125);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(7, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, (FieldType) null, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-4), (byte) (-4), fieldTypeRational0, (byte) (-4), (byte) (-4), byteArray0, byteOrder0, (byte) (-4));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)85, (byte)85, (FieldType) null, (byte)85, (byte)85, byteArray0, byteOrder0, (byte)85);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)27, (-1), fieldTypeFloat0, (byte)27, (byte)27, byteArray0, byteOrder0, 494);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeAscii0, (byte)65, (byte)65, (byte[]) null, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-17), (byte) (-17), fieldTypeRational0, (byte) (-17), (byte) (-17), byteArray0, byteOrder0, (byte) (-17));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)54, (byte)54, fieldTypeAscii0, (byte)54, (byte)54, (byte[]) null, byteOrder0, (byte)54);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-11), (byte) (-11), fieldTypeRational0, (byte) (-11), (byte) (-11), byteArray0, byteOrder0, (byte) (-11));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)37, (byte)37, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)37);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (byte)50);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("gA^YQ1v", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(51, 1, fieldTypeShort0.FLOAT, 1L, 1L, byteArray0, byteOrder0, 1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)15, (-1267), fieldTypeShort0, (-1267), (-1267), byteArray0, byteOrder0, (byte)15);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-25), 2312, fieldTypeRational0, 1L, 2312, byteArray0, (ByteOrder) null, 34);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(byteArrayOutputStream0, charsetEncoder0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1556, (-4137), fieldTypeByte0, (-4137), 1556, byteArray0, byteOrder0, 494);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(42, (-1646), fieldTypeShort0, 1L, 42, byteArray0, byteOrder0, 42);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("gA^YQ1v", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50L, tiffField0.getCount());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3597, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(270, 1, fieldTypeDouble0, (byte)0, 1L, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(270, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeByte0.SSHORT, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(97, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getTag());
      assertEquals(97, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 273, (FieldType) null, 65535, 65535, (byte[]) null, byteOrder0, 273);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 590, fieldTypeAscii0.UNDEFINED, 590, 0L, byteArray0, byteOrder0, 19);
      tiffField0.getFieldType();
      assertEquals(590, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3275, (byte)0, fieldTypeAscii0, 1L, 1L, byteArray0, byteOrder0, 1567);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3275, tiffField0.getTag());
      assertEquals(1567, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeShort0, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1163), 4, fieldTypeByte0, (-1163), 4218L, byteArray0, byteOrder0, (-1163));
      int int0 = tiffField0.getOffset();
      assertEquals(4218, int0);
      assertEquals((-1163), tiffField0.getSortHint());
      assertEquals((-1163), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(0, (byte)50, fieldTypeRational0, 1L, (byte)50, byteArray0, byteOrder0, 29);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-2127781962), (-2127781962), fieldTypeLong0, (-741L), (-741L), byteArray0, byteOrder0, 2244);
      long long0 = tiffField0.getCount();
      assertEquals((-2127781962), tiffField0.getTag());
      assertEquals((-2127781962), tiffField0.getDirectoryType());
      assertEquals(2244, tiffField0.getSortHint());
      assertEquals((-741), tiffField0.getOffset());
      assertEquals((-741L), long0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 2479L, byteArray0, byteOrder0, (byte)81);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2479, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("97 (0x61: Unknown Tag): ", string0);
      assertEquals(97, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0.SSHORT, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(494, 494, fieldTypeAscii0.DOUBLE, 494, 494, byteArray0, byteOrder0, 494);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@52d5ff08 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)50, (byte)50, fieldTypeRational0, (byte)50, (byte)50, byteArray0, byteOrder0, (byte)50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(939, 939, fieldTypeAscii0.SLONG, 939, 939, byteArray0, byteOrder0, 939);
      tiffField0.getIntValueOrArraySum();
      assertEquals(939, tiffField0.getSortHint());
      assertEquals(3756, tiffField0.getBytesLength());
      assertEquals(939, tiffField0.getTag());
      assertEquals(939, tiffField0.getOffset());
      assertEquals(939L, tiffField0.getCount());
      assertEquals(939, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4fb173c2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeFloat0, 86, 86, byteArray0, byteOrder0, 86);
      tiffField0.getDoubleArrayValue();
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(344, tiffField0.getBytesLength());
      assertEquals(86L, tiffField0.getCount());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(494, 494, fieldTypeAscii0.DOUBLE, 494, 494, byteArray0, byteOrder0, 494);
      tiffField0.getDoubleArrayValue();
      assertEquals(494, tiffField0.getDirectoryType());
      assertEquals(3952, tiffField0.getBytesLength());
      assertEquals(494L, tiffField0.getCount());
      assertEquals(494, tiffField0.getOffset());
      assertEquals(494, tiffField0.getTag());
      assertEquals(494, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0.SSHORT, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      tiffField0.getDoubleArrayValue();
      assertEquals(65, tiffField0.getTag());
      assertEquals(130, tiffField0.getBytesLength());
      assertEquals(65L, tiffField0.getCount());
      assertEquals(65, tiffField0.getSortHint());
      assertEquals(65, tiffField0.getOffset());
      assertEquals(65, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeRational0, 25, 25, byteArray0, byteOrder0, 25);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(25L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(939, 939, fieldTypeAscii0.SLONG, 939, 939, byteArray0, byteOrder0, 939);
      tiffField0.getDoubleArrayValue();
      assertEquals(939, tiffField0.getOffset());
      assertEquals(939, tiffField0.getDirectoryType());
      assertEquals(939, tiffField0.getSortHint());
      assertEquals(3756, tiffField0.getBytesLength());
      assertEquals(939, tiffField0.getTag());
      assertEquals(939L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5ae94b4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0.SSHORT, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(65, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(65, tiffField0.getDirectoryType());
      assertEquals(65, tiffField0.getTag());
      assertEquals(130, tiffField0.getBytesLength());
      assertEquals(65L, tiffField0.getCount());
      assertEquals(65, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      tiffField0.getIntArrayValue();
      assertEquals(97L, tiffField0.getCount());
      assertEquals(776, tiffField0.getBytesLength());
      assertEquals(97, tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getTag());
      assertEquals(97, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(939, 939, fieldTypeAscii0.SLONG, 939, 939, byteArray0, byteOrder0, 939);
      tiffField0.getIntArrayValue();
      assertEquals(939, tiffField0.getSortHint());
      assertEquals(939, tiffField0.getTag());
      assertEquals(939, tiffField0.getOffset());
      assertEquals(3756, tiffField0.getBytesLength());
      assertEquals(939, tiffField0.getDirectoryType());
      assertEquals(939L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)65, fieldTypeByte0.SSHORT, (byte)65, (byte)65, byteArray0, byteOrder0, (byte)65);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@660c095e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-622), (-622), fieldTypeAscii0, 0L, (-622), byteArray0, byteOrder0, (-622));
      String string0 = tiffField0.getStringValue();
      assertEquals((-622), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-622), tiffField0.getDirectoryType());
      assertEquals((-622), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-622), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      String string0 = tiffField0.getTagName();
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x61)", string0);
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeAscii0.DOUBLE, 326, 326, byteArray0, byteOrder0, 326);
      String string0 = tiffField0.getTagName();
      assertEquals(326, tiffField0.getOffset());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals(326, tiffField0.getTag());
      assertEquals("BadFaxLines", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)82, (byte)82, fieldTypeRational0, (byte)82, (byte)82, byteArray0, byteOrder0, (byte)82);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "X/r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeFloat0, 81, 81, byteArray0, byteOrder0, (-2205));
      String string0 = tiffField0.getValueDescription();
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-2205), tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52)", string0);
      assertEquals(81, tiffField0.getOffset());
      assertEquals(81L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[207];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1399, 39, fieldTypeByte0, 400L, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.getValueDescription();
      assertEquals(400L, tiffField0.getCount());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(39, tiffField0.getOffset());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(1399, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(932, 932, fieldTypeByte0, 932, 932, byteArray0, byteOrder0, 932);
      String string0 = tiffField0.getValueDescription();
      assertEquals(932L, tiffField0.getCount());
      assertEquals(932, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(932, tiffField0.getDirectoryType());
      assertEquals(932, tiffField0.getSortHint());
      assertEquals(932, tiffField0.getBytesLength());
      assertEquals(932, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(494, 494, fieldTypeAscii0.DOUBLE, 494, 494, byteArray0, byteOrder0, 494);
      String string0 = tiffField0.toString();
      assertEquals(494, tiffField0.getOffset());
      assertEquals(494, tiffField0.getSortHint());
      assertEquals("494 (0x1ee: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (494 Double)", string0);
      assertEquals(494, tiffField0.getDirectoryType());
      assertEquals(3952, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[422];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(183, 183, fieldTypeAscii0.DOUBLE, 183, 183, byteArray0, byteOrder0, 183);
      String string0 = tiffField0.getValueDescription();
      assertEquals(183, tiffField0.getOffset());
      assertEquals(183, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52)", string0);
      assertNotNull(string0);
      assertEquals(183, tiffField0.getDirectoryType());
      assertEquals(183, tiffField0.getSortHint());
      assertEquals(183L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2945, 2945, fieldTypeLong0, 2945, 2945, byteArray0, byteOrder0, 2945);
      String string0 = tiffField0.getValueDescription();
      assertEquals(11780, tiffField0.getBytesLength());
      assertEquals(2945, tiffField0.getOffset());
      assertEquals(2945, tiffField0.getSortHint());
      assertEquals(2945, tiffField0.getTag());
      assertEquals(2945, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2945L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(939, 939, fieldTypeAscii0.SLONG, 939, 939, byteArray0, byteOrder0, 939);
      String string0 = tiffField0.toString();
      assertEquals(939, tiffField0.getDirectoryType());
      assertEquals(3756, tiffField0.getBytesLength());
      assertEquals(939, tiffField0.getOffset());
      assertEquals(939, tiffField0.getSortHint());
      assertEquals("939 (0x3ab: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (939 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-816), "SpectralSensitivi<ty");
      TiffField tiffField0 = new TiffField(35, (-816), fieldTypeShort0, 4022L, 35, byteArray0, byteOrder0, 35);
      String string0 = tiffField0.getValueDescription();
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(4022L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-816), tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getTag());
      assertEquals(35, tiffField0.getOffset());
      assertEquals(8044, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeRational0, 25, 25, byteArray0, byteOrder0, 25);
      tiffField0.toString();
      assertEquals(25, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(932, 932, fieldTypeAscii0, 932, 932, byteArray0, byteOrder0, 932);
      tiffField0.toString();
      assertEquals(932L, tiffField0.getCount());
      assertEquals(932, tiffField0.getTag());
      assertEquals(932, tiffField0.getSortHint());
      assertEquals(932, tiffField0.getDirectoryType());
      assertEquals(932, tiffField0.getBytesLength());
      assertEquals(932, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 1, fieldTypeAscii0, 1, 36, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(36, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeFloat0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2202), (-2145526050), fieldTypeAscii0, 238L, (-2145526050), byteArray0, byteOrder0, 1725);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-748), (-2202));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2202), tiffField0.getTag());
      assertNull(string0);
      assertEquals(1725, tiffField0.getSortHint());
      assertEquals((-2145526050), tiffField0.getOffset());
      assertEquals((-2145526050), tiffField0.getDirectoryType());
      assertEquals(238L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)55, (byte)55, fieldTypeByte0, (byte)55, (byte)55, byteArray0, (ByteOrder) null, (byte)55);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)55, (byte)55);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[29];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(590, 590, fieldTypeShort0, 590, 590, byteArray0, byteOrder0, 590);
      tiffField0.getFieldTypeName();
      assertEquals(590, tiffField0.getSortHint());
      assertEquals(590, tiffField0.getTag());
      assertEquals(590, tiffField0.getDirectoryType());
      assertEquals(590, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1465), (-2297), fieldTypeByte0, (-1L), 1, byteArray0, byteOrder0, 1023);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1465), tiffField0.getTag());
      assertEquals((-2297), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getBytesLength());
      assertEquals(1023, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(29, "InterColorProfile");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-1393), fieldTypeLong0, 29, (-1393), (byte[]) null, byteOrder0, 34);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)85, (byte)85, (FieldType) null, (byte)85, (byte)85, byteArray0, (ByteOrder) null, (byte)85);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)97, (byte)97, fieldTypeRational0, (byte)97, (byte)97, byteArray0, byteOrder0, (byte)97);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(97L, tiffElement0.offset);
      assertEquals(97, tiffField0.getTag());
  }
}
