/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 03:16:13 GMT 2019
 */

package org.fixsuite.message;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.fixsuite.message.Library;
import org.fixsuite.message.info.DictionaryInfo;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Library library0 = new Library();
      List<DictionaryInfo> list0 = library0.getDictionaries();
      assertEquals(0, list0.size());
      
      boolean boolean0 = library0.loadFromDirectory("");
      assertFalse(boolean0);
      
      boolean boolean1 = library0.loadFromDirectory("zk7A3$");
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Library library0 = new Library();
      DictionaryInfo dictionaryInfo0 = library0.getDictionary("~\"D");
      assertNull(dictionaryInfo0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      String string0 = "";
      library0.loadFromDirectory("MsgContents.xml");
      library0.loadFromDirectory("");
      library0.loadFromDirectory("");
      library0.getDictionaries();
      String string1 = null;
      String string2 = "Unable to load dictionary from ";
      library0.loadFromDirectory("Unable to load dictionary from ");
      // Undeclared exception!
      try { 
        library0.getDictionary((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionary("");
      library0.getDictionary("");
      boolean boolean0 = library0.loadFromDirectory("[^j,i/v)H6*H");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Library library0 = new Library();
      boolean boolean0 = library0.loadFromDirectory("");
      assertFalse(boolean0);
      
      library0.getDictionaries();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Fields.xml");
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean1 = library0.loadFromDirectory("");
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      String string0 = null;
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionary("Fields.xml");
      library0.getDictionaries();
      library0.loadFromDirectory("h>(M|nut");
      library0.loadFromDirectory("h>(M|nut");
      library0.loadFromDirectory("Fields.xml");
      library0.getDictionaries();
      library0.loadFromDirectory("9`y+PPOh.}8n}T\"J{");
      library0.getDictionary("TK`iN0n-rU@Q=");
      DictionaryInfo dictionaryInfo0 = library0.getDictionary("TK`iN0n-rU@Q=");
      assertNull(dictionaryInfo0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Library library0 = new Library();
      library0.getDictionaries();
      library0.loadFromDirectory("Qm?+i/6bW'f>Px");
      library0.getDictionaries();
      library0.loadFromDirectory("Qm?+i/6bW'f>Px");
      library0.getDictionaries();
      boolean boolean0 = library0.loadFromDirectory("");
      library0.loadFromDirectory("");
      library0.getDictionaries();
      library0.getDictionaries();
      library0.loadFromDirectory("");
      library0.getDictionaries();
      library0.loadFromDirectory("Fields.xml");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Fields.xml");
      FileSystemHandling.createFolder(evoSuiteFile0);
      library0.getDictionaries();
      library0.getDictionaries();
      library0.getDictionary("FdY}0)%pv#");
      library0.getDictionaries();
      library0.getDictionaries();
      boolean boolean1 = library0.loadFromDirectory("");
      assertFalse(boolean1 == boolean0);
      
      library0.getDictionary("3");
      List<DictionaryInfo> list0 = library0.getDictionaries();
      library0.loadFromDirectory("A");
      library0.getDictionaries();
      library0.getDictionary("^uO$.A1ShnJ");
      library0.getDictionary("Loaded ");
      library0.getDictionary("Fields.xml");
      List<DictionaryInfo> list1 = library0.getDictionaries();
      assertTrue(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Library library0 = new Library();
          library0.getDictionaries();
          // Undeclared exception!
          try { 
            library0.getDictionary((String) null);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("java.util.TreeMap", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Library library0 = new Library();
      boolean boolean0 = library0.loadFromDirectory("?wAD6jlu.#c`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.loadFromDirectory((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }
}
