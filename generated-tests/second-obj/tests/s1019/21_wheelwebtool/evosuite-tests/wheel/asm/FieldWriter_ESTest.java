/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:58:47 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(1362, "java/lang/Class", "RuntimeInvisibleAnnotations", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 81, "", "", ",G%+P~;eZnTk}3U|P", ",G%+P~;eZnTk}3U|P");
      classWriter0.visitSource("V}(i:ry6Yb>n-?5+h4", "");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 81;
      fieldWriter1.put(byteVector0);
      ClassWriter classWriter1 = new ClassWriter(133);
      byteVector0.put12((-2928), 0);
      ByteVector byteVector1 = byteVector0.putUTF8("");
      ByteVector byteVector2 = byteVector1.putByteArray((byte[]) null, 1362, 81);
      fieldWriter1.put(byteVector2);
      fieldWriter0.visitAnnotation("xkx_R'%I`", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4, "!khV -SPm", "!khV -SPm", "RuntimeVisibleAnnotations", "!khV -SPm");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(1);
      ByteVector byteVector2 = byteVector1.put11(4, 7);
      fieldWriter0.put(byteVector2);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("!khV -SPm", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(172, "]^by", "Runtim=InvisibleAnnotations", "", "]^by");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      ByteVector byteVector1 = classWriter0.pool;
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector1);
      fieldWriter0.visitAnnotation("Runtim=InvisibleAnnotations", false);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "og.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "og.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.visitAnnotation("Invalid IOCase name: ", true);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("mwI10");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter2.put(byteVector0);
      classWriter0.firstField.put(byteVector0);
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      ByteVector byteVector2 = byteVector1.putShort((-61));
      byteVector2.putLong(1);
      byteVector2.putUTF8("mwI10");
      fieldWriter2.put(byteVector1);
      fieldWriter2.getSize();
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Attribute attribute0 = new Attribute("mwI10");
      classWriter0.visitField(1, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.firstField.put(byteVector0);
      ClassWriter classWriter1 = new ClassWriter((-61));
      byteVector0.put12(1, 0);
      ByteVector byteVector1 = byteVector0.putUTF8("Lb](%%9r,[&iN@`xL5F");
      classWriter0.firstField.put(byteVector1);
      int int0 = classWriter0.firstField.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Attribute attribute0 = new Attribute("mwI10");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "mwI10";
      stringArray0[1] = "RuntimeInvisibleAnnotations";
      stringArray0[2] = "org.apache.commons.io.filefilter.HiddenFileFilter";
      stringArray0[3] = "9()ur1NR6ji0Q";
      stringArray0[4] = "9()ur1NR6ji0Q";
      stringArray0[5] = "RuntimeInvisibleAnnotations";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-61), "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.firstField.put(byteVector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.firstField.visitAnnotation("mwI10", false);
      fieldWriter1.getSize();
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit(21, 2, "2UNmqtK!#5Qp,", "hf8`>tuXe", "mwI10", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "og.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "og.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("mwI10");
      FieldWriter fieldWriter1 = classWriter0.firstField;
      FieldWriter fieldWriter2 = classWriter0.lastField;
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.firstField.put(byteVector0);
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      ByteVector byteVector2 = byteVector1.putShort((-61));
      byteVector2.putLong(1);
      byteVector2.putUTF8("mwI10");
      fieldWriter2.put(byteVector1);
      fieldWriter2.getSize();
      fieldWriter1.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("mwI10");
      classWriter0.visitField(1, "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", (String) null, "org.apache.commons.io.filefilter.HiddenFileFilter");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-61), "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.firstField.put(byteVector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter1 = new ClassWriter((-61));
      fieldWriter1.getSize();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "z_m1%1Tp";
      classWriter0.visit(49, 2, "2UNmqtK!#5Qp,", "hf8`>tuXe", "mwI10", stringArray0);
      byteVector0.put12(1, 0);
      byteVector0.putLong(16);
      ByteVector byteVector1 = byteVector0.putUTF8("The size must be non-negative");
      byteVector0.putByteArray((byte[]) null, 16, 0);
      fieldWriter1.visitAttribute(attribute0);
      fieldWriter0.put(byteVector1);
      // Undeclared exception!
      try { 
        fieldWriter1.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.firstField = null;
      Label label0 = new Label();
      Object object0 = label0.info;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", (Object) null);
      int int0 = Frame.VALUE;
      fieldWriter0.visitEnd();
      Attribute attribute0 = new Attribute("mwI10");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "mwI10";
      stringArray0[1] = "The wildcard must not be null";
      stringArray0[2] = "org.apache.commons.io.filefilter.HiddenFileFilter";
      stringArray0[3] = "9()ur1NR6ji0Q";
      stringArray0[4] = "9()ur1NR6ji0Q";
      stringArray0[5] = "Synthetic";
      classWriter0.visit(16777215, 16777215, "9()ur1NR6ji0Q", "org.apache.commons.io.filefilter.HiddenFileFilter", "9()ur1NR6ji0Q", stringArray0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "mwI10", "mwI10");
      FieldWriter fieldWriter2 = new FieldWriter(classWriter0, (-61), "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter", "mwI10", "org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.firstField.put(byteVector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter1 = new ClassWriter((-61));
      fieldWriter2.getSize();
      String[] stringArray1 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit(21, 2, "2UNmqtK!#5Qp,", "hf8`>tuXe", "mwI10", stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
