/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:48:28 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantClass;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInvokeDynamic;
import org.apache.bcel.classfile.ConstantMethodType;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.LocalVariableInstruction;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.StackInstruction;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FREM fREM0 = (FREM)InstructionConstants.FREM;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackProducer(fREM0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCMPL fCMPL0 = new FCMPL();
      instConstraintVisitor0.visitGETSTATIC((GETSTATIC) null);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        dUP_X1_0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(2715);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte)122);
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals("bipush", bIPUSH0.getName());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ICONST iCONST0 = new ICONST(5);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitICONST(iCONST0);
      GETSTATIC gETSTATIC0 = null;
      try {
        gETSTATIC0 = new GETSTATIC((-684));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -684
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(1376);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      assertEquals((short)54, iSTORE0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LDC2_W lDC2_W0 = new LDC2_W(58);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(lDC2_W0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSUB lSUB0 = new LSUB();
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitILOAD((ILOAD) null);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(820, 222);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(0);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals(1, dSTORE0.getLength());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      JSR jSR0 = new JSR((InstructionHandle) null);
      instConstraintVisitor0.visitJSR(jSR0);
      assertEquals(3, jSR0.getLength());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT((BREAKPOINT) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitFCONST((FCONST) null);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3696);
      ObjectType objectType0 = new ObjectType("EXC_CLASS_AND_INTERFAC_RESOLUTION");
      OperandStack operandStack0 = new OperandStack(3696, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      LLOAD lLOAD0 = new LLOAD(436);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(lLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LLOAD constraint violated: Read-Access on local variable 436 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FDIV fDIV0 = new FDIV();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      LocalVariables localVariables0 = new LocalVariables(31);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("#bjWx");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addDouble(509.0);
      OperandStack operandStack0 = new OperandStack(2613, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type '#bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FASTORE fASTORE0 = new FASTORE();
      LocalVariables localVariables0 = new LocalVariables(3696);
      ObjectType objectType0 = ObjectType.getInstance("EXCS_CLASS_AND_INTERFACE_RESOLUTION");
      OperandStack operandStack0 = new OperandStack(3696, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BALOAD bALOAD0 = new BALOAD();
      bALOAD0.getExceptions();
      bALOAD0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack0);
      frame1.equals((Object) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType1 = new ObjectType("Won't DUP type on stack top '");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addDouble((-5305.967615917));
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(4074);
      Frame frame0 = new Frame(4074, 44);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      BIPUSH bIPUSH0 = new BIPUSH((byte) (-7));
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(44, (short)2);
      DSTORE dSTORE0 = new DSTORE(44);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      LocalVariables localVariables0 = new LocalVariables(811);
      ObjectType objectType0 = new ObjectType("#0bjWx");
      OperandStack operandStack0 = new OperandStack(2613, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      instConstraintVisitor0.visitSIPUSH((SIPUSH) null);
      ATHROW aTHROW0 = new ATHROW();
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(811);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKESPECIAL0);
      DSTORE dSTORE0 = null;
      try {
        dSTORE0 = new DSTORE((-2765));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal value: -2765
         //
         verifyException("org.apache.bcel.generic.LocalVariableInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(134);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("C_kn0?=");
      OperandStack operandStack0 = new OperandStack(134, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.pop((-1043));
      localVariables1.merge(localVariables0);
      instConstraintVisitor0.visitIFNULL((IFNULL) null);
      operandStack0.push(objectType0);
      ARETURN aRETURN0 = new ARETURN();
      operandStack0.clear();
      int[] intArray0 = new int[0];
      LOOKUPSWITCH lOOKUPSWITCH0 = null;
      try {
        lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, (InstructionHandle[]) null, (InstructionHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.Select", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      OperandStack operandStack1 = new OperandStack(82);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD((LALOAD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LLOAD lLOAD0 = new LLOAD(1540);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      assertEquals(1540, lLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("#0bjWD\"#x");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.clone();
      Boolean.valueOf("#0bjWD\"#x");
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType.getInstance("");
      OperandStack operandStack1 = new OperandStack(12, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type '#0bjWD\"#x'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " {");
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addLong(0L);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      constantPoolGen0.getConstantPool();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = new Boolean("#0bjWvx");
      Type.getReturnType("S;HaJu");
      Frame frame0 = new Frame(855, 855);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      IINC iINC0 = new IINC(823, 823);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      int int0 = 79;
      LocalVariables localVariables0 = new LocalVariables(79);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(79, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      IFNE iFNE0 = new IFNE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE(iFNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFNE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      LocalVariables localVariables0 = new LocalVariables(811);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("#0bjWx");
      OperandStack operandStack0 = new OperandStack(811, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.merge(operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.merge(operandStack0);
      DDIV dDIV0 = new DDIV();
      SASTORE sASTORE0 = new SASTORE();
      FCMPL fCMPL0 = new FCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DDIV dDIV0 = new DDIV();
      FSTORE fSTORE0 = new FSTORE(3011);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      assertEquals((short)56, fSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      Frame frame2 = new Frame(5, 5);
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM((DREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance("tnSa~0 p)Guv");
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM((FREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      LocalVariables localVariables0 = new LocalVariables(134);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(134, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      LocalVariables localVariables0 = new LocalVariables(811);
      ObjectType objectType0 = new ObjectType("#0bjWx");
      int int0 = 2613;
      OperandStack operandStack0 = new OperandStack(2613, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(11);
      ObjectType objectType0 = ObjectType.getInstance("Z>+r(rv:\"NQ)");
      OperandStack operandStack0 = new OperandStack(11, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      operandStack0.pop((-720));
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      localVariables0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FLOAD fLOAD0 = new FLOAD(11);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'Z>+r(rv:\"NQ)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = Pattern.DOTALL;
      LocalVariables localVariables0 = new LocalVariables(835);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(32, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Object object0 = frame0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      SALOAD sALOAD0 = new SALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      sALOAD0.produceStack(constantPoolGen0);
      object0.equals(sALOAD0);
      String string0 = Constants.ILLEGAL_TYPE;
      DASTORE dASTORE0 = new DASTORE();
      L2F l2F0 = new L2F();
      F2D f2D0 = new F2D();
      I2C i2C0 = new I2C();
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("b 'ey4h");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType1 = new ObjectType("Merging LocalVariables of different size?!? From different methods or what?!?");
      OperandStack operandStack1 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class b 'ey4h: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: b 'ey4h.class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 571;
      LocalVariables localVariables0 = new LocalVariables(571);
      localVariables0.clone();
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("+K#r74ZvW$NRA_v09");
      OperandStack operandStack0 = new OperandStack(571, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.merge(operandStack0);
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackConsumer(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: Cannot consume 2 stack slots: only 1 slot(s) left on stack!
         // Stack:
         // Slots used: 1 MaxStack: 571.
         // +K#r74ZvW$NRA_v09 (Size: 1)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(830);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(830, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.equals(constantPoolGen0);
      Frame frame1 = new Frame(1719, 830);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      frame1.toString();
      operandStack1.getClone();
      RET rET0 = new RET(110);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(953);
      ObjectType objectType0 = new ObjectType(")");
      OperandStack operandStack0 = new OperandStack(73, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      localVariables0.toString();
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      operandStack0.pop();
      SALOAD sALOAD0 = new SALOAD();
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type ')'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(79);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(79, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(1445);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT((IFLT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = Pattern.DOTALL;
      LocalVariables localVariables0 = new LocalVariables(858);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(32, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(32, 858);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = new LocalVariables(858);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SALOAD sALOAD0 = new SALOAD();
      D2F d2F0 = new D2F();
      LSTORE lSTORE0 = new LSTORE(858);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(lSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: ''; Instruction type: 'long'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = (Frame)frame0.clone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame1.getClone();
      frame1.getClone();
      String string0 = Constants.CONSTRUCTOR_NAME;
      instConstraintVisitor0.visitSIPUSH((SIPUSH) null);
      Frame frame2 = new Frame(803, 803);
      Frame frame3 = new Frame(localVariables0, operandStack0);
      L2D l2D0 = new L2D();
      IMUL iMUL0 = new IMUL();
      Boolean.valueOf("");
      ObjectType objectType1 = new ObjectType("<init>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      OperandStack operandStack1 = new OperandStack(82, objectType0);
      IADD iADD0 = new IADD();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      assertEquals("monitorexit", mONITOREXIT0.getName());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(82);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      Frame frame1 = (Frame)frame0.clone();
      frame0.toString();
      instConstraintVisitor0.setFrame(frame1);
      frame0.toString();
      POP2 pOP2_0 = new POP2();
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(82, (short)145);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '145' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(108, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(634);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame frame2 = new Frame(localVariables1, operandStack0);
      frame2.getClone();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ObjectType objectType1 = ObjectType.getInstance("0uN,jC.@\u0000XF@K{E");
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType1);
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type .
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      POP2 pOP2_0 = new POP2();
      POP2 pOP2_1 = new POP2();
      POP2 pOP2_2 = new POP2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      POP2 pOP2_3 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is '' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IOR iOR0 = new IOR();
      operandStack0.clear();
      operandStack0.getClone();
      FLOAD fLOAD0 = new FLOAD(92);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      LMUL lMUL0 = new LMUL();
      LMUL lMUL1 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("b 'ey4h");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType1 = new ObjectType("Merging LocalVariables of different size?!? From different methods or what?!?");
      OperandStack operandStack1 = new OperandStack(5, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      operandStack0.toString();
      operandStack1.toString();
      IOR iOR0 = new IOR();
      OperandStack operandStack2 = new OperandStack(5, objectType1);
      OperandStack operandStack3 = operandStack1.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack3);
      OperandStack operandStack4 = new OperandStack(5, objectType0);
      instConstraintVisitor0.setFrame(frame1);
      IOR iOR1 = new IOR();
      OperandStack operandStack5 = new OperandStack(5, objectType0);
      operandStack4.getClone();
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type 'b 'ey4h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Object object0 = new Object();
      boolean boolean0 = new Boolean("");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      AALOAD aALOAD0 = new AALOAD();
      instConstraintVisitor0.setFrame(frame0);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(1560);
      ObjectType objectType0 = new ObjectType("2`B");
      Type[] typeArray0 = Type.NO_ARGS;
      int int0 = 3536;
      OperandStack operandStack0 = new OperandStack(3536, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      Class<IF_ACMPEQ>[] classArray0 = (Class<IF_ACMPEQ>[]) Array.newInstance(Class.class, 2);
      Class<IF_ACMPEQ> class0 = IF_ACMPEQ.class;
      classArray0[0] = class0;
      Class<IF_ACMPEQ> class1 = IF_ACMPEQ.class;
      classArray0[1] = class1;
      Type.getTypes(classArray0);
      OperandStack operandStack2 = new OperandStack(3536, objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST((CHECKCAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(830);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWvx");
      OperandStack operandStack0 = new OperandStack(830, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(fileSystemHandling0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantInteger constantInteger0 = new ConstantInteger((-836));
      ClassPath classPath0 = new ClassPath("#0bjWvx");
      ClassPath classPath1 = new ClassPath(classPath0, "#0bjWvx");
      ConstantInteger constantInteger1 = new ConstantInteger(constantInteger0);
      objectType0.toString();
      I2S i2S0 = new I2S();
      I2S i2S1 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type '#0bjWvx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(7);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(132, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      L2I l2I0 = new L2I();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      Character.getName(90);
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      localVariables0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      NEWARRAY nEWARRAY0 = new NEWARRAY(objectType0.CHAR);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("?");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(88, 1898);
      OperandStack operandStack1 = operandStack0.getClone();
      ObjectType objectType1 = new ObjectType("?");
      operandStack0.toString();
      OperandStack operandStack2 = new OperandStack(88, objectType1);
      operandStack1.getClone();
      RET rET0 = new RET(1898);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DCONST dCONST0 = new DCONST(1.0);
      instConstraintVisitor0.visitDCONST(dCONST0);
      assertEquals("dconst_1", dCONST0.getName());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#5Nyu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(20);
      ObjectType objectType0 = ObjectType.getInstance("Hn(!nHL2L UVI");
      OperandStack operandStack0 = new OperandStack(20, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LLOAD lLOAD0 = new LLOAD(71);
      D2L d2L0 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L((D2L) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(82);
      ObjectType objectType0 = new ObjectType("*2gc_@");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      operandStack0.getClone();
      operandStack0.toString();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*2gc_@");
      operandStack0.getClone();
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type '*2gc_@'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      LocalVariables localVariables0 = new LocalVariables(134);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(134, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = new Boolean(false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(82);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3465, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack(92, objectType0);
      OperandStack operandStack2 = operandStack1.getClone();
      operandStack2.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack2);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack2.toString();
      IOR iOR0 = new IOR();
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(88, 1898);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      operandStack1.initializeObject(uninitializedObjectType0);
      operandStack1.merge(operandStack0);
      localVariables0.set(88, objectType0);
      localVariables0.toString();
      OperandStack operandStack2 = new OperandStack(88);
      LocalVariables localVariables1 = new LocalVariables(88);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType(">");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      frame0.toString();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.getClone();
      localVariables0.getClone();
      frame1.toString();
      frame1.getClone();
      POP pOP0 = new POP();
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type '>'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(82);
      ObjectType objectType0 = new ObjectType("hHX-gH~!-$pz{(8k");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      LocalVariables localVariables1 = new LocalVariables(82);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      frame0.equals((Object) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = Constants.ILLEGAL_TYPE;
      IMUL iMUL0 = new IMUL();
      int int0 = Long.BYTES;
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC2_W((LDC2_W) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("u().K&H");
      OperandStack operandStack0 = new OperandStack(108, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(634);
      iNSTANCEOF0.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = (Frame)frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame1.getClone();
      frame1.getClone();
      IAND iAND0 = new IAND();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type 'OTP+H#'5NyAu'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWx");
      OperandStack operandStack0 = new OperandStack(110, objectType0);
      localVariables0.clone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = new Boolean("#0bjWx");
      instConstraintVisitor0.setFrame(frame0);
      L2D l2D1 = new L2D();
      DASTORE dASTORE0 = new DASTORE();
      String string0 = Constants.ILLEGAL_TYPE;
      InstructionList instructionList0 = new InstructionList(l2D0);
      InstructionList instructionList1 = new InstructionList();
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      ObjectType objectType0 = new ObjectType("KrJg");
      OperandStack operandStack0 = new OperandStack(811, objectType0);
      LocalVariables localVariables0 = new LocalVariables(20);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.merge(operandStack0);
      LocalVariables localVariables1 = new LocalVariables(20);
      localVariables0.merge(localVariables1);
      operandStack1.merge(operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = new LocalVariables(811);
      LNEG lNEG0 = new LNEG();
      Boolean.valueOf("KrJg");
      PUSH pUSH0 = new PUSH(constantPoolGen0, "KrJg");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KrJg");
      L2D l2D0 = new L2D();
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGT(iF_ICMPGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPGT constraint violated: The value at the stack top is not of type 'int', but of type 'KrJg'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(88, 1898);
      instConstraintVisitor0.setFrame(frame0);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(3696);
      ObjectType.getInstance("'[v8:OAg vZPir;`[^");
      LocalVariables localVariables1 = new LocalVariables(92);
      ObjectType objectType0 = ObjectType.getInstance("'[v8:OAg vZPir;`[^");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.toString();
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type ''[v8:OAg vZPir'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      AALOAD aALOAD0 = new AALOAD();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(811);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame1.getClone();
      frame1.getClone();
      IAND iAND0 = new IAND();
      LNEG lNEG0 = new LNEG();
      lNEG0.toString(false);
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type 'OTP+H#'5NyAu'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      LocalVariables localVariables1 = new LocalVariables(803);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' and '");
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType.getInstance("' and '");
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.toString();
      IOR iOR0 = new IOR();
      SASTORE sASTORE0 = new SASTORE();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType(",");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      operandStack1.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack0);
      frame1.equals((Object) null);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      MONITOREXIT mONITOREXIT1 = new MONITOREXIT();
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type ','.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 803;
      LocalVariables localVariables0 = new LocalVariables(803);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = (Frame)frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame1.getClone();
      frame1.getClone();
      String string0 = Constants.CONSTRUCTOR_NAME;
      instConstraintVisitor0.visitSIPUSH((SIPUSH) null);
      Frame frame2 = new Frame(803, 803);
      Frame frame3 = new Frame(localVariables1, operandStack0);
      L2D l2D0 = new L2D();
      IMUL iMUL0 = new IMUL();
      Boolean.valueOf("OTP+H#'5NyAu");
      PUSH pUSH0 = new PUSH(constantPoolGen0, 803);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionHandle0.getTargeters();
      IFEQ iFEQ0 = new IFEQ(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type 'OTP+H#'5NyAu'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(79);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(79, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      frame0.clone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(1435);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWx");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack1.getClone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.toString();
      operandStack1.clear();
      operandStack0.getClone();
      LocalVariables localVariables1 = new LocalVariables(92);
      localVariables1.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      LocalVariables localVariables2 = new LocalVariables(92);
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      LNEG lNEG0 = new LNEG();
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(88, 1898);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.merge(operandStack0);
      localVariables0.toString();
      OperandStack operandStack2 = new OperandStack(88);
      localVariables0.getClone();
      frame0.toString();
      frame0.getClone();
      ObjectType.getInstance("^A");
      operandStack1.clear();
      LocalVariables localVariables1 = new LocalVariables(233);
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(20);
      ObjectType objectType0 = ObjectType.getInstance("Hn(!nHL2L UVI");
      OperandStack operandStack0 = new OperandStack(20, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LLOAD lLOAD0 = new LLOAD(71);
      D2L d2L0 = new D2L();
      DUP2 dUP2_0 = new DUP2();
      instConstraintVisitor0.visitDUP2(dUP2_0);
      assertEquals((short)92, dUP2_0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      LocalVariables localVariables0 = new LocalVariables(216);
      ObjectType objectType0 = ObjectType.getInstance("HYqPC");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.toString();
      IOR iOR0 = new IOR();
      OperandStack operandStack2 = new OperandStack(216, objectType0);
      OperandStack operandStack3 = new OperandStack(811);
      operandStack3.clear();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      operandStack0.push(objectType0);
      instConstraintVisitor0.visitDLOAD((DLOAD) null);
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP(dUP0);
      assertEquals((short)89, dUP0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DUP2 dUP2_0 = new DUP2();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(105);
      ObjectType objectType0 = new ObjectType("L..");
      Type[] typeArray0 = Type.NO_ARGS;
      OperandStack operandStack0 = new OperandStack(105, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(105, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'L..'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = new Boolean(false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      OperandStack operandStack1 = new OperandStack(92, objectType0);
      operandStack1.getClone();
      OperandStack operandStack2 = operandStack1.getClone();
      operandStack2.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.toString();
      IOR iOR0 = new IOR();
      OperandStack operandStack3 = new OperandStack(5, objectType0);
      operandStack3.clear();
      DREM dREM0 = new DREM();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.getClone();
      ObjectType.getInstance("0uN,jC.@\u0000XF@K{E");
      operandStack1.clear();
      LocalVariables localVariables0 = new LocalVariables(251);
      LocalVariables localVariables1 = new LocalVariables(1176);
      LNEG lNEG0 = new LNEG();
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT((InstructionHandle) null);
      instConstraintVisitor0.setMethodGen((MethodGen) null);
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ(iF_ICMPEQ0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      operandStack0.push(objectType0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.toString();
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      OperandStack operandStack1 = new OperandStack(92, objectType0);
      operandStack1.getClone();
      OperandStack operandStack2 = operandStack1.getClone();
      operandStack2.push(objectType0);
      operandStack1.clone();
      operandStack2.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.toString();
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM((LREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(803, 803);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame0.getClone();
      ALOAD aLOAD0 = (ALOAD)InstructionConstants.ALOAD_1;
      instConstraintVisitor0.visitLocalVariableInstruction(aLOAD0);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("#0bjWD\"#x");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#0bjWD\"#x");
      LocalVariables localVariables0 = new LocalVariables(5);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.getClone();
      frame0.equals(localVariables1);
      String string0 = Constants.ILLEGAL_OPCODE;
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("#0bjWD\"#x");
      frame0.toString();
      Boolean boolean1 = Boolean.FALSE;
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      LNEG lNEG0 = new LNEG();
      operandStack0.getClone();
      Frame frame1 = new Frame(2, 5);
      int int0 = Long.SIZE;
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(2);
      ISTORE iSTORE0 = new ISTORE(184);
      // Undeclared exception!
      try { 
        iSTORE0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(830);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWvx");
      OperandStack operandStack0 = new OperandStack(830, objectType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      operandStack1.equals(operandStack0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      operandStack1.merge(operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      int int0 = Long.SIZE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "()L#0bjWvx;");
      constantPoolGen0.addClass("#0bjWvx");
      FCMPG fCMPG0 = new FCMPG();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(188);
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type '#0bjWvx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(134);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("C_kn02?5=");
      OperandStack operandStack0 = new OperandStack(134, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      LADD lADD0 = new LADD();
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type 'C_kn02?5='.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DUP2 dUP2_0 = new DUP2();
      L2D l2D0 = new L2D();
      dUP2_0.copy();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(105);
      ObjectType objectType0 = ObjectType.getInstance("L..");
      Type[] typeArray0 = Type.NO_ARGS;
      OperandStack operandStack0 = new OperandStack(105, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack(105, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      operandStack1.clear();
      OperandStack operandStack3 = operandStack0.getClone();
      FLOAD fLOAD0 = new FLOAD(105);
      operandStack2.getClone();
      operandStack3.toString();
      InstructionList instructionList0 = new InstructionList();
      Constant[] constantArray0 = new Constant[1];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(1931, 1232);
      constantArray0[0] = (Constant) constantNameAndType0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type 'L..'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(803);
      LocalVariables localVariables0 = new LocalVariables(803);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("/#0bjx");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      operandStack1.merge(operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPEQ((IF_ACMPEQ) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("#0bjWD\"#x");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Boolean boolean0 = new Boolean("#0bjWD\"#x");
      LocalVariables localVariables0 = new LocalVariables(5);
      LocalVariables localVariables1 = localVariables0.getClone();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = Constants.ILLEGAL_OPCODE;
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame.setThis((UninitializedObjectType) null);
      Boolean boolean1 = new Boolean("#0bjWD\"#x");
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte)80);
      InstructionList instructionList0 = new InstructionList(nEWARRAY0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE((IF_ICMPNE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLCONST((LCONST) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I((L2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      ObjectType objectType0 = new ObjectType("|/n89?[;4mp");
      ObjectType objectType1 = new ObjectType("|/n89?[;4mp");
      OperandStack operandStack0 = new OperandStack(162, objectType0);
      OperandStack operandStack1 = new OperandStack((-2078));
      operandStack1.getClone();
      LocalVariables localVariables0 = new LocalVariables(162);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.getClone();
      operandStack0.toString();
      I2L i2L0 = new I2L();
      IXOR iXOR0 = new IXOR();
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type '|.n89?['.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(811);
      ObjectType objectType0 = ObjectType.getInstance("KrJg");
      OperandStack operandStack0 = new OperandStack(811, objectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(20);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = operandStack1.getClone();
      LocalVariables localVariables1 = new LocalVariables(20);
      localVariables0.merge(localVariables1);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack3 = operandStack2.getClone();
      operandStack3.toString();
      operandStack1.push(objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KrJg");
      IOR iOR0 = new IOR();
      InstructionList instructionList0 = new InstructionList(iSTORE0);
      InstructionList instructionList1 = new InstructionList();
      InstructionHandle instructionHandle0 = instructionList0.append((Instruction) iSTORE0, instructionList1);
      GOTO gOTO0 = new GOTO(instructionHandle0);
      instConstraintVisitor0.visitGOTO(gOTO0);
      assertEquals("goto", gOTO0.getName());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(20);
      ObjectType objectType0 = ObjectType.getInstance("Hn(!nHL2L UVI");
      OperandStack operandStack0 = new OperandStack(20, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LLOAD lLOAD0 = new LLOAD(71);
      D2L d2L0 = new D2L();
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'Hn(!nHL2L UVI'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(803);
      LocalVariables localVariables0 = new LocalVariables(803);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("#0bjWx");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      operandStack1.merge(operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(803);
      gETFIELD0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      L2D l2D0 = new L2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(830);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWvx");
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      OperandStack operandStack0 = new OperandStack(830, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = new LocalVariables(830);
      SALOAD sALOAD0 = new SALOAD();
      D2F d2F0 = new D2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG((DNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      operandStack0.getClone();
      localVariables0.getClone();
      NOP nOP0 = new NOP();
      Constant[] constantArray0 = new Constant[9];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType((byte)10, 1123);
      ConstantNameAndType constantNameAndType1 = new ConstantNameAndType(constantNameAndType0);
      constantArray0[0] = (Constant) constantNameAndType1;
      ConstantMethodType constantMethodType0 = new ConstantMethodType((-2331));
      constantArray0[1] = (Constant) constantMethodType0;
      ConstantNameAndType constantNameAndType2 = new ConstantNameAndType((-2233), (-2233));
      ConstantNameAndType constantNameAndType3 = new ConstantNameAndType(constantNameAndType2);
      constantArray0[3] = (Constant) constantNameAndType3;
      SWAP sWAP0 = new SWAP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSWAP(sWAP0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWx");
      OperandStack operandStack0 = new OperandStack(110, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      localVariables0.toString();
      LRETURN lRETURN0 = new LRETURN();
      DREM dREM0 = new DREM();
      BIPUSH bIPUSH0 = new BIPUSH((byte)94);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(200);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      F2I f2I0 = new F2I();
      assertEquals(1, f2I0.getLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("#0bjWD\"#x");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Boolean boolean0 = new Boolean("#0bjWD\"#x");
      LocalVariables localVariables0 = new LocalVariables(5);
      LocalVariables localVariables1 = localVariables0.getClone();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = Constants.ILLEGAL_OPCODE;
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame.setThis((UninitializedObjectType) null);
      Boolean boolean1 = new Boolean("#0bjWD\"#x");
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte)80);
      InstructionList instructionList0 = new InstructionList(nEWARRAY0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ(iF_ICMPEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPEQ constraint violated: The value at the stack top is not of type 'int', but of type '#0bjWD\"#x'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(20);
      ObjectType objectType0 = ObjectType.getInstance("sFPL|pi /q;");
      OperandStack operandStack0 = new OperandStack(20, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.push(objectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      POP2 pOP2_1 = new POP2();
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.getClone();
      localVariables0.getClone();
      localVariables0.clone();
      D2L d2L0 = new D2L();
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2L constraint violated: The value at the stack top is not of type 'int', but of type 'sFPL|pi .q'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      operandStack0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      SIPUSH sIPUSH0 = new SIPUSH((short)3);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I((L2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      ObjectType objectType0 = new ObjectType("|/n89?[;4mp");
      ObjectType objectType1 = new ObjectType("|/n89?[;4mp");
      OperandStack operandStack0 = new OperandStack(192, objectType0);
      OperandStack operandStack1 = new OperandStack(192, objectType1);
      operandStack1.getClone();
      LocalVariables localVariables0 = new LocalVariables(192);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.getClone();
      operandStack0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      frame0.toString();
      frame0.clone();
      DREM dREM0 = new DREM();
      I2C i2C0 = new I2C();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(121);
      instConstraintVisitor0.visitLocalVariableInstruction(lSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitStackInstruction((StackInstruction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(20);
      ISTORE iSTORE0 = new ISTORE(20);
      LocalVariables localVariables1 = new LocalVariables(811);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("expecting ObjectType but got ");
      OperandStack operandStack0 = new OperandStack(811, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack1);
      frame0.toString();
      Frame frame1 = frame0.getClone();
      frame0.toString();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      RET rET0 = new RET(20);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 20.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(1056, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      OperandStack operandStack1 = new OperandStack(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack1.toString();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      operandStack0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      LocalVariables localVariables2 = new LocalVariables(5);
      LocalVariables localVariables3 = localVariables2.getClone();
      localVariables3.clone();
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L..");
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = ObjectType.getInstance("#0bjWx");
      OperandStack operandStack0 = new OperandStack(110, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals("#0bjWx");
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConstantInvokeDynamic constantInvokeDynamic0 = new ConstantInvokeDynamic(2613, 2614);
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type '#0bjWx'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Frame frame1 = new Frame(88, 1898);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      localVariables0.toString();
      localVariables0.getClone();
      frame0.toString();
      frame0.getClone();
      ALOAD aLOAD0 = new ALOAD(3209);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2I constraint violated: The value at the stack top is not of type 'double', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "V#]bWUn'3=-");
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("pmR%B/DUw");
      OperandStack operandStack0 = new OperandStack(587, objectType0);
      OperandStack operandStack1 = new OperandStack(549, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack2 = operandStack1.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      Frame frame1 = new Frame((LocalVariables) null, operandStack2);
      IFGE iFGE0 = new IFGE((InstructionHandle) null);
      InstructionList instructionList0 = new InstructionList((BranchInstruction) iFGE0);
      InstructionList instructionList1 = instructionList0.copy();
      InstructionHandle instructionHandle0 = instructionList1.getStart();
      IFNULL iFNULL0 = new IFNULL(instructionHandle0);
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type 'pmR%B.DUw'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(133, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      localVariables0.getClone();
      LCONST lCONST0 = new LCONST(0L);
      BasicType basicType0 = Type.DOUBLE;
      objectType0.isAssignmentCompatibleWith(basicType0);
      frame0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType.getInstance("");
      operandStack1.clear();
      LocalVariables localVariables1 = new LocalVariables(251);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(1176);
      LNEG lNEG0 = new LNEG();
      I2C i2C0 = new I2C();
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      localVariables0.getClone();
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      operandStack0.merge(operandStack0);
      operandStack0.push(objectType0);
      operandStack0.push(objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.toString();
      IOR iOR0 = new IOR();
      OperandStack operandStack2 = new OperandStack(1577, objectType0);
      OperandStack operandStack3 = new OperandStack(1577, objectType0);
      NOP nOP0 = new NOP();
      LNEG lNEG0 = new LNEG();
      FNEG fNEG0 = new FNEG();
      FNEG fNEG1 = new FNEG();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ARETURN aRETURN0 = new ARETURN();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("b 'ey4h");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType1 = new ObjectType("Merging LocalVariables of different size?!? From different methods or what?!?");
      OperandStack operandStack1 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      operandStack0.toString();
      operandStack1.toString();
      IOR iOR0 = new IOR();
      OperandStack operandStack2 = new OperandStack(5, objectType1);
      OperandStack operandStack3 = operandStack1.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack3);
      operandStack3.toString();
      OperandStack operandStack4 = new OperandStack(5, objectType0);
      instConstraintVisitor0.setFrame(frame1);
      OperandStack operandStack5 = new OperandStack(5, objectType0);
      operandStack4.getClone();
      Boolean boolean0 = Boolean.FALSE;
      PUSH pUSH0 = new PUSH(constantPoolGen0, boolean0);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      IFGE iFGE0 = new IFGE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE(iFGE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGE constraint violated: The value at the stack top is not of type 'int', but of type 'b 'ey4h'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("#0bjWD\"#x");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      Boolean boolean0 = new Boolean("#0bjWD\"#x");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(20);
      LocalVariables localVariables1 = localVariables0.getClone();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)114;
      localVariables1.getClone();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      Boolean.valueOf("#0bjWD\"#x");
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE(iF_ICMPLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLE constraint violated: The value at the stack top is not of type 'int', but of type '#0bjWD\"#x'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(803);
      ObjectType objectType0 = ObjectType.getInstance("OTP+H#'5NyAu");
      OperandStack operandStack0 = new OperandStack(803, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = (Frame)frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      frame1.getClone();
      frame1.getClone();
      String string0 = Constants.CONSTRUCTOR_NAME;
      instConstraintVisitor0.visitSIPUSH((SIPUSH) null);
      Frame frame2 = new Frame(803, 803);
      Frame frame3 = new Frame(localVariables0, operandStack0);
      L2D l2D0 = new L2D();
      IMUL iMUL0 = new IMUL();
      Boolean.valueOf("OTP+H#'5NyAu");
      PUSH pUSH0 = new PUSH(constantPoolGen0, 803);
      L2D l2D1 = new L2D();
      operandStack0.clone();
      l2D0.copy();
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INEG constraint violated: The value at the stack top is not of type 'int', but of type 'OTP+H#'5NyAu'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = new OperandStack(5);
      operandStack1.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LNEG lNEG0 = new LNEG();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      pUSH0.getInstructionList();
      PUSH pUSH1 = new PUSH(constantPoolGen0, 1.0);
      ConstantInteger constantInteger0 = new ConstantInteger(5);
      ConstantInteger constantInteger1 = new ConstantInteger(constantInteger0);
      constantInteger1.copy();
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      ObjectType.getInstance("CJNoJX%5b`b^PW");
      POP2 pOP2_0 = new POP2();
      POP2 pOP2_1 = new POP2();
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGE((IF_ICMPGE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DUP2 dUP2_0 = new DUP2();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(105);
      ObjectType objectType0 = new ObjectType("L..");
      Type[] typeArray0 = Type.NO_ARGS;
      OperandStack operandStack0 = new OperandStack(105, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack(105, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      operandStack1.clear();
      OperandStack operandStack3 = operandStack0.getClone();
      FLOAD fLOAD0 = new FLOAD(105);
      operandStack1.getClone();
      operandStack3.toString();
      InstructionList instructionList0 = new InstructionList(dUP2_0);
      Constant[] constantArray0 = new Constant[1];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(1931, 1232);
      constantArray0[0] = (Constant) constantNameAndType0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType0);
      InstructionHandle instructionHandle0 = instructionList0.append((CompoundInstruction) pUSH0);
      InstructionList instructionList1 = new InstructionList();
      InstructionHandle instructionHandle1 = instructionList0.append(instructionHandle0, instructionList1);
      IFGT iFGT0 = new IFGT(instructionHandle1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT(iFGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGT constraint violated: The value at the stack top is not of type 'int', but of type 'L..'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(1056, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = new OperandStack(5);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack1.toString();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      operandStack0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(7);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(132, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      L2I l2I0 = new L2I();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      Character.getName(90);
      IADD iADD0 = new IADD();
      Constant[] constantArray0 = new Constant[1];
      ConstantClass constantClass0 = new ConstantClass(90);
      ConstantClass constantClass1 = new ConstantClass(constantClass0);
      constantArray0[0] = (Constant) constantClass1;
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantPool constantPool1 = constantPool0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool1);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(5, 82);
      localVariables0.getClone();
      operandStack0.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      localVariables0.clone();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      IINC iINC0 = new IINC(852, 82);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals((Object) null);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      localVariables0.getClone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      operandStack1.clear();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.ILLEGAL_TYPE;
      frame1.getClone();
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Boolean boolean0 = Boolean.TRUE;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      LocalVariables localVariables0 = new LocalVariables(2);
      ObjectType objectType0 = ObjectType.getInstance("t0M8`+");
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      localVariables0.getClone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t0M8`+");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IOR iOR0 = new IOR();
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE(iFLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLE constraint violated: The value at the stack top is not of type 'int', but of type 't0M8`+'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(88, 1898);
      instConstraintVisitor0.setFrame(frame0);
      String string0 = localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(88);
      localVariables0.getClone();
      frame0.toString();
      ObjectType objectType1 = new ObjectType(string0);
      OperandStack operandStack2 = new OperandStack(1898, objectType1);
      operandStack0.getClone();
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.getClone();
      LocalVariables localVariables0 = new LocalVariables(175);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LNEG lNEG0 = new LNEG();
      ConstantInteger constantInteger0 = new ConstantInteger(2272);
      ConstantInteger constantInteger1 = new ConstantInteger(constantInteger0);
      constantInteger0.copy();
      BasicType basicType0 = Type.VOID;
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      instConstraintVisitor1.visitJSR_W(jSR_W0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 1898;
      LocalVariables localVariables0 = new LocalVariables(1898);
      String string0 = "^A";
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(75, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 82;
      LocalVariables localVariables0 = new LocalVariables(5);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      POP2 pOP2_0 = new POP2();
      POP2 pOP2_1 = new POP2();
      POP2 pOP2_2 = new POP2();
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(0);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(82, 0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      localVariables0.toString();
      operandStack0.getClone();
      localVariables0.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame2.toString();
      frame2.getClone();
      ObjectType.getInstance("0uN,jC.@\u0000XF@K{E");
      operandStack1.clear();
      LocalVariables localVariables1 = new LocalVariables(251);
      Frame frame3 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables2 = new LocalVariables(1176);
      LNEG lNEG0 = new LNEG();
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT((InstructionHandle) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 251;
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[1];
      instructionHandleArray0[0] = null;
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH(lOOKUPSWITCH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOOKUPSWITCH constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(82);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(82, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      Frame.setThis((UninitializedObjectType) null);
      Frame frame1 = (Frame)frame0.clone();
      frame0.toString();
      Frame.getThis();
      instConstraintVisitor0.setFrame(frame1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      POP2 pOP2_0 = new POP2();
      instConstraintVisitor0.visitIFNONNULL((IFNONNULL) null);
      ASTORE aSTORE0 = new ASTORE(82);
      instConstraintVisitor0.visitASTORE(aSTORE0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " {");
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IOR iOR0 = new IOR();
      operandStack0.clear();
      operandStack0.getClone();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)93;
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.getEnd();
      instructionList0.getStart();
      GOTO_W gOTO_W0 = new GOTO_W(instructionHandle0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      LDC2_W lDC2_W0 = null;
      try {
        lDC2_W0 = new LDC2_W((-1931));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -1931
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FRETURN fRETURN0 = new FRETURN();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      operandStack0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7QUlOupor");
      Class<LADD> class0 = LADD.class;
      Type.getType(class0);
      OperandStack operandStack1 = new OperandStack(1143, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      localVariables0.get(46);
      operandStack1.push(objectType0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.getClone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      localVariables0.getClone();
      F2L f2L0 = new F2L();
      InstructionList instructionList0 = new InstructionList(f2L0);
      InstructionList instructionList1 = instructionList0.copy();
      InstructionHandle instructionHandle0 = instructionList1.append(instructionList0);
      IF_ACMPNE iF_ACMPNE0 = new IF_ACMPNE(instructionHandle0);
      instConstraintVisitor0.visitIF_ACMPNE(iF_ACMPNE0);
      F2L f2L1 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      L2D l2D0 = new L2D();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(88);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(88, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      localVariables0.getClone();
      localVariables0.toString();
      frame0.clone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      DASTORE dASTORE0 = new DASTORE();
      frame0.equals(operandStack0);
      frame0.getClone();
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      String string0 = Constants.CONSTRUCTOR_NAME;
      instConstraintVisitor0.visitSIPUSH((SIPUSH) null);
      FSTORE fSTORE0 = new FSTORE(2837);
      L2D l2D1 = new L2D();
      IMUL iMUL0 = new IMUL();
      Boolean.valueOf("");
      ObjectType objectType1 = new ObjectType("(vbe}Y");
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT((IF_ICMPLT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(1898);
      ObjectType objectType0 = new ObjectType("^A");
      OperandStack operandStack0 = new OperandStack(75, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      operandStack0.getClone();
      localVariables0.set(75, objectType0);
      localVariables0.toString();
      frame0.equals((Object) null);
      OperandStack operandStack1 = new OperandStack(75);
      localVariables0.getClone();
      frame0.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType1 = ObjectType.getInstance("^A");
      LocalVariables localVariables1 = new LocalVariables(249);
      LNEG lNEG0 = new LNEG();
      objectType0.getFirstCommonSuperclass(objectType1);
      int[] intArray0 = new int[1];
      InstructionHandle[] instructionHandleArray0 = new InstructionHandle[1];
      instructionHandleArray0[0] = null;
      LOOKUPSWITCH lOOKUPSWITCH0 = new LOOKUPSWITCH(intArray0, instructionHandleArray0, (InstructionHandle) null);
      lOOKUPSWITCH0.setTarget((InstructionHandle) null);
      Constant[] constantArray0 = new Constant[0];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      lOOKUPSWITCH0.produceStack(constantPoolGen0);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type '^A'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
