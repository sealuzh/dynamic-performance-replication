/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:06:22 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeLong0, 49, 49, byteArray0, byteOrder0, 1575);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-29);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)56, (byte) (-109), fieldTypeShort0, (byte)125, (byte) (-29), byteArray0, byteOrder1, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(250, tiffField0.getBytesLength());
      assertEquals(125L, tiffField0.getCount());
      assertEquals((-29), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-109), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2489), (-2489), fieldTypeLong0, (-2489), (-2489), byteArray0, (ByteOrder) null, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-104), 50);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-2489), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2489), tiffField0.getTag());
      assertEquals((-2489), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)75;
      TiffField tiffField0 = new TiffField(1344, 14, fieldTypeDouble0, 4L, (-576L), byteArray0, byteOrder0, 25);
      double double0 = Locale.LanguageRange.MIN_WEIGHT;
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals((-576), int0);
      assertEquals(1344, tiffField0.getTag());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2875, (String) null);
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)50;
      byteArray0[6] = (byte)123;
      byteArray0[7] = (byte) (-126);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 34908, fieldTypeDouble0, 925L, 925L, byteArray0, byteOrder0, (byte) (-109));
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(34908, tiffField0.getDirectoryType());
      assertEquals(7400, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(925, tiffField0.getOffset());
      assertEquals(925L, tiffField0.getCount());
      assertEquals((-109), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-648), (-648), fieldTypeLong0, (-648), (-648), byteArray0, byteOrder0, (-648));
      int int0 = tiffField0.getDirectoryType();
      int int1 = tiffField0.getOffset();
      assertTrue(int1 == int0);
      assertEquals((-648), tiffField0.getSortHint());
      assertEquals((-648), tiffField0.getTag());
      assertEquals((-648), int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte)17;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-43), (-43), (FieldType) null, (-43), (-43), byteArray0, byteOrder0, (-43));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1052, 1052, fieldTypeShort0, 1052, 1709L, (byte[]) null, byteOrder0, 1052);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1052, 34850);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1709, tiffField0.getOffset());
      assertEquals(1052, tiffField0.getTag());
      assertEquals(1052, tiffField0.getSortHint());
      assertEquals(1052, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1575, 12, fieldTypeLong0, 38L, 49, byteArray0, byteOrder0, 1575);
      tiffField0.getIntArrayValue();
      assertEquals(49, tiffField0.getOffset());
      assertEquals(1575, tiffField0.getSortHint());
      assertEquals(1575, tiffField0.getTag());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(38L, tiffField0.getCount());
      assertEquals(12, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-41);
      byteArray0[5] = (byte) (-83);
      byteArray0[6] = (byte) (-110);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(35, 35, fieldTypeShort0, 35, (-4436L), byteArray0, byteOrder0, 33);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x23)", string0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-18439), int0);
      assertEquals((-4436), tiffField0.getOffset());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(70, tiffField0.getBytesLength());
      assertEquals(35L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte) (-109);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1008, (-175), fieldTypeAscii0, 2915L, 0L, byteArray0, byteOrder0, (-1));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: \uFFFD\uFFFD for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3676, 50, fieldTypeShort0, 3676, 3676, byteArray0, byteOrder0, (byte) (-78));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(3676L, tiffField0.getCount());
      assertEquals(3676, tiffField0.getTag());
      assertArrayEquals(new double[] {0.0, (-19968.0)}, doubleArray0, 0.01);
      assertEquals(3676, tiffField0.getOffset());
      assertEquals((-78), tiffField0.getSortHint());
      assertEquals(7352, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte1 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeByte0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5867dc84 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1371, "p<`(k");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[6] = (byte) (-73);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)4;
      byteArray0[6] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1371, 1371, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 812);
      tiffField0.getDoubleArrayValue();
      assertEquals(812, tiffField0.getSortHint());
      assertEquals(1371, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1371, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      TiffField tiffField0 = new TiffField((byte) (-109), (-175), fieldTypeAscii0, 1817L, 255L, byteArray0, byteOrder0, 1032);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-109), tiffField0.getTag());
      assertEquals(1817, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1032, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-175), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (byte)123, fieldTypeByte0, 413, 11L, byteArray0, byteOrder0, 413);
      String string0 = tiffField0.getValueDescription();
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(413, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(413L, tiffField0.getCount());
      assertEquals(11, tiffField0.getOffset());
      assertEquals(413, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)89;
      TiffField tiffField0 = new TiffField(2147248100, 2147248100, fieldTypeByte0, 124L, 124L, byteArray0, byteOrder0, 269);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@50a74ff9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-29);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 1097, fieldTypeShort0, 65535, (byte) (-29), byteArray0, byteOrder0, (byte) (-29));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {58112, 0, 0}, intArray0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-29L), tiffElement0.offset);
      assertEquals(5, tiffField0.getTag());
      assertEquals((-29), tiffField0.getSortHint());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(1097, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147248100, 2147248100, fieldTypeByte0, 2147248100, 2147248100, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2117), (-2117), fieldTypeByte0, 1L, (byte)0, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-2117), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2117), tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[252];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-109), 130, fieldTypeAscii0, (byte) (-109), (byte) (-109), byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int int0 = tiffField0.getOffset();
      assertEquals((-109), tiffField0.getTag());
      assertEquals(130, tiffField0.getDirectoryType());
      assertEquals((-109), int0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-4);
      TiffField tiffField0 = new TiffField(2578, 2578, fieldTypeRational0, 570L, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(570L, tiffField0.getCount());
      assertEquals(0L, tiffElement0.offset);
      assertEquals(2578, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2578, tiffField0.getTag());
      assertEquals(4560, tiffField0.getBytesLength());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[252];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte) (-109), 130, fieldTypeAscii0, 255L, 2185L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals(130, tiffField0.getDirectoryType());
      assertEquals(2185, int0);
      assertEquals((-109), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50967, (-2147331440), fieldTypeByte0, 0L, (-2147331440), (byte[]) null, byteOrder0, 5);
      String string0 = tiffField0.getTagName();
      assertEquals("PreviewApplicationVersion", string0);
      
      tiffField0.getByteOrder();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-2147331440), tiffField0.getDirectoryType());
      assertEquals(50967, tiffField0.getTag());
      assertEquals((-2147331440), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 990, fieldTypeRational0, 65535, 990, byteArray0, byteOrder0, 990);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@50e93276
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 2147248100;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1431), 2147248100, fieldTypeByte0, 255L, 255L, byteArray0, byteOrder0, (-1431));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "F6X-%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-79);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeRational0, 1172L, 1172L, byteArray0, byteOrder0, (byte)11);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(9376, tiffField0.getBytesLength());
      assertEquals(1172L, tiffField0.getCount());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
      assertEquals(1172, tiffField0.getOffset());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(892, "Insensitive");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, 1L, 2624L, byteArray0, byteOrder0, (-2122));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-1 (0xffffffff: Unknown Tag): ", string0);
      
      ByteOrder.nativeOrder();
      String string1 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffffff)", string1);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2624, tiffField0.getOffset());
      assertEquals((-2122), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)108;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte)54;
      byteArray0[8] = (byte) (-103);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 2113L, byteArray0, byteOrder0, (-726));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2113, tiffField0.getOffset());
      assertEquals((-726), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[412];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-10), 1943, fieldTypeLong0, 1943, 3136L, byteArray0, byteOrder0, 14);
      double double0 = Locale.LanguageRange.MIN_WEIGHT;
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getOffset();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(7772, tiffField0.getBytesLength());
      assertEquals(3136, int0);
      assertEquals(1943, tiffField0.getDirectoryType());
      assertEquals((-10), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[412];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(8, 6, fieldTypeLong0, 0L, (-146L), byteArray0, byteOrder0, 14);
      double double0 = Locale.LanguageRange.MIN_WEIGHT;
      String string0 = tiffField0.getValueDescription();
      assertEquals((-146), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(14, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SubjectArea");
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)125, (byte)125, fieldTypeFloat0, (byte)125, (byte)125, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(125, tiffField0.getOffset());
      assertEquals(500, tiffField0.getBytesLength());
      assertEquals(125, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(125, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(351, (-2429), fieldTypeLong0, (byte)50, (-2147483648L), byteArray0, byteOrder0, (-1163));
      int int0 = tiffField0.getOffset();
      assertEquals(Integer.MIN_VALUE, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(351, tiffField0.getTag());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-1163), tiffField0.getSortHint());
      assertEquals((-2429), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)80;
      byteArray0[4] = (byte)52;
      byteArray0[6] = (byte)52;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-164), (-164), fieldTypeLong0, 440L, 2224L, byteArray0, byteOrder0, (byte) (-6));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-164), tiffField0.getDirectoryType());
      assertEquals((-6), tiffField0.getSortHint());
      assertEquals(1760, tiffField0.getBytesLength());
      assertEquals((-164), tiffField0.getTag());
      assertEquals(2224, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65522, 990, fieldTypeRational0, 65522, 990, byteArray0, byteOrder0, 990);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[379];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 9, fieldTypeLong0, 35109L, 1645L, byteArray0, byteOrder1, 4897);
      tiffField0.getDoubleArrayValue();
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4897, tiffField0.getSortHint());
      assertEquals(1645, tiffField0.getOffset());
      assertEquals(140436, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeAscii0, 1L, (-310L), byteArray0, byteOrder0, 1032);
      tiffField0.getStringValue();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      assertSame(byteOrder1, byteOrder0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1994, "");
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldType.getFieldType((byte)11);
      TiffField tiffField0 = new TiffField((byte)11, 1994, fieldTypeFloat0, 1397L, (-407L), byteArray0, byteOrder0, 37);
      tiffField0.getDoubleArrayValue();
      assertEquals(1994, tiffField0.getDirectoryType());
      assertEquals((-407), tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
      assertEquals(5588, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte)15;
      byteArray0[6] = (byte)16;
      byteArray0[7] = (byte)32;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 649L, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(649, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[126];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(44, 13, fieldTypeByte0, 6120L, 13, byteArray0, byteOrder0, 13);
      StringWriter stringWriter0 = new StringWriter(44);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("44 (0x2c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (126) (6120 Undefined)\n", stringWriter0.toString());
      assertEquals(44, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[126];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      String string0 = File.separator;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(550, 1940, fieldTypeShort0, 1837L, 1940, byteArray0, byteOrder2, 550);
      tiffField0.toString();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((Writer) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[353];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(563, 563, fieldTypeLong0.FLOAT, 563, 1L, byteArray0, byteOrder0, 563);
      tiffField0.getValueDescription();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      // Undeclared exception!
      try { 
        ByteBuffer.allocate((-3767));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dkR3u");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeDouble fieldTypeDouble1 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble2 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(35, 50, fieldTypeDouble1, 1130L, (-1580L), byteArray0, byteOrder1, 35);
      tiffField0.dump();
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(35, int0);
      assertEquals(35, tiffField0.getTag());
      assertEquals((-1580), tiffField0.getOffset());
      assertEquals(9040, tiffField0.getBytesLength());
  }
}
