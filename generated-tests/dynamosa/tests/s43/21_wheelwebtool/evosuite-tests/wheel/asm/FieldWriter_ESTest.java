/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:50:41 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1009);
      classWriter0.index = (-2356);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Exceptions", "Exceptions", "Exceptions", "Exceptions");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      classWriter0.version = 150;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "zbw", "zbw", "zbw", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1009);
      classWriter0.index = (-2356);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Exceptions", "Exceptions", "Exceptions", "Exceptions");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "L", "L", "nGfl;hm8c", "nGfl;hm8c");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65572);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "zbw", "zbw", "zbw", "zbw");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "zbw", ">B5\"B]|/'>3+&Bg77N>", (String) null, "Deprecated");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "4]jx_~g", "4]jx_~g", "4]jx_~g", "4]jx_~g");
      Attribute attribute0 = new Attribute("4]jx_~g");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65559);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65559, "\"fln8!~Z9VTEW", "\"fln8!~Z9VTEW", "\"fln8!~Z9VTEW", "\"fln8!~Z9VTEW");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 65559;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-65), "", "", "}C", "}C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65554);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "S\"b", "S\"b", "S\"b", "S\"b");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 65554, "S\"b", "S\"b", "S\"b", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "4]jx_~g", "4]jx_~g", "4]jx_~g", "4]jx_~g");
      Attribute attribute0 = new Attribute("4]jx_~g");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-596));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-596), "zbw", "zbw", "zbw", (Object) null);
      fieldWriter0.visitAnnotation("zbw", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "4]jx_~g", "4]jx_~g", "4]jx_~g", "4]jx_~g");
      fieldWriter0.visitAnnotation("4]jx_~g", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "zbw", ">B5\"B]|/'>3+&Bg77N>", (String) null, "Deprecated");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      classWriter0.version = (-617);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "z{bP6tw", "z{bP6tw", "z{bP6tw", "z{bP6tw");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5308));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "4]]jxY~{Y6g", "4]]jxY~{Y6g", "4]]jxY~{Y6g", "4]]jxY~{Y6g");
      Attribute attribute0 = new Attribute("4]]jxY~{Y6g");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-596));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-596), "zbw", "zbw", "zbw", (Object) null);
      fieldWriter0.visitAnnotation("zbw", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "zbw", ">B5\"B]|/'>3+&Bg77N>", (String) null, "Deprecated");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1530), "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "}l^r", "d*r LV]=K?'ucX");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      stringArray0[3] = "Lc,]<DiqR=Ow_Gy8:*";
      stringArray0[4] = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      stringArray0[5] = "}l^r";
      stringArray0[6] = "org.apache.commons.io.IOCase";
      classWriter0.visit(49, 48, "Lc,]<DiqR=Ow_Gy8:*", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "d*r LV]=K?'ucX", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65524);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2), "4]jx_~g", "4]jx_~g", "4]jx_~g", "4]jx_~g");
      fieldWriter0.visitAnnotation("4]jx_~g", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-617));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-617), "zbw", ">B5\"B]|/'>3+&Bg77N>", (String) null, "Deprecated");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-899));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-899), "L^Wp%^8D1xZ\"|Nd#~J", "", "", "Insensitive");
      fieldWriter0.visitEnd();
  }
}
