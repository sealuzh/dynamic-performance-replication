/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 05:56:25 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-122);
      TiffField tiffField0 = new TiffField(304, (-1717986917), fieldTypeShort0, 304, (-1717986917), byteArray0, byteOrder0, 9);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(304, tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-31232), int0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(41493, "");
      TiffField tiffField0 = new TiffField(41493, 41493, fieldTypeFloat0, 1397L, 1453, byteArray0, byteOrder0, 1);
      tiffField0.getValue();
      assertEquals(1453, tiffField0.getOffset());
      assertEquals(41493, tiffField0.getDirectoryType());
      assertEquals(41493, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34665, 34665, fieldTypeAscii0, 34665, 34665, byteArray0, byteOrder0, (-1319));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34665, tiffField0.getOffset());
      assertEquals((-1319), tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(34665, tiffField0.getDirectoryType());
      assertEquals(34665, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1252, 1, fieldTypeShort0, 1, 69L, byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getTag();
      assertEquals(69, tiffField0.getOffset());
      assertEquals(1252, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(61, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(226, 990, fieldTypeAscii0, 226, 61, byteArray0, byteOrder0, 61);
      String string0 = tiffField0.getStringValue();
      assertEquals(61, tiffField0.getOffset());
      assertEquals(226, tiffField0.getTag());
      assertEquals(990, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(61, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3945), 561, fieldTypeShort0, 0L, 561, byteArray0, byteOrder0, 50830);
      int int0 = tiffField0.getSortHint();
      assertEquals(561, tiffField0.getOffset());
      assertEquals(50830, int0);
      assertEquals((-3945), tiffField0.getTag());
      assertEquals(561, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-533), (-533), fieldTypeByte0, 1L, (-533), byteArray0, byteOrder0, (-2146416839));
      int int0 = tiffField0.getSortHint();
      assertEquals((-533), tiffField0.getTag());
      assertEquals((-533), tiffField0.getOffset());
      assertEquals((-2146416839), int0);
      assertEquals((-533), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1681), ",=xULI:9kG6g");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1681), (-1681), fieldTypeDouble0, (-1681), 0L, byteArray0, byteOrder0, (-826));
      int int0 = tiffField0.getOffset();
      assertEquals((-826), tiffField0.getSortHint());
      assertEquals((-1681), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1681), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1691), 0, fieldTypeRational0, 469L, (-1691), byteArray0, byteOrder0, 48321);
      int int0 = tiffField0.getOffset();
      assertEquals(48321, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1691), tiffField0.getTag());
      assertEquals((-1691), int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)11;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)19);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeByte0, 1, 50, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-90);
      byteArray0[4] = (byte)12;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeRational0, 17, (-996L), byteArray0, byteOrder0, (-3876));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-996), tiffField0.getOffset());
      assertEquals(17, tiffField0.getDirectoryType());
      assertEquals((-7), int0);
      assertEquals(17, tiffField0.getTag());
      assertEquals((-3876), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3508, 21, fieldTypeShort0, 1, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(3508, tiffField0.getTag());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)93;
      TiffField tiffField0 = new TiffField((-2199), (-752), fieldTypeShort0, 1L, (-752), byteArray0, byteOrder0, (-4233));
      tiffField0.getIntValue();
      assertEquals((-752), tiffField0.getOffset());
      assertEquals((-2199), tiffField0.getTag());
      assertEquals((-4233), tiffField0.getSortHint());
      assertEquals((-752), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-89);
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeShort0, 1L, (-3524L), byteArray0, byteOrder0, 2146894812);
      tiffField0.getIntValue();
      assertEquals((-3524), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2146894812, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(9, (String) null);
      TiffField tiffField0 = new TiffField(2147088526, 1026, fieldTypeByte0, 9, 1L, byteArray0, byteOrder0, 2146572539);
      tiffField0.getFieldTypeName();
      assertEquals(2147088526, tiffField0.getTag());
      assertEquals(1026, tiffField0.getDirectoryType());
      assertEquals(2146572539, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 4L, 4L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-3230), 427, (FieldType) null, (-3230), (-3230), byteArray0, (ByteOrder) null, (byte) (-101));
      tiffField0.getFieldType();
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals(427, tiffField0.getDirectoryType());
      assertEquals((-3230), tiffField0.getTag());
      assertEquals((-3230), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">oS}*kxs9>Gj%wg4!4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 48, fieldTypeDouble0, 2724L, 1791L, byteArray0, byteOrder0, 48);
      tiffField0.getFieldType();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1791, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-114), ": ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-114), (-114), fieldTypeAscii0, 2147483647L, (-2091L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals((-114), tiffField0.getTag());
      assertEquals((-2091), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1, 1825, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1825, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-30);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-30), 1106, fieldTypeLong0, 1, (-1230L), byteArray0, byteOrder0, 1106);
      tiffField0.getDoubleValue();
      assertEquals((-30), tiffField0.getTag());
      assertEquals(1106, tiffField0.getSortHint());
      assertEquals((-1230), tiffField0.getOffset());
      assertEquals(1106, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-38);
      TiffField tiffField0 = new TiffField((-479), (-194), fieldTypeAscii0.SHORT, 1L, 1L, byteArray0, byteOrder0, (-1651));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-479), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-194), tiffField0.getDirectoryType());
      assertEquals((-1651), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getDoubleArrayValue();
      assertEquals(19, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeRational0, 2407L, (-1L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1911), (-1911), fieldTypeShort0, 1009L, 2113396605, byteArray0, byteOrder0, (-1778));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1911), tiffField0.getTag());
      assertEquals(2113396605, tiffField0.getOffset());
      assertEquals((-1911), int0);
      assertEquals((-1778), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1609, 1609, fieldTypeAscii0, 0, 484L, byteArray0, byteOrder0, (-1305));
      tiffField0.getCount();
      assertEquals(1609, tiffField0.getTag());
      assertEquals((-1305), tiffField0.getSortHint());
      assertEquals(484, tiffField0.getOffset());
      assertEquals(1609, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-60), (byte)35, fieldTypeShort0, (-206L), 953L, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals((-60), tiffField0.getTag());
      assertEquals((-206L), long0);
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(953, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 0, 1, byteArray0, byteOrder0, 1);
      tiffField0.getBytesLength();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1911), (-1911), fieldTypeShort0, 1009L, 2113396605, byteArray0, byteOrder0, (-1778));
      tiffField0.getBytesLength();
      assertEquals((-1911), tiffField0.getTag());
      assertEquals(2113396605, tiffField0.getOffset());
      assertEquals((-1778), tiffField0.getSortHint());
      assertEquals((-1911), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), (-1610L), byteArray0, (ByteOrder) null, (-1));
      tiffField0.getByteOrder();
      assertEquals((-1610), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2672, 0, fieldTypeAscii0, 2672, (-523L), byteArray0, byteOrder0, 0);
      tiffField0.getByteOrder();
      assertEquals(2672, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-523), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)29, 2113396605, fieldTypeShort0, (byte)69, 2784L, byteArray0, byteOrder0, (byte)29);
      tiffField0.getByteArrayValue();
      assertEquals(2113396605, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getTag());
      assertEquals(2784, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(832, (-1), fieldTypeShort0.SRATIONAL, (-2147483648L), 371L, byteArray0, byteOrder0, (-793));
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getByteArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(832, tiffField0.getTag());
      assertEquals(371, tiffField0.getOffset());
      assertEquals((-793), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1354, 1354, (FieldType) null, 1354, 1354, byteArray0, byteOrder0, 1354);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1009), (-1009), fieldTypeFloat0, (-1009), (-1009), byteArray0, byteOrder0, (-1009));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 59);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1398, 4352, (FieldType) null, 1070L, 4352, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(563, 563, (FieldType) null, 563, 563, (byte[]) null, byteOrder0, 563);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[328];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-3438), (-3438), fieldTypeDouble0, (-3438), (-3438), byteArray0, byteOrder0, (-3438));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2905, 14, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 2905);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(27, (-197), fieldTypeFloat0, 54L, 27, byteArray0, (ByteOrder) null, 32908);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-631), (-631), fieldTypeRational0, (-631), (-631), byteArray0, byteOrder0, (-631));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1444, 1444, fieldTypeRational0, 1444, 1444, (byte[]) null, byteOrder0, 1444);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeRational0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(655, 655, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 655);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(563, 563, (FieldType) null, 563, 563, (byte[]) null, byteOrder0, 563);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2152), (-2152), (FieldType) null, (-2152), (-2152), byteArray0, byteOrder0, (-2152));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-775), (-775), fieldTypeRational0, (-775), (-775), byteArray0, byteOrder0, (-775));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(28, (-2717), fieldTypeShort0, (-2717), (-1042L), byteArray0, byteOrder0, (-2717));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1434, 1434, fieldTypeRational0, 1434, 1434, (byte[]) null, byteOrder0, 1434);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1293), (-1293), fieldTypeRational0, (-1293), (-1293), byteArray0, byteOrder0, (-1293));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeShort0, 1451, 1451, byteArray0, byteOrder0, 1451);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1793, 1793, fieldTypeRational0, 1793, 1793, (byte[]) null, byteOrder0, 1793);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2504), (-2504), fieldTypeShort0, (-2504), (-2504), byteArray0, byteOrder0, (-2504));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(525, (byte) (-10), (FieldType) null, 525, (byte) (-10), byteArray0, byteOrder0, 525);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-150), fieldTypeFloat0, (-150), (-150), byteArray0, byteOrder0, (-1648));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1469, 1469, fieldTypeRational0, 1469, 1469, (byte[]) null, byteOrder0, 1469);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeRational0, (-4), (-4), byteArray0, byteOrder0, (-4));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeRational0, 32, 32, (byte[]) null, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1801), (-1801), fieldTypeRational0, (-1801), (-1801), byteArray0, byteOrder0, (-1801));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1197), (-1197), fieldTypeShort0, (-1197), (-1197), byteArray0, byteOrder0, (-1197));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1442, 1442, fieldTypeRational0, (-1864L), (-1864L), byteArray0, byteOrder0, 1442);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The FileFilter must not be null");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "The FileFilter must not be null");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[365];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1392), (-1392), fieldTypeDouble0, (-1392), (-1392), byteArray0, byteOrder0, (-1392));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rHyrPR/UtaBr4 -;V");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1276, 1276, fieldTypeRational0, 1L, (-1324L), byteArray0, byteOrder0, (-437));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 28, 28, (byte[]) null, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1883), (-1883), fieldTypeRational0, (-1883), (-1883), byteArray0, byteOrder0, (-1883));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1139), (-1139), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-1139));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1691), 0, fieldTypeRational0, 469L, (-1691), byteArray0, byteOrder0, 48321);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(4379);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("-1691 (0xfffff965: Unknown Tag):  (469 Rational)\n", charArrayWriter0.toString());
      assertEquals((-1691), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2, fieldTypeShort0.FLOAT, 1, 824L, byteArray0, byteOrder0, (-1952));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(824, tiffField0.getOffset());
      assertEquals((-1952), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, (byte) (-102));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-102), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1007), (-1007), fieldTypeLong0, (-1007), (-1007), (byte[]) null, byteOrder0, (-1007));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(645, 645, fieldTypeRational0, 2576L, (-1189L), byteArray0, byteOrder0, 40);
      tiffField0.getFieldType();
      assertEquals((-1189), tiffField0.getOffset());
      assertEquals(645, tiffField0.getTag());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(645, tiffField0.getDirectoryType());
      assertEquals(20608, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">oS}*kxs9>Gj%wg4!4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 3347, fieldTypeDouble0, 2147483647L, 50, byteArray0, byteOrder0, 2487);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(3347, int0);
      assertEquals(2487, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-8), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1423, 1423, fieldTypeRational0, 1423, 1423, byteArray0, byteOrder0, 1423);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">oS}*kxs9>Gj%wg4!4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 3347, fieldTypeDouble0, 2147483647L, 50, byteArray0, byteOrder0, 2487);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(2487, tiffField0.getSortHint());
      assertEquals(3347, tiffField0.getDirectoryType());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2190), fieldTypeRational0, (-2190), 28, (byte[]) null, byteOrder0, 28);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2190), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals((-17520), tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2939), (-2939), fieldTypeShort0, 1L, 590, byteArray0, byteOrder0, 1653);
      int int0 = tiffField0.getTag();
      assertEquals((-2939), tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(1653, tiffField0.getSortHint());
      assertEquals(590, tiffField0.getOffset());
      assertEquals((-2939), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">oS}*kxs9>Gj%wg4!4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, 2672L, 0, byteArray0, byteOrder0, 1);
      long long0 = tiffField0.getCount();
      assertEquals(2672L, long0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, ">oS}*kxs9>Gj%wg4!4");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 3347, fieldTypeDouble0, 2147483647L, 50, byteArray0, byteOrder0, 2487);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2487, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(3347, tiffField0.getDirectoryType());
      assertEquals((-8), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeShort0, 1825, 1825, byteArray0, byteOrder0, 1825);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1825 (0x721: Unknown Tag): ", string0);
      assertEquals(1825, tiffField0.getOffset());
      assertEquals(1825, tiffField0.getSortHint());
      assertEquals(1825, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeShort0, 1825, 1825, byteArray0, byteOrder0, 1825);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2905, 2905, fieldTypeLong0, 2905, 2905, byteArray0, byteOrder0, 2905);
      tiffField0.getIntValueOrArraySum();
      assertEquals(11620, tiffField0.getBytesLength());
      assertEquals(2905L, tiffField0.getCount());
      assertEquals(2905, tiffField0.getDirectoryType());
      assertEquals(2905, tiffField0.getSortHint());
      assertEquals(2905, tiffField0.getTag());
      assertEquals(2905, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50212, 50212, fieldTypeDouble0, 50212, 50212, byteArray0, byteOrder0, 50212);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@641a5beb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50212, 50212, fieldTypeDouble0, 50212, 50212, byteArray0, byteOrder0, 50212);
      tiffField0.getDoubleArrayValue();
      assertEquals(50212, tiffField0.getOffset());
      assertEquals(50212, tiffField0.getSortHint());
      assertEquals(50212, tiffField0.getTag());
      assertEquals(50212, tiffField0.getDirectoryType());
      assertEquals(50212L, tiffField0.getCount());
      assertEquals(401696, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeFloat0, 1451, 1451, byteArray0, byteOrder0, 1451);
      tiffField0.getDoubleArrayValue();
      assertEquals(5804, tiffField0.getBytesLength());
      assertEquals(1451, tiffField0.getDirectoryType());
      assertEquals(1451L, tiffField0.getCount());
      assertEquals(1451, tiffField0.getSortHint());
      assertEquals(1451, tiffField0.getTag());
      assertEquals(1451, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(2905, 2905, fieldTypeLong0, 2905, 2905, byteArray0, byteOrder0, 2905);
      tiffField0.getDoubleArrayValue();
      assertEquals(2905L, tiffField0.getCount());
      assertEquals(11620, tiffField0.getBytesLength());
      assertEquals(2905, tiffField0.getDirectoryType());
      assertEquals(2905, tiffField0.getSortHint());
      assertEquals(2905, tiffField0.getTag());
      assertEquals(2905, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(648, 648, fieldTypeByte0, 648, 648, byteArray0, byteOrder0, 648);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3b816ce2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeShort0, 1825, 1825, byteArray0, byteOrder0, 1825);
      tiffField0.getDoubleArrayValue();
      assertEquals(1825, tiffField0.getTag());
      assertEquals(1825, tiffField0.getOffset());
      assertEquals(1825, tiffField0.getDirectoryType());
      assertEquals(1825, tiffField0.getSortHint());
      assertEquals(3650, tiffField0.getBytesLength());
      assertEquals(1825L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, byteArray0, byteOrder0, 36);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2905, 2905, fieldTypeLong0, 2905, 2905, byteArray0, byteOrder0, 2905);
      tiffField0.getIntArrayValue();
      assertEquals(2905, tiffField0.getSortHint());
      assertEquals(2905, tiffField0.getOffset());
      assertEquals(11620, tiffField0.getBytesLength());
      assertEquals(2905L, tiffField0.getCount());
      assertEquals(2905, tiffField0.getTag());
      assertEquals(2905, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50212, 50212, fieldTypeDouble0, 50212, 50212, byteArray0, byteOrder0, 50212);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@709ade1c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      tiffField0.getIntArrayValue();
      assertEquals(19L, tiffField0.getCount());
      assertEquals(19, tiffField0.getOffset());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(19, tiffField0.getTag());
      assertEquals(19, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeShort0, 1825, 1825, byteArray0, byteOrder0, 1825);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1825L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1825, tiffField0.getDirectoryType());
      assertEquals(3650, tiffField0.getBytesLength());
      assertEquals(1825, tiffField0.getTag());
      assertEquals(1825, tiffField0.getOffset());
      assertEquals(1825, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1446, 1446, fieldTypeRational0, 1446, 1446, byteArray0, byteOrder0, 1446);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-179), (-179), fieldTypeRational0.ASCII, 0, 0, byteArray0, byteOrder0, (-179));
      String string0 = tiffField0.getStringValue();
      assertEquals((-179), tiffField0.getTag());
      assertEquals((-179), tiffField0.getSortHint());
      assertEquals((-179), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeShort0, 1451, 1451, byteArray0, byteOrder0, 1451);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@32faf141
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1443, 1443, fieldTypeRational0, 1443, 1443, byteArray0, byteOrder0, 1443);
      String string0 = tiffField0.getTagName();
      assertEquals(1443, tiffField0.getDirectoryType());
      assertEquals(1443, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x5a3)", string0);
      assertEquals(1443, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeDouble0, 330, 330, byteArray0, byteOrder0, 330);
      String string0 = tiffField0.getTagName();
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getOffset());
      assertEquals("SubIFDs", string0);
      assertEquals(330, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[273];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeFloat0, 62, 62, byteArray0, byteOrder0, 62);
      tiffField0.dump();
      assertEquals(62, tiffField0.getTag());
      assertEquals(62L, tiffField0.getCount());
      assertEquals(248, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getOffset());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[365];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(65604, 65604, fieldTypeByte0, 65604, 65604, byteArray0, byteOrder0, 65604);
      String string0 = tiffField0.toString();
      assertEquals(65604, tiffField0.getDirectoryType());
      assertEquals(65604, tiffField0.getSortHint());
      assertEquals("65604 (0x10044: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (365) (65604 SByte)", string0);
      assertEquals(65604, tiffField0.getOffset());
      assertEquals(65604, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeFloat0, 29, 29, byteArray0, byteOrder0, 29);
      tiffField0.dump();
      assertEquals(116, tiffField0.getBytesLength());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getOffset());
      assertEquals(29L, tiffField0.getCount());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(341, 341, fieldTypeDouble0, 341, 341, byteArray0, byteOrder0, 341);
      String string0 = tiffField0.getValueDescription();
      assertEquals(341, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52)", string0);
      assertEquals(341L, tiffField0.getCount());
      assertEquals(341, tiffField0.getOffset());
      assertEquals(341, tiffField0.getSortHint());
      assertEquals(341, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2747, 2747, fieldTypeByte0, 2747, 255L, byteArray0, byteOrder0, 2747);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2747, tiffField0.getDirectoryType());
      assertEquals(2747L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2747, tiffField0.getTag());
      assertEquals(2747, tiffField0.getBytesLength());
      assertEquals(2747, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[97];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2905, 2905, fieldTypeLong0, 2905, 2905, byteArray0, byteOrder0, 2905);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(2905L, tiffField0.getCount());
      assertEquals(11620, tiffField0.getBytesLength());
      assertEquals(2905, tiffField0.getOffset());
      assertEquals(2905, tiffField0.getSortHint());
      assertEquals(2905, tiffField0.getDirectoryType());
      assertEquals(2905, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37380, 37380, fieldTypeFloat0.LONG, 37380, 37380, byteArray0, byteOrder0, 37380);
      tiffField0.dump();
      assertEquals(37380, tiffField0.getOffset());
      assertEquals(37380, tiffField0.getTag());
      assertEquals(37380, tiffField0.getSortHint());
      assertEquals(149520, tiffField0.getBytesLength());
      assertEquals(37380, tiffField0.getDirectoryType());
      assertEquals(37380L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[139];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(50831, 50831, fieldTypeShort0, 50831, 50831, byteArray0, byteOrder0, 50831);
      tiffField0.dump();
      assertEquals(101662, tiffField0.getBytesLength());
      assertEquals(50831, tiffField0.getDirectoryType());
      assertEquals(50831L, tiffField0.getCount());
      assertEquals(50831, tiffField0.getSortHint());
      assertEquals(50831, tiffField0.getTag());
      assertEquals(50831, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeShort0, 1451, 1451, byteArray0, byteOrder0, 1451);
      tiffField0.dump();
      assertEquals(1451, tiffField0.getSortHint());
      assertEquals(1451, tiffField0.getDirectoryType());
      assertEquals(1451, tiffField0.getTag());
      assertEquals(1451L, tiffField0.getCount());
      assertEquals(1451, tiffField0.getOffset());
      assertEquals(2902, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeAscii0, 80, 80, byteArray0, byteOrder0, 80);
      tiffField0.dump();
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getTag());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(80, tiffField0.getOffset());
      assertEquals(80L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50212, 50212, fieldTypeDouble0, 50212, 50212, byteArray0, byteOrder0, 50212);
      tiffField0.dump();
      assertEquals(50212, tiffField0.getOffset());
      assertEquals(401696, tiffField0.getBytesLength());
      assertEquals(50212, tiffField0.getTag());
      assertEquals(50212L, tiffField0.getCount());
      assertEquals(50212, tiffField0.getDirectoryType());
      assertEquals(50212, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-595), 24, fieldTypeRational0, 24, 36, byteArray0, byteOrder0, (-595));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(36, 36);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(24L, tiffField0.getCount());
      assertNull(string0);
      assertEquals((-595), tiffField0.getSortHint());
      assertEquals((-595), tiffField0.getTag());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1769, 1769, fieldTypeShort0, (-1145L), (-1145L), byteArray0, byteOrder0, 1769);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1769, 1769);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SShort", string0);
      assertEquals(1769, tiffField0.getSortHint());
      assertEquals(1769, tiffField0.getTag());
      assertEquals((-1145), tiffField0.getOffset());
      assertEquals((-2290), tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1769, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[60];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1451, 1451, fieldTypeShort0, 1451, 1451, byteArray0, byteOrder0, 1451);
      tiffField0.getFieldTypeName();
      assertEquals(1451, tiffField0.getTag());
      assertEquals(1451, tiffField0.getDirectoryType());
      assertEquals(1451, tiffField0.getSortHint());
      assertEquals(1451, tiffField0.getOffset());
      assertEquals(1451L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1135), (-1135), fieldTypeRational0, (byte)0, (-885L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1135), tiffField0.getDirectoryType());
      assertEquals((-1135), tiffField0.getTag());
      assertEquals((-885), tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-2190), fieldTypeRational0, (-2190), 28, (byte[]) null, byteOrder0, 28);
      tiffField0.dump();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2190), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-2190L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(255, 255, fieldTypeLong0, 1L, 255, byteArray0, byteOrder0, 255);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, byteArray0, byteOrder0, 19);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(19, tiffField0.getTag());
      assertEquals(19L, tiffElement0.offset);
  }
}
