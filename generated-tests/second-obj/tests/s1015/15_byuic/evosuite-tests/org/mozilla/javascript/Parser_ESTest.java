/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:19:40 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.InterpreterData;
import org.mozilla.javascript.NativeArray;
import org.mozilla.javascript.NativeJavaMethod;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.ObjToIntMap;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.addStrictWarning("error reporter", "(Ljava/lang/String;)Ljava/lang/StringBuffer;");
      String string0 = parser0.getEncodedSource();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("B1:%B5q)_");
      parser0.pushScope(functionNode0);
      parser0.pushScope(functionNode0);
      // Undeclared exception!
      try { 
        parser0.pushScope(functionNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("language version", "language version", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Set<String> set0 = context0.activationNames;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("with", "zMyQa}aqC[f", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before with-statement object (zMyQa}aqC[f#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(".+", "n;ARZ#lT%ZPT#yo1hN?", 113);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (n;ARZ#lT%ZPT#yo1hN?#113)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.addListener(contextFactory_Listener0);
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = contextFactory1.makeContext();
      compilerEnvirons0.initFromContext(context0);
      compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ClassLoader.getSystemClassLoader();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("pIh*#/~s'J7l:BT", "OA\"0~G", 1467);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (OA\"0~G#1467)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.const.redecl", "1Ni&qkq=q2z3W(", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (1Ni&qkq=q2z3W(#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      errorReporter0.runtimeError("", "", 17, ",sdH!;N", 17);
      parser1.parse("floa;", "floa;", 17);
      assertEquals("\u0087'\u0004floaQ\u0001", parser1.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.getContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ObjToIntMap objToIntMap0 = context1.iterating;
      // Undeclared exception!
      try { 
        parser0.parse("throw", "throw", (-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(";f#K2rLH^i?VEu;#", ";f#K2rLH^i?VEu;#", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (;f#K2rLH^i?VEu;##10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser2 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("+G\"Pe{aJ|F}0.,C", "msg.no.paren.for.ctrl", (-1613));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1613
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@,%Ute^7y~", "@,%Ute^7y~", (-26));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -26
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ClassLoader classLoader0 = context0.getApplicationClassLoader();
      classLoader0.getParent();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory1.enterContext();
      contextFactory1.onContextCreated(context1);
      ContextFactory contextFactory2 = new ContextFactory();
      Context context2 = contextFactory2.enterContext();
      Context.getContext();
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("x%wSED", "x%wSED", 144);
      // Undeclared exception!
      try { 
        scriptOrFnNode0.setString(context2.errorReporterProperty);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.mozilla.javascript.ScriptOrFnNode cannot be cast to org.mozilla.javascript.Node$StringNode
         //
         verifyException("org.mozilla.javascript.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ClassLoader.getSystemClassLoader();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("H8P@q", "language version", 118);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#118)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(2);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      StringReader stringReader0 = new StringReader("--");
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "language version", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file (language version#14)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(pushbackInputStream0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) inputStreamReader0, "language version", 105);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      contextFactory0.onContextCreated(context0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("S-gU8y`ayH|", "error reporter", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = new Context();
      Context context2 = contextFactory1.makeContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ObjToIntMap objToIntMap0 = context2.iterating;
      context1.getApplicationClassLoader();
      PipedReader pipedReader0 = new PipedReader();
      parser0.addStrictWarning("zzz", "A-2k:8.");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons2, errorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("d=_5{", "language version", 24);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#24)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      parser0.addStrictWarning("--", "--");
      parser0.insideFunction();
      parser0.addStrictWarning("tgxUJwAj", "$Qhzfi704'");
      parser0.createDecompiler(compilerEnvirons1);
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser2 = new Parser(compilerEnvirons2, (ErrorReporter) null);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      Parser parser3 = new Parser(compilerEnvirons0, errorReporter0);
      Parser parser4 = new Parser(compilerEnvirons2, errorReporter0);
      compilerEnvirons0.activationNames = null;
      Parser parser5 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Parser parser6 = new Parser(compilerEnvirons2, (ErrorReporter) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      // Undeclared exception!
      try { 
        parser6.parse("~>Q2kY", "~>Q2kY", 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.addListener(contextFactory_Listener0);
      contextFactory0.makeContext();
      Context.getContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.no.semi.for", "error reporter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("g},", "z2.NeWX./93OJ#`n2", 46);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (z2.NeWX./93OJ#`n2#46)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory.getGlobal();
      classLoader0.getParent();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("float", "Cannot find member: ", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (Cannot find member: #14)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      contextFactory0.enterContext(context0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("'r\":n/J%'", "tgxUJwAj", 100);
      parser0.pushScope(scriptOrFnNode0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Node.Scope node_Scope0 = new Node.Scope(1, 2);
      // Undeclared exception!
      try { 
        scriptOrFnNode0.setScope(node_Scope0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("H8P@q", "language version", 118);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#118)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("+,rk", "\"L4$'H~~7", 131072);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (\"L4$'H~~7#131072)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ClassLoader.getSystemClassLoader();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.addStrictWarning("error reporter", "error reporter");
      // Undeclared exception!
      try { 
        parser0.parse("84DPji82|820$LG]f", "", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Set<String> set0 = context0.activationNames;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter1);
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      String string0 = "with";
      String string1 = " BH?Tcnsdm9";
      // Undeclared exception!
      try { 
        parser0.parse(string1, string0, context0.FEATURE_PARENT_PROTO_PROPERTIES);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (with#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons0.initFromContext(context0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.getErrorReporter();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      parser0.createDecompiler(compilerEnvirons1);
      parser0.parse("", "language version", 125);
      parser0.addStrictWarning((String) null, "h1MgOumWK");
      // Undeclared exception!
      try { 
        parser0.parse("Y:`udTp(tit'e6Z", "error reporter", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#14)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      parser0.parse("[]", "", 4);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(3);
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(13, true, "language version");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      classLoader0.getParent();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory.getGlobal();
      contextFactory0.enter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "[native code for ";
      // Undeclared exception!
      try { 
        parser0.parse("[native code for ", "error reporter", 19);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (error reporter#19)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      InterpreterData interpreterData0 = new InterpreterData(8, "error reporter", "language version");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.getErrorReporter();
      ObjToIntMap objToIntMap0 = context0.iterating;
      String string0 = "oc <\\ `5W!Mv2Y";
      // Undeclared exception!
      try { 
        parser0.parse("oc < `5W!Mv2Y", "language version", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader0.clearAssertionStatus();
      ContextFactory.getGlobal();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      InterpreterData interpreterData0 = new InterpreterData(8, "error reporter", "language version");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "U27w2>#TkNvzc_p";
      // Undeclared exception!
      try { 
        parser0.parse("U27w2>#TkNvzc_p", "language version", 836);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#836)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      parser0.createDecompiler(compilerEnvirons0);
      String string0 = "i+fm`@%[Xo-/";
      // Undeclared exception!
      try { 
        parser0.parse("i+fm`@%[Xo-/", (String) null, 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classLoader0.getParent();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory0.enterContext();
      String string0 = "(new ";
      InterpreterData interpreterData0 = new InterpreterData(140, "language version", "(new ");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "U27w2>#TkNvzc_p";
      // Undeclared exception!
      try { 
        parser0.parse("ST[/x[qiWGP[6rw", "", (-191));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -191
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-113);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_re");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("NaVp&<~", "C-t=>", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegally formed XML syntax (C-t=>#6)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.enterContext();
      Context.getContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("language version");
      String string0 = "E^b`8Y<dr6\"G";
      // Undeclared exception!
      try { 
        parser0.parse("E^b`8Y<dr6\"G", "language version", 1558);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (language version#1558)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(false);
      // Undeclared exception!
      try { 
        parser0.parse("[kaXAN5R,i", "UaN{Pa*#p;af?GkM,dEa", 14);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (UaN{Pa*#p;af?GkM,dEa#14)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Context context0 = new Context();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      StringReader stringReader0 = new StringReader("-");
      stringReader0.skip(0);
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse((Reader) stringReader0, "error reporter", 1112);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file (error reporter#1112)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ContextFactory.getGlobal();
      ClassLoader.getSystemClassLoader();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":.$\"");
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "@B`+HC{Q8nLi*t";
      // Undeclared exception!
      try { 
        parser0.parse("@B`+HC{Q8nLi*t", (String) null, (-2462));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2462
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      String string0 = "BF~vB";
      FunctionNode functionNode0 = new FunctionNode("language version");
      functionNode0.flattenSymbolTable(false);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("{!\"K(vz;W0", "{!\"K(vz;W0", 3806);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal ({!\"K(vz;W0#3806)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      Context context0 = new Context(contextFactory0);
      context0.getErrorReporter();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("YE6(WG U=p'te52,", "error reporter", 106);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (error reporter#106)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("{n", "{n", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement ({n#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("!4#*xGJi~{)L;\"?", "`h5<1(M", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (`h5<1(M#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      parser0.parse("", "_h6*", 45);
      // Undeclared exception!
      try { 
        parser0.addWarning("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory.initGlobal(contextFactory0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter1);
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory0.enter();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("uD,Wj(%Hl2^:", (String) null, 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("/", "/", 110);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (/#110)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.getContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ObjToIntMap objToIntMap0 = context1.iterating;
      context0.getApplicationClassLoader();
      // Undeclared exception!
      try { 
        parser0.parse("d!=:_{}F", "A-2k:8.", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (A-2k:8.#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      Context context1 = new Context();
      boolean boolean0 = parser0.calledByCompileFunction;
      FunctionNode functionNode0 = new FunctionNode("msg.no.paren!cond");
      Context.exit();
      boolean boolean1 = parser0.calledByCompileFunction;
      String string0 = "s5T:tgxUJwAj:k/vC|w";
      parser0.parse("s5T:tgxUJwAj:k/vC|w", "language version", 7);
      compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = new ContextFactory();
      // Undeclared exception!
      try { 
        parser0.reportError("java.lang.Class");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property java.lang.Class
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassLoader.getSystemClassLoader();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "implements";
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser2 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser2.parse("[Cd..C", "", 2389);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (#2389)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons3.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.createDecompiler(compilerEnvirons3);
      parser0.parse("msg.no.brace.body", "", 120);
      contextFactory0.makeContext();
      parser0.addStrictWarning("", "nWxP_O.XbGR<+C<kLOc");
      compilerEnvirons2.setGenerateObserverCount(true);
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("switch ", "msg.too.deep.parser.recursion", 144);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before switch expression (msg.too.deep.parser.recursion#144)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      // Undeclared exception!
      try { 
        parser0.parse("<8{68i|v5NSsd8", "", 668);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ContextFactory contextFactory1 = new ContextFactory();
      compilerEnvirons0.setXmlAvailable(false);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Context context0 = contextFactory1.makeContext();
      Context context1 = contextFactory0.enterContext(context0);
      Parser parser0 = (Parser)context1.lastInterpreterFrame;
      Context context2 = contextFactory1.enter();
      contextFactory1.enterContext(context2);
      context1.getApplicationClassLoader();
      assertSame(context1, context0);
      
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      parser1.parse("org.mozilla.javascript.ScriptableObject$Slot", "error reporter", 150);
      parser1.getCurrentLineNumber();
      assertEquals("\u0087'\u0003orgk'\u0007mozillak'\njavascriptk'\u0015ScriptableObject$SlotQ\u0001", parser1.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(true);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons1.setXmlAvailable(true);
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      boolean boolean0 = parser0.calledByCompileFunction;
      String string0 = "";
      FunctionNode functionNode0 = new FunctionNode("");
      boolean boolean1 = functionNode0.itsIsGenerator;
      // Undeclared exception!
      try { 
        parser0.parse("factory.makeContext() returned Context instance already associated with some thread", "italics", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (italics#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("do ", "do ", 102);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (do #102)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      Context.getContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ObjToIntMap objToIntMap0 = context0.iterating;
      String string0 = "d!=:_{}F";
      parser0.parse("msg.bad.throw.eol", "d!=:_{}F", 956);
      // Undeclared exception!
      try { 
        parser0.addError("language version", "d!=:_{}F");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setXmlAvailable(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter2);
      // Undeclared exception!
      try { 
        parser0.parse("@(VwaK 0", "language version", 1906);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (language version#1906)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Context context0 = new Context();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(true);
      compilerEnvirons0.initFromContext(context0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode("language version");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      context0.useDynamicScope = false;
      parser0.parse("this", "MaHC/\" AsA6=Jyn", 13);
      parser0.eof();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      NativeJavaMethod.scriptSignature(context0.emptyArgs);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(2, false, "language version");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.addActivationName("8h=iGn_Ujf");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.enter();
      contextFactory1.onContextCreated(context0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("(new Boolean(true))", "language version", 110);
      assertEquals(110, scriptOrFnNode0.getEndLineno());
      
      errorReporter0.runtimeError("e!\"i] KTk0 &m@d", "", 17, "T", 106);
      parser0.addStrictWarning("error reporter", "");
      parser0.insideFunction();
      assertEquals("\u0087V\u001E'\u0007BooleanV-WWQ\u0001", parser0.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval((ErrorReporter) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      Parser parser2 = new Parser(compilerEnvirons1, errorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      compilerEnvirons1.initFromContext(context0);
      // Undeclared exception!
      try { 
        parser1.parse("(new ", "o7|S}*OS&wj6Y,)CaB", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("zt.NeTWX.@93OJ#`n2", "4ObCg&e%T_7.q={Z78=", 4523);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (4ObCg&e%T_7.q={Z78=#4523)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setXmlAvailable(false);
      Context context0 = new Context();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      ClassLoader.getSystemClassLoader();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter2);
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode((-1));
      // Undeclared exception!
      try { 
        parser0.parse("<>", (String) null, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setErrorReporter(defaultErrorReporter0);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      Charset.defaultCharset();
      byteArray0[2] = (byte) (-28);
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      compilerEnvirons1.setGenerateDebugInfo(false);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      parser0.createDecompiler(compilerEnvirons1);
      parser0.parse("tgxUJwAj", "error reporter", 12);
      parser0.addStrictWarning("error reporter", "error reporter");
      compilerEnvirons1.setGenerateObserverCount(false);
      parser0.defineSymbol(108, false, "tgxUJwAj");
      // Undeclared exception!
      try { 
        parser0.addWarning("tgxUJwAj", "tgxUJwAj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property tgxUJwAj
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      compilerEnvirons0.getErrorReporter();
      ContextFactory.Listener contextFactory_Listener1 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener1);
      ContextFactory.getGlobal();
      Context context0 = new Context();
      Context context1 = Context.getContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ObjToIntMap objToIntMap0 = context1.iterating;
      parser0.parse("(new Boolean(false))", "throw", 4);
      parser0.addStrictWarning("throw", ":E|(Y*eXyRelfI5]3n");
      // Undeclared exception!
      try { 
        parser0.reportError("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      ClassLoader.getSystemClassLoader();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(true);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser1.compilerEnv = compilerEnvirons1;
      contextFactory0.enter();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser2 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("void", "-0", (-493));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -493
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "B++p0Iy '|=o*=^{c%";
      // Undeclared exception!
      try { 
        parser0.parse("B++p0Iy '|=o*=^{c%", "B++p0Iy '|=o*=^{c%", 61);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (B++p0Iy '|=o*=^{c%#61)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Context context0 = contextFactory0.enter();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      compilerEnvirons0.setGenerateObserverCount(false);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      parser1.insideFunction();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FunctionNode functionNode0 = new FunctionNode("language version");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)103;
      byteArray0[0] = (byte) (-71);
      compilerEnvirons0.setXmlAvailable(false);
      char[] charArray0 = new char[5];
      charArray0[0] = 'q';
      charArray0[1] = 'r';
      charArray0[2] = 'q';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      Parser parser2 = new Parser(compilerEnvirons0, errorReporter0);
      parser2.compilerEnv = compilerEnvirons0;
      // Undeclared exception!
      try { 
        parser2.parse("h>{a]qp9", "long", 150);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (long#150)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
