/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 13:23:50 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp0.min = (-2021);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
      
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.max = 6;
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      boolean boolean1 = regexp1.equals(regexp0);
      assertFalse(regexp0.equals((Object)regexp1));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 256;
      int[] intArray0 = new int[8];
      intArray0[0] = (-3342);
      intArray0[1] = 256;
      intArray0[2] = 256;
      intArray0[3] = 256;
      intArray0[4] = 256;
      intArray0[5] = 256;
      intArray0[6] = 256;
      intArray0[7] = 256;
      regexp1.runes = intArray0;
      regexp1.flags = 1342;
      regexp0.equals(regexp1);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      String string0 = regexp0.toString();
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.equals("EMPTY_MATCH");
      regexp0.maxCap();
      regexp0.min = 0;
      regexp0.max = 0;
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.max = (-820);
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.equals("");
      regexp0.maxCap();
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp0.equals((Object) null);
      regexp0.maxCap();
      Object object0 = new Object();
      regexp0.equals(object0);
      boolean boolean1 = regexp0.equals(object0);
      assertFalse(boolean1);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
      
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean2 = regexp0.equals(regexp1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[5];
      regexp0.flags = (-1057);
      intArray0[0] = (-1057);
      intArray0[1] = 504;
      intArray0[2] = 0;
      intArray0[3] = 8;
      intArray0[4] = (-1853);
      regexp0.runes = intArray0;
      regexp0.min = 17;
      regexp0.toString();
      regexp0.equals("(?i:xfffffbdf\u01F8x00\bxfffff8c3)");
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?i:xfffffbdf\u01F8x00\bxfffff8c3)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?i:xfffffbdf\u01F8x00\bxfffff8c3)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      regexp0.name = "";
      regexp1.name = "";
      regexp1.equals(regexp_Op0);
      regexp1.cap = 4;
      regexp1.flags = 6981;
      regexp1.flags = 4;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      int[] intArray0 = new int[3];
      intArray0[0] = (-518);
      regexp0.name = "Sinhala";
      intArray0[1] = 10713;
      intArray0[2] = 65142;
      regexp1.runes = intArray0;
      regexp1.toString();
      boolean boolean0 = regexp0.equals(regexp1.op);
      Regexp.Op.values();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-1484);
      regexp0.flags = 1228;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      int[] intArray0 = new int[7];
      intArray0[0] = 1228;
      intArray0[1] = (-1484);
      intArray0[2] = (-1484);
      intArray0[3] = 1228;
      intArray0[4] = (-1484);
      intArray0[5] = 1599;
      intArray0[6] = (-1484);
      regexp1.runes = intArray0;
      regexp1.max = 495;
      regexp1.maxCap();
      regexp1.toString();
      regexp1.equals("\b");
      regexp_Op0.isPseudo();
      regexp1.flags = (-121);
      regexp1.toString();
      Regexp.Op.values();
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Hex_Digit");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Hex_Digit
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 5347;
      regexp0.flags = 3;
      regexp0.flags = 3;
      regexp0.cap = (-3145);
      regexp0.name = "Variation_Selector";
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 2355;
      int[] intArray0 = new int[9];
      intArray0[0] = 3;
      intArray0[1] = (-3145);
      intArray0[2] = 2355;
      intArray0[3] = (-3145);
      intArray0[4] = (-3145);
      intArray0[5] = 2355;
      intArray0[6] = 3;
      intArray0[7] = 3;
      intArray0[8] = 2355;
      regexp1.runes = intArray0;
      regexp0.cap = (-3145);
      regexp1.min = (-3145);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "*kKT";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 125;
      Regexp[] regexpArray0 = new Regexp[9];
      regexpArray0[0] = regexp0;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[1] = regexp2;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp1;
      regexpArray0[7] = regexp1;
      regexpArray0[8] = regexp0;
      regexp0.subs = regexpArray0;
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      int[] intArray0 = new int[7];
      intArray0[0] = 15;
      regexp0.runes = intArray0;
      intArray0[1] = 127488;
      intArray0[2] = 15;
      intArray0[3] = 15;
      intArray0[4] = 1;
      intArray0[5] = 15;
      intArray0[6] = 15;
      regexp0.runes = intArray0;
      regexp0.reinit();
      regexp0.max = 15;
      regexp0.equals(regexp_Op0);
      regexp0.name = "o~u%(dN";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.subs = null;
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.cap = 1255;
      regexp1.equals(regexp2);
      regexp1.maxCap();
      regexp0.maxCap();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 1755;
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.name = null;
      regexp0.subs = regexpArray0;
      regexp0.flags = 1114111;
      regexp0.name = null;
      regexp0.flags = 4039;
      regexp0.flags = 11648;
      regexp0.name = "Imperial_Aramaic";
      boolean boolean0 = regexp0.equals(regexp_Op0);
      regexp0.toString();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      regexp0.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      boolean boolean1 = regexp_Op0.isPseudo();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 463;
      intArray0[1] = (-1605);
      intArray0[2] = 17;
      intArray0[3] = 4;
      intArray0[4] = 42124;
      intArray0[5] = (-2032);
      intArray0[6] = (-245);
      regexp0.runes = intArray0;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.toString();
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp0.equals(regexp1);
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp1.min = (-2930);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 4;
      regexp1.flags = 2620;
      regexp1.toString();
      regexp0.min = 4;
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp1.equals("\b");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp0.equals("B");
      regexp1.maxCap();
      Regexp.Op.values();
      Object object0 = new Object();
      regexp0.cap = 0;
      regexp0.equals(object0);
      regexp0.maxCap();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      String string0 = regexp1.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 66336;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp0.op = regexp_Op1;
      regexp0.op = regexp_Op1;
      regexp0.toString();
      regexp0.toString();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      String string0 = "BqlhUq90xf=&";
      regexp0.cap = 0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("BqlhUq90xf=&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.BqlhUq90xf=&
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.cap = (-625);
      regexp1.cap = 1560;
      regexp1.max = 115;
      regexp0.equals((Object) null);
      regexp0.reinit();
      String string0 = "Phags_Pa";
      regexp0.name = "Phags_Pa";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Phags_Pa");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Phags_Pa
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "t; PB8A~%}e9j+aqm)k";
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      Regexp regexp2 = new Regexp(regexp1);
      regexpArray0[1] = regexp2;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp0;
      regexp0.equals("t; PB8A~%}e9j+aqm)k");
      regexp1.subs = regexpArray0;
      regexp1.toString();
      Object object0 = new Object();
      regexp1.equals(object0);
      Regexp.Op.values();
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-285);
      regexp0.flags = (-285);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-285);
      intArray0[1] = (-285);
      intArray0[2] = (-285);
      regexp1.runes = intArray0;
      regexp1.toString();
      regexp0.reinit();
      regexp1.maxCap();
      regexp1.max = 0;
      regexp0.equals(regexp1);
      regexp0.maxCap();
      Regexp.Op.valueOf("VERTICAL_BAR");
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      regexp1.toString();
      regexp1.min = 0;
      regexp1.op = regexp_Op1;
      regexp_Op0.isPseudo();
      regexp0.cap = 3087;
      regexp1.equals("VERTICAL_BAR");
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("\f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.\f
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = "%/ZvdFo";
      regexp0.min = 120720;
      regexp1.equals("%/ZvdFo");
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 10;
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp0.reinit();
      regexp0.name = null;
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.name = "Cherokee";
      Regexp.Op.values();
      regexp0.toString();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.equals((Object) null);
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[2];
      intArray0[0] = 9;
      intArray0[1] = 15;
      regexp0.runes = intArray0;
      regexp0.max = 3;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 13;
      regexp1.reinit();
      regexp1.cap = 16;
      regexp0.op = regexp_Op0;
      regexp1.equals(regexp0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Lu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Lu
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      Regexp.Op.values();
      regexp0.max = 860;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("4?d;");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.4?d;
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.reinit();
      regexp0.max = 1458;
      regexp0.min = (-737);
      regexp0.cap = 1458;
      regexp0.reinit();
      regexp0.name = "CnUhkq#uNI:Bb(h";
      regexp0.max = (-393);
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      regexp0.toString();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("OKAG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.OKAG
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[5];
      intArray0[0] = (-1057);
      intArray0[1] = 504;
      intArray0[2] = 0;
      intArray0[3] = 8;
      intArray0[4] = (-1853);
      regexp0.runes = intArray0;
      regexp0.min = 17;
      regexp0.toString();
      regexp0.equals("xfffffbdf\u01F8x00\bxfffff8c3");
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(";=|X|&");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.;=|X|&
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      int int0 = (-131);
      regexp0.max = (-131);
      regexp1.op = regexp_Op0;
      regexp1.equals(regexp0);
      Regexp.Op.values();
      regexp1.op.isPseudo();
      regexp1.maxCap();
      int[] intArray0 = new int[9];
      regexp1.op.isPseudo();
      regexp1.op.isPseudo();
      intArray0[0] = (-131);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 18;
      regexp0.max = 16;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.flags = 2403;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.max = (-2200);
      regexp1.reinit();
      regexp1.toString();
      regexp0.toString();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp0.cap = 7;
      regexp1.cap = 7;
      regexp1.toString();
      Regexp.Op.values();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.END_TEXT;
      Regexp regexp2 = new Regexp(regexp_Op1);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 7;
      intArray0[3] = 7;
      intArray0[4] = 7;
      intArray0[5] = 7;
      intArray0[6] = 7;
      intArray0[7] = 7;
      regexp2.runes = intArray0;
      regexp2.max = 7;
      regexp0.equals(regexp2);
      regexp0.equals("LEFT_PAREN");
      regexp0.equals(regexp_Op1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("tz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.tz
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      String string0 = "";
      int[] intArray0 = new int[4];
      intArray0[0] = (-553);
      intArray0[1] = 1242;
      intArray0[2] = 11;
      intArray0[3] = (-1251);
      regexp0.runes = intArray0;
      regexp0.name = "";
      regexp0.max = (-1664);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      regexp0.name = "";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 5;
      boolean boolean0 = regexp0.equals("0!,Iy_Twgki(eD*");
      assertFalse(boolean0);
      
      regexp0.name = "m";
      regexp0.cap = 12;
      int[] intArray0 = new int[1];
      intArray0[0] = 12;
      regexp0.runes = intArray0;
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.name = "Pc";
      regexp0.max = (-757);
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("m@Vk?`KY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.m@Vk?`KY
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.min = (-207);
      regexp1.equals(regexp2);
      regexp2.reinit();
      regexp1.equals((Object) null);
      regexp1.toString();
      regexp2.toString();
      Object object0 = new Object();
      regexp2.equals(object0);
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.runes = null;
      regexp0.cap = 6469;
      regexp_Op0.isPseudo();
      String string0 = ",^R'bF9$4bFZ";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf(",^R'bF9$4bFZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.,^R'bF9$4bFZ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals("S!V\"/[o/m");
      regexp0.runes = null;
      regexp0.flags = (-2153);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = 5162;
      intArray0[1] = 5162;
      regexp0.reinit();
      regexp0.reinit();
      intArray0[2] = 5162;
      intArray0[3] = 5162;
      intArray0[4] = 5162;
      intArray0[5] = 5162;
      intArray0[6] = 5162;
      intArray0[7] = 5162;
      regexp0.runes = intArray0;
      regexp0.flags = 5162;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = (-1733);
      regexp0.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.reinit();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("VNiyJ8H0mO/.9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.VNiyJ8H0mO/.9
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      regexp0.subs = null;
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.op.isPseudo();
      regexp0.maxCap();
      regexp0.name = "mN0,JCh";
      regexp0.name = "mN0,JCh";
      regexp0.op = regexp_Op1;
      regexp0.op.isPseudo();
      Regexp.Op.values();
      regexp0.toString();
      regexp0.maxCap();
      regexp0.reinit();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = null;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.L
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      String string0 = "";
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp0.min = (-207);
      regexp1.equals(regexp2);
      regexp2.reinit();
      regexp1.equals((Object) null);
      regexp1.toString();
      regexp2.toString();
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("!*.3jn1M# T\"g=M`y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.!*.3jn1M# T\"g=M`y
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.op = regexp_Op1;
      Regexp regexp3 = new Regexp(regexp1);
      // Undeclared exception!
      try { 
        regexp2.equals(regexp3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 828;
      regexp0.cap = 11;
      regexp0.equals(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.max = 1289;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.equals(regexp_Op0);
      regexp1.flags = 828;
      regexp0.toString();
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("V?7l# 0;;G0K8}~");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.V?7l# 0;;G0K8}~
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp1.min = 1228;
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.min = (-513);
      Object object0 = new Object();
      regexp2.equals(object0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp1;
      int[] intArray0 = new int[4];
      intArray0[0] = (-3848);
      intArray0[1] = 4;
      intArray0[2] = 1990;
      intArray0[3] = 3634;
      regexp1.runes = intArray0;
      regexp1.subs = regexpArray0;
      String string0 = regexp1.toString();
      assertEquals("[\\xfffff0f8-\\x04\u07C6-\u0E32]", string0);
  }
}
