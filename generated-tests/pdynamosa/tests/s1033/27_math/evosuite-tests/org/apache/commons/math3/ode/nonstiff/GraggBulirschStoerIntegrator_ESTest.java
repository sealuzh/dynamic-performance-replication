/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:46:21 GMT 2019
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Cos;
import org.apache.commons.math3.analysis.function.Cosh;
import org.apache.commons.math3.analysis.function.Minus;
import org.apache.commons.math3.analysis.solvers.BrentSolver;
import org.apache.commons.math3.analysis.solvers.IllinoisSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver;
import org.apache.commons.math3.analysis.solvers.MullerSolver2;
import org.apache.commons.math3.analysis.solvers.PegasusSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 198.6384888, 2.3454138776381036E11);
      graggBulirschStoerIntegrator0.setInitialStepSize(198.6384888);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1443.835493585546);
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1557.30863);
      doubleArray0[4] = 0.0;
      doubleArray0[5] = (-1557.30863);
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 2.3454138776381036E11;
      expandableStatefulODE0.computeDerivatives((-1557.30863), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.sanityChecks(expandableStatefulODE0, (-6.56250013356227E-149));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1323);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setOrderControl(0, 0, (-6.56250013356227E-149));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = (-1.0);
      double double1 = (-3756.492);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.0), (-3756.492), (-3756.492), (-1.0));
      graggBulirschStoerIntegrator0.getStepHandlers();
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      int int0 = (-1137);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1.0), (-1.0), (-1137));
      EventHandler eventHandler1 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType1 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventHandler1, filterType1);
      double double2 = 1.2736636153072213E-90;
      int int1 = (-1675);
      double double3 = (-61.4601);
      BrentSolver brentSolver0 = new BrentSolver((-61.4601));
      Cos cos0 = new Cos();
      try { 
        brentSolver0.solve((-1675), (UnivariateFunction) cos0, (-1.0), (-61.4601));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // endpoints do not specify an interval: [-1, -31.23]
         //
         verifyException("org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.062907610362035, 1.062907610362035, 1.0530616658562386E-20, 863.80801383519);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 5);
      graggBulirschStoerIntegrator0.setOrderControl(3, 863.80801383519, 1.0530616658562386E-20);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (-801.0);
      doubleArray0[1] = (-1006.1743250640841);
      doubleArray0[2] = (-1006.1743250640841);
      doubleArray0[3] = (-1006.1743250640841);
      doubleArray0[4] = (-1006.1743250640841);
      doubleArray0[5] = (-1006.1743250640841);
      doubleArray0[6] = (-1006.1743250640841);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1006.1743250640841), (-2363.998), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1734, (-1974.01270087), (-1974.01270087));
      graggBulirschStoerIntegrator0.setOrderControl(1426, 999.9, (-1006.1743250640841));
      graggBulirschStoerIntegrator0.setControlFactors((-801.0), (-368.22121), 1877.750665276, 1734);
      graggBulirschStoerIntegrator0.scalAbsoluteTolerance = 0.0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        expandableStatefulODE0.setPrimaryState(doubleArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 7 != 0
         //
         verifyException("org.apache.commons.math3.ode.ExpandableStatefulODE", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2403.0, 2403.0, 4.0E-15, 2403.0);
      graggBulirschStoerIntegrator0.setControlFactors(893.59995599809, (-1437.76227343), 4.0E-15, 893.59995599809);
      graggBulirschStoerIntegrator0.setControlFactors((-82.85143138), 1.7976931348623157E308, (-2915.7663767), 5539.908080282);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn((EventHandler.Action) null).when(eventHandler0).eventOccurred(anyDouble() , any(double[].class) , anyBoolean());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 2403.0;
      doubleArray0[1] = 5539.908080282;
      doubleArray0[2] = (-82.85143138);
      doubleArray0[3] = 647.16045257;
      doubleArray0[4] = 1.7976931348623157E308;
      doubleArray0[5] = 580.395652;
      doubleArray0[6] = 5539.908080282;
      eventFilter0.eventOccurred(647.16045257, doubleArray0, false);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      MullerSolver mullerSolver0 = new MullerSolver();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, 1004, (-2857.0742));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-1455), 2146942946, (-1455));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 0);
      assertEquals(2403.0, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.062907610362035, 1.062907610362035, 1.0530616658562386E-20, 863.80801383519);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 5);
      graggBulirschStoerIntegrator0.setOrderControl(3, 863.80801383519, 1.0530616658562386E-20);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(5).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      graggBulirschStoerIntegrator0.setControlFactors(1681.659, (-697.605394), 9.693260855961159E-8, 865.845124788175);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations2 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations2).getDimension();
      FirstOrderConverter firstOrderConverter2 = new FirstOrderConverter(secondOrderDifferentialEquations2);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-4, (-697.605394), 1.0E-4, 1.0530616658562386E-20);
      assertEquals(1.062907610362035, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, (-786.35306892567), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors((-962.39383), 1.0E-4, (-1469.35435088842), (-962.39383));
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-1096.915), (-962.39383), 7.0, (-1096.915));
      graggBulirschStoerIntegrator1.vecAbsoluteTolerance = doubleArray0;
      graggBulirschStoerIntegrator1.setOrderControl(1297, (-602.60326), (-1469.35435088842));
      assertEquals(1096.915, graggBulirschStoerIntegrator1.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1360.39679311, 1360.39679311, 1.2154183152078517E234, (-82.85143138));
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setInitialStepSize(0.9);
      graggBulirschStoerIntegrator0.setOrderControl(6, 0.9, 1360.39679311);
      assertEquals(1360.39679311, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-429.3111420099), 944.610458984437);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      int int0 = 0;
      BrentSolver brentSolver0 = new BrentSolver(0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 6.097534318207731E113, 0, (UnivariateSolver) brentSolver0);
      double double0 = (-1198.31044);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0001, (-429.3111420099));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1198.31044), (-884.800048819511), 0, (UnivariateSolver) illinoisSolver0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.0E-15);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = 0.0;
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      double double1 = 2351.0;
      double double2 = 1331.5083075871405;
      boolean boolean0 = true;
      graggBulirschStoerIntegrator0.addStepHandler((StepHandler) null);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 154, 180, 1331.5083075871405);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(true, 2863, doubleArray0, (-201.0), doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3.855478664503271E21), (-3.855478664503271E21), 1554.522901228, (-859.3398424089868));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3187.004889401), (-1095.1316991193592));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1020.06215, 894.446, 6, (UnivariateSolver) illinoisSolver0);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 94);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(8, 8, 0.8802336046157887, 0.8802336046157887);
      graggBulirschStoerIntegrator0.setControlFactors(0.9999, (-3233.961), 1681.659, 0.9999);
      assertEquals(8.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1347.0064912163161, 1347.0064912163161, 1347.0064912163161, 1347.0064912163161);
      graggBulirschStoerIntegrator0.setStepSizeControl((double) 0, 0.0, 434.2355074, (double) 0);
      BrentSolver brentSolver0 = new BrentSolver(373.93446);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 1347.0064912163161, 1347.0064912163161, 0, (UnivariateSolver) brentSolver0);
      assertEquals(1.0E-15, brentSolver0.getFunctionValueAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, 1.0E-15, 1.0E-15, 1.0E-15);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double double0 = (-4329.2);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-4329.2));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(783.0, 1461.2220801, (-984.1655629109), (-984.1655629109));
      graggBulirschStoerIntegrator0.setControlFactors(1461.2220801, 783.0, 580.395652, 1461.2220801);
      graggBulirschStoerIntegrator0.setControlFactors((-896.6286658456), 1461.2220801, 783.0, 580.395652);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1.674684762954712;
      eventFilter0.init(1199, doubleArray0, 783.0);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 783.0;
      doubleArray1[1] = (-984.1655629109);
      doubleArray1[2] = (-984.1655629109);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      eventFilter0.init(4486.883929, doubleArray1, 5.13004286606108E-207);
      eventFilter0.g((-896.6286658456), doubleArray1);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-2833.5392375), (-2833.5392375), 1199, (UnivariateSolver) null);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-2071), (-796), 1461.2220801);
      assertEquals(1069.6433465030761, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, (-429.3111420099), 944.610458984437);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver(933.1245, 1.0001);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 6.097534318207731E113, 0, (UnivariateSolver) brentSolver0);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver(1.0001, (-429.3111420099));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1198.31044), (-884.800048819511), 0, (UnivariateSolver) illinoisSolver0);
      assertEquals((-429.3111420099), illinoisSolver0.getAbsoluteAccuracy(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = 0.2531573176383972;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.9999, 0.2531573176383972, 6.291008309266035E-9);
      double double1 = (-2416.75);
      double[] doubleArray0 = new double[0];
      graggBulirschStoerIntegrator0.vecRelativeTolerance = doubleArray0;
      int int0 = 2309;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 2309);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 15, 2, 894.446);
      double double2 = (-63.179956);
      graggBulirschStoerIntegrator0.setOrderControl(2309, 1.7976931348623157E308, (-63.179956));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.0));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      doubleArray0[7] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 475.0588281742422, 0.0, 0.0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-1980.1088659);
      doubleArray0[1] = (-1980.1088659);
      doubleArray0[2] = 0.0;
      doubleArray0[3] = (-1980.1088659);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1980.1088659), 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1917, 487.992897767, 487.992897767);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1642, 0, 0.0);
      graggBulirschStoerIntegrator0.setControlFactors((-1980.1088659), 0.0, (-7.955085231106037E-8), (-1980.1088659));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1980.1088659), fixedStepHandler0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = 1.0E-15;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 1.0E-15;
      doubleArray0[1] = 1.0E-15;
      doubleArray0[2] = 1.0E-15;
      doubleArray0[3] = 1.0E-15;
      doubleArray0[4] = 1.0E-15;
      doubleArray0[5] = 1.0E-15;
      doubleArray0[6] = 1.0E-15;
      doubleArray0[7] = 1.0E-15;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, 1.0E-15, doubleArray0, doubleArray0);
      boolean boolean0 = false;
      int int0 = 1743;
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-736), 1743, 1.0E-15);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-736));
      double double1 = (-447.44631977057);
      graggBulirschStoerIntegrator0.setOrderControl(1743, (-447.44631977057), 1.0E-15);
      double double2 = 0.0;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, 1.0E-15, 1.0E-15, 1.0E-15);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 8);
      assertEquals(1.0E-15, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = (-1020.59);
      doubleArray0[3] = 1.0001;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0001, 1.0001, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-15, (-308.03922980267674), (-1020.59), 194.6897);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setOrderControl((-476), (-308.03922980267674), 194.6897);
      graggBulirschStoerIntegrator0.setControlFactors((-4554.9378604867), 1.0001, (-476), 1.0001);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      FilterType filterType1 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType1);
      eventFilter1.init(985.652376606, doubleArray0, (-5534.494234398685));
      BrentSolver brentSolver0 = new BrentSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, (-441.0), 1855, (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1855);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 0.0, 0.0);
      graggBulirschStoerIntegrator0.setOrderControl((-616), 0.9999, 789.72702092015);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-2236));
      assertEquals(0.0, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      int int0 = (-307);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-307));
      double double0 = 0.0;
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 0.0, 0.9, 0.0);
      double double1 = 3.0;
      double double2 = (-105.4721768);
      graggBulirschStoerIntegrator0.setControlFactors(0.0, (-307), 3.0, (-105.4721768));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      EventFilter eventFilter1 = new EventFilter(eventFilter0, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver();
      Cosh cosh0 = new Cosh();
      // Undeclared exception!
      try { 
        mullerSolver0.solve((-307), (UnivariateFunction) cosh0, 0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (-307) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.92044714050651E-233, 2278.0, 2278.0, 5.92044714050651E-233);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(5.92044714050651E-233, 9.670771210463886E128, 5.92044714050651E-233, 5.638724693948384E-8, 9.670771210463886E128).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.8;
      doubleArray0[1] = 5.92044714050651E-233;
      doubleArray0[2] = 2278.0;
      doubleArray0[3] = 1703.0;
      doubleArray0[4] = 1703.0;
      doubleArray0[5] = 1703.0;
      doubleArray0[6] = 184.5889;
      eventFilter0.init(184.5889, doubleArray0, 1703.0);
      BrentSolver brentSolver0 = new BrentSolver(999.9, 999.9);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1470.2, 2278.0, (-675), (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1703.0);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 28, 28, 0.9999);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(28).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2338.6923329429333), (-2338.6923329429333), 0.8802336046157887, (-2576.037829277));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2499).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2330);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, (-412));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver2 mullerSolver2_0 = new MullerSolver2(0.0, 0.42863214015960693);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) (-412), (-2338.6923329429333), 8, (UnivariateSolver) mullerSolver2_0);
      assertEquals(2338.6923329429333, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 4.0, 1360.39679311, 1360.39679311);
      graggBulirschStoerIntegrator0.setOrderControl(78, 0.9999, 0.9999);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[0] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 3);
      assertEquals(Double.NaN, graggBulirschStoerIntegrator0.getCurrentStepStart(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 0.6833335161209106;
      doubleArray0[1] = 0.6833335161209106;
      doubleArray0[2] = 0.6833335161209106;
      doubleArray0[3] = 0.6833335161209106;
      doubleArray0[4] = 0.6833335161209106;
      doubleArray0[5] = 0.6833335161209106;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6833335161209106, 0.6833335161209106, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl((-2759), 0.6833335161209106, 0.6833335161209106);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(5.92044714050651E-233, 2278.0, 2278.0, 5.92044714050651E-233);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(eventHandler0).g(anyDouble() , any(double[].class));
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.8;
      doubleArray0[1] = 5.92044714050651E-233;
      doubleArray0[2] = 2278.0;
      doubleArray0[3] = 1703.0;
      doubleArray0[4] = 1703.0;
      doubleArray0[5] = 1703.0;
      doubleArray0[6] = 184.5889;
      eventFilter0.init(184.5889, doubleArray0, 1703.0);
      BrentSolver brentSolver0 = new BrentSolver(999.9, 999.9);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1470.2, 2278.0, (-675), (UnivariateSolver) brentSolver0);
      graggBulirschStoerIntegrator0.setInitialStepSize(1703.0);
      graggBulirschStoerIntegrator0.getEventHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 28, 28, 0.9999);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 999.9);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.412812378228, 0.412812378228, 0.412812378228, 0.412812378228);
      graggBulirschStoerIntegrator0.setControlFactors(0.412812378228, 0.9999, 0.9999, (-2707.3));
      assertEquals(0.412812378228, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2617.117), 0.8802336046157887, 0.8802336046157887, 1.677020107827128E-200);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator((-4269.901774), (-2984.700937877848), doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 0.8802336046157887);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.0, 0.2531573176383972, 6.291008309266035E-9);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      double double0 = (-254.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.5045560598373413, (-254.0), 5.682607223902455E-9, 0.2531573176383972);
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.9999, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      double[] doubleArray0 = null;
      stepNormalizer0.init(76.09665192325, (double[]) null, 76.09665192325);
      stepNormalizer0.init(0.0, (double[]) null, 1910.0);
      graggBulirschStoerIntegrator0.getEventHandlers();
      stepNormalizer0.init(76.09665192325, (double[]) null, 1.7804909509998055E-74);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0, 6.291008309266035E-9, 0.0, 0.9999);
      stepNormalizer0.init(5.682607223902455E-9, (double[]) null, 999.9);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 0, (-2081), 5.682607223902455E-9);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 0.2531573176383972);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 4.0;
      doubleArray0[1] = 4.0;
      doubleArray0[2] = 4.0;
      doubleArray0[3] = 4.0;
      doubleArray0[4] = 4.0;
      doubleArray0[5] = 4261.006661472577;
      doubleArray0[6] = 4.0;
      doubleArray0[7] = 4.0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = 4261.006661472577;
      doubleArray1[1] = 4261.006661472577;
      doubleArray1[2] = 4261.006661472577;
      doubleArray1[3] = 4261.006661472577;
      doubleArray1[4] = 4261.006661472577;
      doubleArray1[5] = 1581.8;
      doubleArray1[6] = 4.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(4.0, 4.0, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-2214), (-2214), 4261.006661472577);
      graggBulirschStoerIntegrator0.clearEventHandlers();
      graggBulirschStoerIntegrator0.setStepSizeControl(4261.006661472577, 0.0, 1112.0, 2.0);
      graggBulirschStoerIntegrator0.setOrderControl(479, (-2153.1136), 0.0);
      graggBulirschStoerIntegrator0.setControlFactors(4.0, 1332.0, 0.0, 4.0);
      assertEquals(4261.006661472577, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-15, 1.0E-15, 1.0E-15, 1.0E-15);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-15, 893.59995599809, 893.59995599809, 0.01);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(4.0, (-429.0), (-1437.76227343), (-838.394302309475));
      graggBulirschStoerIntegrator1.setOrderControl(1609, (-1437.76227343), (-1437.76227343));
      graggBulirschStoerIntegrator0.setControlFactors(893.59995599809, (-429.0), 2194.89575, 999.9);
      graggBulirschStoerIntegrator1.setControlFactors(3206.945337296517, 893.59995599809, 0.13316379209797446, 3206.945337296517);
      graggBulirschStoerIntegrator1.setStabilityCheck(false, 3, 20, 1.0E-15);
      assertEquals(41.42463035441596, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.0, 0.2531573176383972, 6.291008309266035E-9);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1638.3536945496057, 1638.3536945496057, 6.291008309266035E-9, (-2416.75));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2.6115946769714355);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.02, 2115.806, 863.80801383519, (-560.2537154349999));
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer((-1567.432178478), fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 3);
      graggBulirschStoerIntegrator0.setControlFactors(0.02, 0.02, 1.906278351789277E292, (-2943.191015279399));
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.0;
      doubleArray0[2] = 0.0;
      doubleArray0[3] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 0.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1734, 0.0, 0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0.0, 0.0, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator1.setOrderControl(1734, 1.0E-4, 2253.77744);
      assertEquals(0.0, graggBulirschStoerIntegrator1.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = 28.473657055188706;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1360.39679311, 1360.39679311, 1360.39679311, 28.473657055188706);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(22).when(secondOrderDifferentialEquations0).getDimension();
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(781.9962991, 28.473657055188706, 1360.39679311, 652.7491565544);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 28.473657055188706);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2260.17097154393, 2260.17097154393, 2260.17097154393, 2260.17097154393);
      graggBulirschStoerIntegrator0.setInitialStepSize(2260.17097154393);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(2260.17097154393, (-4285.9853), (-4285.9853), (-4285.9853));
      graggBulirschStoerIntegrator1.setInterpolationControl(true, 7);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator1.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-10, 1.0E-10, 1.0E-10, 1.0E-10);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-10, (-1739.2709523500646), 1.0E-15, 1.0E-10);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (-1739.2709523500646), 302.47326330557854, (-281));
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1646), (-1646), (-26.1));
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (-1960.38543);
      doubleArray0[1] = (-1960.38543);
      doubleArray0[2] = (-1960.38543);
      doubleArray0[3] = 8.999821367768787E-8;
      doubleArray0[4] = 8.999821367768787E-8;
      doubleArray0[5] = 8.999821367768787E-8;
      doubleArray0[6] = 8.999821367768787E-8;
      doubleArray0[7] = (-1960.38543);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1960.38543), 8.999821367768787E-8, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.setOrderControl(19, 8.999821367768787E-8, 4.24835413113866E-18);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(19).when(secondOrderDifferentialEquations0).getDimension();
      graggBulirschStoerIntegrator0.setControlFactors((-1960.38543), 2241.509546023263, 8.999821367768787E-8, 1681.659);
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations1 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations1).getDimension();
      FirstOrderConverter firstOrderConverter1 = new FirstOrderConverter(secondOrderDifferentialEquations1);
      ExpandableStatefulODE expandableStatefulODE1 = new ExpandableStatefulODE(firstOrderConverter1);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(8.999821367768787E-8, 0.8, 4.24835413113866E-18, (-6722.80952));
      // Undeclared exception!
      graggBulirschStoerIntegrator1.integrate(expandableStatefulODE0, 1.0E15);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = 1592.8;
      doubleArray0[1] = 3616.7295131;
      doubleArray0[2] = (-1419.3019506);
      doubleArray0[3] = 1592.8;
      doubleArray0[4] = (-1653.0);
      doubleArray0[5] = 1592.8;
      doubleArray0[6] = 1592.8;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1592.8, 1592.8, doubleArray0, doubleArray0);
      RiddersSolver riddersSolver0 = new RiddersSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) null, 0.0, (-36.0071069560048), (-1367), (UnivariateSolver) riddersSolver0);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.4128123782277914, 0.4128123782277914, 894.446, 1.0E-4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 4655.104009753578);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0E15;
      doubleArray0[1] = 1.0E15;
      doubleArray0[2] = 1.0E15;
      doubleArray0[3] = 1.0E15;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0E15, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-307));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 1.0E15, 1.0E15, 1.0E15);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setControlFactors(1.0E15, (-82.85143138), 1.0E15, 1.0E15);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver();
      Minus minus0 = new Minus();
      mullerSolver0.solve(2143789977, (UnivariateFunction) minus0, (-82.85143138), 520.195);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1.0E15, 0.0, 0, (UnivariateSolver) mullerSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 3541, 0.24554696679115295);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 445, 0, 1.0E15);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1242, 1312, (-1988.860061412));
      assertEquals(1.0E15, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2403.0, 2403.0, 4.0E-15, 2403.0);
      graggBulirschStoerIntegrator0.setStepSizeControl(2403.0, 2403.0, 1478.2039358623, 1.0);
      graggBulirschStoerIntegrator0.setControlFactors(893.59995599809, (-1437.76227343), 4.0E-15, 893.59995599809);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(1011.237608747, (-4554.9378604867), 1.475020408630371, (-1.0));
      graggBulirschStoerIntegrator1.filterStep(5539.908080282, false, false);
      graggBulirschStoerIntegrator1.setOrderControl(2145233324, 1.7976931348623157E308, (-929.6558232536));
      graggBulirschStoerIntegrator1.setControlFactors(1.3087966177291396E128, 1.0E15, 1011.237608747, (-2416.75));
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      BrentSolver brentSolver0 = new BrentSolver(0.02);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 831.60892332264, 1478.2039358623, 294, (UnivariateSolver) brentSolver0);
      PegasusSolver pegasusSolver0 = new PegasusSolver(831.60892332264, (-673.0953256410147), (-1437.76227343));
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 4.0E-15, (-1437.76227343), 2145233324, (UnivariateSolver) pegasusSolver0);
      assertEquals(0.0, pegasusSolver0.getStartValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double double0 = (-1706.20024);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.1913723189736356E-7, (-1706.20024), (-1706.20024), (-3375.1689));
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 720);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      eventFilter0.init(1.1913723189736356E-7, (double[]) null, 793);
      IllinoisSolver illinoisSolver0 = new IllinoisSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, (double) 720, (double) 720, 793, (UnivariateSolver) illinoisSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 783, (-533), 783);
      ExpandableStatefulODE expandableStatefulODE0 = null;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate((ExpandableStatefulODE) null, (-710.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.AbstractIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1133.42443), (-1133.42443), 2403.0, 1923.0181075948);
      graggBulirschStoerIntegrator0.setControlFactors(2403.0, 3392.8203044111, 1923.0181075948, 5475.910065866743);
      assertEquals(1133.42443, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.062907610362035, 1.062907610362035, 1323.6824550873066, 863.80801383519);
      graggBulirschStoerIntegrator0.setOrderControl(2144942776, (-3128.5674821), 1.062907610362035);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.INCREMENT;
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(863.80801383519, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 863.80801383519;
      stepNormalizer0.init(0.0, doubleArray0, (-1450.6819322418442));
      stepNormalizer0.init(863.80801383519, (double[]) null, 0.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1450.6819322418442), (-2616.0714), 0.0, 863.80801383519);
      graggBulirschStoerIntegrator0.getEventHandlers();
      stepNormalizer0.init(1.7804909509998055E-74, doubleArray0, 0.0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(76.09665192325, 0.94, 917.4441853738797, 1484.6);
      stepNormalizer0.init((-2011.0858), (double[]) null, 863.80801383519);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, (-2081), (-158), 1.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator1 = null;
      try {
        graggBulirschStoerIntegrator1 = new GraggBulirschStoerIntegrator(0, 0.94, doubleArray0, (double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.9999, 0.0, 0.2531573176383972, 6.291008309266035E-9);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      graggBulirschStoerIntegrator0.setStepSizeControl(0.5045560598373413, (-254.0), 5.682607223902455E-9, 0.2531573176383972);
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.LAST;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.9999, fixedStepHandler0, stepNormalizerMode0, stepNormalizerBounds0);
      stepNormalizer0.init(76.09665192325, (double[]) null, 76.09665192325);
      graggBulirschStoerIntegrator0.getEventHandlers();
      stepNormalizer0.init(76.09665192325, (double[]) null, 1.7804909509998055E-74);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setControlFactors(1910.0, 6.291008309266035E-9, 0.0, 0.9999);
      stepNormalizer0.init(5.682607223902455E-9, (double[]) null, 999.9);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 0, 1.0E-4);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      double double0 = 0.9999;
      double double1 = 863.80801383519;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(863.80801383519, 999.9, 0.9999, 999.9);
      int int0 = 4049;
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 4049);
      graggBulirschStoerIntegrator0.setOrderControl(4049, 5, 1.0E-4);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(598).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 999.9;
      doubleArray0[1] = 999.9;
      doubleArray0[2] = 999.9;
      doubleArray0[3] = 863.80801383519;
      doubleArray0[4] = 999.9;
      doubleArray0[5] = (double) 5;
      doubleArray0[6] = (double) 5;
      doubleArray0[7] = 999.9;
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      graggBulirschStoerIntegrator0.setControlFactors(1.0, 2.212106704711914, 0.9999, (-2190.36627743607));
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-2190.36627743607));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 1,196 != 8
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 1360.39679311, 863.80801383519);
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.setOrderControl(0, (-308.7055), 0.9);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-2824.096497995823), (-584.9488083), (-584.9488083), 1.0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 6);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 894.446);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.0, 1360.39679311, 863.80801383519);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, 3);
      assertEquals(Integer.MAX_VALUE, graggBulirschStoerIntegrator0.getMaxEvaluations());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 1070.1938578544;
      doubleArray0[1] = 1070.1938578544;
      doubleArray0[2] = 1070.1938578544;
      doubleArray0[3] = 1070.1938578544;
      doubleArray0[4] = 1422.31;
      doubleArray0[5] = 1070.1938578544;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1070.1938578544, 1070.1938578544, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.vecAbsoluteTolerance = doubleArray0;
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.getSecondaryMappers();
      graggBulirschStoerIntegrator0.getEventHandlers();
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 804.569798966);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 6
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 1.0E15;
      doubleArray0[1] = 1.0E15;
      doubleArray0[2] = 1.0E15;
      doubleArray0[3] = 1.0E15;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E15, 1.0E15, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setMaxEvaluations((-307));
      graggBulirschStoerIntegrator0.setControlFactors(0.0, 1.0E15, 1.0E15, 1.0E15);
      graggBulirschStoerIntegrator0.setControlFactors(1.0E15, (-82.85143138), 1.0E15, 1.0E15);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      MullerSolver mullerSolver0 = new MullerSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1.0E15, 0.0, 0, (UnivariateSolver) mullerSolver0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 0, 3541, 0.24554696679115295);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 445, 0, 1.0E15);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1242, 1312, (-1988.860061412));
      assertEquals(1.0E15, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = 0.3443927764892578;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, 0.3443927764892578, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setOrderControl(1113, (-3291.968103807), (-4792.5));
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }
}
