/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:18:31 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(3154L, 74, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 73
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1272L), 71, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 70
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 2, 2);
      assertArrayEquals(new byte[] {(byte) (-78)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UTF-8");
      char[] charArray0 = new char[10];
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte) (-14);
      int int1 = IOUtils.encodeUTF8(charArray0, 1, (byte) (-14), byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("");
      assertArrayEquals(new byte[] {}, byteArray0);
      
      int int0 = IOUtils.stringSize(2146737734);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = '0';
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1114L), 1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      boolean boolean1 = IOUtils.firstIdentifier('{');
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[6];
      IOUtils.getChars((byte) (-108), 6, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '-', '1', '0', '8'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(2832, 2832, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2831
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[4];
      charArray0[0] = '*';
      charArray0[2] = '*';
      charArray0[3] = '\\';
      int int0 = IOUtils.decodeUTF8(byteArray0, 0, 0, charArray0);
      assertEquals(0, int0);
      
      byte[] byteArray1 = IOUtils.decodeBase64("z{rBcA<e8=Ui6w:0", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 59, 67, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      char[] charArray0 = new char[7];
      IOUtils.stringSize((long) 5);
      IOUtils.firstIdentifier(']');
      IOUtils.isValidJsonpQueryParam("");
      IOUtils.getChars(1, 5, charArray0);
      IOUtils.getChars((long) 1, 5, charArray0);
      byte[] byteArray1 = IOUtils.decodeBase64("");
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[1];
      char char0 = '\'';
      charArray0[0] = '\'';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-1402), (-1402));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2805
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (-4845), (-4845));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      uTF8Decoder0.decodeLoop(byteBuffer0, charBuffer0);
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset1 = IOUtils.UTF8;
      ByteBuffer byteBuffer1 = charset1.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = 'L';
      charArray0[2] = '\"';
      charArray0[3] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader(charArrayReader0, 2);
      String string0 = IOUtils.readAll(bufferedReader0);
      assertEquals("[L\"D", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("*");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J`6Bl/VAscOdFt+T0X");
      IOUtils.isValidJsonpQueryParam("qr");
      String string0 = IOUtils.getStringProperty("J`6Bl/VAscOdFt+T0X");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.replaceChars, 5, 72);
      IOUtils iOUtils1 = new IOUtils();
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("4.k:@C0d}vO.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("q");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils.decodeBase64("O8;wx*CrFlM");
      String string0 = IOUtils.getStringProperty("O8;wx*CrFlM");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      char[] charArray0 = new char[18];
      charArray0[0] = '2';
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.stringSize(100L);
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2), 39, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 38
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHJAVABEAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-61);
      byteArray0[2] = (byte) (-61);
      char[] charArray0 = new char[31];
      charArray0[0] = '\'';
      IOUtils.decodeUTF8(byteArray0, 1, '\'', charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      assertFalse(uTF8Decoder0.isAutoDetecting());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte) (-14);
      char[] charArray0 = new char[18];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, '\u0013', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-65);
      byteArray0[2] = (byte) (-65);
      char[] charArray0 = new char[18];
      charArray0[0] = '2';
      int int1 = IOUtils.decodeUTF8(byteArray0, 1, '2', charArray0);
      assertEquals((-1), int1);
      
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int2 = IOUtils.stringSize(100L);
      assertEquals(3, int2);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils.isIdent('y');
      PipedWriter pipedWriter0 = new PipedWriter();
      IOUtils.close(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 5, 2114946016, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 5, 5);
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[2] = 'g';
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("/KNRwCLF+|a+*lac", false);
      mockFileOutputStream0.write(5);
      IOUtils.close(mockFileOutputStream0);
      IOUtils.isValidJsonpQueryParam("");
      // Undeclared exception!
      try { 
        IOUtils.getChars(65536, (-4099), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4100
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '}';
      charArray0[1] = '}';
      charArray0[2] = '}';
      charArray0[3] = '}';
      charArray0[4] = '}';
      charArray0[5] = '}';
      charArray0[6] = '}';
      charArray0[7] = '}';
      IOUtils.decodeBase64(charArray0, 160, 0);
      IOUtils.stringSize(1029);
      // Undeclared exception!
      try { 
        IOUtils.getChars(160, 271, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 270
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("/KN^wCLF+|a+#lac", 5, 5);
      assertArrayEquals(new byte[] {(byte)8, (byte) (-79), (byte)126}, byteArray0);
      
      char[] charArray0 = new char[7];
      charArray0[0] = 'g';
      charArray0[2] = 'g';
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("x5~SZKIRj");
      assertFalse(boolean0);
      
      IOUtils.getChars(101, 5, charArray0);
      assertArrayEquals(new char[] {'g', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[1];
      String string0 = "[>}h)NDIuR4J*N";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("[>}h)NDIuR4J*N", true);
      mockFileOutputStream0.write(99);
      IOUtils.close(mockFileOutputStream0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 4530, 4530, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4530
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64(",fVT?Yf`j_bbqeZi?d");
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.replaceChars, 5, 72);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 72, 72, iOUtils0.replaceChars);
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 46, 61, iOUtils0.specicalFlags_singleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 93
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils.firstIdentifier('\u00A5');
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((long) '\u00A5');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int1 = 42;
      char[] charArray0 = new char[9];
      IOUtils.loadPropertiesFromFile();
      charArray0[2] = '\u00A5';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 1594, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 5, 68);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = 72;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 5, 72);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('I');
      assertTrue(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("e?6((.K]EH");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-54), (byte) (-4), (byte)65}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.close((Closeable) null);
      boolean boolean0 = IOUtils.firstIdentifier('N');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      uTF8Decoder0.decode(byteBuffer1);
      ByteBuffer byteBuffer2 = charset0.encode("");
      charset0.decode(byteBuffer2);
      ByteBuffer byteBuffer3 = charset0.encode("");
      charset0.aliases();
      uTF8Decoder0.decode(byteBuffer3);
      IOUtils.firstIdentifier('=');
      IOUtils.stringSize((long) '=');
      char[] charArray0 = new char[8];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = 'o';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '$';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[7] = '=';
      IOUtils.decodeBase64(charArray0, 2, 2);
      IOUtils.getChars(60, 2, charArray0);
      String string0 = IOUtils.getStringProperty(">@Wy[");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = uTF8Decoder0.charset();
      String string0 = "";
      String string1 = "n-[^=\"X$%_3JyfS9F";
      ByteBuffer byteBuffer0 = charset0.encode("n-[^=\"X$%_3JyfS9F");
      charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode("");
      byteBuffer1.asReadOnlyBuffer();
      charset0.aliases();
      uTF8Decoder0.decode(byteBuffer1);
      IOUtils.firstIdentifier('=');
      IOUtils.stringSize((long) '=');
      char[] charArray0 = new char[8];
      charArray0[0] = '=';
      charArray0[1] = '=';
      charArray0[2] = '=';
      charArray0[3] = '=';
      charArray0[4] = '=';
      charArray0[5] = '=';
      charArray0[6] = '$';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[7] = '=';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[18];
      IOUtils.decodeBase64("PXxpAEBm*tAE;");
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 1, 163, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 162
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "/KNRwCLF+|a+*lac";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("/KNRwCLF+|a+*lac", 12, 12);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.firstIdentifier('\u00A5');
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((long) '\u00A5');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      iOUtils0.UTF8.newDecoder();
      PipedReader pipedReader0 = new PipedReader();
      IOUtils.getChars((-499), 51, iOUtils0.replaceChars);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.close(pipedReader0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.stringSize(3878L);
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.UTF8.displayName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      IOUtils.encodeUTF8(iOUtils0.CA, 4, 10, byteArray0);
      IOUtils.stringSize((-2910));
      IOUtils.getChars((-1L), 10, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOUtils.decodeBase64("/3[9m|/dzNd!xE{IE=");
      String string0 = IOUtils.getStringProperty("Y+};J");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte byte0 = (byte) (-17);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char char0 = '\u001A';
      byte[] byteArray0 = new byte[6];
      byteArray0[5] = (byte) (-17);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[8];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 1, '\u001A', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "pP-8");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte) (-19);
      char[] charArray0 = new char[11];
      charArray0[0] = '2';
      int int1 = IOUtils.decodeUTF8(byteArray0, 1, '2', charArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IOUtils.firstIdentifier('\u00A5');
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((long) '\u00A5');
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.loadPropertiesFromFile();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = iOUtils0.UTF8.encode("fastjson.properties");
      CharBuffer charBuffer0 = iOUtils0.UTF8.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) 8256498, 97, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 96
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils.stringSize(6L);
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.encodeUTF8(iOUtils0.DIGITS, 1, 1, iOUtils0.specicalFlags_singleQuotes);
      iOUtils0.UTF8.displayName();
      IOUtils.decodeUTF8(iOUtils0.specicalFlags_doubleQuotes, 1, 1, iOUtils0.replaceChars);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Charset.defaultCharset();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-1), 34, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHFIELDNAME;
      char[] charArray0 = new char[1];
      charArray0[0] = 'B';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 0, 2379, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(100000000000L, 63, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 62
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte) (-19);
      char[] charArray0 = new char[18];
      charArray0[0] = '2';
      int int1 = IOUtils.decodeUTF8(byteArray0, 1, '2', charArray0);
      assertEquals((-1), int1);
      
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      int int2 = IOUtils.stringSize(100L);
      assertEquals(3, int2);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte) (-10);
      char[] charArray0 = new char[12];
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(byteArray0, 1, 25, charArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IOUtils.getChars(4456L, (int) (byte)6, charArray0);
      byte[] byteArray1 = IOUtils.decodeBase64("fastjson.properties");
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte) (-10);
      char[] charArray0 = new char[11];
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeUTF8(byteArray0, 1, 25, charArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(1786L, (int) (byte) (-65), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -66
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-8");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = IOUtils.FASTJSON_PROPERTIES;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte) (-19);
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, 1, 1, charArray0);
      IOUtils.isIdent('2');
      IOUtils.isValidJsonpQueryParam("fastjson.properties");
      String string1 = IOUtils.getStringProperty("fastjson.properties");
      assertNull(string1);
  }
}
