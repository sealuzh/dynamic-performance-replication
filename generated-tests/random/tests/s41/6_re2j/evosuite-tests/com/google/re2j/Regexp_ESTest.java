/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 02:51:55 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      regexp0.name = null;
      regexp_Op0.isPseudo();
      regexp0.equals((Object) null);
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op.values();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 767;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.cap = (-613);
      regexp1.reinit();
      regexp0.op = regexp_Op1;
      regexp1.min = 1;
      regexp0.name = "otMp[6kn'H";
      regexp1.name = "";
      regexp1.toString();
      regexp1.reinit();
      regexp_Op0.isPseudo();
      regexp0.name = "";
      regexp1.equals(regexp_Op0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$h/.F:g0g=H%:3`S3^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$h/.F:g0g=H%:3`S3^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.flags = 922;
      regexp0.equals(regexp_Op0);
      int[] intArray0 = new int[6];
      intArray0[0] = 922;
      intArray0[1] = 922;
      intArray0[2] = 922;
      intArray0[3] = 922;
      intArray0[4] = 922;
      intArray0[5] = 922;
      regexp0.runes = intArray0;
      regexp0.name = "\b";
      regexp0.cap = 8;
      regexp0.max = 8;
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.equals(regexp1);
      regexp0.toString();
      Regexp[] regexpArray0 = new Regexp[5];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexp1.subs = regexpArray0;
      regexp1.flags = 0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Bopomofo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Bopomofo
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-841);
      regexp0.reinit();
      regexp0.name = "Ctb[(";
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-841);
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 91;
      intArray0[4] = (-841);
      intArray0[5] = 0;
      regexp1.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = (-40);
      intArray0[1] = 19;
      intArray0[2] = 8;
      intArray0[3] = (-237);
      intArray0[4] = 104;
      intArray0[5] = 11;
      intArray0[6] = 20;
      intArray0[7] = 18;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.reinit();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 407;
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      regexp0.op = regexp_Op1;
      regexp0.flags = 177;
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      intArray0[0] = 177;
      intArray0[1] = 177;
      regexp1.runes = intArray0;
      regexp0.min = 9;
      regexp1.reinit();
      regexp0.maxCap();
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp0.toString();
      regexp1.cap = (-3755);
      regexp0.equals(regexp1);
      regexp0.maxCap();
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[9];
      intArray0[0] = 7;
      intArray0[1] = 40;
      intArray0[2] = 10;
      intArray0[3] = (-1735);
      intArray0[4] = 1762;
      intArray0[5] = 2147483645;
      intArray0[6] = 7;
      intArray0[7] = 0;
      intArray0[8] = (-759);
      regexp1.runes = intArray0;
      regexp1.name = "rN\"|3wE[sKu8}j2t(y";
      regexp1.toString();
      regexp0.reinit();
      Regexp.Op.values();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      boolean boolean0 = regexp_Op0.isPseudo();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      regexp2.cap = 256;
      regexp1.reinit();
      boolean boolean0 = regexp2.equals(regexp_Op0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp0.toString();
      regexp1.equals(object0);
      regexp1.cap = (-3755);
      regexp0.equals(regexp1);
      regexp0.maxCap();
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      Regexp[] regexpArray0 = new Regexp[1];
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp0.flags = 18;
      regexp1.min = 18;
      regexpArray0[0] = regexp1;
      regexp0.subs = regexpArray0;
      regexp0.equals(object0);
      regexp1.cap = 1494;
      regexp0.flags = 1494;
      regexp1.name = "Kannada";
      regexp0.toString();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      regexp1.op = regexp_Op1;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = (-602);
      regexp1.cap = (-602);
      regexp1.toString();
      regexp1.equals(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.subs = null;
      regexp2.subs = null;
      regexp1.cap = 18;
      regexp2.cap = 18;
      int[] intArray0 = new int[5];
      intArray0[0] = (-602);
      intArray0[1] = 18;
      intArray0[2] = 18;
      intArray0[3] = (-602);
      intArray0[4] = (-602);
      regexp0.runes = intArray0;
      regexp1.equals(regexp2);
      regexp1.toString();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      int[] intArray0 = new int[1];
      intArray0[0] = 1806;
      regexp1.name = "";
      regexp0.runes = intArray0;
      regexp1.subs = regexpArray0;
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.name = "";
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.subs = null;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 3417;
      regexp1.max = 3417;
      regexp1.maxCap();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 12;
      regexp0.flags = 12;
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "com.google.re2j.Regexp$1";
      regexp1.name = "com.google.re2j.Regexp$1";
      boolean boolean0 = regexp1.equals(regexp0);
      boolean boolean1 = regexp1.equals(regexp_Op0);
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op.values();
      regexp0.reinit();
      regexp1.reinit();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 13;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.runes = intArray0;
      Object object0 = new Object();
      regexp0.equals((Object) null);
      regexp0.equals(object0);
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[1];
      regexp0.flags = 1255;
      regexp0.name = "ifiV_gC->-(w(";
      regexp0.reinit();
      regexp0.op = regexp_Op0;
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      regexp0.op = regexp_Op1;
      regexp0.runes = intArray0;
      intArray0[0] = 256;
      regexp0.runes = intArray0;
      regexp0.toString();
      int int0 = 42891;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp0.equals(regexp2);
      Regexp[] regexpArray0 = new Regexp[4];
      Regexp.Op regexp_Op2 = Regexp.Op.LEFT_PAREN;
      Regexp regexp3 = new Regexp(regexp_Op2);
      regexpArray0[0] = regexp3;
      regexpArray0[1] = regexp0;
      Regexp regexp4 = new Regexp(regexp_Op0);
      regexpArray0[2] = regexp4;
      regexpArray0[3] = regexp0;
      regexp1.subs = regexpArray0;
      regexp0.flags = (-1085);
      regexp3.reinit();
      regexp1.cap = (-1085);
      regexp1.maxCap();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      int[] intArray0 = new int[8];
      intArray0[0] = 1235;
      intArray0[1] = (-1291);
      regexp0.name = "^x00-x{10FFFF}";
      intArray0[2] = 720894;
      regexp0.flags = 7;
      intArray0[3] = 20;
      intArray0[4] = 1235;
      intArray0[5] = 1235;
      intArray0[6] = 1235;
      intArray0[7] = 1235;
      regexp0.runes = intArray0;
      regexp0.min = 1235;
      regexp0.reinit();
      regexp0.op.isPseudo();
      regexp0.runes = intArray0;
      boolean boolean0 = regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      regexp0.op.isPseudo();
      regexp0.reinit();
      regexp0.maxCap();
      Regexp.Op.values();
      boolean boolean1 = regexp0.op.isPseudo();
      assertTrue(boolean1 == boolean0);
      
      regexp0.toString();
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.toString();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.max = 275;
      regexp1.name = ";";
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.cap = 0;
      regexp1.maxCap();
      regexp1.min = 0;
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.equals(regexp1);
      regexp0.equals((Object) null);
      regexp1.toString();
      regexp0.op.isPseudo();
      regexp0.equals((Object) null);
      regexp0.op.isPseudo();
      regexp_Op0.isPseudo();
      regexp0.maxCap();
      regexp0.op.isPseudo();
      regexp0.equals(";");
      regexp1.toString();
      regexp0.equals("Ol_Chiki");
      Object object0 = new Object();
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("`+q:AE;Om?>F&,%]l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.`+q:AE;Om?>F&,%]l
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.name = "Diacritic";
      regexp0.equals("Diacritic");
      regexp0.max = 1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.equals(regexp0);
      regexp0.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp0.cap = (-841);
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.equals(regexp1);
      regexp0.reinit();
      boolean boolean1 = regexp1.equals(regexp_Op0);
      assertTrue(boolean1 == boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = (-4362);
      regexp0.min = (-4362);
      int int1 = 17;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = 45;
      intArray0[1] = 12;
      intArray0[2] = 15;
      intArray0[3] = 68152;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("\\z", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = (-2775);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("$", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      regexp0.op = regexp_Op1;
      regexp0.flags = (-894);
      regexp0.max = 899;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Z]l");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Z]l
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 11;
      regexp0.flags = (-284);
      regexp0.maxCap();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp0.equals(regexp1);
      regexp0.toString();
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp0.op = regexp_Op0;
      regexp1.min = 2;
      regexp0.name = "A,3|W7>)-OL~,c;sNy=";
      regexp0.min = 19;
      regexp1.flags = 2;
      regexp1.equals(regexp_Op0);
      regexp1.cap = 794;
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.equals(regexp1);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[1];
      regexp0.max = (-2817);
      intArray0[0] = (-2817);
      regexp1.name = "Pi";
      regexp0.runes = intArray0;
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.cap = 504;
      String string0 = regexp1.toString();
      regexp1.maxCap();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      String string1 = regexp1.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp0.flags = 13;
      Regexp regexp1 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp0.equals(regexp1);
      assertFalse(boolean0);
      
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      int int1 = regexp0.maxCap();
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals("\b");
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.max = 829;
      regexp1.max = 125;
      regexp0.flags = 5518;
      regexp0.equals(regexp1);
      regexp1.flags = 5518;
      int[] intArray0 = new int[4];
      regexp1.flags = 5518;
      intArray0[0] = 5518;
      intArray0[1] = 125;
      intArray0[2] = 125;
      intArray0[3] = 125;
      regexp1.op = regexp_Op0;
      regexp1.runes = intArray0;
      regexp0.flags = 1613;
      regexp0.cap = (-2154);
      regexp1.cap = (-29);
      regexp0.op = regexp_Op0;
      regexp0.equals(regexp1);
      String string0 = "IbS";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("IbS");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.IbS
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "CAPTURE";
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[9];
      intArray0[0] = 6;
      intArray0[1] = 6;
      intArray0[2] = 18;
      intArray0[3] = (-1649);
      intArray0[4] = (-2044);
      intArray0[5] = 10750;
      intArray0[6] = (-1883);
      intArray0[7] = 2570;
      intArray0[8] = 2558;
      regexp1.runes = intArray0;
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[1];
      regexp0.max = (-1663);
      intArray0[0] = (-1901);
      regexp0.runes = intArray0;
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp0.op = regexp_Op1;
      regexp0.runes = null;
      regexp0.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp1.reinit();
      regexp1.op = regexp_Op0;
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("40q|1_;oZC`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.40q|1_;oZC`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      int[] intArray0 = new int[9];
      intArray0[0] = 1751;
      intArray0[1] = 65020;
      intArray0[2] = 13054;
      regexp0.cap = 1751;
      intArray0[3] = (-278);
      intArray0[4] = (-1);
      intArray0[5] = (-318);
      intArray0[6] = 91;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[2];
      intArray0[0] = 2142;
      intArray0[1] = 1076;
      regexp1.runes = intArray0;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[7];
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.flags = 256;
      regexp0.cap = (-823);
      regexp0.reinit();
      regexp0.reinit();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      regexp0.op = regexp_Op1;
      regexp0.max = 2949;
      regexp0.maxCap();
      regexp0.op.isPseudo();
      String string0 = null;
      regexp0.op.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp1.equals(regexp_Op0);
      regexp0.cap = (-624);
      Object object0 = new Object();
      regexp1.cap = 20;
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.flags = (-2680);
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      regexp0.op = regexp_Op1;
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      regexp0.toString();
      regexp0.name = "(?:)";
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      regexp0.reinit();
      regexp0.max = 5;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.reinit();
      Regexp.Op.values();
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      assertTrue(regexp0.equals((Object)regexp1));
      
      regexp0.op = regexp_Op1;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[4];
      intArray0[0] = 11;
      intArray0[1] = 12;
      intArray0[2] = (-683);
      regexp0.toString();
      intArray0[3] = (-1174);
      regexp0.runes = intArray0;
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray1 = new int[4];
      intArray1[0] = (-1174);
      intArray1[1] = (-683);
      intArray1[2] = 12;
      intArray1[3] = (-1174);
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.op = regexp_Op1;
      regexp1.runes = intArray1;
      regexp0.equals(regexp1);
      regexp0.flags = 721;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.maxCap();
      regexp0.min = 0;
      Regexp.Op regexp_Op1 = Regexp.Op.ALTERNATE;
      regexp1.op = regexp_Op1;
      regexp1.equals("-7.^-?btnlX <~;w2M");
      regexp0.reinit();
      regexp1.equals("");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.CONCAT;
      regexp0.op = regexp_Op1;
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      String string0 = "$VALUES";
      regexp0.op.isPseudo();
      regexp0.cap = 220;
      regexp0.name = "$VALUES";
      regexp0.reinit();
      Regexp.Op regexp_Op2 = Regexp.Op.WORD_BOUNDARY;
      regexp0.op = regexp_Op2;
      String string1 = "R:";
      regexp0.equals("R:");
      regexp0.op.isPseudo();
      regexp0.toString();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$VALUES");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$VALUES
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[5];
      regexp1.toString();
      intArray0[0] = 5;
      intArray0[1] = (-211);
      regexp0.name = "(?s:.)";
      intArray0[2] = 3160;
      regexp0.toString();
      intArray0[3] = 2960;
      intArray0[4] = (-1033);
      regexp0.runes = intArray0;
      regexp1.name = "(?s:.)";
      regexp1.min = 63;
      regexp1.toString();
      regexp1.toString();
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp0));
      
      Regexp.Op.values();
      regexp1.equals("(?s:.)");
      regexp0.equals("(?s:.)");
      Regexp.Op.values();
      regexp1.toString();
      regexp1.reinit();
      boolean boolean0 = regexp1.equals("(?s:.)");
      assertFalse(boolean0);
  }
}
