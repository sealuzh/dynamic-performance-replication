/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 14:04:43 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.index = (-421);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      classWriter0.index = (-421);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6220));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "9{{ZsT`Y_8", "wheel.asm.FieldWriter", "9{{ZsT`Y_8", "wheel.asm.MethodWriter");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-372));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-372), "qu", "qu", "qu", "qu");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-413));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-413), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-413));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-413), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 74, "R;S", "R;S", "R;S", "R;S");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 74;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter");
      classWriter0.index = 131072;
      classWriter0.newNameType("6", "wheel.asmFiedWrter");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6220));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "The array of prefixes must not be null", (String) null, "", "Synthetic");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-497));
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-497);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 5446, "A", "in^E1ZWN", "in^E1ZWN", classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(72);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 72, "R;S", "R;S", "R;S", "R;S");
      Attribute attribute0 = new Attribute("R;S");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2753, "H", "O4sq6O|6eN<W+KcZ", "H", ")>N@++=gA6");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("Synthetic", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-372));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-372), "wheel.asm.ieldriter", "wheel.asm.ieldriter", "wheel.asm.ieldriter", "wheel.asm.ieldriter");
      fieldWriter0.visitAnnotation("wheel.asm.ieldriter", true);
      ByteVector byteVector0 = new ByteVector(36);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-451));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-451), "0nt", "0nt", "0nt", "0nt");
      classWriter0.version = (-451);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6220));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1000), "", "9{{ZsT`Y_8", "wheel.asm.FieldWriter", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-476));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "G", "G", "G", "G");
      Attribute attribute0 = new Attribute("G");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(72);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 72, "R;S", "R;S", "R;S", "R;S");
      fieldWriter0.visitAnnotation("R;S", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "The list of prefixesmust not be null", "The list of prefixesmust not be null", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-413));
      classWriter0.version = (-413);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-413), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-372));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-372), "wheel.asm.ieldriter", "wheel.asm.ieldriter", "wheel.asm.ieldriter", "wheel.asm.ieldriter");
      fieldWriter0.visitAnnotation("wheel.asm.ieldriter", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-128));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-128), "The list of prefixesmust not be null", "The list of prefixesmust not be null", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-421));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter", "wheel.asmFiedWrter");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "m8?'`n", "", "", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-927));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-927), "mu;", "", "WOngQ#0j<yO0}Sza{", "mu;");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1024);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "9{{ZsT`Y_8", "9{{ZsT`Y_8", "O4sq6O|6eN<W+KcZ", "wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
