/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:35:10 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, ", ");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)8;
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField((byte)34, (-1635), fieldTypeRational0, (byte)116, 0L, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(928, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1635), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, ", ");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)8;
      TiffField tiffField0 = new TiffField((byte)34, (-1635), fieldTypeRational0, (byte)116, 0L, byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34, tiffField0.getTag());
      assertEquals(928, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1635), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2576), "_");
      TiffField tiffField0 = new TiffField(3, 65522, fieldTypeShort0.SLONG, 1L, 1L, byteArray0, byteOrder0, (-2576));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-2576), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(65522, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-839), fieldTypeShort0.IFD, (-11080L), (-11080L), byteArray0, byteOrder0, (byte)112);
      String string0 = tiffField0.toString();
      assertEquals(28, tiffField0.getTag());
      assertEquals((-839), tiffField0.getDirectoryType());
      assertEquals((-11080), tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-11080 IFD)", string0);
      assertEquals(112, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeRational0, 14, 14, byteArray0, byteOrder0, 14);
      tiffField0.dump();
      assertEquals(14, tiffField0.getOffset());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(746, 746, fieldTypeLong0, 17L, 1182L, byteArray0, byteOrder0, 746);
      tiffField0.getValue();
      assertEquals(746, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getBytesLength());
      assertEquals(1182, tiffField0.getOffset());
      assertEquals(746, tiffField0.getTag());
      assertEquals(746, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeShort0, 330, 330, byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tagInfo0.tag);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 5493, fieldTypeByte0, (byte) (-8), (byte) (-8), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-8), tiffField0.getOffset());
      assertEquals(5493, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1354), 3061, fieldTypeRational0, 908L, (-5432L), byteArray0, byteOrder0, (-1354));
      int int0 = tiffField0.getTag();
      assertEquals(3061, tiffField0.getDirectoryType());
      assertEquals((-1354), tiffField0.getSortHint());
      assertEquals((-1354), int0);
      assertEquals((-5432), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-86);
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)60;
      byteArray0[6] = (byte) (-87);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2323), 2146701892, fieldTypeAscii0, 2146701892, 285L, byteArray0, byteOrder0, (-2146643802));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(2146701892, tiffField0.getBytesLength());
      assertEquals((-2146643802), tiffField0.getSortHint());
      assertEquals(2146701892, tiffField0.getDirectoryType());
      assertEquals((-2323), tiffField0.getTag());
      assertEquals(285, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(219, "ReductionMatrix2");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2141), (-569), fieldTypeLong0, (-2141), 1048560L, byteArray0, byteOrder0, (byte) (-69));
      int int0 = tiffField0.getSortHint();
      assertEquals(1048560, tiffField0.getOffset());
      assertEquals((-69), int0);
      assertEquals((-569), tiffField0.getDirectoryType());
      assertEquals((-2141), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2841, 2841, fieldTypeRational0, 2841, 2841, byteArray0, byteOrder0, 2841);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2841, tiffField0.getTag());
      assertEquals(2841L, tiffElement0.offset);
      assertEquals(2841, tiffField0.getSortHint());
      assertEquals(2841, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(326, 65535, fieldTypeLong0, 326, 326, byteArray0, byteOrder0, (byte)24);
      int int0 = tiffField0.getOffset();
      assertEquals(326, tiffField0.getTag());
      assertEquals(326, int0);
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1031, 34911, fieldTypeFloat0.SRATIONAL, 735, (-586L), (byte[]) null, byteOrder0, 50);
      int int0 = tiffField0.getOffset();
      assertEquals((-586), int0);
      assertEquals(1031, tiffField0.getTag());
      assertEquals(34911, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-76);
      TiffField tiffField0 = new TiffField(2146713664, (byte) (-76), fieldTypeRational0.SSHORT, 1469L, (-2378L), byteArray0, byteOrder0, 34852);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2146713664, tiffField0.getTag());
      assertEquals(34852, tiffField0.getSortHint());
      assertEquals(2938, tiffField0.getBytesLength());
      assertEquals((-76), tiffField0.getDirectoryType());
      assertEquals((-2378), tiffField0.getOffset());
      assertEquals(180, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-111);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 2405, fieldTypeLong0, 2792L, 1L, byteArray0, byteOrder0, (-1077));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2405, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(11168, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-1077), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3852, "&f+");
      TiffField tiffField0 = new TiffField(3, (-2349), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-2145287855));
      tiffField0.getIntValue();
      assertEquals((-2145287855), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-2349), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[32];
      byteArray0[0] = (byte)4;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1755), (byte)48, fieldTypeFloat0.SSHORT, 1L, (-1628L), byteArray0, byteOrder0, (byte)48);
      tiffField0.getIntValue();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1755), tiffField0.getTag());
      assertEquals((-1628), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-93);
      TiffField tiffField0 = new TiffField(4013, 222, fieldTypeLong0, 1L, 11848L, byteArray0, byteOrder0, (byte) (-36));
      tiffField0.getIntValue();
      assertEquals(11848, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-36), tiffField0.getSortHint());
      assertEquals(4013, tiffField0.getTag());
      assertEquals(222, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1865, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1865, (byte) (-24), fieldTypeDouble0, 4L, 2147483647L, byteArray0, byteOrder0, (byte) (-24));
      tiffField0.getFieldTypeName();
      assertEquals((-24), tiffField0.getDirectoryType());
      assertEquals(1865, tiffField0.getTag());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)41, "");
      TiffField tiffField0 = new TiffField((byte)41, 1242, fieldTypeRational0, (byte)41, (-399L), byteArray0, byteOrder0, (byte)41);
      tiffField0.getFieldTypeName();
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
      assertEquals((-399), tiffField0.getOffset());
      assertEquals(1242, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "");
      TiffField tiffField0 = new TiffField(17, (-990), fieldTypeShort0, 17, (byte)56, byteArray0, byteOrder0, 17);
      tiffField0.getFieldType();
      assertEquals(17, tiffField0.getSortHint());
      assertEquals((-990), tiffField0.getDirectoryType());
      assertEquals(17, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1203), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1276), (-1203), fieldTypeShort0, 34016, 2792L, byteArray0, byteOrder0, 34016);
      tiffField0.getFieldType();
      assertEquals(2792, tiffField0.getOffset());
      assertEquals((-1276), tiffField0.getTag());
      assertEquals(34016, tiffField0.getSortHint());
      assertEquals((-1203), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(321, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(321, 35, fieldTypeShort0, 0L, 35, byteArray0, byteOrder0, 1430);
      tiffField0.getFieldType();
      assertEquals(321, tiffField0.getTag());
      assertEquals(35, tiffField0.getOffset());
      assertEquals(1430, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2576), "_");
      TiffField tiffField0 = new TiffField(3, 65522, fieldTypeShort0.SLONG, 1L, 1L, byteArray0, byteOrder0, (-2576));
      tiffField0.getDoubleValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals((-2576), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(65522, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-40);
      TiffField tiffField0 = new TiffField((-935), (-935), fieldTypeFloat0, 1L, (-90L), byteArray0, byteOrder0, (-1129));
      tiffField0.getDoubleValue();
      assertEquals((-90), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1129), tiffField0.getSortHint());
      assertEquals((-935), tiffField0.getTag());
      assertEquals((-935), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-55);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-1420), fieldTypeByte0, 1L, (-372L), byteArray0, byteOrder0, (byte)122);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(122, tiffField0.getSortHint());
      assertEquals((-1420), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-372), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 0, (FieldType) null, 21, 2140L, byteArray0, byteOrder0, (byte) (-122));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(21, tiffField0.getTag());
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(2140, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3230, "IMy");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1341, fieldTypeShort0, 1341, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1341, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)100, "Expected String value(");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2, (byte)59, fieldTypeShort0, 4010L, 2, byteArray0, byteOrder0, 65535);
      long long0 = tiffField0.getCount();
      assertEquals(4010L, long0);
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, "OXqaT w0xQ=6kz)");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146713664, 9, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, (byte)42);
      long long0 = tiffField0.getCount();
      assertEquals((-1L), long0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(2146713664, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(124);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (byte)71, fieldTypeFloat0, 698L, (byte)0, byteArray0, byteOrder0, 3);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2792, int0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1880, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1186), (-2912), fieldTypeLong0, (-1186), (-2912), byteArray0, byteOrder0, 1586);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2912), tiffField0.getOffset());
      assertEquals((-1186), tiffField0.getTag());
      assertEquals(1586, tiffField0.getSortHint());
      assertEquals((-2912), tiffField0.getDirectoryType());
      assertEquals((-4744), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(3852, 3852, fieldTypeLong0, 1038, 368L, byteArray0, (ByteOrder) null, 3852);
      tiffField0.getByteOrder();
      assertEquals(368, tiffField0.getOffset());
      assertEquals(3852, tiffField0.getDirectoryType());
      assertEquals(3852, tiffField0.getTag());
      assertEquals(3852, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1487, (-493), fieldTypeLong0, 2198L, (byte)0, byteArray0, byteOrder0, 1487);
      tiffField0.getByteArrayValue();
      assertEquals(1487, tiffField0.getTag());
      assertEquals(8792, tiffField0.getBytesLength());
      assertEquals((-493), tiffField0.getDirectoryType());
      assertEquals(1487, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1724, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1276), 0, fieldTypeShort0, 0, (-1276), byteArray0, byteOrder0, 1724);
      tiffField0.getByteArrayValue();
      assertEquals(1724, tiffField0.getSortHint());
      assertEquals((-1276), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1276), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1487, 12, fieldTypeFloat0.ASCII, 5627L, 2987L, byteArray0, byteOrder0, 15);
      File file0 = MockFile.createTempFile(" (0x", " (0x");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(157L, file0.length());
      assertEquals(1487, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(124);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1880, (byte)71, fieldTypeFloat0, 698L, (byte)0, byteArray0, byteOrder0, 3);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1880, tiffField0.getTag());
      assertEquals(2792, tiffField0.getBytesLength());
      assertEquals(698L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(71, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34015, 34015, fieldTypeRational0, 34015, 34015, (byte[]) null, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (-644L), (byte)0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50714, 50714, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-21), (byte) (-21), (FieldType) null, (byte) (-21), (byte) (-105), byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2837, 11, fieldTypeRational0, 11, 2837, (byte[]) null, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2406), (-2406), fieldTypeRational0, (-2406), (-2406), byteArray0, byteOrder0, (-2406));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeRational0, 1L, 12, byteArray0, byteOrder0, 2593);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-941), fieldTypeRational0, (-941), (-2552L), byteArray0, byteOrder0, (byte)5);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(430, (-1634), fieldTypeByte0, (-1634), (-1634), byteArray0, byteOrder0, 430);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50714, 50714, fieldTypeRational0, 50714, 50714, (byte[]) null, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeDouble0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2613), (-2613), fieldTypeShort0, 1L, (-4238L), byteArray0, byteOrder0, (-2613));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48, 48, fieldTypeByte0, 48, 48, (byte[]) null, byteOrder0, 48);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3214), (-3214), fieldTypeShort0, (-3214), (-3214), byteArray0, byteOrder0, (-3214));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeShort0, 1L, 102, byteArray0, byteOrder0, 102);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, (-1576));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(133, 133, fieldTypeRational0, 133, 133, (byte[]) null, byteOrder0, 133);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1208), (-1208), fieldTypeRational0, (-1208), (-1208), byteArray0, byteOrder0, (-1208));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 1, fieldTypeRational0, 1, 3, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(442, 442, fieldTypeRational0, 1L, 442, byteArray0, byteOrder0, 2149);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1826, 1826, fieldTypeShort0, 1826, 1826, (byte[]) null, byteOrder0, 1826);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1271), (-1271), fieldTypeShort0, (-1271), (-1271), byteArray0, byteOrder0, (-1271));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50689, 50689, fieldTypeRational0, 1L, 50689, byteArray0, byteOrder0, 50689);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(2841, (-1276), fieldTypeByte0, 2841, 2841, (byte[]) null, byteOrder0, (-1276));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-963), (-963), fieldTypeRational0, (-963), (-963), byteArray0, byteOrder0, (-963));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(802, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((-1276), (-1276), fieldTypeShort0, (-1276), (-1276), byteArray0, byteOrder0, (-1276));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3844, 3844, fieldTypeRational0, 1L, 3844, byteArray0, byteOrder0, 3844);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3407, 3407, fieldTypeRational0, (-717L), (-717L), byteArray0, byteOrder0, 3407);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(143, 143, fieldTypeRational0, (-2544L), 143, byteArray0, (ByteOrder) null, (-4361));
      MockFile mockFile0 = new MockFile("a");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "a");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(7, 1, fieldTypeRational0, 1, 7, byteArray0, byteOrder0, (byte) (-44));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("%v[-X=Q!`#");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "|]k-vo~*9n ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-21), 365, fieldTypeShort0, (-21), (-21), byteArray0, byteOrder0, 365);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-25), (-25), fieldTypeRational0, (-25), (-25), byteArray0, byteOrder0, (-25));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1228, 1228, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 23);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1031, 34911, fieldTypeFloat0.SRATIONAL, 735, (-586L), (byte[]) null, byteOrder0, 50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("BlackLevelRepeatDim");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-293), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-293), 3, fieldTypeShort0, 0, 3, byteArray0, byteOrder0, 9);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-293), tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 3512, fieldTypeLong0, 3512, 3512, byteArray0, byteOrder0, 1406);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(1406, tiffField0.getSortHint());
      assertEquals(3512, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(3512, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1825, 1825, fieldTypeShort0, 1825, 1825, (byte[]) null, byteOrder0, 1825);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1276), 0, (FieldType) null, 1724, 14920L, byteArray0, byteOrder0, 1724);
      tiffField0.getFieldType();
      assertEquals(14920, tiffField0.getOffset());
      assertEquals((-1276), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1724, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1487, (-493), fieldTypeLong0, 2198L, (byte)0, byteArray0, byteOrder0, 1487);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1487, tiffField0.getTag());
      assertEquals(1487, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-493), int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeRational0, 14, 14, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeLong0, 25, 25, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-235), 48259, fieldTypeFloat0, 48259, (byte)0, byteArray0, byteOrder0, 524);
      int int0 = tiffField0.getOffset();
      assertEquals((-235), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(48259, tiffField0.getDirectoryType());
      assertEquals(524, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1374, 1374, fieldTypeRational0, 1374, 1374, byteArray0, byteOrder0, 0);
      tiffField0.getTagInfo();
      assertEquals(1374, tiffField0.getTag());
      assertEquals(1374, tiffField0.getOffset());
      assertEquals(1374, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)48, fieldTypeDouble0, (byte)48, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-293), (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-293), 3, fieldTypeShort0, 0, 3, byteArray0, byteOrder0, 9);
      tiffField0.getCount();
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-293), tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-764), (-764), fieldTypeLong0, 0L, (-6263L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals((-6263), tiffField0.getOffset());
      assertEquals((-764), tiffField0.getDirectoryType());
      assertEquals((-764), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2841, 2841, fieldTypeRational0, 2841, 2841, byteArray0, byteOrder0, 2841);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[62];
      TiffField tiffField0 = new TiffField((byte)4, (byte)0, fieldTypeFloat0.ASCII, 3065, 3065, byteArray0, (ByteOrder) null, (byte)4);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34056, 34056, fieldTypeFloat0, 34056, 34056, byteArray0, byteOrder0, 34056);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1255702f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2841, 2841, fieldTypeRational0, 2841, 2841, byteArray0, byteOrder0, 2841);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[360];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(127, 127, fieldTypeByte0, 127, 127, byteArray0, byteOrder0, 127);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@21dd1b22 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[134];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34044, 34044, fieldTypeFloat0, 34044, 34044, byteArray0, byteOrder0, 34044);
      tiffField0.getDoubleArrayValue();
      assertEquals(34044, tiffField0.getOffset());
      assertEquals(34044L, tiffField0.getCount());
      assertEquals(136176, tiffField0.getBytesLength());
      assertEquals(34044, tiffField0.getTag());
      assertEquals(34044, tiffField0.getDirectoryType());
      assertEquals(34044, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(34026, 34026, fieldTypeShort0.DOUBLE, 34026, 34026, byteArray0, byteOrder0, 34026);
      tiffField0.getDoubleArrayValue();
      assertEquals(34026, tiffField0.getOffset());
      assertEquals(272208, tiffField0.getBytesLength());
      assertEquals(34026, tiffField0.getDirectoryType());
      assertEquals(34026, tiffField0.getTag());
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals(34026L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[181];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(101, 101, fieldTypeLong0, 101, 101, byteArray0, byteOrder0, 101);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(101, tiffField0.getOffset());
      assertEquals(101L, tiffField0.getCount());
      assertEquals(101, tiffField0.getTag());
      assertEquals(45, doubleArray0.length);
      assertEquals(101, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1826, 1826, fieldTypeShort0, 1826, 1826, byteArray0, byteOrder0, 1826);
      tiffField0.getDoubleArrayValue();
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(1826, tiffField0.getTag());
      assertEquals(1826, tiffField0.getSortHint());
      assertEquals(1826, tiffField0.getDirectoryType());
      assertEquals(3652, tiffField0.getBytesLength());
      assertEquals(1826L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeRational0, 14, 14, byteArray0, byteOrder0, 14);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(14L, tiffField0.getCount());
      assertEquals(14, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(14, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2841, 2841, fieldTypeRational0, 2841, 2841, byteArray0, byteOrder0, 2841);
      tiffField0.getDoubleArrayValue();
      assertEquals(22728, tiffField0.getBytesLength());
      assertEquals(2841L, tiffField0.getCount());
      assertEquals(2841, tiffField0.getDirectoryType());
      assertEquals(2841, tiffField0.getTag());
      assertEquals(2841, tiffField0.getOffset());
      assertEquals(2841, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(34015, 34015, fieldTypeLong0, 34015, 34015, byteArray0, byteOrder0, 34015);
      tiffField0.getIntArrayValue();
      assertEquals(136060, tiffField0.getBytesLength());
      assertEquals(34015, tiffField0.getTag());
      assertEquals(34015, tiffField0.getOffset());
      assertEquals(34015, tiffField0.getSortHint());
      assertEquals(34015, tiffField0.getDirectoryType());
      assertEquals(34015L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1826, 1826, fieldTypeShort0, 1826, 1826, byteArray0, byteOrder0, 1826);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(1826L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(1826, tiffField0.getDirectoryType());
      assertEquals(1826, tiffField0.getSortHint());
      assertEquals(3652, tiffField0.getBytesLength());
      assertEquals(1826, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeRational0, 14, 14, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2842, 2842, fieldTypeRational0, 2842, 2842, byteArray0, byteOrder0, 2842);
      tiffField0.getIntArrayValue();
      assertEquals(2842, tiffField0.getOffset());
      assertEquals(2842, tiffField0.getDirectoryType());
      assertEquals(22736, tiffField0.getBytesLength());
      assertEquals(2842L, tiffField0.getCount());
      assertEquals(2842, tiffField0.getSortHint());
      assertEquals(2842, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@654ee962 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, (-500), fieldTypeAscii0, 0L, (-17179869184L), byteArray0, byteOrder0, 2681);
      String string0 = tiffField0.getStringValue();
      assertEquals((-500), tiffField0.getDirectoryType());
      assertEquals(127, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2681, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@affab94
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2841, 2841, fieldTypeRational0, 2841, 2841, byteArray0, byteOrder0, 2841);
      String string0 = tiffField0.getTagName();
      assertEquals(2841, tiffField0.getDirectoryType());
      assertEquals(2841, tiffField0.getSortHint());
      assertEquals(2841, tiffField0.getOffset());
      assertEquals("Unknown Tag (0xb19)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50714, 50714, fieldTypeRational0, 50714, 50714, byteArray0, byteOrder0, 50714);
      String string0 = tiffField0.getTagName();
      assertEquals("BlackLevel", string0);
      assertEquals(50714, tiffField0.getDirectoryType());
      assertEquals(50714, tiffField0.getOffset());
      assertEquals(50714, tiffField0.getSortHint());
      assertEquals(50714, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50714, 50714, fieldTypeRational0, 50714, 50714, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "Gu`uqlE.8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 0, fieldTypeFloat0, 5126L, (-25200L), byteArray0, byteOrder0, 1);
      String string0 = tiffField0.toString();
      assertEquals(20504, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals("36 (0x24: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (5126 Float)", string0);
      assertEquals((-25200), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)7, (byte)7, fieldTypeFloat0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(7L, tiffField0.getCount());
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(7, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[303];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(1840, 1840, fieldTypeByte0, 1840, 7, byteArray0, byteOrder0, (-5));
      String string0 = tiffField0.toString();
      assertEquals(7, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(1840, tiffField0.getBytesLength());
      assertEquals("1840 (0x730: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (303) (1840 Byte)", string0);
      assertEquals(1840, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[117];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 6, 6, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.toString();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals("6 (0x6: Unknown Tag): 0, 0, 0, 0, 0, 0 (6 Byte)", string0);
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(34026, 34026, fieldTypeShort0.DOUBLE, 34026, 34026, byteArray0, byteOrder0, 34026);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34026L, tiffField0.getCount());
      assertEquals(34026, tiffField0.getTag());
      assertEquals(34026, tiffField0.getDirectoryType());
      assertEquals(34026, tiffField0.getSortHint());
      assertEquals(272208, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(34026, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[257];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1230, 1230, fieldTypeLong0, 1230, 1230, byteArray0, byteOrder0, 1230);
      String string0 = tiffField0.toString();
      assertEquals("1230 (0x4ce: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (64) (1230 SLong)", string0);
      assertEquals(4920, tiffField0.getBytesLength());
      assertEquals(1230, tiffField0.getSortHint());
      assertEquals(1230, tiffField0.getDirectoryType());
      assertEquals(1230, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[158];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(60, 60, fieldTypeLong0, 60, 60, byteArray0, byteOrder0, 60);
      String string0 = tiffField0.getValueDescription();
      assertEquals(60L, tiffField0.getCount());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(60, tiffField0.getOffset());
      assertEquals(60, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3851, 3851, fieldTypeShort0, 3851, 3851, byteArray0, byteOrder0, 3851);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3851L, tiffField0.getCount());
      assertEquals(7702, tiffField0.getBytesLength());
      assertEquals(3851, tiffField0.getSortHint());
      assertEquals(3851, tiffField0.getTag());
      assertEquals(3851, tiffField0.getOffset());
      assertEquals(3851, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1826, 1826, fieldTypeShort0, 1826, 1826, byteArray0, byteOrder0, 1826);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1826, tiffField0.getDirectoryType());
      assertEquals(3652, tiffField0.getBytesLength());
      assertEquals(1826L, tiffField0.getCount());
      assertEquals(1826, tiffField0.getTag());
      assertEquals(1826, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1826, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0.ASCII, (byte)0, (-1391L), byteArray0, byteOrder0, (byte)0);
      tiffField0.toString();
      assertEquals((-1391), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[389];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1374, 1374, fieldTypeRational0, 1374, 1374, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2175), 65105);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1374, tiffField0.getTag());
      assertEquals(1374, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(1374, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getFieldTypeName();
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[62];
      TiffField tiffField0 = new TiffField((byte)4, (byte)0, fieldTypeFloat0.ASCII, 3065, 3065, byteArray0, (ByteOrder) null, (byte)4);
      tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3065L, tiffField0.getCount());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
      assertEquals(3065, tiffField0.getOffset());
      assertEquals(3065, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-4361), fieldTypeShort0, (-4361), 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(625, 83, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, 1118);
      int int0 = tiffField0.getSortHint();
      assertEquals(1118, int0);
      assertEquals(625, tiffField0.getTag());
      assertEquals(83, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2842, 2842, fieldTypeRational0, 2842, 2842, byteArray0, byteOrder0, 2842);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2842, tiffField0.getOffset());
      assertEquals("2842 (0xb1a: Unknown Tag): ", string0);
      assertEquals(2842, tiffField0.getDirectoryType());
      assertEquals(2842, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34008, 34008, fieldTypeRational0, 34008, 34008, (byte[]) null, byteOrder0, 34008);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 0, (byte[]) null, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1374, 1374, fieldTypeRational0, 1374, 1374, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2175), 65105);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1374, tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getOffset());
      assertEquals(1374, tiffField0.getTag());
      assertEquals(10992, tiffField0.getBytesLength());
  }
}
