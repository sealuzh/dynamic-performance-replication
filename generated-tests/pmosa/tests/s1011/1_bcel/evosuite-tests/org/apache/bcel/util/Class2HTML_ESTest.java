/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 19:04:41 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Signature;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")=RJDVH<Q`w!JDTU";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"";
      Class2HTML.toHTML("_attributes.html\"\n MARGINWIDTH=\"0\" MARGINHEIGHT=\"0\" FRAMEBORDER=\"1\" SCROLLING=\"AUTO\">\n</FRAMESET>\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"Code\" SRC=\"");
      String string1 = "int";
      ClassPath classPath0 = new ClassPath("int");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      String string2 = "w]LQQRT#687! *";
      try { 
        syntheticRepository0.loadClass("w]LQQRT#687! *");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Exception while looking for class w]LQQRT#687! *: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: w]LQQRT#687! *.class
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = "-zip";
      Class2HTML.referenceType("-zip");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-zip";
      stringArray0[1] = "java.time.LocalTime";
      stringArray0[2] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      stringArray0[3] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      stringArray0[4] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      stringArray0[5] = "<A HREF=\"-zip.html\" TARGET=_top>-zip</A>";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // java.time.LocalTime (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class2HTML.toHTML(".html");
      Class<InputStream> class0 = InputStream.class;
      ClassPath classPath0 = new ClassPath("Qz(cRFaAM");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      classPathRepository0.loadClass(class0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-d";
      stringArray0[1] = ".html";
      stringArray0[2] = "Qz(cRFaAM";
      stringArray0[3] = ".html";
      stringArray0[4] = ".html";
      stringArray0[5] = ".html";
      stringArray0[6] = ".html";
      stringArray0[7] = "Qz(cRFaAM";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("Qz(cRFaAM");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "V]&";
      stringArray0[1] = ".html";
      stringArray0[2] = ".html";
      stringArray0[3] = "Qz(cRFaAM";
      stringArray0[4] = ".html";
      stringArray0[5] = ".html";
      stringArray0[6] = ".html";
      stringArray0[7] = "-P";
      stringArray0[8] = "Qz(cRFaAM";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_scripts_adaptive/projects/1_bcel/Qz(cRFaAM");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "Qz(cRFaAM";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("<HTML>\n<HEAD><TITLE>Documentation for /");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      String string0 = "-d";
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-d";
      stringArray0[1] = "<HTML>\n<HEAD><TITLE>Documentation for /";
      stringArray0[2] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("(descriptor_index = ");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "Qz(cRFaAM";
      stringArray0[3] = ".html";
      stringArray0[4] = ".html";
      stringArray0[5] = "-d";
      stringArray0[6] = "Qz(cRFaAM";
      stringArray0[7] = "-d";
      stringArray0[8] = "-d";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Class2HTML.toHTML(".html");
      Class<InputStream> class0 = InputStream.class;
      ClassPath classPath0 = new ClassPath(".html");
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      JavaClass javaClass0 = memorySensitiveClassPathRepository0.loadClass(class0);
      javaClass0.dump(".html");
      JavaClass javaClass1 = javaClass0.copy();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, ".html");
      String[] stringArray0 = new String[2];
      stringArray0[0] = ".html";
      stringArray0[1] = ".html";
      Class2HTML.main(stringArray0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Class<InputStream> class0 = InputStream.class;
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      javaClass0.setClassName("</TD>\n");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      Class2HTML.main(stringArray0);
      Class2HTML.toHTML("I/[(;;");
      Class2HTML.toHTML("-d");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "-d");
      Class2HTML.referenceType("-d");
      Class2HTML.referenceType("Qz(cRFaAn9M/");
      Class2HTML.main(stringArray0);
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(116);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 116. Constant pool size is: 63
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }
}
