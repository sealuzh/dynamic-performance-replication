/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 21 23:09:36 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-33);
      TiffField tiffField0 = new TiffField(998, (-2138105989), fieldTypeShort0, 998, 255L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals((-8448), int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(998, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 2147483583, fieldTypeFloat0, 1L, (-1189L), byteArray0, byteOrder0, 2525);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(2147483583, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1189), tiffField0.getOffset());
      assertEquals(2525, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-644), fieldTypeByte0.DOUBLE, 135, 4165, byteArray0, byteOrder0, 274);
      tiffField0.dump();
      assertEquals(274, tiffField0.getSortHint());
      assertEquals((-644), tiffField0.getDirectoryType());
      assertEquals(4165, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1306), 149, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(149, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-1306), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(27, (-773), fieldTypeShort0.BYTE, 1820, 255L, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-773), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(330, 330, (FieldType) null, 330, 330, byteArray0, byteOrder0, 38);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(38, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 2147335800, fieldTypeRational0, 0, 2147335800, byteArray0, byteOrder0, (-40));
      int int0 = tiffField0.getTag();
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(2147335800, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(2147335800, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-307), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-307), 3579, fieldTypeShort0, (-1L), 3579, byteArray0, byteOrder0, 1717986918);
      int int0 = tiffField0.getTag();
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals((-307), int0);
      assertEquals(3579, tiffField0.getDirectoryType());
      assertEquals(3579, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)14;
      TiffField tiffField0 = new TiffField(2338, 2338, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)4);
      String string0 = tiffField0.getStringValue();
      assertEquals(2338, tiffField0.getTag());
      assertEquals(2338, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1370, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(86, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50834, 50834, fieldTypeLong0.SRATIONAL, (byte)4, (-512L), byteArray0, byteOrder0, 33432);
      int int0 = tiffField0.getSortHint();
      assertEquals(50834, tiffField0.getDirectoryType());
      assertEquals(33432, int0);
      assertEquals((-512), tiffField0.getOffset());
      assertEquals(50834, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1552, (FieldType) null, 1398, 508L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1552, tiffField0.getDirectoryType());
      assertEquals(508, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(86, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1370, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-96);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)55, fieldTypeLong0, 1174, 1174, byteArray0, byteOrder0, 401);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals(401, tiffField0.getSortHint());
      assertEquals(1174, tiffField0.getOffset());
      assertEquals(55, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte) (-62);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-3461L), byteArray0, byteOrder0, (byte) (-37));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-3461), tiffField0.getOffset());
      assertEquals((-3199778), int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), fieldTypeShort0, 1, (byte)0, byteArray0, byteOrder0, (-1908874352));
      tiffField0.getIntValue();
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2655, "FbEF");
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-96);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2908), 2655, fieldTypeLong0, 1L, 2655, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2655, tiffField0.getOffset());
      assertEquals(2655, tiffField0.getDirectoryType());
      assertEquals((-2908), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(133, (String) null);
      TiffField tiffField0 = new TiffField(2761, 2761, fieldTypeShort0, 133, (-1974L), byteArray0, byteOrder0, 133);
      tiffField0.getFieldTypeName();
      assertEquals(2761, tiffField0.getDirectoryType());
      assertEquals(133, tiffField0.getSortHint());
      assertEquals((-1974), tiffField0.getOffset());
      assertEquals(2761, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeRational0, (-1L), 761, byteArray0, byteOrder0, 761);
      tiffField0.getFieldTypeName();
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getTag());
      assertEquals(761, tiffField0.getOffset());
      assertEquals(761, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(402, (-1), (FieldType) null, 291, 255L, byteArray0, byteOrder0, (-659));
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-659), tiffField0.getSortHint());
      assertEquals(402, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      TiffField tiffField0 = new TiffField(16, (byte)106, fieldTypeAscii0, 0, 3989L, byteArray0, byteOrder0, 50217);
      tiffField0.getFieldType();
      assertEquals(50217, tiffField0.getSortHint());
      assertEquals(106, tiffField0.getDirectoryType());
      assertEquals(3989, tiffField0.getOffset());
      assertEquals(16, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(350, 2073432487, fieldTypeRational0, 2073432487, 1293L, byteArray0, byteOrder0, (byte) (-75));
      tiffField0.getFieldType();
      assertEquals(350, tiffField0.getTag());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals((-75), tiffField0.getSortHint());
      assertEquals(1293, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(8, 2147075458, fieldTypeShort0.UNDEFINED, 1L, 8587220552L, byteArray0, byteOrder0, (-2161));
      tiffField0.getDoubleValue();
      assertEquals((-2714040), tiffField0.getOffset());
      assertEquals(2147075458, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals((-2161), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)109;
      TiffField tiffField0 = new TiffField((-2059), 1595, fieldTypeLong0, 1L, (-1L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals((-2059), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1595, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-47);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, (byte)0, fieldTypeShort0, 1, 38, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getTag());
      assertEquals(38, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1370, int0);
      assertEquals(86, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4749), (-4749), fieldTypeLong0, 4L, 1L, byteArray0, byteOrder0, (byte) (-91));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-91), tiffField0.getSortHint());
      assertEquals((-4749), tiffField0.getTag());
      assertEquals((-4749), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1), fieldTypeDouble0.BYTE, (byte)0, (-1), byteArray0, byteOrder0, 1626);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1626, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1465), 3, fieldTypeRational0, 1816L, 524280L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(524280, tiffField0.getOffset());
      assertEquals((-1465), tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1689), (-1689), fieldTypeRational0, (-1689), 3778L, byteArray0, byteOrder0, (byte) (-117));
      tiffField0.getCount();
      assertEquals(3778, tiffField0.getOffset());
      assertEquals((-1689), tiffField0.getTag());
      assertEquals((-117), tiffField0.getSortHint());
      assertEquals((-1689), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-74), 2149, fieldTypeRational0, (byte)0, (byte) (-9), byteArray0, byteOrder0, 1795);
      tiffField0.getBytesLength();
      assertEquals(1795, tiffField0.getSortHint());
      assertEquals((-9), tiffField0.getOffset());
      assertEquals((-74), tiffField0.getTag());
      assertEquals(2149, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(122, (-2107), fieldTypeLong0, (-2107), 1L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(122, tiffField0.getTag());
      assertEquals((-2107), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2147483135, 2147483135, fieldTypeDouble0.RATIONAL, 372L, (byte) (-93), byteArray0, (ByteOrder) null, 816);
      tiffField0.getByteOrder();
      assertEquals(2147483135, tiffField0.getDirectoryType());
      assertEquals(816, tiffField0.getSortHint());
      assertEquals(2147483135, tiffField0.getTag());
      assertEquals((-93), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-551), (-4869), fieldType0, 1345L, 274L, byteArray0, byteOrder0, (-551));
      tiffField0.getByteOrder();
      assertEquals((-551), tiffField0.getTag());
      assertEquals((-4869), tiffField0.getDirectoryType());
      assertEquals((-551), tiffField0.getSortHint());
      assertEquals(274, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-551), (-4869), fieldType0, 1345L, 274L, byteArray0, byteOrder0, (-551));
      tiffField0.getByteArrayValue();
      assertEquals((-551), tiffField0.getSortHint());
      assertEquals((-551), tiffField0.getTag());
      assertEquals((-4869), tiffField0.getDirectoryType());
      assertEquals(274, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1352, 1386, fieldTypeDouble0, 0L, (byte) (-110), byteArray0, byteOrder0, (byte)74);
      tiffField0.getByteArrayValue();
      assertEquals(1352, tiffField0.getTag());
      assertEquals((-110), tiffField0.getOffset());
      assertEquals(1386, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1513, 2147335800, fieldTypeRational0, 255L, 1513, byteArray0, byteOrder0, (-781));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "o62FM.0+\"m2-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1398, (-2847), (FieldType) null, 1398, 1398, byteArray0, byteOrder0, (-2847));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeLong0, 50710, (-3399L), (byte[]) null, byteOrder0, (-2488));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-307), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-307), 3579, fieldTypeShort0, (-1L), 3579, byteArray0, byteOrder0, 1717986918);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(32844, " ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32844, 32844, fieldTypeFloat0, 0L, 32844, (byte[]) null, byteOrder0, (-978));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(21, 33448, fieldTypeDouble0.UNDEFINED, (-1), 317L, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4428), (-4428), fieldTypeFloat0, (-4428), 0L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2278, (-3842), (FieldType) null, (-1L), (-3842), byteArray0, (ByteOrder) null, (byte)88);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[34];
      TiffField tiffField0 = new TiffField(1931, 5188, fieldTypeShort0, (-773), 1236, byteArray0, (ByteOrder) null, 47);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1), 4, fieldTypeRational0, (byte)0, 1941L, byteArray0, byteOrder0, 78);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34855, 34855, (FieldType) null, (-1L), 34855, byteArray0, byteOrder0, (byte) (-64));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2852), 0, fieldTypeAscii0, (-2629L), (-2629L), (byte[]) null, byteOrder0, (-2852));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeRational0, (-1L), 761, byteArray0, byteOrder0, 761);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2278, "(5nvMn[9NEk");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50725, 2278, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)3);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[43];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(372, 1940, fieldTypeByte0.DOUBLE, (-1L), 3038L, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1568, "5");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1568, 1568, fieldTypeAscii0, 1568, 1568, byteArray0, (ByteOrder) null, (byte)41);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[66];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 316, fieldTypeByte0, (-571L), 0L, byteArray0, byteOrder0, 135);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(32, 875, fieldTypeLong0, 875, (-2147483648L), byteArray0, byteOrder0, 678);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(678, tiffField0.getSortHint());
      assertEquals(875, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(5, (-2059), fieldTypeShort0, 1L, (-426L), byteArray0, byteOrder0, 191);
      tiffField0.getFieldType();
      assertEquals((-2059), tiffField0.getDirectoryType());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-426), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, (byte)0, fieldTypeLong0, 1092L, 4L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-2059), 5, fieldTypeShort0, 255L, (-1968L), byteArray0, byteOrder0, (-2059));
      tiffField0.getValue();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-2059), tiffField0.getSortHint());
      assertEquals((-1968), tiffField0.getOffset());
      assertEquals((-2059), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2146869554, 2146869554, fieldTypeLong0, (-1626L), 0L, byteArray0, (ByteOrder) null, (byte) (-24));
      int int0 = tiffField0.getOffset();
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(2146869554, tiffField0.getTag());
      assertEquals(2146869554, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(1370, tiffField0.getDirectoryType());
      assertEquals(86, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(5, (-2059), fieldTypeShort0, 1L, (-426L), byteArray0, byteOrder0, 191);
      tiffField0.getBytesLength();
      assertEquals((-426), tiffField0.getOffset());
      assertEquals((-2059), tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(191, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1352, 1386, fieldTypeDouble0, 0L, (byte) (-110), byteArray0, byteOrder0, (byte)74);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(1386, tiffField0.getDirectoryType());
      assertEquals("1352 (0x548: Unknown Tag): ", string0);
      assertEquals((-110), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)0, (-2059), fieldTypeShort0, (byte)0, (-1951L), byteArray0, byteOrder0, (-2059));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(5, (-2059), fieldTypeShort0, 1L, (-426L), byteArray0, byteOrder0, 191);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(5, tiffField0.getTag());
      assertEquals((-426), tiffField0.getOffset());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals((-2059), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)55, fieldTypeLong0, 1174, 1174, byteArray0, byteOrder0, 401);
      tiffField0.getIntValueOrArraySum();
      assertEquals(401, tiffField0.getSortHint());
      assertEquals(1174, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(1174L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(14, "eq\"gzOVm>PVrHg?");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-908), 1, fieldTypeAscii0, 599L, 3489L, byteArray0, byteOrder0, (-1326));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(5, (-2059), fieldTypeShort0, 1L, (-426L), byteArray0, byteOrder0, 191);
      tiffField0.getIntValueOrArraySum();
      assertEquals(191, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2059), tiffField0.getDirectoryType());
      assertEquals((-426), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3285, (-2740), fieldTypeByte0.DOUBLE, 3285, (-1L), byteArray0, byteOrder0, 135);
      tiffField0.getDoubleArrayValue();
      assertEquals(3285L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(135, tiffField0.getSortHint());
      assertEquals((-2740), tiffField0.getDirectoryType());
      assertEquals(3285, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-632), 4, fieldTypeFloat0, 4575L, (byte) (-109), byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-632), tiffField0.getTag());
      assertEquals(4575L, tiffField0.getCount());
      assertEquals((-109), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3285, (-521), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).IFD).FLOAT, 0L, (-521), byteArray0, byteOrder0, (-2285));
      tiffField0.getDoubleArrayValue();
      assertEquals(3285, tiffField0.getTag());
      assertEquals((-521), tiffField0.getDirectoryType());
      assertEquals((-521), tiffField0.getOffset());
      assertEquals((-2285), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1908874352), 41996, fieldTypeLong0, 4L, (byte)7, byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals(41996, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1908874352), tiffField0.getTag());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147348492, "WangAnnotation");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2233, 650, fieldTypeAscii0, 2233, 1L, byteArray0, byteOrder0, 33448);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@cdafb73 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)5, (byte)5, fieldTypeRational0, (byte)5, (byte)126, byteArray0, byteOrder0, (-1));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, tiffField0.getTag());
      assertEquals(126, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)5, "' gW5.%M=n3R");
      TiffField tiffField0 = new TiffField(650, (-335), fieldTypeRational0, 1L, (byte)0, byteArray0, byteOrder0, (-200));
      tiffField0.getDoubleArrayValue();
      assertEquals((-200), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(650, tiffField0.getTag());
      assertEquals((-335), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-2059), 5, fieldTypeShort0, 255L, (-1968L), byteArray0, byteOrder0, (-2059));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2059), tiffField0.getTag());
      assertEquals((-2059), tiffField0.getSortHint());
      assertEquals((-1968), tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1370, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1370L, tiffField0.getCount());
      assertEquals(86, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1856), 433, fieldTypeByte0, 0L, 487L, byteArray0, byteOrder0, (-4210));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@68ca0db4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50828, (-1030), fieldTypeRational0, (byte)5, (byte)5, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1513, 2147335800, fieldTypeRational0, 255L, 1513, byteArray0, byteOrder0, (-781));
      tiffField0.getIntArrayValue();
      assertEquals(1513, tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2147335800, tiffField0.getDirectoryType());
      assertEquals((-781), tiffField0.getSortHint());
      assertEquals(1513, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), fieldTypeShort0, 1, (byte)0, byteArray0, byteOrder0, (-1908874352));
      tiffField0.getIntArrayValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1908874352), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2147483135, 2147483135, fieldTypeDouble0.RATIONAL, 372L, (byte) (-93), byteArray0, (ByteOrder) null, 816);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@618cbfc0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2338, 2338, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)4);
      String string0 = tiffField0.getStringValue();
      assertEquals(2338, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(2338, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(14, "eq\"gzOVm>PVrHg?");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-908), 1, fieldTypeAscii0, 599L, 3489L, byteArray0, byteOrder0, (-1326));
      String string0 = tiffField0.getTagName();
      assertEquals(3489, tiffField0.getOffset());
      assertEquals((-1326), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffffc74)", string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, (-4869), fieldType0, 1, (-2147483648L), byteArray0, byteOrder0, (byte)58);
      String string0 = tiffField0.getTagName();
      assertEquals((-4869), tiffField0.getDirectoryType());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals("InteroperabilityIndex", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(133, 2431, (FieldType) null, (byte) (-32), 2147483647L, (byte[]) null, byteOrder0, (-1785));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 1023, fieldTypeFloat0, 1305L, 1L, byteArray0, byteOrder0, 3980);
      String string0 = tiffField0.toString();
      assertEquals(1023, tiffField0.getDirectoryType());
      assertEquals("17 (0x11: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (1305 Float)", string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3980, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(845, 1820, fieldTypeByte0, 3285, 845, byteArray0, byteOrder0, 256);
      tiffField0.dump();
      assertEquals(845, tiffField0.getOffset());
      assertEquals(3285L, tiffField0.getCount());
      assertEquals(845, tiffField0.getTag());
      assertEquals(1820, tiffField0.getDirectoryType());
      assertEquals(256, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(32844, " ");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)5, (-116L), byteArray0, byteOrder0, 597);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(597, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-116), tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[425];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 73, fieldTypeDouble0, 1617L, 73, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1617L, tiffField0.getCount());
      assertEquals(73, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3285, (-2740), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).LONG).DOUBLE, 3285, (-1L), byteArray0, byteOrder0, 135);
      tiffField0.dump();
      assertEquals(3285, tiffField0.getTag());
      assertEquals(3285L, tiffField0.getCount());
      assertEquals(135, tiffField0.getSortHint());
      assertEquals((-2740), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[225];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte)23, (byte)23, fieldTypeLong0, 155L, (byte)23, byteArray0, byteOrder0, (-2488));
      tiffField0.dump();
      assertEquals(23, tiffField0.getTag());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(155L, tiffField0.getCount());
      assertEquals((-2488), tiffField0.getSortHint());
      assertEquals(23, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50215, (-2138105989), fieldTypeLong0, (byte)5, (byte)0, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("<");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals(50215, tiffField0.getTag());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1358), (-1358), fieldTypeDouble0.SHORT, 2662L, (-2328L), byteArray0, byteOrder0, 42036);
      tiffField0.dump();
      assertEquals(2662L, tiffField0.getCount());
      assertEquals(42036, tiffField0.getSortHint());
      assertEquals((-1358), tiffField0.getTag());
      assertEquals((-1358), tiffField0.getDirectoryType());
      assertEquals((-2328), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(1820, 1820, fieldTypeShort0.UNDEFINED, 1820, 1, byteArray0, byteOrder0, 1236);
      tiffField0.dump();
      assertEquals(1820, tiffField0.getDirectoryType());
      assertEquals(1820, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1236, tiffField0.getSortHint());
      assertEquals(1820L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(33422, 146, fieldTypeDouble0.ASCII, 233L, 233L, byteArray0, byteOrder0, 9);
      tiffField0.dump();
      assertEquals(33422, tiffField0.getTag());
      assertEquals(233, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(233L, tiffField0.getCount());
      assertEquals(146, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(33918, "");
      TiffField tiffField0 = new TiffField(65535, (-2147085596), fieldTypeAscii0, 2147483647L, (byte)5, byteArray0, byteOrder0, (byte)5);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.toString();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-2147085596), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(5, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2338, 2338, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (byte)4);
      MockFile mockFile0 = new MockFile("CC1rU_!GglTb%", "CC1rU_!GglTb%");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2338, tiffField0.getTag());
      assertEquals(2338, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(67L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(5, (-2059), fieldTypeShort0, 1L, (-426L), byteArray0, byteOrder0, 191);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals((-426), tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-2059), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (byte)0, (-116L), byteArray0, byteOrder0, 8);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(8, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals((-116), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1352, 1386, fieldTypeDouble0, 0L, (byte) (-110), byteArray0, byteOrder0, (byte)74);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 47);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1352, tiffField0.getTag());
      assertEquals((-110), tiffField0.getOffset());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
      assertEquals(1386, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1352, 1386, fieldTypeDouble0, 0L, (byte) (-110), byteArray0, byteOrder0, (byte)74);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50, 47);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertNotNull(string0);
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(1352, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals((-110), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1386, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2377), (byte)0, fieldTypeDouble0.SRATIONAL, (byte) (-45), (-1853L), byteArray0, byteOrder0, 1703);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1703, tiffField0.getSortHint());
      assertEquals((-360), tiffField0.getBytesLength());
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals((-2377), tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(32, 875, fieldTypeLong0, 875, (-2147483648L), byteArray0, byteOrder0, 678);
      tiffField0.getFieldTypeName();
      assertEquals(678, tiffField0.getSortHint());
      assertEquals(875, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
      assertEquals(875L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)99, 3, fieldTypeLong0, 3, 1L, byteArray0, byteOrder0, (-104));
      int int0 = tiffField0.getSortHint();
      assertEquals((-104), int0);
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(12, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-959), (-1431655764), fieldTypeShort0, 2558L, 1818L, byteArray0, byteOrder0, 65111);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1818, tiffField0.getOffset());
      assertEquals((-959), tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(5116, tiffField0.getBytesLength());
      assertEquals(2558L, tiffField0.getCount());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals(65111, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2761, 2761, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).DOUBLE).SHORT, 133, (-1974L), byteArray0, byteOrder0, 133);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(2761, tiffField0.getDirectoryType());
      assertEquals(2761, tiffField0.getTag());
      assertEquals((-1974L), tiffElement0.offset);
      assertNotNull(tiffElement0);
  }
}
