/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 17:14:55 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)87;
      byteArray0[4] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(168, (byte)8, fieldTypeRational0, (byte)5, 112L, byteArray0, byteOrder0, (byte)87);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(112, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(168, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(87, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 390L, byteArray0, byteOrder0, (byte) (-92));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(390, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-92), tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(42, (byte)0, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (byte) (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(42, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeLong0, 0L, 40092, byteArray0, byteOrder0, (byte)35);
      String string0 = tiffField0.toString();
      assertEquals(40092, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(40092, tiffField0.getOffset());
      assertEquals("40092 (0x9c9c: XPComment): Invalid value: Text field not encoded as bytes. (0 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeRational0, 2303, 2303, byteArray0, byteOrder0, 2303);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2303, tiffField0.getSortHint());
      assertEquals(2303, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2303, tiffField0.getTag());
      assertEquals(2303, tiffField0.getOffset());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1894, 50968, fieldTypeRational0, 0L, 139L, byteArray0, byteOrder0, 50968);
      tiffField0.getValue();
      assertEquals(1894, tiffField0.getTag());
      assertEquals(50968, tiffField0.getDirectoryType());
      assertEquals(139, tiffField0.getOffset());
      assertEquals(50968, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 513, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getOffset());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getDirectoryType());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertTrue(tagInfo0.isOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, 2678L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3, (-581), fieldTypeByte0, 1L, (-3252L), byteArray0, byteOrder0, (-581));
      int int0 = tiffField0.getTag();
      assertEquals((-581), tiffField0.getSortHint());
      assertEquals(3, int0);
      assertEquals((-3252), tiffField0.getOffset());
      assertEquals((-581), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2026, "Sp|'E3%7.2x~>bz=uB");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-76);
      TiffField tiffField0 = new TiffField(2026, 2026, fieldTypeAscii0, 2147483647L, (-1670L), byteArray0, byteOrder0, 28);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals((-1670), tiffField0.getOffset());
      assertEquals(2026, tiffField0.getTag());
      assertEquals(2026, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(6213, 754, fieldTypeByte0, 3, (-1), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(754, tiffField0.getDirectoryType());
      assertEquals(6213, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeRational0, 2353, 2353, byteArray0, byteOrder0, 2353);
      int int0 = tiffField0.getSortHint();
      assertEquals(2353, tiffField0.getOffset());
      assertEquals(2353, tiffField0.getDirectoryType());
      assertEquals(2353, int0);
      assertEquals(2353, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147332127), (-2147332127), fieldTypeLong0, 504L, 1489L, byteArray0, byteOrder0, (-2147332127));
      int int0 = tiffField0.getOffset();
      assertEquals(1489, int0);
      assertEquals((-2147332127), tiffField0.getSortHint());
      assertEquals((-2147332127), tiffField0.getTag());
      assertEquals((-2147332127), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 4, fieldTypeDouble0, 819L, (-2589), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getOffset();
      assertEquals((-2589), int0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(68, "");
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField((-1840700268), (-1840700268), fieldTypeAscii0.SSHORT, 117L, 68, byteArray0, byteOrder0, (byte)94);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(234, tiffField0.getBytesLength());
      assertEquals((-1840700268), tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(68, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-115);
      TiffField tiffField0 = new TiffField((byte) (-115), (-1060), fieldTypeByte0, 1L, (byte) (-87), byteArray0, byteOrder0, (byte) (-87));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-115), tiffField0.getTag());
      assertEquals((-87), tiffField0.getSortHint());
      assertEquals((-87), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1060), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeLong0, 1L, 59, byteArray0, byteOrder0, (-637));
      tiffField0.getIntValue();
      assertEquals((-637), tiffField0.getSortHint());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2693, "BitsPerRunLength");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)46;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(573, 2693, fieldTypeByte0, 1L, 573, byteArray0, byteOrder0, (byte) (-80));
      tiffField0.getIntValue();
      assertEquals(2693, tiffField0.getDirectoryType());
      assertEquals(573, tiffField0.getOffset());
      assertEquals(573, tiffField0.getTag());
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      TiffField tiffField0 = new TiffField((byte)53, (-3263), fieldTypeByte0, 1L, 253L, byteArray0, byteOrder0, (-44));
      tiffField0.getIntValue();
      assertEquals(253, tiffField0.getOffset());
      assertEquals((-3263), tiffField0.getDirectoryType());
      assertEquals(53, tiffField0.getTag());
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(494, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34025, 494, fieldTypeAscii0, (-1L), 494, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(494, tiffField0.getDirectoryType());
      assertEquals(494, tiffField0.getOffset());
      assertEquals(34025, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-88), fieldTypeRational0, 118L, (-810L), byteArray0, byteOrder0, 2353);
      tiffField0.getFieldTypeName();
      assertEquals(2353, tiffField0.getSortHint());
      assertEquals((-810), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-88), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "2M<~l7ziPCwE");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-296L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-296), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1610612735), "Unknown value: ");
      TiffField tiffField0 = new TiffField((-729), 1717986918, fieldTypeShort0, 1918L, 43, byteArray0, byteOrder0, (-194));
      tiffField0.getFieldType();
      assertEquals(43, tiffField0.getOffset());
      assertEquals((-729), tiffField0.getTag());
      assertEquals((-194), tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(106, (String) null);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 106, fieldTypeAscii0, 3570L, 50, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(106, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3, (-581), fieldTypeByte0, 1L, (-3252L), byteArray0, byteOrder0, (-581));
      tiffField0.getDoubleValue();
      assertEquals((-581), tiffField0.getSortHint());
      assertEquals((-3252), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-581), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)100;
      TiffField tiffField0 = new TiffField(1, (-3049), fieldTypeByte0, 1, 21672L, byteArray0, byteOrder0, 2147010738);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3049), tiffField0.getDirectoryType());
      assertEquals(21672, tiffField0.getOffset());
      assertEquals(2147010738, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-65);
      TiffField tiffField0 = new TiffField(37121, 2147369547, fieldTypeLong0, 1L, (-1617L), byteArray0, byteOrder0, (byte)16);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(37121, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2147369547, tiffField0.getDirectoryType());
      assertEquals((-1617), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeRational0, 2374, 2374, byteArray0, byteOrder0, 2374);
      tiffField0.getDoubleArrayValue();
      assertEquals(2374L, tiffField0.getCount());
      assertEquals(2374, tiffField0.getDirectoryType());
      assertEquals(18992, tiffField0.getBytesLength());
      assertEquals(2374, tiffField0.getTag());
      assertEquals(2374, tiffField0.getOffset());
      assertEquals(2374, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-636), (byte)0, fieldTypeRational0, (byte)0, (-5095L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-5095), tiffField0.getOffset());
      assertEquals((-636), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2303, 2303, fieldTypeRational0, 2303, 2303, byteArray0, byteOrder0, 2303);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2303, int0);
      assertEquals(2303, tiffField0.getTag());
      assertEquals(2303, tiffField0.getOffset());
      assertEquals(2303, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2146838564, 989, fieldTypeShort0, 0L, 4L, byteArray0, byteOrder0, 1726);
      tiffField0.getCount();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(989, tiffField0.getDirectoryType());
      assertEquals(2146838564, tiffField0.getTag());
      assertEquals(1726, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1448, 1, fieldTypeLong0, (byte) (-95), 3, byteArray0, byteOrder0, 33423);
      long long0 = tiffField0.getCount();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1448, tiffField0.getTag());
      assertEquals(3, tiffField0.getOffset());
      assertEquals((-95L), long0);
      assertEquals(33423, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(615, 1936, fieldTypeDouble0, 615, (-2608), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals(4920, int0);
      assertEquals(615, tiffField0.getTag());
      assertEquals(1936, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2608), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeDouble0, (byte) (-1), (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-8), int0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-3263), 4565, fieldTypeByte0, 4565, 4565, byteArray0, (ByteOrder) null, (byte)81);
      tiffField0.getByteOrder();
      assertEquals((-3263), tiffField0.getTag());
      assertEquals(4565, tiffField0.getDirectoryType());
      assertEquals(81, tiffField0.getSortHint());
      assertEquals(4565, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2148, "Q");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2515, 25, fieldTypeDouble0, 0L, 1L, byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(2515, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(565, (-1495), fieldTypeShort0.ASCII, 1005L, 2276L, byteArray0, byteOrder0, 2582);
      tiffField0.getByteArrayValue();
      assertEquals(2582, tiffField0.getSortHint());
      assertEquals(565, tiffField0.getTag());
      assertEquals((-1495), tiffField0.getDirectoryType());
      assertEquals(1005, tiffField0.getBytesLength());
      assertEquals(2276, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "JP,K@qD2");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeRational0, 2353, (-13L), byteArray0, byteOrder0, 2353);
      tiffField0.getByteArrayValue();
      assertEquals(18824, tiffField0.getBytesLength());
      assertEquals(2353, tiffField0.getTag());
      assertEquals(2353, tiffField0.getDirectoryType());
      assertEquals(2353, tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3280, 3280, fieldTypeRational0, 3280, 3280, (byte[]) null, byteOrder0, 3280);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1420), (-1420), fieldTypeLong0, (-1420), (-1420), byteArray0, byteOrder0, (-1420));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3295, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 312);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(3295, 3295, fieldTypeFloat0, 3295, 3295, (byte[]) null, byteOrder0, 3295);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1710), (-1710), fieldTypeLong0.SSHORT, (-1710), (-1710), byteArray0, byteOrder0, (-1710));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 40912, fieldTypeLong0, 1, 40912, byteArray0, byteOrder0, 40912);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeRational0, 3295, 3295, byteArray0, byteOrder0, 40093);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[347];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-640), (-640), fieldTypeDouble0, (-640), (-1L), byteArray0, byteOrder0, (-640));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, (FieldType) null, 59, 59, byteArray0, byteOrder0, 59);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[70];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-2050), (-2050), fieldTypeDouble0, (-2050), (-2050), byteArray0, byteOrder0, (-2050));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, 1L, (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeByte0, 2680L, 2680L, (byte[]) null, byteOrder0, 2354);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 2354, 2354, (byte[]) null, byteOrder0, 2354);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1328), (-1328), fieldTypeRational0, (-1328), (-1328), byteArray0, byteOrder0, (-1328));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40095, 40095, fieldTypeDouble0, 40095, (-2981L), byteArray0, byteOrder0, 40095);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2398, 2398, fieldTypeRational0, 2398, 2398, (byte[]) null, byteOrder0, 2398);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2224), (-2224), fieldTypeLong0, (-2224), (-2224), byteArray0, byteOrder0, (-2224));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeRational0, 1L, 52, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40898, 40898, fieldTypeLong0, 40898, 40898, (byte[]) null, byteOrder0, 40898);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-26), (-26), fieldTypeLong0.SSHORT, (-26), (-26), byteArray0, byteOrder0, (-26));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeRational0, 1, 0, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2565, 2146834272, (FieldType) null, 30, 2565, byteArray0, byteOrder0, 2147369547);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeLong0, 40093, 120L, byteArray0, byteOrder0, (-539));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2390, 2390, fieldTypeRational0, 2390, 2390, (byte[]) null, byteOrder0, 2390);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1815), (-1815), fieldTypeLong0, (-1815), (-1815), byteArray0, byteOrder0, (-1815));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3280, 3280, fieldTypeRational0, 3280, 3280, (byte[]) null, byteOrder0, 3280);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[70];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2994), (-2994), fieldTypeShort0, (-2994), (-2994), byteArray0, byteOrder0, (-2994));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 42);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3118), 3281, fieldTypeRational0, (-3118), (-3118), byteArray0, byteOrder0, 3281);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-465), 867, fieldTypeDouble0, (-465), 7, byteArray0, byteOrder0, (-465));
      MockPrintStream mockPrintStream0 = new MockPrintStream("org.apache.commons.io.filefilter.AndFileFilter");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.io.filefilter.AndFileFilter");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6213, (-1), fieldTypeRational0, 1L, 754, byteArray0, byteOrder0, (-1));
      MockFile mockFile0 = new MockFile("D}ZIhBPrqy{", "");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5358, 5358, fieldTypeDouble0.SRATIONAL, (-4486L), 5358, byteArray0, byteOrder0, 5358);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ColorResponseUnit");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1493), (-2154), fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, (-1493));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Missing value: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeLong0, (-4), (-4), byteArray0, byteOrder0, (-4));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2390, 2390, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 2390);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "EZ>^DeF1<0zAn%uW+");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2051, 2051, fieldTypeRational0.SHORT, 2353, 65L, byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2773, (-1), fieldTypeByte0, 0L, 2209L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2209, tiffField0.getOffset());
      assertEquals(2773, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2353, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-88), fieldTypeRational0, 118L, (-810L), byteArray0, byteOrder0, 2353);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-88), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2353, tiffField0.getSortHint());
      assertEquals((-810), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1936), (-1936), (FieldType) null, (-1936), (-1936), byteArray0, byteOrder0, (-1936));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), 254L, byteArray0, byteOrder0, (byte)12);
      tiffField0.getFieldType();
      assertEquals(254, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals((-1L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeLong0.SSHORT, 46, 46, byteArray0, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(27, (-1220), fieldTypeRational0, (-1220), (-1302L), byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1220), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1220L), tiffField0.getCount());
      assertEquals((-1302), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1889), (byte) (-66), fieldTypeLong0, (byte)0, 139L, byteArray0, (ByteOrder) null, 2145121179);
      int int0 = tiffField0.getTag();
      assertEquals(139, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1889), int0);
      assertEquals(2145121179, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2110, "SLong");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2110, 2110, fieldTypeDouble0, 1108L, 18824L, byteArray0, byteOrder0, (-4344));
      long long0 = tiffField0.getCount();
      assertEquals(18824, tiffField0.getOffset());
      assertEquals((-4344), tiffField0.getSortHint());
      assertEquals(2110, tiffField0.getDirectoryType());
      assertEquals(2110, tiffField0.getTag());
      assertEquals(1108L, long0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1889), (byte) (-66), fieldTypeLong0, (byte)0, 139L, byteArray0, (ByteOrder) null, 2145121179);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2145121179, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(139, tiffField0.getOffset());
      assertEquals((-66), tiffField0.getDirectoryType());
      assertEquals((-1889), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 2354, 2354, byteArray0, byteOrder0, 2354);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeRational0, 2374, 2374, byteArray0, byteOrder0, 2374);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[143];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(517, 517, fieldTypeFloat0, 517, 517, byteArray0, byteOrder0, 517);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5a881ca8 for: 517 (0x205: JPEGLosslessPredictors): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeRational0, 2374, 2374, byteArray0, byteOrder0, 2374);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0, 22, 22, byteArray0, byteOrder0, 22);
      tiffField0.getIntValueOrArraySum();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[172];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(389, 389, fieldTypeByte0, 389, 389, byteArray0, byteOrder0, 389);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@45003805 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(517, 517, fieldTypeFloat0, 517, 517, byteArray0, byteOrder0, 517);
      tiffField0.getDoubleArrayValue();
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(517, tiffField0.getTag());
      assertEquals(517, tiffField0.getOffset());
      assertEquals(2068, tiffField0.getBytesLength());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(517L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[34];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte)17, (byte)17, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8, doubleArray0.length);
      assertEquals(17, tiffField0.getOffset());
      assertEquals(17L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(59, 59, fieldTypeLong0.SSHORT, 59, 59, byteArray0, byteOrder0, 59);
      tiffField0.getDoubleArrayValue();
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(59L, tiffField0.getCount());
      assertEquals(118, tiffField0.getBytesLength());
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2374, 2374, fieldTypeRational0, 2374, 2374, byteArray0, byteOrder0, 2374);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2374, tiffField0.getTag());
      assertEquals(2374L, tiffField0.getCount());
      assertEquals(2374, tiffField0.getDirectoryType());
      assertEquals(18992, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2374, tiffField0.getSortHint());
      assertEquals(2374, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0.SSHORT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeDouble0, 15, 15, byteArray0, byteOrder0, 15);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15L, tiffField0.getCount());
      assertEquals(4, doubleArray0.length);
      assertEquals(15, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33435, 33435, fieldTypeLong0, 33435, 33435, byteArray0, byteOrder0, 33435);
      tiffField0.getIntArrayValue();
      assertEquals(33435, tiffField0.getSortHint());
      assertEquals(33435, tiffField0.getOffset());
      assertEquals(33435L, tiffField0.getCount());
      assertEquals(33435, tiffField0.getTag());
      assertEquals(133740, tiffField0.getBytesLength());
      assertEquals(33435, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0.SSHORT, 43, 43, byteArray0, byteOrder0, 43);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(43L, tiffField0.getCount());
      assertEquals(43, tiffField0.getTag());
      assertEquals(86, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2400, 2400, fieldTypeRational0, 2400, 2400, byteArray0, byteOrder0, 2400);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 2354, 2354, byteArray0, byteOrder0, 2354);
      tiffField0.getIntArrayValue();
      assertEquals(2354, tiffField0.getSortHint());
      assertEquals(2354, tiffField0.getTag());
      assertEquals(2354, tiffField0.getDirectoryType());
      assertEquals(18832, tiffField0.getBytesLength());
      assertEquals(2354L, tiffField0.getCount());
      assertEquals(2354, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeDouble0, 15, 15, byteArray0, byteOrder0, 15);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@af5c52f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 2354, 2354, byteArray0, byteOrder0, 2354);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@375333e4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, (-2672), fieldTypeLong0.ASCII, 0L, 4, byteArray0, byteOrder0, (-2672));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals((-2672), tiffField0.getDirectoryType());
      assertEquals((-2672), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2369, 2369, fieldTypeRational0, 2369, 2369, byteArray0, byteOrder0, 2369);
      String string0 = tiffField0.getTagName();
      assertEquals(2369, tiffField0.getSortHint());
      assertEquals(2369, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x941)", string0);
      assertEquals(2369, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(344, 344, fieldTypeLong0.SSHORT, 344, 344, byteArray0, byteOrder0, 344);
      String string0 = tiffField0.getTagName();
      assertEquals(344, tiffField0.getOffset());
      assertEquals("XClipPathUnits", string0);
      assertEquals(344, tiffField0.getSortHint());
      assertEquals(344, tiffField0.getTag());
      assertEquals(344, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[88];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(517, 517, fieldTypeFloat0, 517, 517, byteArray0, byteOrder0, 517);
      tiffField0.dump();
      assertEquals(517, tiffField0.getOffset());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(517, tiffField0.getTag());
      assertEquals(2068, tiffField0.getBytesLength());
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(517L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2353, 2353, fieldTypeByte0, 2353, 2353, byteArray0, byteOrder0, 2353);
      String string0 = tiffField0.toString();
      assertEquals(2353, tiffField0.getDirectoryType());
      assertEquals(2353, tiffField0.getBytesLength());
      assertEquals(2353, tiffField0.getOffset());
      assertEquals("2353 (0x931: Unknown Tag):  (2353 SByte)", string0);
      assertEquals(2353, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(61, 488, fieldTypeFloat0, 61, 488, byteArray0, byteOrder0, 61);
      tiffField0.dump();
      assertEquals(488, tiffField0.getOffset());
      assertEquals(244, tiffField0.getBytesLength());
      assertEquals(61, tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(488, tiffField0.getDirectoryType());
      assertEquals(61L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4914, 4914, fieldTypeDouble0, 4914, 4914, byteArray0, byteOrder0, 4914);
      String string0 = tiffField0.toString();
      assertEquals(39312, tiffField0.getBytesLength());
      assertEquals(4914, tiffField0.getDirectoryType());
      assertEquals(4914, tiffField0.getSortHint());
      assertEquals(4914, tiffField0.getOffset());
      assertEquals("4914 (0x1332: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (4914 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2362, 2362, fieldTypeByte0, 2362, 2362, byteArray0, byteOrder0, 2362);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2362, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2362L, tiffField0.getCount());
      assertEquals(2362, tiffField0.getBytesLength());
      assertEquals(2362, tiffField0.getDirectoryType());
      assertEquals(2362, tiffField0.getSortHint());
      assertEquals(2362, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[362];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeLong0, 1600L, 1600L, byteArray0, byteOrder0, 56);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1600, tiffField0.getOffset());
      assertEquals(6400, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1600L, tiffField0.getCount());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeLong0, (byte)13, (byte)13, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(13L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(517, 517, fieldTypeShort0, 517, 517, byteArray0, byteOrder0, 517);
      tiffField0.dump();
      assertEquals(1034, tiffField0.getBytesLength());
      assertEquals(517, tiffField0.getSortHint());
      assertEquals(517, tiffField0.getTag());
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(517L, tiffField0.getCount());
      assertEquals(517, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[347];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5527, 5527, fieldTypeDouble0.ASCII, 5527, 5527, byteArray0, byteOrder0, 5527);
      String string0 = tiffField0.getValueDescription();
      assertEquals(5527, tiffField0.getSortHint());
      assertEquals(5527, tiffField0.getBytesLength());
      assertEquals(5527, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(5527, tiffField0.getTag());
      assertEquals(5527, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0, 7, byteArray0, byteOrder0, 7);
      tiffField0.toString();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1004, 1004, fieldTypeLong0, 1L, 1004, byteArray0, byteOrder0, 1004);
      tiffField0.toString();
      assertEquals(1004, tiffField0.getSortHint());
      assertEquals(1004, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1004, tiffField0.getTag());
      assertEquals(1004, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeDouble0, 15, 15, byteArray0, byteOrder0, 15);
      tiffField0.dump();
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15L, tiffField0.getCount());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-66), (-1287), fieldTypeByte0, 114L, 2748L, byteArray0, (ByteOrder) null, 2773);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2773, 43);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2773, tiffField0.getSortHint());
      assertEquals((-1287), tiffField0.getDirectoryType());
      assertEquals(2748, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(114, tiffField0.getBytesLength());
      assertEquals((-66), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-66), (-1287), fieldTypeByte0, 114L, 2748L, byteArray0, (ByteOrder) null, 2773);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2773, 43);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(2748, tiffField0.getOffset());
      assertEquals(114L, tiffField0.getCount());
      assertEquals((-1287), tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertEquals((-66), tiffField0.getTag());
      assertEquals(2773, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2342, 2342, fieldTypeRational0, 2342, 2342, byteArray0, byteOrder0, 2342);
      tiffField0.getFieldTypeName();
      assertEquals(2342, tiffField0.getTag());
      assertEquals(2342, tiffField0.getDirectoryType());
      assertEquals(2342L, tiffField0.getCount());
      assertEquals(2342, tiffField0.getOffset());
      assertEquals(2342, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(43, (-1287), fieldTypeByte0, 43, 43, byteArray0, (ByteOrder) null, (-1287));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(43, tiffField0.getTag());
      assertEquals((-1287), tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals((-1287), int0);
      assertEquals(43L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2110, "SLong");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2110, 2110, fieldTypeDouble0, 1108L, 18824L, byteArray0, byteOrder0, (-4344));
      int int0 = tiffField0.getSortHint();
      assertEquals(18824, tiffField0.getOffset());
      assertEquals((-4344), int0);
      assertEquals(2110, tiffField0.getTag());
      assertEquals(8864, tiffField0.getBytesLength());
      assertEquals(2110, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2364, 2364, fieldTypeRational0, 2364, 2364, byteArray0, byteOrder0, 2364);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2364, tiffField0.getOffset());
      assertEquals(2364, tiffField0.getSortHint());
      assertEquals("2364 (0x93c: Unknown Tag): ", string0);
      assertEquals(2364, tiffField0.getDirectoryType());
      assertEquals(2364L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50935, 50935, fieldTypeLong0, 50935, 50935, (byte[]) null, byteOrder0, 289);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(136, 136, fieldTypeRational0, 1L, 136, byteArray0, (ByteOrder) null, 136);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2354, 2354, fieldTypeRational0, 2354, 2354, byteArray0, byteOrder0, 2354);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2354, tiffField0.getSortHint());
      assertEquals(2354, tiffField0.getDirectoryType());
      assertEquals(2354, tiffField0.getTag());
      assertEquals(2354L, tiffElement0.offset);
  }
}
