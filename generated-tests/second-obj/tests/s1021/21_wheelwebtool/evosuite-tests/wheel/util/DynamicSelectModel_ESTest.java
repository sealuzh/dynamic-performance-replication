/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:09:21 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ElExpression elExpression0 = new ElExpression((String) null);
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.label("DHK9]x_[E jJ8/X> p");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(512);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      dynamicSelectModel0.reset();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("^^vV");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("^^vV");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression ^^vV evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression null evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("");
      dynamicSelectModel1.label("");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      dynamicSelectModel0.translateValue("[] from ");
      int int0 = dynamicSelectModel1.getOptionCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any(errorPage0, (CharSequence) null);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[] from ");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("[] from ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.value("[] from ");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.empty(dynamicSelectModel1);
      Object object0 = dynamicSelectModel4.translateValue("[] from ");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(dynamicSelectModel0);
      String string0 = "[] froS ";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[] froS ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.value("[] froS ");
      dynamicSelectModel2.getValue(0);
      EvoSuiteFile evoSuiteFile0 = null;
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000040");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty(object0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[] from ");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.value("[] from ");
      dynamicSelectModel2.getValue(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.mvel.util.FastList@0000000027");
      Boolean boolean0 = new Boolean("[] from ");
      Object object1 = new Object();
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.label("org.mvel.util.FastList@0000000027");
      dynamicSelectModel3.value("org.mvel.util.FastList@0000000045");
      dynamicSelectModel0.reset();
      dynamicSelectModel4.validate();
      dynamicSelectModel0.value("org.xmlpull.v1.XmlPullParserFactory");
      Object object2 = new Object();
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel3.translator("@k`A");
      dynamicSelectModel0.label("@k`A");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Object object3 = new Object();
      dynamicSelectModel2.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel3.getValue(0);
      dynamicSelectModel5.getObjects();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("java.lang.Class@0000000058");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression @k`A to translate value ' java.lang.Class@0000000058'
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("org.mvel.util.FastList@0000000040");
      dynamicSelectModel1.validate();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.value("wheel.components.Form$Method");
      dynamicSelectModel2.enumeration("wheel.components.Form$Method");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setComponent((Component) null);
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.translator("ALOAD 2");
      dynamicSelectModel3.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel0.getOptionCount();
      dynamicSelectModel2.getTopLevelComponent();
      StandaloneComponent standaloneComponent0 = dynamicSelectModel1.getTopLevelComponent();
      assertNull(standaloneComponent0);
  }
}
