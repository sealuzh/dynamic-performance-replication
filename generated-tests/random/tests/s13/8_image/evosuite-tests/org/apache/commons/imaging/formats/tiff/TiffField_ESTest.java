/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 21:37:11 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1209, "XPComment");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)53;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3925, 3925, fieldTypeShort0, 30L, 42880L, byteArray0, byteOrder0, (byte) (-83));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3925, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(3925, tiffField0.getTag());
      assertEquals((-83), tiffField0.getSortHint());
      assertEquals(53, int0);
      assertEquals(42880, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-58);
      byteArray0[4] = (byte)75;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146138949, 2145921841, fieldTypeRational0, 1370L, 2145921841, byteArray0, byteOrder0, (byte)25);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(2146138949, tiffField0.getTag());
      assertEquals(2, int0);
      assertEquals(10960, tiffField0.getBytesLength());
      assertEquals(2145921841, tiffField0.getDirectoryType());
      assertEquals(2145921841, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      int int0 = tiffField0.getSortHint();
      assertEquals(982, int0);
      assertEquals(424, tiffField0.getOffset());
      assertEquals((-469), tiffField0.getTag());
      assertEquals(41994, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-81);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, (-2857), fieldTypeLong0, 42, 42, byteArray0, byteOrder0, (byte)122);
      tiffField0.getIntValueOrArraySum();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(42, tiffField0.getTag());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals((-2857), tiffField0.getDirectoryType());
      assertEquals(168, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      tiffField0.getDoubleValue();
      assertEquals((-469), tiffField0.getTag());
      assertEquals(41994, tiffField0.getDirectoryType());
      assertEquals(982, tiffField0.getSortHint());
      assertEquals(424, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146138949, 2145921841, fieldTypeRational0, 1370L, 2145921841, byteArray0, byteOrder0, (byte)25);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2145921841, int0);
      assertEquals(2145921841, tiffField0.getOffset());
      assertEquals(2146138949, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1183L), 1, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-954), (-954), fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)92);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(0, byteArray1.length);
      assertEquals((-954), tiffField0.getTag());
      assertEquals((-954), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2313), 0, (FieldType) null, 1163L, 1163L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2925, 118, (FieldType) null, 0L, 1247L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34016, 34016, fieldTypeByte0, (-2L), 280L, byteArray0, byteOrder0, 2814);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1183L), 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2064888123, 2064888123, fieldTypeAscii0, 4L, 2064888123, byteArray0, (ByteOrder) null, (-1081));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2590, "?#75x/Fetiz");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2590, 2590, fieldTypeByte0, (-1644L), 3014L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(65535, "Invalid value: ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3073, 0, fieldTypeDouble0, (-1L), 0L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146138949, 2145921841, fieldTypeRational0, 1370L, 2145921841, byteArray0, byteOrder0, (byte)25);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2146138949, tiffField0.getTag());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(2145921841, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(2145921841, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1449), (-751), fieldTypeRational0, 3423L, (-2871L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-751), tiffField0.getDirectoryType());
      assertEquals((-2871), tiffField0.getOffset());
      assertEquals((-1449), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      tiffField0.getValue();
      assertEquals(42880, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1367), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1183L), 1, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-1183L), 1, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146138949, 2145921841, fieldTypeRational0, 1370L, 2145921841, byteArray0, byteOrder0, (byte)25);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2145921841, tiffField0.getDirectoryType());
      assertEquals(10960, int0);
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(2146138949, tiffField0.getTag());
      assertEquals(2145921841, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      tiffField0.getDoubleValue();
      assertEquals(424, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-469), tiffField0.getTag());
      assertEquals(982, tiffField0.getSortHint());
      assertEquals(41994, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147032969, "MeteringMode");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1589), 8, fieldTypeAscii0, 8, 2686L, byteArray0, byteOrder0, 51008);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42, (-2857), fieldTypeLong0, 42, 42, byteArray0, byteOrder0, (byte)122);
      tiffField0.getIntValueOrArraySum();
      assertEquals(42, tiffField0.getTag());
      assertEquals(42, tiffField0.getOffset());
      assertEquals(122, tiffField0.getSortHint());
      assertEquals((-2857), tiffField0.getDirectoryType());
      assertEquals(168, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1181), "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1181), (-2386), fieldTypeAscii0, 2796L, (-2386), byteArray0, (ByteOrder) null, 1286);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@491d6e27 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      tiffField0.getIntValueOrArraySum();
      assertEquals(41994, tiffField0.getDirectoryType());
      assertEquals(982, tiffField0.getSortHint());
      assertEquals(424, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-469), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1702, (byte)4, fieldTypeByte0, 814L, (-1349L), byteArray0, (ByteOrder) null, (byte)4);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1987c0f8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4406), 1, fieldTypeDouble0, 2734L, 0L, byteArray0, byteOrder0, (-1597));
      tiffField0.getDoubleArrayValue();
      assertEquals(21872, tiffField0.getBytesLength());
      assertEquals((-4406), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1597), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2915, 2915, fieldTypeLong0, 29L, (-1353L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1353), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2915, tiffField0.getTag());
      assertEquals(2915, tiffField0.getDirectoryType());
      assertEquals(116, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1209, "XPComment");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3925, 3925, fieldTypeShort0, 30L, 42880L, byteArray0, byteOrder0, (byte) (-83));
      tiffField0.getDoubleArrayValue();
      assertEquals(3925, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals(3925, tiffField0.getTag());
      assertEquals((-83), tiffField0.getSortHint());
      assertEquals(42880, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 4L, 2709L, byteArray0, byteOrder0, 2147394307);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(2709, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2147394307, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      tiffField0.getDoubleArrayValue();
      assertEquals(424, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-469), tiffField0.getTag());
      assertEquals(982, tiffField0.getSortHint());
      assertEquals(41994, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147189512, "LyisvG='a'j!");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-359), 2128479367, fieldTypeFloat0, 4042L, 4042L, byteArray0, byteOrder0, (byte)48);
      tiffField0.getDoubleArrayValue();
      assertEquals(16168, tiffField0.getBytesLength());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals((-359), tiffField0.getTag());
      assertEquals(2128479367, tiffField0.getDirectoryType());
      assertEquals(4042, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-738), 3227, fieldTypeAscii0, 3227, 344L, byteArray0, byteOrder0, 1592);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@87cdcee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(985, 1, fieldTypeLong0, 4L, 1, byteArray0, byteOrder0, (-115));
      tiffField0.getIntArrayValue();
      assertEquals(985, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(59933, (-686), fieldTypeRational0, 3248L, (-778L), byteArray0, byteOrder0, 2147032590);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1209, "XPComment");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3925, 3925, fieldTypeShort0, 30L, 42880L, byteArray0, byteOrder0, (byte) (-83));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3925, tiffField0.getDirectoryType());
      assertEquals(60, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(42880, tiffField0.getOffset());
      assertEquals((-83), tiffField0.getSortHint());
      assertEquals(3925, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(41994, tiffField0.getDirectoryType());
      assertEquals(424, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(982, tiffField0.getSortHint());
      assertEquals((-469), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      tiffField0.getIntArrayValue();
      assertEquals(34017, tiffField0.getTag());
      assertEquals(5360L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1367), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(42880, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1408), 4, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1408), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2147189512, "LyisvG='a'j!");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-359), 2128479367, fieldTypeFloat0, 4042L, 4042L, byteArray0, byteOrder0, (byte)48);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@27d1d22b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147032969, "MeteringMode");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1589), 8, fieldTypeAscii0, 8, 2686L, byteArray0, byteOrder0, 51008);
      String string0 = tiffField0.getTagName();
      assertEquals(51008, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffff9cb)", string0);
      assertEquals(2686, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeLong0, 271, (-2216L), byteArray0, byteOrder0, (byte)2);
      String string0 = tiffField0.getTagName();
      assertEquals("Make", string0);
      assertEquals(271, tiffField0.getDirectoryType());
      assertEquals((-2216), tiffField0.getOffset());
      assertEquals(271, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1908874353, ">qFWX\"4{+sJ4'`-Ih");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1908874353, 37122, fieldTypeByte0, 27384L, 37122, byteArray0, byteOrder0, (byte)94);
      tiffField0.dump();
      assertEquals(27384L, tiffField0.getCount());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(27384, tiffField0.getBytesLength());
      assertEquals(37122, tiffField0.getOffset());
      assertEquals(1908874353, tiffField0.getTag());
      assertEquals(37122, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2128479367, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1699, 2128479367, fieldTypeDouble0, 1699, 2128479367, byteArray0, byteOrder0, 65535);
      tiffField0.dump();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1699, tiffField0.getTag());
      assertEquals(13592, tiffField0.getBytesLength());
      assertEquals(2128479367, tiffField0.getOffset());
      assertEquals(2128479367, tiffField0.getDirectoryType());
      assertEquals(1699L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2, "A5><]3~o<)u2szX");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 0, fieldTypeFloat0, 2761L, 0, byteArray0, byteOrder0, 41730);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(41730, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2761L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertEquals(11044, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(276, 276, fieldTypeLong0, 276, (-1066L), byteArray0, (ByteOrder) null, 50);
      MockFile mockFile0 = new MockFile((String) null, "Expected String value(");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-1066), tiffField0.getOffset());
      assertEquals(42L, mockFile0.length());
      assertEquals(1104, tiffField0.getBytesLength());
      assertEquals(276, tiffField0.getDirectoryType());
      assertEquals(276, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2694, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1124), (-1124), fieldTypeLong0, 3465L, (-1124), byteArray0, byteOrder0, 2064888123);
      String string0 = tiffField0.toString();
      assertEquals((-1124), tiffField0.getOffset());
      assertEquals(2064888123, tiffField0.getSortHint());
      assertEquals((-1124), tiffField0.getDirectoryType());
      assertEquals(13860, tiffField0.getBytesLength());
      assertEquals("-1124 (0xfffffb9c: Unknown Tag): 0 (3465 )", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(645, 0, fieldTypeDouble0, 0L, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(645, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1431655764), " ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2596), 541, fieldTypeByte0.SSHORT, 541, 4L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2596), tiffField0.getTag());
      assertEquals(541L, tiffField0.getCount());
      assertEquals(1082, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(541, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2147032969, "MeteringMode");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1589), 8, fieldTypeAscii0, 8, 2686L, byteArray0, byteOrder0, 51008);
      MockFileWriter mockFileWriter0 = new MockFileWriter("MeteringMode", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "MeteringMode");
      assertEquals(8L, tiffField0.getCount());
      assertEquals((-1589), tiffField0.getTag());
      assertEquals(51008, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2686, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1408), 4, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals((-1408), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-469), "");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-469), 41994, fieldTypeByte0, 1L, 424L, byteArray0, (ByteOrder) null, 982);
      String string0 = tiffField0.getValueDescription();
      assertEquals(982, tiffField0.getSortHint());
      assertEquals((-469), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(41994, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(424, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2590, "?#75x/Fetiz");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2590, 2590, fieldTypeByte0, 0L, 2590, byteArray0, byteOrder0, 1562);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2590, tiffField0.getOffset());
      assertEquals(1562, tiffField0.getSortHint());
      assertEquals(2590, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(2590, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)65, (byte)65);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(34017, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1367), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(42880, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1408), 4, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1408), (-2630));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals((-1408), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1408), 4, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1408), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0L, tiffElement0.offset);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals((-1367), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      tiffField0.getFieldTypeName();
      assertEquals((-1367), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(5360L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(34017, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getTag());
      assertEquals((-1367), tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(645, 0, fieldTypeDouble0, 0L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(645, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34017, 0, fieldTypeRational0, 5360L, 0L, byteArray0, byteOrder0, (-1367));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34017, tiffField0.getTag());
      assertEquals(42880, tiffField0.getBytesLength());
      assertEquals((-1367), int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(878, 878, fieldTypeLong0, 878, 878, byteArray0, byteOrder0, 91);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(878, tiffField0.getDirectoryType());
      assertEquals("878 (0x36e: Unknown Tag): ", string0);
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(878, tiffField0.getOffset());
      assertEquals(878L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-954), (-954), fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte)92);
      tiffField0.getByteOrder();
      assertEquals((-954), tiffField0.getDirectoryType());
      assertEquals((-954), tiffField0.getTag());
      assertEquals(92, tiffField0.getSortHint());
  }
}
