/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 13:09:06 GMT 2019
 */

package org.firebirdsql.gds.impl.wire;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.BlobParameterBuffer;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.EventHandle;
import org.firebirdsql.gds.EventHandler;
import org.firebirdsql.gds.IscBlobHandle;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.IscStmtHandle;
import org.firebirdsql.gds.IscSvcHandle;
import org.firebirdsql.gds.IscTrHandle;
import org.firebirdsql.gds.ServiceParameterBuffer;
import org.firebirdsql.gds.ServiceRequestBuffer;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.DbAttachInfo;
import org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl;
import org.firebirdsql.gds.impl.wire.BlobParameterBufferImp;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.EventHandleImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.ServiceParameterBufferImp;
import org.firebirdsql.gds.impl.wire.ServiceRequestBufferImp;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.gds.impl.wire.WireXdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrInputStream;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_tr_handle_impl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractJavaGDSImpl_ESTest extends AbstractJavaGDSImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, (byte)7, (byte)19);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      XdrInputStream xdrInputStream0 = new XdrInputStream();
      assertNotNull(xdrInputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(xdrOutputStream0, xdrInputStream0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 0);
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_svc_handle_impl) null, 2710);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setHandle(44);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 13);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      isc_svc_handle_impl0.setResp_blob_id(2271L);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(2271L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 13);
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(2271L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 0);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse((isc_db_handle_impl) null, (-906));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setResp_blob_id(1);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 2);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(1300);
      assertEquals(1300, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 3);
      assertEquals(1300, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-906));
      assertEquals((-906), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 2);
      assertEquals((-906), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(2156);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(2156, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 2);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(2156, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA");
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, dbAttachInfo0, false, 452, 57);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@3929a612
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      WireXdrInputStream wireXdrInputStream0 = new WireXdrInputStream();
      assertNotNull(wireXdrInputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.nextOperation(wireXdrInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.XdrInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-1822));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-1822), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(5);
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(5, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.isc_dsql_alloc_statement2(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // feature is not supported
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[6];
      int int0 = javaGDSImpl0.iscVaxInteger(byteArray0, (-1717986916), (-1039));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(6, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[7];
      int int0 = javaGDSImpl0.iscVaxInteger(byteArray0, (byte)116, (byte)0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(7, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[8];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[9];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, (-2393));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[2];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, 141);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscTransactionInformation((IscTrHandle) null, byteArray0, 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = (ServiceParameterBufferImp)javaGDSImpl0.createServiceParameterBuffer();
      assertNotNull(serviceParameterBufferImp0);
      
      byte[] byteArray0 = new byte[9];
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBufferImp0, (ServiceRequestBuffer) null, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp(350);
      assertEquals(350, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, (ServiceParameterBuffer) null, serviceRequestBufferImp0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("isc_info_ods_minor_version:", isc_svc_handle_impl0, (ServiceParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // service isc_info_ods_minor_version: is not defined
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 61, (-4637));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(1224L);
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(1224L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 1523, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-1451966149));
      assertEquals((-1451966149L), isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, (-1451966149), 3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNull(eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventId(14);
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNull(eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals(14, eventHandleImp0.getEventId());
      assertFalse(eventHandleImp0.isValid());
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(3618L);
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(3618L, isc_blob_handle_impl0.getBlobId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-171L));
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals((-171L), isc_blob_handle_impl0.getBlobId());
      
      try { 
        javaGDSImpl0.iscPutSegment(isc_blob_handle_impl0, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2((IscDbHandle) null, (IscTrHandle) null, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[9];
      int int0 = javaGDSImpl0.iscInteger(byteArray0, (-2284), (-2284));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(9, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      int int0 = javaGDSImpl0.iscInteger(byteArray0, 1955, (byte)67);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, (-1995261493));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(3245);
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 18);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[7];
      Object[] objectArray0 = new Object[6];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 33, (-757), objectArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(7, byteArray0.length);
      assertEquals(6, objectArray0.length);
      assertEquals(7, byteArray1.length);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(0);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      byte[] byteArray0 = javaGDSImpl0.iscExpandDpb(xSQLDA0.blr, 0, 0, xSQLDA0.sqlvar);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      Object[] objectArray0 = new Object[0];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, (-1), 50, objectArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray1);
      assertEquals(4, byteArray0.length);
      assertEquals(0, objectArray0.length);
      assertEquals(4, byteArray1.length);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 132, 1867, (Object[]) null);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray1);
      assertEquals(1, byteArray0.length);
      assertEquals(1, byteArray1.length);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("op_commit_retaining ");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("op_commit_retaining ", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventCounts(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("op_commit_retaining ", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals(0, eventHandleImp0.getEventCount());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.iscEventBlock((EventHandle) null);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      eventHandleImp0.setEventCount(45);
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals(45, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals(45, eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo((IscStmtHandle) null, byteArray0, (byte) (-127));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "blob.rbl_id:  ", 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "parseSqlInfo ended", (-1719889268));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, 452);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "op_info_blob ", "", (-3006));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, "op_commit_retaining ", "op_commit_retaining ", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "ISO8859_3", (-36));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) null, (String) null, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, 1333);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFreeStatement(isc_stmt_handle_impl0, (-2071128279));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, byteArray0, 0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (byte[]) null, 4, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "@|R}", (String) null, 0, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, (String) null, "op_info_sql ", (-1142), (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (String) null, "", 1539, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, "", "", 1083, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(1364);
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(1364, isc_db_handle_impl0.getDialect());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "Cp1251", (String) null, 18, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, "Y/pT%qvQs", (int) (byte)0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "", 4, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, "t8A", (-1995261493), xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-906));
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-906), isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, ":X7k LG<bs", 86, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      isc_db_handle_impl0.setODSMajorVersion(2943);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(2943, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "0", 2, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(5);
      assertEquals(5, xSQLDA0.sqld);
      assertEquals(5, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2(isc_tr_handle_impl0, (IscStmtHandle) null, 1, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, (IscStmtHandle) null, 0, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute((IscTrHandle) null, isc_stmt_handle_impl0, 2, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "1\"5s}>g`dZkcs", "Sj~]A1v)D", (-2051), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (String) null, (String) null, 6, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (String) null, 1394, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, "", 20, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "Cp1251", 0, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 34);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind((IscStmtHandle) null, (-1717986916));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, (-2005514054));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe((IscStmtHandle) null, 2114);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 2101);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType((-2477));
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals((-2477), isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribe(isc_stmt_handle_impl0, 2114);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(38);
      assertEquals(38, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-895));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals((-895), isc_db_handle_impl0.getODSMinorVersion());
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(3);
      assertEquals(3, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-340));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-340), isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(1615);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(1615, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-2151));
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals((-2151), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(85);
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(85, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDropDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol((-42));
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-42), isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(51);
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(51, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-4985));
      assertEquals((-4985), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect(17);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(17, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setDialect((-1660));
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-1660), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo((IscDbHandle) null, (byte[]) null, (-2105));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMajorVersion(64);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(64, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 939);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase((String) null, isc_db_handle_impl0, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("", (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(2);
      assertEquals(2L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      BlobParameterBuffer blobParameterBuffer0 = javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-907L));
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertEquals((-907L), isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.rbl_flagsAdd(44);
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertTrue(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId(1L);
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(1L, isc_blob_handle_impl0.getBlobId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setBlobId((-2369L));
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals((-2369L), isc_blob_handle_impl0.getBlobId());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCancelEvents((IscDbHandle) null, (EventHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(4967);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(4967, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("s");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("s", eventHandleImp0.getEventName());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(4967, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("s", eventHandleImp0.getEventName());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, (-261));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase("", (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Bad connection string: ':' at beginning or end of:335544323
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase((DbAttachInfo) null, (IscDbHandle) null, (DatabaseParameterBuffer) databaseParameterBufferImp0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("T#~QiEQ?UH[Ft1S6P]m", integer0, "T#~QiEQ?UH[Ft1S6P]m");
      assertEquals("T#~QiEQ?UH[Ft1S6P]m", dbAttachInfo0.getServer());
      assertEquals(0, dbAttachInfo0.getPort());
      assertEquals("T#~QiEQ?UH[Ft1S6P]m", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"T#~QiEQ?UH[Ft1S6P]m\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer((-2741));
      assertEquals((-2741), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("org.firebirdsql.gds.impl.wire.ParameterBufferBase$StringArgument", integer0, "org.firebirdsql.gds.impl.wire.ParameterBufferBase$StringArgument");
      assertEquals("org.firebirdsql.gds.impl.wire.ParameterBufferBase$StringArgument", dbAttachInfo0.getServer());
      assertEquals((-2741), dbAttachInfo0.getPort());
      assertEquals("org.firebirdsql.gds.impl.wire.ParameterBufferBase$StringArgument", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) null, (DatabaseParameterBuffer) databaseParameterBufferImp0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("PURE_JAVA", (Integer) null, (String) null, isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setProtocol(570);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(570, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("PURE_JAVA", (Integer) null, "PURE_JAVA", isc_db_handle_impl0, databaseParameterBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(560);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(560, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("PURE_JAVA", (Integer) null, "PURE_JAVA", isc_db_handle_impl0, databaseParameterBuffer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-2096486731));
      assertEquals((-2096486731), (int)integer0);
      assertNotNull(integer0);
      
      isc_db_handle_impl0.setDialect((-2796));
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals((-2796), isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase("z`KV*YIUz", integer0, "LG|SOq", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("op_sql_response ", integer0, "xJ2l-x**jgp2g-!2H", (IscDbHandle) null, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      Integer integer0 = new Integer(1456);
      assertEquals(1456, (int)integer0);
      assertNotNull(integer0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase((String) null, integer0, (String) null, (IscDbHandle) null, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setStatementType(30);
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(30, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertTrue(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, (-1969836762));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion((-310));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-310), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.fbCancelOperation(isc_db_handle_impl0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_db_handle_impl0.setODSMinorVersion(1044);
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(1044, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(0);
      assertEquals(0, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("T#~QiEQ?UH[Ft1S6P]m", integer0, "T#~QiEQ?UH[Ft1S6P]m");
      assertEquals("T#~QiEQ?UH[Ft1S6P]m", dbAttachInfo0.getServer());
      assertEquals(0, dbAttachInfo0.getPort());
      assertEquals("T#~QiEQ?UH[Ft1S6P]m", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, (DatabaseParameterBuffer) databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"T#~QiEQ?UH[Ft1S6P]m\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      Integer integer0 = new Integer((-519));
      assertEquals((-519), (int)integer0);
      assertNotNull(integer0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, (String) null, integer0, (String) null, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, (String) null, (Integer) null, "", databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, "", (Integer) null, (String) null, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      isc_db_handle_impl0.setODSMinorVersion((-1116));
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals((-1116), isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      Integer integer0 = new Integer(978);
      assertEquals(978, (int)integer0);
      assertNotNull(integer0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "xJ2l-x**jgp2g-!2H", integer0, "xJ2l-x**jgp2g-!2H", databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"xJ2l-x**jgp2g-!2H\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      isc_db_handle_impl0.setDialect(20);
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(20, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      
      Integer integer0 = new Integer(1591);
      assertEquals(1591, (int)integer0);
      assertNotNull(integer0);
      
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, "xJ2l-x**jgp2g-!2H", integer0, "xJ2l-x**jgp2g-!2H", databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"xJ2l-x**jgp2g-!2H\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength((XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessName((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      javaGDSImpl0.addProcessId((DatabaseParameterBuffer) null);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket((isc_db_handle_impl) null, (DbAttachInfo) null, false, (-2071128279), (-2071128279));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-864));
      assertEquals((-864), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo((String) null, integer0, "al");
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals("al", dbAttachInfo0.getFileName());
      assertEquals((-864), dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.openSocket(isc_db_handle_impl0, dbAttachInfo0, true, (-1418), 361);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-864
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.nextOperation((XdrInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger(byteArray0, 1594, 1594);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1594
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction((IscTrHandle) null, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl cannot be cast to org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceAttach((String) null, isc_svc_handle_impl0, serviceParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob((IscBlobHandle) null, 1456, 1456);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPutSegment((IscBlobHandle) null, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment((IscBlobHandle) null, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscGetSegment(isc_blob_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts((EventHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, byteArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSetCursorName(isc_stmt_handle_impl0, "UfXi_OHa:y", 16384);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "l!", "UfXi_OHa:y", 3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, "parseSqlInfo ended", 452);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, (-1309), xSQLDA0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[4];
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) null, byteArray0, (-794), xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (int) (byte) (-62), (XSQLDA) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, (String) null, 1, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2(isc_tr_handle_impl0, isc_stmt_handle_impl0, 5, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, byteArray0, (int) (byte) (-11), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA(2);
      assertEquals(1, xSQLDA0.version);
      assertEquals(2, xSQLDA0.sqln);
      assertEquals(2, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, (byte[]) null, 2, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) isc_tr_handle_impl0, "", "NONE", 2767, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertNotNull(isc_db_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, "", ".;iu3z'S)XMC$dQ", 67, xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlDescribeBind(isc_stmt_handle_impl0, 0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDetachDatabase(isc_db_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo((IscDbHandle) null, byteArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCloseBlob((IscBlobHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getSize());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCancelEvents((IscDbHandle) null, eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, 44);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_blob_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_blob_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscAttachDatabase("PURE_JAVA", isc_db_handle_impl0, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      Integer integer0 = new Integer(34);
      assertEquals(34, (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("PURE_JAVA", integer0, "PURE_JAVA");
      assertEquals("PURE_JAVA", dbAttachInfo0.getServer());
      assertEquals(34, dbAttachInfo0.getPort());
      assertEquals("PURE_JAVA", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, databaseParameterBuffer0, false);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertNotNull(isc_db_handle_impl0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase("", (Integer) null, "", isc_db_handle_impl0, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null or empty filename in DbAttachInfo
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlPrepareInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo((IscStmtHandle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeSelectInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getDescribeBindInfo(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect(isc_db_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_db_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.createEventHandle((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.EventHandleImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, (DbAttachInfo) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, "1Wfe#Ip36IOaRoZ", (Integer) 0, "successfully invalidated db handle", (DatabaseParameterBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(563);
      assertEquals(1, xSQLDA0.version);
      assertEquals(563, xSQLDA0.sqld);
      assertEquals(563, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[4];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertEquals(0, xSQLVAR0.sqlscale);
      assertEquals(0, xSQLVAR0.sqltype);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVARArray0[0];
      xSQLVARArray0[2] = xSQLVARArray0[0];
      xSQLVARArray0[3] = xSQLVARArray0[2];
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.disconnect((isc_db_handle_impl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp");
      assertEquals("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", dbAttachInfo0.getFileName());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.connect((isc_db_handle_impl) null, dbAttachInfo0, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      Integer integer0 = new Integer((-241));
      assertEquals((-241), (int)integer0);
      assertNotNull(integer0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("{aHi(1L\"{.p+QaN", integer0, "op_info_sql ");
      assertEquals("{aHi(1L\"{.p+QaN", dbAttachInfo0.getServer());
      assertEquals((-241), dbAttachInfo0.getPort());
      assertEquals("op_info_sql ", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.connect(isc_db_handle_impl0, dbAttachInfo0, databaseParameterBuffer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-241
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlSqlInfo(isc_stmt_handle_impl0, (byte[]) null, 61);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNotNull(isc_stmt_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, byteArray0, (-948));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[1];
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, byteArray0, 445, xSQLDA0, xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, byteArray0, (int) (byte) (-100), (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute2((IscTrHandle) null, isc_stmt_handle_impl0, (-1127652450), xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("IOW>=Ic");
      assertEquals(3050, dbAttachInfo0.getPort());
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals("IOW>=Ic", dbAttachInfo0.getFileName());
      assertNotNull(dbAttachInfo0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) null, (DatabaseParameterBuffer) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "not received", (-2940), xSQLDA0, xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecImmed2((IscDbHandle) null, (IscTrHandle) null, "' at beginning or end of:", "' at beginning or end of:", 0, (XSQLDA) null, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.fbCancelOperation((IscDbHandle) null, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      try { 
        javaGDSImpl0.iscCancelEvents((IscDbHandle) null, eventHandleImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("s");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("s", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscCancelEvents(isc_db_handle_impl0, eventHandleImp0);
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals("s", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getLocalId());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp();
      assertFalse(eventHandleImp0.isValid());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertNull(eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isCancelled());
      assertNotNull(eventHandleImp0);
      
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscQueueEvents(isc_db_handle_impl0, eventHandleImp0, eventHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscQueueEvents((IscDbHandle) null, (EventHandle) null, (EventHandler) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message (getMessage() has thrown an exception)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = (isc_svc_handle_impl)javaGDSImpl0.createIscSvcHandle();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertNotNull(isc_svc_handle_impl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp((-1237));
      assertEquals((-1237), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscServiceQuery(isc_svc_handle_impl0, serviceParameterBufferImp0, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = new ServiceRequestBufferImp(59);
      assertEquals(59, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      byte[] byteArray0 = new byte[1];
      try { 
        javaGDSImpl0.iscServiceQuery((IscSvcHandle) null, serviceParameterBufferImp0, serviceRequestBufferImp0, byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceStart(isc_svc_handle_impl0, (ServiceRequestBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer((-1717986916));
      assertEquals((-1717986916), serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceStart((IscSvcHandle) null, serviceRequestBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertNotNull(isc_svc_handle_impl0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream();
      assertNotNull(xdrOutputStream0);
      
      isc_svc_handle_impl0.out = xdrOutputStream0;
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      try { 
        javaGDSImpl0.iscServiceDetach(isc_svc_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscServiceDetach((IscSvcHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertFalse(isc_svc_handle_impl0.isValid());
      assertNotNull(isc_svc_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      assertFalse(isc_svc_handle_impl0.isValid());
      assertEquals(0L, isc_svc_handle_impl0.getResp_blob_id());
      assertTrue(isc_svc_handle_impl0.isNotValid());
      assertEquals(0, isc_svc_handle_impl0.getResp_object());
      assertNotNull(isc_svc_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceParameterBufferImp serviceParameterBufferImp0 = new ServiceParameterBufferImp();
      assertNotNull(serviceParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscServiceAttach("g", (IscSvcHandle) null, serviceParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid service handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(563);
      assertEquals(1, xSQLDA0.version);
      assertEquals(563, xSQLDA0.sqld);
      assertEquals(563, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[4];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      assertEquals(0, xSQLVAR0.sqltype);
      assertEquals(0, xSQLVAR0.sqllen);
      assertEquals(0, xSQLVAR0.sqlsubtype);
      assertEquals(0, xSQLVAR0.sqlscale);
      assertNotNull(xSQLVAR0);
      
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateBLR(xSQLDA0);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      AbstractJavaGDSImpl.calculateBLR((XSQLDA) null);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.receiveResponse(isc_db_handle_impl0, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 3050);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      assertTrue(boolean0);
      
      DbAttachInfo dbAttachInfo0 = new DbAttachInfo("]J `K4Ip'`Zb");
      assertEquals("localhost", dbAttachInfo0.getServer());
      assertEquals("]J `K4Ip'`Zb", dbAttachInfo0.getFileName());
      assertEquals(3050, dbAttachInfo0.getPort());
      assertNotNull(dbAttachInfo0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.internalAttachDatabase(dbAttachInfo0, (IscDbHandle) isc_db_handle_impl0, (DatabaseParameterBuffer) databaseParameterBufferImp0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2605);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      assertNotNull(mockPrintStream0);
      
      XdrOutputStream xdrOutputStream0 = new XdrOutputStream(mockPrintStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(xdrOutputStream0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket(xdrOutputStream0, (XdrInputStream) null, "JEX{|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.sendConnectPacket((XdrOutputStream) null, (XdrInputStream) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      isc_blob_handle_impl0.setDb(isc_db_handle_impl0);
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      
      try { 
        javaGDSImpl0.iscCloseBlob(isc_blob_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertNotNull(isc_blob_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = (BlobParameterBufferImp)javaGDSImpl0.createBlobParameterBuffer();
      assertNotNull(blobParameterBufferImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertNotNull(isc_db_handle_impl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      BlobParameterBufferImp blobParameterBufferImp0 = new BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2((IscDbHandle) null, isc_tr_handle_impl0, (IscBlobHandle) null, (BlobParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscOpenBlob2(isc_db_handle_impl0, isc_tr_handle_impl0, (IscBlobHandle) null, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid BLOB handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_blob_handle_impl isc_blob_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_blob_handle_impl();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRblId());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscCreateBlob2(isc_db_handle_impl0, (IscTrHandle) null, isc_blob_handle_impl0, (BlobParameterBuffer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.BlobParameterBufferImp blobParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.BlobParameterBufferImp();
      assertNotNull(blobParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateBlob2((IscDbHandle) null, isc_tr_handle_impl0, (IscBlobHandle) null, blobParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscInteger(byteArray0, 66, 1456);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 66
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      int int0 = javaGDSImpl0.iscInteger((byte[]) null, 623, (-412));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscVaxInteger((byte[]) null, 0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.getSqlCounts(isc_stmt_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlSetCursorName((IscStmtHandle) null, (String) null, 96);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) null, byteArray0, 9);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) null, (IscStmtHandle) isc_stmt_handle_impl0, "", 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, "", (String) null, 5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlFreeStatement((IscStmtHandle) null, (-4413));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA(847);
      assertEquals(1, xSQLDA0.version);
      assertEquals(847, xSQLDA0.sqln);
      assertEquals(847, xSQLDA0.sqld);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      AbstractJavaGDSImpl.calculateIOLength(xSQLDA0);
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 1497, (XSQLDA) null, 1533);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SQLDA missing or incorrect version, or incorrect number/type of variables
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch((IscStmtHandle) null, 135, xSQLDA0, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement(isc_db_handle_impl0, (IscStmtHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid request handle
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertNotNull(isc_stmt_handle_impl0);
      
      try { 
        javaGDSImpl0.iscDsqlAllocateStatement((IscDbHandle) null, isc_stmt_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, (byte[]) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscTransactionInformation(isc_tr_handle_impl0, (byte[]) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscRollbackTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction2((IscTrHandle) null, (byte[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction2(isc_tr_handle_impl0, byteArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_tr_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_tr_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscPrepareTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscPrepareTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitRetaining((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl0.setDbHandle(isc_db_handle_impl0);
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction(isc_tr_handle_impl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCommitTransaction((IscTrHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, (IscDbHandle) null, 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscReconnectTransaction((IscTrHandle) null, (IscDbHandle) null, (-698L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscReconnectTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, 103);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_tr_handle_impl0.setState((-52));
      assertEquals((-52), isc_tr_handle_impl0.getState());
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      
      TransactionParameterBuffer transactionParameterBuffer0 = javaGDSImpl0.newTransactionParameterBuffer();
      assertNotNull(transactionParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, transactionParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // transaction  is 
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      TransactionParameterBuffer transactionParameterBuffer0 = javaGDSImpl0.newTransactionParameterBuffer();
      assertNotNull(transactionParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, (IscDbHandle) null, transactionParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      assertNotNull(transactionParameterBufferImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscStartTransaction(isc_tr_handle_impl0, isc_db_handle_impl0, transactionParameterBufferImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscStartTransaction((IscTrHandle) null, (IscDbHandle) null, (TransactionParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid transaction handle (expecting explicit transaction start)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDropDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscDetachDatabase((IscDbHandle) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertNotNull(isc_blob_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscSeekBlob(isc_blob_handle_impl0, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo((IscBlobHandle) null, (byte[]) null, 56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertNotNull(isc_db_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, (byte[]) null, 939);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getRdb_id_ptr());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDatabaseInfo(isc_db_handle_impl0, byteArray0, 2109);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_db_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_db_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      javaGDSImpl0.addProcessName(databaseParameterBufferImp0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertTrue(isc_db_handle_impl0.isValid());
      assertNotNull(isc_db_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("1Wfe#Ip36IOaRoZ", isc_db_handle_impl0, databaseParameterBufferImp0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unable to complete network request to host \"localhost\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertNotNull(isc_tr_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) null, (IscTrHandle) isc_tr_handle_impl0, "org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp", "ISO8859_3", 55, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      try { 
        javaGDSImpl0.iscCreateDatabase("op_info_sql ", (IscDbHandle) null, (DatabaseParameterBuffer) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      ServiceRequestBufferImp serviceRequestBufferImp0 = (ServiceRequestBufferImp)javaGDSImpl0.createServiceRequestBuffer(452);
      assertEquals(452, serviceRequestBufferImp0.getTaskIdentifier());
      assertNotNull(serviceRequestBufferImp0);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = (isc_stmt_handle_impl)javaGDSImpl0.createIscStmtHandle();
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(0, xSQLDA0.sqln);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(1, xSQLDA0.version);
      assertNotNull(xSQLDA0);
      
      try { 
        javaGDSImpl0.iscDsqlFetch(isc_stmt_handle_impl0, 0, xSQLDA0, (-215121726));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // invalid database handle (no active connection)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = (isc_tr_handle_impl)javaGDSImpl0.createIscTrHandle();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertNotNull(isc_tr_handle_impl0);
      
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id_ptr());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertEquals(0, isc_stmt_handle_impl0.getRsrId());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertNotNull(isc_stmt_handle_impl0);
      
      XSQLDA xSQLDA0 = new XSQLDA();
      assertEquals(1, xSQLDA0.version);
      assertEquals(0, xSQLDA0.sqld);
      assertEquals(0, xSQLDA0.sqln);
      assertNotNull(xSQLDA0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecute(isc_tr_handle_impl0, isc_stmt_handle_impl0, (-2293), xSQLDA0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl cannot be cast to org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      byte[] byteArray0 = new byte[0];
      Object[] objectArray0 = new Object[7];
      byte[] byteArray1 = javaGDSImpl0.iscExpandDpb(byteArray0, 19, 57, objectArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
      assertEquals(0, byteArray0.length);
      assertEquals(7, objectArray0.length);
      assertEquals(0, byteArray1.length);
      assertNotNull(byteArray1);
      assertSame(byteArray0, byteArray1);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      EventHandleImp eventHandleImp0 = (EventHandleImp)javaGDSImpl0.createEventHandle("V~?dDM(d");
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("V~?dDM(d", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertNotNull(eventHandleImp0);
      
      javaGDSImpl0.iscEventBlock(eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals("V~?dDM(d", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventId());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_blob_handle_impl isc_blob_handle_impl0 = (isc_blob_handle_impl)javaGDSImpl0.createIscBlobHandle();
      assertEquals(0, isc_blob_handle_impl0.getRbl_id());
      assertEquals(0, isc_blob_handle_impl0.getPosition());
      assertFalse(isc_blob_handle_impl0.isEof());
      assertEquals(0L, isc_blob_handle_impl0.getBlobId());
      assertNotNull(isc_blob_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscBlobInfo(isc_blob_handle_impl0, byteArray0, 1200);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      assertEquals(0, isc_db_handle_impl0.getDialect());
      assertEquals(0, isc_db_handle_impl0.getODSMajorVersion());
      assertTrue(isc_db_handle_impl0.isValid());
      assertEquals(0, isc_db_handle_impl0.getODSMinorVersion());
      assertEquals(0, isc_db_handle_impl0.getResp_data_len());
      assertEquals(0, isc_db_handle_impl0.getResp_object());
      assertEquals(0, isc_db_handle_impl0.getProtocol());
      assertEquals(0L, isc_db_handle_impl0.getResp_blob_id());
      assertNotNull(isc_db_handle_impl0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlExecuteImmediate((IscDbHandle) isc_db_handle_impl0, (IscTrHandle) null, byteArray0, 4, (XSQLDA) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      assertNotNull(databaseParameterBuffer0);
      
      try { 
        javaGDSImpl0.iscAttachDatabase((String) null, (IscDbHandle) null, databaseParameterBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connection string missing
         //
         verifyException("org.firebirdsql.gds.impl.DbAttachInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      assertEquals(0, isc_tr_handle_impl0.getState());
      assertEquals(4, AbstractIscTrHandle.TRANSACTIONPREPARED);
      assertEquals(0, AbstractIscTrHandle.NOTRANSACTION);
      assertEquals(1, AbstractIscTrHandle.TRANSACTIONSTARTING);
      assertEquals(3, AbstractIscTrHandle.TRANSACTIONPREPARING);
      assertEquals(6, AbstractIscTrHandle.TRANSACTIONROLLINGBACK);
      assertEquals(5, AbstractIscTrHandle.TRANSACTIONCOMMITTING);
      assertEquals(2, AbstractIscTrHandle.TRANSACTIONSTARTED);
      assertNotNull(isc_tr_handle_impl0);
      
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.getInsertCount());
      assertFalse(isc_stmt_handle_impl0.isSingletonResult());
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
      assertEquals(0, isc_stmt_handle_impl0.getDeleteCount());
      assertFalse(isc_stmt_handle_impl0.isAllRowsFetched());
      assertEquals(0, isc_stmt_handle_impl0.getStatementType());
      assertFalse(isc_stmt_handle_impl0.isValid());
      assertEquals(0, isc_stmt_handle_impl0.getRsr_id());
      assertEquals(0, isc_stmt_handle_impl0.getUpdateCount());
      assertNull(isc_stmt_handle_impl0.getExecutionPlan());
      assertEquals(0, isc_stmt_handle_impl0.getSelectCount());
      assertEquals(0, isc_stmt_handle_impl0.size());
      assertNotNull(isc_stmt_handle_impl0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscDsqlPrepare((IscTrHandle) isc_tr_handle_impl0, (IscStmtHandle) isc_stmt_handle_impl0, (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      org.firebirdsql.gds.impl.jni.EventHandleImp eventHandleImp0 = new org.firebirdsql.gds.impl.jni.EventHandleImp("%d7E/RrgAzy:");
      assertFalse(eventHandleImp0.isCancelled());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getEventStructHandle());
      assertEquals((-1), eventHandleImp0.getSize());
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("%d7E/RrgAzy:", eventHandleImp0.getEventName());
      assertFalse(eventHandleImp0.isValid());
      assertNotNull(eventHandleImp0);
      
      // Undeclared exception!
      try { 
        javaGDSImpl0.iscEventCounts(eventHandleImp0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.firebirdsql.gds.impl.jni.EventHandleImp cannot be cast to org.firebirdsql.gds.impl.wire.EventHandleImp
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      assertNotNull(databaseParameterBufferImp0);
      
      javaGDSImpl0.addProcessId(databaseParameterBufferImp0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      assertNotNull(javaGDSImpl0);
      
      AbstractJavaGDSImpl.EventCoordinatorImp abstractJavaGDSImpl_EventCoordinatorImp0 = null;
      try {
        abstractJavaGDSImpl_EventCoordinatorImp0 = javaGDSImpl0.new EventCoordinatorImp(32767, "PURE_JAVA", 32767);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // Unable to complete network request to host \"PURE_JAVA\".
         //
         verifyException("org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl$EventCoordinatorImp", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("l!");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("l!", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("l!", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandleImp eventHandleImp1 = abstractJavaGDSImpl_EventGlob0.getEventHandle();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("l!", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertEquals((-1), eventHandleImp1.getEventId());
      assertEquals("l!", eventHandleImp1.getEventName());
      assertEquals((-1), eventHandleImp1.getEventCount());
      assertEquals((-1), eventHandleImp1.getLocalId());
      assertNotNull(eventHandleImp1);
      assertSame(eventHandleImp0, eventHandleImp1);
      assertSame(eventHandleImp1, eventHandleImp0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      EventHandleImp eventHandleImp0 = new EventHandleImp("org.firebirdsql.logging.LoggerFactory");
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.logging.LoggerFactory", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandleImp0);
      
      AbstractJavaGDSImpl.EventGlob abstractJavaGDSImpl_EventGlob0 = new AbstractJavaGDSImpl.EventGlob(eventHandler0, eventHandleImp0);
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.logging.LoggerFactory", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(abstractJavaGDSImpl_EventGlob0);
      
      EventHandler eventHandler1 = abstractJavaGDSImpl_EventGlob0.getEventHandler();
      assertEquals((-1), eventHandleImp0.getEventId());
      assertEquals("org.firebirdsql.logging.LoggerFactory", eventHandleImp0.getEventName());
      assertEquals((-1), eventHandleImp0.getEventCount());
      assertEquals((-1), eventHandleImp0.getLocalId());
      assertNotNull(eventHandler1);
      assertSame(eventHandler1, eventHandler0);
  }
}
