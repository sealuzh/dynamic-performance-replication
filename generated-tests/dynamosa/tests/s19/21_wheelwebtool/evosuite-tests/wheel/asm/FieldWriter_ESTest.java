/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 07:06:17 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(755);
      classWriter0.index = (-3017);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3017), "(doyxi,]0If!s=Y4v", "(doyxi,]0If!s=Y4v", "w", "(doyxi,]0If!s=Y4v");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-528));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-528), "{x #s!UA*i", "{x #s!UA*i", "{x #s!UA*i", "{x #s!UA*i");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-6));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "OW", "OW", "OW", "OW");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-50));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X3", "X3", (String) null, "X3");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X3", "X3", (String) null, "X3");
      ByteVector byteVector0 = new ByteVector(1);
      Attribute attribute0 = new Attribute("X3");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.length = 17;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1218);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2358), "", "@^/DTg,(^Q!grt:r", "@^/DTg,(^Q!grt:r", "");
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      byte[] byteArray0 = new byte[4];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(755);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 22, "3:Kuon!~Fjge?2=OLg", "", "", (Object) null);
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X3", "X3", (String) null, "X3");
      fieldWriter0.visitAnnotation("X3", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(755);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "3:Kuon!~Fjge?2=OLg", "", "3:Kuon!~Fjge?2=OLg", (Object) null);
      classWriter0.visit(755, 5, "3:Kuon!~Fjge?2=OLg", "j4", "j4", (String[]) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4116);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4116, "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-527));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-527), "{x #s!UA*i", "{x #s!UA*i", "{x #s!UA*i", "{x #s!UA*i");
      Attribute attribute0 = new Attribute("{x #s!UA*i");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(755);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 22, "3:Kuon!~Fjge?2=OLg", "", "", (Object) null);
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(755);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "3:Kuon!~Fjge?2=OLg", "", "3:Kuon!~Fjge?2=OLg", (Object) null);
      classWriter0.visit(755, 5, "3:Kuon!~Fjge?2=OLg", "j4", "j4", (String[]) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X3", "X3", (String) null, "X3");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X3", "X3", (String) null, "X3");
      fieldWriter0.visitAnnotation("X3", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 3, "", "", "", fieldWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.FieldWriter@8
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gtgA2&g*C ,g<", "", "", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4116);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4116, "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg", "3:Kuon!~Fjge?~2=OLg");
      Attribute attribute0 = new Attribute("3:Kuon!~Fjge?~2=OLg");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
