/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 01:51:48 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Machine;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String[] stringArray0 = rE2_0.findSubmatch("");
      assertNotNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Lydian");
      String string0 = rE2_0.replaceFirst("Lydian", "Lydian");
      assertEquals("Lydian", string0);
      
      int int0 = rE2_0.numberOfCapturingGroups();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceAll("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("NTc>M7");
      rE2_0.put((Machine) null);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        rE2_0.findUTF8Index(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findSubmatch("");
      String string0 = rE2_0.replaceAll("1", "");
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      String string0 = rE2_0.replaceFirst("(;m%H!RWf}vWCW#Wd", "(;m%H!RWf}vWCW#Wd");
      assertEquals("(;m%H!RWf}vWCW#Wd(;m%H!RWf}vWCW#Wd", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compile(" ,L.Wc3kIJ-{fS<");
      String string0 = rE2_0.replaceAll(" ,L.Wc3kIJ-{fS<", " ,L.Wc3kIJ-{fS<");
      assertEquals(" ,L.Wc3kIJ-{fS<", string0);
      
      String string1 = RE2.quoteMeta(" ,L.Wc3kIJ-{fS<");
      assertEquals(" ,L\\.Wc3kIJ-\\{fS<", string1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("ns{,mF%UW");
      byte[] byteArray0 = new byte[0];
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, 2);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RE2 rE2_0 = new RE2("HRTA!U");
      rE2_0.numberOfCapturingGroups();
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("HRTA!U", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = rE2_0.findUTF8SubmatchIndex(byteArray0);
      assertNotNull(intArray0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = new RE2("Y8ivJ1D3");
      int[] intArray0 = rE2_0.findSubmatchIndex(")^xfA0%=I>ae");
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = new RE2(".HX>3]2UI}%w+]'");
      boolean boolean0 = rE2_0.match(".HX>3]2UI}%w+]'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findIndex("");
      rE2_0.reset();
      assertEquals("", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("m");
      List<int[]> list0 = rE2_0.findAllIndex("m", 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      String string0 = RE2.quoteMeta("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      int[] intArray0 = new int[9];
      intArray0[0] = (-1591);
      intArray0[1] = 992;
      intArray0[2] = 817;
      intArray0[3] = (-1591);
      intArray0[4] = (-1591);
      intArray0[5] = 817;
      intArray0[6] = (-1591);
      intArray0[7] = (-1591);
      intArray0[8] = (-1591);
      boolean boolean0 = rE2_0.match("", (-1591), (-1591), 817, intArray0, 3087);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = new RE2("NTc>M7");
      byte[] byteArray0 = new byte[0];
      int[] intArray0 = rE2_0.findUTF8Index(byteArray0);
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = new RE2("4V`r6F8,");
      byte[] byteArray0 = new byte[0];
      List<byte[]> list0 = rE2_0.findAllUTF8(byteArray0, 921);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      boolean boolean0 = rE2_0.match("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findUTF8Submatch(byteArray0);
      rE2_0.reset();
      assertEquals("", rE2_0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = RE2.quoteMeta("can't happen");
      assertEquals("can't happen", string0);
      
      boolean boolean0 = RE2.match("", "can't happen");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = new RE2("77R");
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = rE2_0.findUTF8(byteArray0);
      assertNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findSubmatchIndex("");
      String string0 = rE2_0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("D}");
      byte[] byteArray0 = new byte[1];
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, 34);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[0];
      List<byte[][]> list0 = rE2_0.findAllUTF8Submatch(byteArray0, 2);
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("%");
      rE2_0.find("%");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Lydian");
      rE2_0.replaceFirst("", "");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.get();
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compile("1LRyB/");
      rE2_0.findAllUTF8Index(byteArray0, 441);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte) (-113);
      rE2_0.findAllUTF8Index(byteArray0, (byte) (-113));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllIndex("", (-3630));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAll("", 68680);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 1);
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = 'y';
      charArray0[2] = '3';
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Ea*$1");
      rE2_0.findSubmatch("Ea*$1");
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("wB");
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)71;
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = new RE2("OT/7$f[E,Yz.2]r");
      rE2_0.findAllIndex("OT/7$f[E,Yz.2]r", 961);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = new RE2("U");
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllSubmatchIndex("", 2);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("m");
      rE2_0.findAllIndex("m", (-1));
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 2147483645, false);
      rE2_0.findAllSubmatch("", (-2498));
      int[] intArray0 = new int[0];
      rE2_0.match("", 215, 202, (-1976), intArray0, 215);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.toString();
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, (-791));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("L j");
      rE2_0.findAll("", (-2886));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = new RE2(".HX>3]2UI}%w+]'");
      boolean boolean0 = rE2_0.prefixComplete;
      rE2_0.findIndex(".HX>3]2UI}%w+]'");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-95);
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, (byte) (-95));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "";
      RE2 rE2_0 = new RE2("");
      rE2_0.reset();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      // Undeclared exception!
      try { 
        rE2_0.match("UTF-8", 0, 0, (-2211), intArray0, 1655);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Tagbanwa");
      rE2_0.find("dCW+H>xhcj V*bL");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("^\"4Q");
      rE2_0.findAllSubmatch("^\"4Q", 7344);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.toString();
      String string0 = rE2_0.prefix;
      RE2 rE2_1 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[1];
      rE2_0.findAllUTF8Submatch(byteArray0, (byte) (-118));
      rE2_1.findAllSubmatch("", (byte) (-118));
      RE2 rE2_2 = RE2.compile("");
      int[] intArray0 = new int[8];
      intArray0[0] = (-347);
      intArray0[1] = 5575;
      intArray0[7] = (-347);
      intArray0[3] = (int) (byte) (-118);
      rE2_2.reset();
      rE2_1.match("", 0, 0, (-8), (int[]) null, 5575);
      rE2_1.findUTF8Index(byteArray0);
      rE2_1.findAllSubmatch("", 273);
      String string1 = "\"i<}IXNjccv:IQxLC";
      int int0 = 64;
      // Undeclared exception!
      try { 
        rE2_2.match("", (byte) (-118), 5575, (byte) (-118), (int[]) null, 64);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)13;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)39;
      RE2 rE2_0 = new RE2("z");
      rE2_0.replaceAll("z", "");
      rE2_0.findAllSubmatch("G", (-3));
      rE2_0.reset();
      rE2_0.findAllUTF8Index(byteArray0, 0);
  }
}
