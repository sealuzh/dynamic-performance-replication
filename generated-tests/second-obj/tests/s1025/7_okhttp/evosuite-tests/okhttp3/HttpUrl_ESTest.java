/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:20:45 GMT 2018
 */

package okhttp3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.net.UnknownHostException;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import okhttp3.HttpUrl;
import okio.Buffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpUrl_ESTest extends HttpUrl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("~MY7o!\"6O9==+[Dvu+H");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegments("~MY7o!\"6O9==+[Dvu+H");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedPathSegments("~MY7o!\"6O9==+[Dvu+H");
      assertSame(httpUrl_Builder2, httpUrl_Builder3);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "~MY7o!\"6O9==+[Dvu+H";
      httpUrl_Builder0.password("%7d%20");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedUsername((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedUsername == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "augFm");
      HttpUrl.decodeHexDigit('8');
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(8, "augFm");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 8, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "encodedPathSegment == null";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("encodedPathSegment == null");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("encodedPathSegment == null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MockURL.URL("https:mple:7");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllEncodedQueryParameters("9:7");
      String string0 = "?0bc#W*o>VEBo*";
      httpUrl_Builder0.fragment("?0bc#W*o>VEBo*");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("https:mple:7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: https:mple:7
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-2155), "+Z%Ib}T*bI'");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-89), "okio.AsyncTimeout");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.password((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // password == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.username("!QMT!&d");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("~M7o!\"6O9==+[Dvu+H");
      httpUrl_Builder1.addPathSegments("~M7o!\"6O9==+[Dvu+H");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HttpUrl.parse("wW");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllQueryParameters("%EFE0L3mpF&*dMI1");
      httpUrl_Builder0.query("%EFE0L3mpF&*dMI1");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("#ff0|00");
      httpUrl_Builder1.addQueryParameter("#ff0|00", "#ff0|00");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("=", (String) null);
      String string0 = "%20%22%23%3C%3E";
      httpUrl_Builder1.addQueryParameter("=", "%20%22%23%3C%3E");
      int int0 = (-2492);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment((-2492), "+urdVv8h=[");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      try { 
        HttpUrl.getChecked("b::eC.unt > Integer.MQX_VALUE: ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for b::eC.unt > Integer.MQX_VALUE: 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      try { 
        HttpUrl.getChecked("host%20==%20null");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for host%20==%20null
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      URI uRI0 = MockURI.URI("okio.Util", "okio.Util", "okio.Util", 780, "", "okio.Util", "okio.Util");
      HttpUrl.get(uRI0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "5<j";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      httpUrl_Builder1.setEncodedPathSegment(0, "5<j");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("5<j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: 5<j
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.percentDecode("*1Kyhz%b$=h77EL!Y^", true);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedQueryParameter("c&4", (String) null);
      httpUrl_Builder0.reencodeForUri();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.addPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HttpUrl.percentEncoded("Number too large: ", 0, 14);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.setQueryParameter("", (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("augFm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: augFm
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("");
      httpUrl_Builder1.fragment("");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments(".");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedUsername("&Li)|l@rE");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.port(976);
      HttpUrl.percentDecode("riAM\"c=WplYU_}xOl", false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MockURL.URL("https:mple:7");
      HttpUrl httpUrl0 = HttpUrl.parse("https:mple:7");
      httpUrl0.queryParameterNames();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https:mple:7@");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:mple:7@
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        HttpUrl.getChecked("https:mple:7|");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: INVALID_PORT for https:mple:7|
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.host("D|w7=wrA6h'");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\n";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      httpUrl_Builder0.encodedFragment("\n");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HttpUrl.defaultPort("1X%{-");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HttpUrl.queryStringToNamesAndValues("v7d/\"yWBQel2");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("v7d/\"yWBQel2");
      String string0 = "r1N_-,MkU$";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.scheme("r1N_-,MkU$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: r1N_-,MkU$
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port((-1826));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -1826
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      try { 
        HttpUrl.getChecked("[size=");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for [size=
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      try { 
        HttpUrl.getChecked("Unexpected hex digit: ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for Unexpected hex digit: 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      Locale locale0 = Locale.ENGLISH;
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl0.queryParameter("V)D2E7M$,9iW.");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b::eC.unt > Integer.MQX_VALUE: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b::eC.unt > Integer.MQX_VALUE: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HttpUrl.percentEncoded((String) null, (-624), (-624));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPassword == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[3OE_[.J]r7:2E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [3OE_[.J]r7:2E
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedPassword("ddp^:?`!;)+t%'Z8A");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedQueryParameter("timeout", "timeout");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllEncodedQueryParameters("~M7o!\"6O9==+[Dvu+H");
      httpUrl_Builder1.addPathSegments("~M7o!\"6O9==+[Dvu+H");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "EeQYLw}r>!guF";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.host("EeQYLw}r>!guF");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.fragment("EeQYLw}r>!guF");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.query("augFm");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.removeAllQueryParameters("augFm");
      // Undeclared exception!
      try { 
        httpUrl_Builder5.scheme("EeQYLw}r>!guF");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: EeQYLw}r>!guF
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("dxeE");
      httpUrl_Builder1.addQueryParameter("[", "dxeE");
      httpUrl_Builder1.addEncodedQueryParameter("dxeE", "dxeE");
      int int0 = (-1204);
      String string0 = "encodedName == null";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("encodedName == null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(58);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("inflater == null", "inflater == null");
      httpUrl_Builder3.removeAllQueryParameters(" for ");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedQuery((String) null);
      String string0 = "b::eCount > Integer.MQX_VALUE: ";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b::eCount > Integer.MQX_VALUE: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b::eCount > Integer.MQX_VALUE: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.url();
      httpUrl0.encodedUsername();
      HttpUrl.decodeHexDigit('<');
      Object object0 = new Object();
      HttpUrl.defaultPort("CaC[?");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MockURL.URL("https:mple:7");
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl0.queryParameterNames();
      httpUrl0.queryParameterValues("(u_N.gfu3(\"}3`");
      httpUrl0.newBuilder();
      httpUrl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedUsername("::c.?p'3:#O^~Jgoz");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      MockURL.getHttpExample();
      httpUrl_Builder0.addEncodedPathSegment("%2e");
      Buffer buffer0 = new Buffer();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("%2e");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a!0XVV,l+");
      httpUrl_Builder1.encodedPassword("I.;ucT3XFIP.");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.scheme("%2e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: %2e
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "3BJEHuJ]+jiS:2";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("3BJEHuJ]+jiS:2");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("3BJEHuJ]+jiS:2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3BJEHuJ]+jiS:2
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = "UTF-32BE";
      HttpUrl.parse("UTF-32BE");
      // Undeclared exception!
      try { 
        HttpUrl.percentDecode("UTF-32BE", 3111, 3111, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      HttpUrl.queryStringToNamesAndValues("dK?6`092Az5Y`<]Rg&x");
      httpUrl0.queryParameterValues("https:mple:7");
      httpUrl0.queryParameterValues("dK?6`092Az5Y`<]Rg&x");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment = "%2e%M2e";
      String string0 = "%2e%2e";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("%2e%2e");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegment("::c::p'3:#O^~Jgoz");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.encodedPassword("}7|gHH!9!tb");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder0.encodedFragment((String) null);
      httpUrl_Builder3.username("k]");
      httpUrl_Builder2.encodedQuery("}7|gHH!9!tb");
      HttpUrl.percentDecode("::c::p'3:#O^~Jgoz", true);
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder1.addEncodedPathSegments("%2e%2e");
      httpUrl_Builder4.addEncodedQueryParameter("https:/www.somefakebutwellformedurl.org/fooexample", (String) null);
      httpUrl_Builder0.encodedUsername("::c::p'3:#O^~Jgoz");
      httpUrl_Builder2.query("..");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      httpUrl0.password();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "pathSegments == null";
      HttpUrl.queryStringToNamesAndValues("pathSegments == null");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter("2iap\"MaC_x?NZva,", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("fooewample:7%7C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: fooewample:7%7C
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(635);
      String string0 = "GirAh9Ab-yv+}";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment((String) null);
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addPathSegments("GirAh9Ab-yv+}");
      String string1 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder3.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      try { 
        HttpUrl.getChecked("dl2uwsMC.1M:`f");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for dl2uwsMC.1M:`f
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment((String) null);
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder2.setEncodedPathSegment((-81691606), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(2126);
      String string0 = "X\\x3,b~U4?";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedPassword("Xx3,b~U4?");
      httpUrl_Builder0.password("Xx3,b~U4?");
      httpUrl_Builder2.host("INVALID_HOST");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("augFm");
      httpUrl_Builder1.reencodeForUri();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("Unexpected hex string: ");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addQueryParameter("Unexpected hex string: ", "[::c::p'3:#O^~Jgo");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedFragment("byteCount > Integer.MAX_VALUE: ");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.removeAllQueryParameters("Unexpected hex string: ");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.username("byteCount > Integer.MAX_VALUE: ");
      httpUrl_Builder5.addEncodedPathSegments("aHj&*Y{Ra3`(J'k");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "&n?o/C.4u3+jC`BG";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("&n?o/C.4u3+jC`BG");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.removePathSegment((-2547));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\n";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment("\n");
      httpUrl_Builder1.port(127);
      int int0 = 2931;
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Buffer buffer0 = new Buffer();
      try { 
        HttpUrl.getChecked("htt+s:mple:7@");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for htt+s:mple:7@
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      httpUrl_Builder0.addEncodedQueryParameter("SHA-1", "SHA-1");
      httpUrl0.pathSize();
      httpUrl_Builder0.build();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "FfAq57P zZ4pvxCT]n";
      List<String> list0 = HttpUrl.queryStringToNamesAndValues("FfAq57P zZ4pvxCT]n");
      HttpUrl.namesAndValuesToQueryString(stringBuilder0, list0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string1 = "k LL>";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("k LL>");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: k LL>
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      int int0 = 35;
      httpUrl_Builder0.port(35);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("58P:!'wG2;tbS9@.T;");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.fragment("zj8WOR[Q*B=iC8E");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MockURL.URL("https:mple:7");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl_Builder0.parse(httpUrl0, "");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("");
      httpUrl0.port();
      httpUrl_Builder0.username("");
      httpUrl0.encodedPath();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("ZeCH#");
      Buffer buffer0 = new Buffer();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(115);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 115, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      httpUrl_Builder0.query("/&AUE;:M=:?u_6(iI");
      try { 
        MockURI.URI("h!W<K{[,X3i#D^%K");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 3: h!W<K{[,X3i#D^%K
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment = "%2e%M2e";
      HttpUrl.canonicalize("%2e%M2e", "%2e%M2e", false, false, false, true);
      httpUrl_Builder0.removeAllQueryParameters("%25%32%65%25%4D%32%65");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      httpUrl_Builder1.encodedQuery("%2e%M2e");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutwellformedurl.org/fooexample");
      httpUrl0.encodedQuery();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl0.queryParameterNames();
      httpUrl0.pathSegments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(17);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.isHttps();
      MockURL.getFile(uRL0);
      httpUrl0.scheme();
      // Undeclared exception!
      try { 
        HttpUrl.Builder.ParseResult.valueOf("pathSegment == null");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant okhttp3.HttpUrl.Builder.ParseResult.pathSegment == null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "https:mple:7";
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl0.query();
      httpUrl0.queryParameterValues("https:mple:7");
      String string1 = "3B.J]r7:2E";
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        HttpUrl.queryStringToNamesAndValues((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      URL uRL0 = MockURL.URL("https:/www.somefakebutwellformedurl.org/foexample");
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.encodedUsername();
      httpUrl0.url();
      httpUrl0.encodedUsername();
      HttpUrl.decodeHexDigit('q');
      Object object0 = new Object();
      httpUrl0.equals("");
      HttpUrl.defaultPort("CaC[?");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        HttpUrl.getChecked("cfYQ{C%z");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for cfYQ{C%z
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedQueryParameter("n0", "n0");
      httpUrl0.encodedUsername();
      URI uRI0 = httpUrl0.uri();
      MockURI.getRawUserInfo(uRI0);
      httpUrl_Builder0.addEncodedQueryParameter("n0", "n0");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegment("");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.port(58);
      httpUrl_Builder3.build();
      httpUrl0.pathSize();
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(8192);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("ngl0");
      httpUrl_Builder1.addPathSegments("BY'u\"~Q4c&");
      httpUrl_Builder1.password("ngl0");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl0.newBuilder();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("v5/o", "%2e%2e");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.password("%2e%2e");
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder4.setEncodedQueryParameter("v5/o", "%2e%2e");
      httpUrl0.encodedUsername();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder4.addEncodedPathSegments("%2e%2e");
      HttpUrl httpUrl1 = HttpUrl.get(uRL0);
      Buffer buffer0 = new Buffer();
      HttpUrl.canonicalize(buffer0, "BY'u\"~Q4c&", 210, 210, "DT|!tIIZaLCElNY5", true, true, false, false);
      httpUrl1.newBuilder();
      HttpUrl httpUrl2 = httpUrl_Builder2.build();
      Object object0 = new Object();
      Object object1 = new Object();
      httpUrl0.equals(object1);
      httpUrl0.query();
      httpUrl2.newBuilder();
      httpUrl0.url();
      httpUrl2.pathSize();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("Vr?Dr{uP@");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.password("\n");
      httpUrl_Builder2.addPathSegment("LT6!");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      URI uRI0 = MockURI.URI("https:/www.somefakebutwellformedurl.org/fooexample", "https:/www.somefakebutwellformedurl.org/fooexample", "*wAq\"T$G%K");
      HttpUrl httpUrl0 = HttpUrl.get(uRI0);
      HttpUrl.Builder httpUrl_Builder1 = new HttpUrl.Builder();
      httpUrl_Builder0.reencodeForUri();
      httpUrl0.isHttps();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.isHttps();
      httpUrl0.toString();
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(3957);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.decodeHexDigit('Z');
      HttpUrl.percentDecode("}O]rX+ 4iB$", true);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "%2e.";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("%2e.");
      String string1 = "OA8v[oLtT`";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.encodedPassword("OA8v[oLtT`");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.scheme("OA8v[oLtT`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: OA8v[oLtT`
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.percentDecode("%4", true);
      String string0 = "r}e0Keny^}$J(.\\";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string1 = "X]";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("X]");
      httpUrl_Builder1.addEncodedPathSegments(".%2e");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath("%4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: %4
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      MockURL.URL("https:mple:7");
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl0.resolve("okio.GzipSource");
      httpUrl0.queryParameterNames();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("a-TM+E\"Zo;1^Kr&k1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: a-TM+E\"Zo;1^Kr&k1
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "\\z:1lE8''@+I";
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("z:1lE8''@+I");
      httpUrl_Builder1.reencodeForUri();
      httpUrl_Builder1.encodedFragment("z:1lE8''@+I");
      String string1 = "::";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.percentDecode("%4", false);
      MockURL.getHost(uRL0);
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter(":`biJg", "www.someFakeButWellFormedURL.org");
      HttpUrl httpUrl1 = httpUrl0.resolve("BgFJ*H");
      httpUrl_Builder1.parse(httpUrl0, "v3@5y~");
      httpUrl1.newBuilder("v3@5y~");
      httpUrl_Builder1.username("%2e.");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.host("8B");
      HttpUrl httpUrl2 = httpUrl_Builder2.build();
      httpUrl2.scheme();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl2.newBuilder();
      httpUrl_Builder3.setEncodedQueryParameter("_5:6f83U.VCjsW}e q7", "y;uH@");
      HttpUrl.defaultPort("www.someFakeButWellFormedURL.org");
      httpUrl1.encodedUsername();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("pL8");
      MockURI.URI((String) null, "pL8", "pL8", "pL8", "pL8");
      String string0 = "\u2026]";
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegments("\u2026]");
      // Undeclared exception!
      try { 
        httpUrl_Builder2.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      String string0 = "\u2026]";
      httpUrl_Builder1.addEncodedPathSegment("\u2026]");
      httpUrl_Builder1.fragment("\u2026]");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      URI uRI0 = MockURI.URI("https:/www.somefakebutwellformedurl.org/fooexample", "7|", "https:/www.somefakebutwellformedurl.org/fooexample");
      HttpUrl httpUrl0 = HttpUrl.get(uRI0);
      httpUrl0.queryParameterNames();
      httpUrl0.uri();
      httpUrl0.encodedPath();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      buffer0.readUtf8();
      buffer0.sha1();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("");
      httpUrl_Builder0.removePathSegment(0);
      // Undeclared exception!
      try { 
        httpUrl_Builder1.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "3%,BE:::]+i:y2E";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("3%,BE:::]+i:y2E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3%,BE:::]+i:y2E
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      httpUrl0.queryParameterValues("https:mple:7");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      httpUrl0.host();
      httpUrl0.encodedPath();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/");
      HttpUrl.decodeHexDigit('e');
      Buffer buffer0 = new Buffer();
      try { 
        MockURL.URL("https:mple:7", "", "$}3J_t");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: https:mple:7
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[I:c::p'3:#O^~Jgo");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.queryParameterValues("} ?ll>5xyHzp");
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterName((-3015));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      int int0 = (-1489);
      String string0 = ".";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment((-1489), ".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: .
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "rLh]$s+QF ae9a]";
      String string1 = "/RL^!";
      httpUrl_Builder0.encodedPath("/RL^!");
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removePathSegment(1320);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1320, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-V>psF!ssFKA");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl0.username();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removeAllQueryParameters("");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment(174, "");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 174, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)101;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Buffer buffer0 = new Buffer();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.encodedPathSegments();
      HttpUrl httpUrl1 = httpUrl0.resolve("http:/");
      httpUrl0.equals(httpUrl1);
      httpUrl_Builder0.addPathSegments("3`~(");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder1 = new HttpUrl.Builder();
      httpUrl_Builder0.reencodeForUri();
      HttpUrl httpUrl1 = HttpUrl.get(uRL0);
      httpUrl1.equals(httpUrl0);
      httpUrl0.encodedQuery();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "b";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string0 = "\r";
      httpUrl_Builder0.addEncodedPathSegments("\r");
      try { 
        MockURL.URL("\r");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: \r
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      Locale locale0 = Locale.CHINA;
      HttpUrl.Builder httpUrl_Builder0 = httpUrl0.newBuilder("}g ?(l!(5xyXHzp");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      httpUrl0.queryParameterValues("}g ?(l!(5xyXHzp");
      Buffer buffer0 = new Buffer();
      Buffer buffer1 = new Buffer();
      String string0 = "&.ScpY=V/+If^Np";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}g ?(l!(5xyXHzp");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("&.ScpY=V/+If^Np");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: &.ScpY=V/+If^Np
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl0.queryParameterValues("https:mple:7");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "https:mple:7");
      Buffer buffer0 = new Buffer();
      HttpUrl.canonicalize(buffer0, "%2e.", 73, 73, "%2e.", false, false, false, true);
      httpUrl0.redact();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.queryStringToNamesAndValues("} ?ll>5xyHzp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      Object object0 = new Object();
      HttpUrl.parse("3B");
      httpUrl1.equals("} ?ll>5xyHzp");
      httpUrl1.pathSegments();
      HttpUrl.percentDecode("; charset=utf-8", false);
      httpUrl1.queryParameter("t~k)YZ=xJp|Um1T\" \"H");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[I:c::p'3:#O^~Jgo");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.queryParameterValues("} ?ll>5xyHzp");
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      httpUrl1.queryParameterNames();
      httpUrl1.encodedQuery();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllQueryParameters("b::eCount > Integer.MAX_VALUE: ");
      HttpUrl.Builder.ParseResult.values();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      int int0 = 0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(0, ".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: .
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "::c.?p'3:#O^~Jgoz");
      HttpUrl.percentDecode("pathSegments%20==%20null", false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl_Builder0.addPathSegments("/..");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.queryStringToNamesAndValues("} ?ll>5xyHzp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      httpUrl1.query();
      MockURL.getHost(uRL0);
      httpUrl1.queryParameterValues("Wi=U<^dUq");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b::c");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port(65545);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: 65545
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.removeAllQueryParameters("n0");
      httpUrl0.newBuilder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("n0");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.percentDecode("n0", true);
      httpUrl0.toString();
      httpUrl_Builder0.addEncodedQueryParameter("n0", "n0");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.removeAllQueryParameters("n0");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addQueryParameter("n0", "http://www.somefakebutwellformedurl.org/fooExample");
      httpUrl_Builder3.query(">48l_Q8_ANy>Fx");
      httpUrl_Builder1.parse(httpUrl0, "/..");
      HttpUrl httpUrl1 = httpUrl_Builder3.build();
      httpUrl1.queryParameterNames();
      httpUrl1.queryParameter(">48l_Q8_ANy>Fx");
      String string0 = "unexpected%20port:";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.addPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.parse("https:/www.somefakebutwellformedurl.org/fooexample");
      httpUrl0.encodedQuery();
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl0.queryParameterNames();
      httpUrl0.queryParameterValues("https:/www.somefakebutwellformedurl.org/fooexample");
      HttpUrl.queryStringToNamesAndValues("https:/www.somefakebutwellformedurl.org/fooexample");
      FileSystemHandling.shouldAllThrowIOExceptions();
      httpUrl0.resolve(" #%/:?@[]");
      char[] charArray0 = new char[7];
      charArray0[0] = '{';
      charArray0[1] = '/';
      charArray0[2] = 'X';
      charArray0[3] = '4';
      charArray0[4] = 'E';
      charArray0[5] = 'G';
      charArray0[6] = 'i';
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HttpUrl httpUrl0 = HttpUrl.getChecked("https:mple:7");
      httpUrl0.queryParameterValues("https:mple:7");
      String string0 = "";
      HttpUrl.queryStringToNamesAndValues("");
      httpUrl0.encodedPathSegments();
      httpUrl0.queryParameterValues("");
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuffer stringBuffer0 = new StringBuffer(stringBuilder0);
      StringBuilder stringBuilder1 = stringBuilder0.append(stringBuffer0);
      StringBuilder stringBuilder2 = stringBuilder1.append((CharSequence) "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 247;
      httpUrl0.querySize();
      // Undeclared exception!
      try { 
        stringBuilder2.insert(247, 'y');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "3VlXB:W6";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("3VlXB:W6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3VlXB:W6
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "timeout == null");
      httpUrl0.pathSegments();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      HttpUrl.Builder httpUrl_Builder0 = httpUrl1.newBuilder("J4yV@\"dJkrQ8");
      MockURL.getPath(uRL0);
      MockURL.getAuthority(uRL0);
      httpUrl0.query();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockURL.getHost(uRL0);
      httpUrl1.queryParameterValues("Wi=U<^dUq");
      HttpUrl.decodeHexDigit('f');
      Object object0 = new Object();
      httpUrl1.querySize();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("4u%~f");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: 4u%~f
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      Locale locale0 = Locale.ENGLISH;
      httpUrl0.encodedPathSegments();
      MockURL.getProtocol(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("http");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("Ccs'5");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.encodedPassword("[K eW<hprLGxd ");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.addPathSegment("http");
      HttpUrl.Builder httpUrl_Builder5 = httpUrl_Builder4.scheme("http");
      httpUrl_Builder5.addEncodedPathSegment("http");
      httpUrl_Builder0.encodedFragment("http");
      Locale.forLanguageTag(",i~tJ= =LD~[X]q|");
      Locale locale1 = new Locale("pD{(.\")(|d2Z=", "[K eW<hprLGxd ");
      Locale locale2 = Locale.FRANCE;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale1);
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleAttributes();
      List<String> list0 = httpUrl_Builder3.encodedPathSegments;
      // Undeclared exception!
      try { 
        HttpUrl.pathSegmentsToString((StringBuilder) null, list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.queryStringToNamesAndValues("} ?ll>5xyHzp");
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      httpUrl0.encodedQuery();
      httpUrl1.queryParameterValues("Wi=U<^dUq");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockURL.getQuery(uRL0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      String string0 = "https: [0-9a-a-f]*[0-9a-fa-f:])|[\\d.+)";
      try { 
        HttpUrl.getChecked("https: [0-9a-a-f]*[0-9a-fa-f:])|[d.+)");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https: [0-9a-a-f]*[0-9a-fa-f:])|[d.+)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "9::";
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.fragment();
      String string1 = null;
      // Undeclared exception!
      try { 
        MockURI.create((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl.Builder.ParseResult.values();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "t%6UJ4!r^hot";
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("t%6UJ4!r^hot");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.reencodeForUri();
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.query("t%6UJ4!r^hot");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.removePathSegment(124);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 124, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "5<t_j";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setEncodedPathSegment(0, "5<t_j");
      httpUrl_Builder0.addPathSegments("5<t_j");
      httpUrl_Builder1.removePathSegment(0);
      String string1 = "tbK3x@";
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath("5<t_j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: 5<t_j
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: :
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl.queryStringToNamesAndValues("} ?ll>5xyHzp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      HttpUrl httpUrl1 = httpUrl0.resolve("} ?ll>5xyHzp");
      String string0 = "Wi=U<^dUq";
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValue(102);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 205, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      Locale locale0 = Locale.ENGLISH;
      httpUrl0.resolve("} ?l!(5xyHzp");
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Function.identity();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      HttpUrl.Builder httpUrl_Builder1 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("} ?l!(5xyHzp");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.host("[Pcs?p'3:<#O#!^~JgRv]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [Pcs?p'3:<#O#!^~JgRv]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Buffer buffer0 = new Buffer();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.query((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::c::p'3:#O^~Jgo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ::c::p'3:#O^~Jgo
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "b:c";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("b:c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: b:c
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https:mple7@");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:mple7@
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment("..");
      int int0 = 298;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(298, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l|");
      MockURI.URI("https:/www.somefakebutwellformedurl.org/fooexample", "l|", "https:/www.somefakebutwellformedurl.org/fooexample");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.queryStringToNamesAndValues("l|");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HttpUrl.percentDecode("p@@VFnw>=j {Zt5", false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%2e.");
      FileSystemHandling.shouldAllThrowIOExceptions();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedQuery("l|");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.query("'>L`}:77C%");
      httpUrl_Builder2.addEncodedPathSegment("https:%2Fwww.somefakebutwellformedurl.org%2Ffooexample");
      httpUrl_Builder1.scheme("https");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("3BE.J]r7:2E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: 3BE.J]r7:2E
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }
}
