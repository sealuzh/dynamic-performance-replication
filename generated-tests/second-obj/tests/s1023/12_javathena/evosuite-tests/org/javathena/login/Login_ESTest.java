/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:46:43 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.UnsupportedEncodingException;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Locale;
import java.util.function.BiFunction;
import javolution.util.FastComparator;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromAdmin;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Login.mmo_auth_initXML();
      assertEquals(0, int0);
      
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertNotNull(intArray0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login login0 = new Login();
      login0.getOut();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login.setPASSWORDENC(0);
      Login login0 = new Login();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("6#@pI>iqX>FgO$u~J", "V57i2Ld");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // V57i2Ld
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = " \\ \\______/\\ \\__/.\\_\\\\__/   \\ \\_\\ \\_\\ \\__\\\\ \\_\\ \\_\\ \\____\\ \\_\\ \\_\\ \\__/.\\_\\  ";
      Login.login_log("  ______/ __/._\\__/    _ _ __\\ _ _ ____ _ _ __/._  ");
      int int0 = 1163;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-128);
      byteArray0[0] = (byte) (-128);
      try { 
        MockInetAddress.getByAddress(byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [-128]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login login0 = new Login();
      login0.check_ipmask(2147483645, "PFhH^oMsY");
      login0.do_initTXT();
      assertEquals(2, Login.DEFAULT_PASSWORDENC);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)0;
      byteArray0[1] = (byte)33;
      byteArray0[3] = (byte)5;
      InetAddress inetAddress0 = MockInetAddress.getByAddress("conf/subnet_athena.conf", byteArray0);
      login0.check_ip(inetAddress0);
      Login.mmo_auth_syncXML();
      UserManagement.setAccountIdCount((-2));
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login0.setAuth_max(31035);
      Login.mmo_auth_syncXML();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Login login0 = new Login();
      login0.getLog_fp();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      MockSocket mockSocket1 = new MockSocket(proxy0);
      Socket_data socket_data1 = new Socket_data(mockSocket1);
      socket_data0.setName("s^adM940RpQ(V#K");
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data2 = new Socket_data(mockSocket0, fromAdmin0);
      socket_data2.setNew_(1670);
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_admin(1670, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.getKeepAlive();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      login0.check_auth_sync();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      MySQLConfig.setLogin_server_port((-4444));
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      login0.check_ip(inetAddress0);
      int int0 = login0.getAuth_num();
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = Login.getPASSWORDENC();
      assertEquals(2, int0);
      
      Login login0 = new Login();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login.getDbManagemtType();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-19);
      byteArray0[5] = (byte) (-59);
      Login.showTab(byteArray0);
      assertArrayEquals(new byte[] {(byte)118, (byte) (-61), (byte)98, (byte)2, (byte) (-19), (byte) (-59)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      Login.auth_num = 10;
      String string0 = "";
      Login.display_title();
      ConfigurationManagement.lesslessAuth_before_save_file();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = Login.auth_num;
      Login login0 = new Login();
      Login.mmo_auth_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      byte[] byteArray0 = new byte[0];
      Login.showTab(byteArray0);
      Login.End login_End0 = login0.new End();
      login0.save_config_in_log();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.check_ipmask((-156), "lCOZxBB4-");
      assertEquals(0, login0.getAuth_max());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      login0.parse_console(":bvs5}o");
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("sO,C\"Ss>!89MbV3C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_port(50);
      UserManagement.addUserTXT("conf/subnet_athena.conf", "2x.3sQ", "conf/subnet_athena.conf", ',');
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_max();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockSocket mockSocket0 = new MockSocket();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.setAccount_id(0);
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[7];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/subnet_athena.conf");
      UserManagement.setAccountIdCount(30);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      ConfigurationManagement.lesslessAuth_before_save_file();
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-20);
      UserManagement.addUserTXT("conf/subnet_athena.conf", "wkOHn)O", "conf/subnet_athena.conf", 'd');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf");
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login.logUnknownPackets(socket_data0);
      MockInetAddress.getLoopbackAddress();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("conf/subnet_athena.conf");
      assertFalse(mockPrintWriter1.equals((Object)mockPrintWriter0));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      UserManagement.setAccountIdCount(1095);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConfigurationManagement.lesslessAuth_before_save_file();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(">:$C,Q[Q@,m>1xx>");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter0.append('k');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      Locale locale0 = Locale.CHINA;
      locale0.stripExtensions();
      mockPrintWriter2.printf(locale0, "Y", (Object[]) null);
      Login login0 = new Login();
      login0.setOut(mockPrintWriter0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      Login login0 = new Login();
      login0.do_initTXT();
      login0.save_config_in_log();
      UserManagement.setAccountIdCount((-985));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MUTUAL_FAILTURE");
      ConfigurationManagement.lesslessAuth_before_save_file();
      UserManagement.addUserTXT("CONSTRUCTOR", "CONSTRUCTOR", "CONSTRUCTOR", 'd');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-|25QO");
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("x`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      MySQLConfig.setLogin_server_port(50);
      ConfigurationManagement.setAccess_order(aCO0);
      Login.mmo_auth_syncTXT();
      ConfigurationManagement.setAccess_allownum(2);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_pw("#_G~]Om");
      MySQLConfig.setLogin_server_port(50);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "z[-`)uj~[");
      ConfigurationManagement.setAccess_order((ACO) null);
      ConfigurationManagement.setAccess_allownum(2);
      // Undeclared exception!
      try { 
        login0.do_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "YH`sA");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ConfigurationManagement.setAccess_denynum(50);
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      Login.mmo_auth_syncTXT();
      ConfigurationManagement.setAccess_allownum(100000000);
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "YH`sA");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ConfigurationManagement.setAccess_denynum(10);
      ACO aCO0 = ACO.STRSIZE;
      ConfigurationManagement.setAccess_order(aCO0);
      login0.do_initTXT();
      Login.mmo_auth_syncTXT();
      ConfigurationManagement.setAccess_allownum(100000000);
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Login login0 = new Login();
      byte[] byteArray0 = new byte[2];
      MySQLConfig.setLogin_server_id("conf/subnet_athena.conf");
      byteArray0[1] = (byte)11;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MySQLConfig.setLogin_server_port(2000000);
      FastComparator<Object> fastComparator0 = (FastComparator<Object>) mock(FastComparator.class, new ViolatedAssumptionAnswer());
      ConfigurationManagement.setAccess_denynum((byte)11);
      ConfigurationManagement.setAccess_denynum((byte)11);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)11;
      byteArray1[1] = (byte)11;
      byteArray1[2] = (byte)11;
      byteArray1[3] = (byte)11;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)112;
      byteArray1[6] = (byte)48;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray1);
      Login.showTab(byteArray0);
      Login.End login_End0 = login0.new End();
      login0.save_config_in_log();
      int int0 = FromChar.CHANGE_AN_EMAIL;
      Login.showTab(byteArray1);
      login0.yesNoOnOffToBoolean("OFF");
      Login.showTab(byteArray0);
      Login.mmo_auth_syncTXT();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      login0.save_config_in_log();
      login0.parse_console("SWORDMAN");
      login0.do_initTXT();
      login0.setAuth_max(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)8;
      Login.showTab(byteArray0);
      login0.save_config_in_log();
      login0.parse_console("]US");
      MySQLConfig.setDefault_codepage("]US");
      login0.yesNoOnOffToBoolean("ON");
      login0.save_config_in_log();
      Login.End login_End0 = login0.new End();
      Login.End login_End1 = login0.new End();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.run();
      login_Timer_interval_check_auth_sync0.run();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-101);
      login0.parse_console("alive");
      MySQLConfig.setDefault_codepage("_:bo");
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("_:bo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.cancel();
      login_Timer_interval_check_auth_sync0.run();
      login_Timer_interval_check_auth_sync0.run();
      login0.parse_console("r}G_cm?4/D-x");
      Login login1 = new Login();
      login1.do_initTXT();
      login0.setAuth_max(2);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-70);
      Login.showTab(byteArray0);
      login0.save_config_in_log();
      Login login2 = new Login();
      login2.parse_console(":bvs5}o");
      MySQLConfig.setDefault_codepage("shutdown");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "javolution.context.AllocatorContext");
      // Undeclared exception!
      try { 
        login1.parse_console("end");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initXML();
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      Login.showTab(byteArray0);
      Login.End login_End0 = login0.new End();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      login0.save_config_in_log();
      FastMap<Integer, Auth_data> fastMap0 = null;
      try {
        fastMap0 = new FastMap<Integer, Auth_data>("notice_18");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Identifier notice_18 already in use
         //
         verifyException("javolution.context.PersistentContext$Reference", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login0 = new Login();
      ConfigurationManagement.setAccess_denynum(2);
      Login.End login_End0 = login0.new End();
      login0.save_config_in_log();
      login0.save_config_in_log();
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login login1 = new Login();
      Login login2 = new Login();
      FromAdmin fromAdmin0 = new FromAdmin();
      Socket_data socket_data0 = new Socket_data((Socket) null, fromAdmin0);
      Login.getMd5Data(socket_data0);
      login2.do_initTXT();
      Login login3 = new Login();
      login3.setAuth_max((-2172));
      Login login4 = new Login();
      Login login5 = new Login();
      Login login6 = new Login();
      ConfigurationManagement.setAccess_deny("conf/subnet_athena.conf");
      Login login7 = new Login();
      Login login8 = new Login();
      Login.getMd5Data(socket_data0);
      // Undeclared exception!
      try { 
        Login.do_initSQL();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_port(50);
      UserManagement.addUserTXT("quit", "nztZR+\">G6Uj8", ".sbl-xbl.spamhaus.org", '.');
      Login.mmo_auth_syncTXT();
      ConfigurationManagement.setAccess_allownum(100000000);
      Login login1 = new Login();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
