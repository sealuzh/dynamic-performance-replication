/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:33:16 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.File;
import java.io.PipedReader;
import java.io.Reader;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextAction;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.NativeIterator;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "@;dB%NA3";
      // Undeclared exception!
      try { 
        parser0.parse("@;dB%NA3", "@;dB%NA3", 1808);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (@;dB%NA3#1808)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("9_[ORCPC:#%PQb'Q", "9_[ORCPC:#%PQb'Q", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (9_[ORCPC:#%PQb'Q#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("/YB=m[i=VG~ZY*0&]L;", "error reporter", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (error reporter#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.addStrictWarning((String) null, (String) null);
      // Undeclared exception!
      try { 
        parser0.parse("msg.const.redecl", "msg.const.redecl", 32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (msg.const.redecl#32)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      context0.getApplicationClassLoader();
      defaultErrorReporter0.runtimeError("=o", "<><UmV", 173, "LS", 2228);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "~bk.f#M,iTKl:){B]";
      // Undeclared exception!
      try { 
        parser0.parse("~bk.f#M,iTKl:){B]", "~bk.f#M,iTKl:){B]", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (~bk.f#M,iTKl:){B]#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, "<><UmO", 128);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (<><UmO#128)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("language version", "language version", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (language version#1)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Context context0 = new Context();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("throw", "throw", 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (throw#140)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("function", "language version", 47);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ( before function parameters. (language version#47)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.removeListener(contextFactory_Listener0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      // Undeclared exception!
      try { 
        parser0.parse("in\"n", "in\"n", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (in\"n#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.got.syntax.errors", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("1@", "language version", 150);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement (language version#150)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`x");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter1);
      defaultErrorReporter0.runtimeError("error reporter", "language version", 150, "error reporter", 162);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        parser0.parse("o$1w=]smdo'", "-O?{{VVGCCzkR", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (-O?{{VVGCCzkR#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("<UmV{.yE=P~!jiP~q'", (String) null, 3077);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.getErrorReporter();
      Context context1 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter2);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter2);
      // Undeclared exception!
      try { 
        parser0.parse("!K-nK\"*j~4CxI'@^", "error reporter", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (error reporter#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "";
      parser0.parse("", "msg.got.syntax.errors", 101);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(1413, true, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setGeneratingDebug(true);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      boolean boolean0 = context0.generateObserverCount;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("xl$&F~V/%C_#@", "xl$&F~V/%C_#@", (int) (byte)23);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement (xl$&F~V/%C_#@#23)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "f&@LM:iX\"kz5[";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("C+`L.ol.", "C+`L.ol.", 10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (C+`L.ol.#10)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("public", "Uu{xK[IPDm)hzi", (-1771));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1771
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context0 = contextFactory1.makeContext();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      contextFactory0.makeContext();
      ContextAction contextAction0 = mock(ContextAction.class, new ViolatedAssumptionAnswer());
      contextFactory0.makeContext();
      boolean boolean0 = context0.useDynamicScope;
      // Undeclared exception!
      try { 
        parser0.parse("LBV9:", "LBV9:", 12);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (LBV9:#12)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter1);
      compilerEnvirons0.setGeneratingSource(false);
      compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.getErrorReporter();
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("", "getFunction", 4);
      assertEquals("getFunction", scriptOrFnNode0.getSourceName());
      assertEquals(1, scriptOrFnNode0.getEncodedSourceEnd());
      
      parser0.getEncodedSource();
      int int0 = parser0.getCurrentLineNumber();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      contextFactory0.makeContext();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[]", "", (-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      char[] charArray0 = new char[10];
      charArray0[0] = 'm';
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[native code]\n", "language version", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // identifier is a reserved word (language version#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      String string0 = "do ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "do ");
      String string1 = "[iX{";
      // Undeclared exception!
      try { 
        parser0.parse("iPDU?'`>pzrcRt", "iPDU?'`>pzrcRt", 174);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (iPDU?'`>pzrcRt#174)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      compilerEnvirons0.activationNames = (Set<String>) linkedHashSet0;
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("+{hMFlTBQh[yW<R;Lt9", "gj)JKSz", (-985));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -985
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse("WtOBL^&i@\u0004s?>u", "<V", 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (<V#140)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      contextFactory0.enterContext(context0);
      context0.setErrorReporter(errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter2 = compilerEnvirons1.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(errorReporter2);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      String string0 = "xe<\"S.b";
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse("xe<\"S.b", "", 111);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: unterminated string literal (#111)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = '*';
      charArray0[0] = 'v';
      charArray0[3] = 'N';
      charArray0[4] = 'j';
      charArray0[5] = '4';
      charArray0[6] = 'v';
      charArray0[7] = '\u0000';
      charArray0[8] = '#';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, ":lzbei^e", (-52));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -52
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "Uu{xK[IPDm)hzi";
      // Undeclared exception!
      try { 
        parser0.parse("JyPOXjYB/", "+]30+", 31);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (+]30+#31)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "{](jCh}*$7][";
      // Undeclared exception!
      try { 
        parser0.parse("{](jCh}*$7][", "{](jCh}*$7][", 3710);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error ({](jCh}*$7][#3710)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      Context context0 = contextFactory0.makeContext();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      contextFactory0.makeContext();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      context0.setErrorReporter(defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("(S'm", "u_6E0#", (-2171));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2171
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string0 = "";
      defaultErrorReporter0.runtimeError("<><UmV", "", 31, "", 31);
      String string1 = "S,7'?4:\\gnWg";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S,7'?4:gnWg");
      // Undeclared exception!
      try { 
        parser0.parse("S,7'?4:gnWg", ">Qa<", 89);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (>Qa<#89)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGeneratingSource(true);
      compilerEnvirons0.setGenerateDebugInfo(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setXmlAvailable(false);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      String string0 = "Y!(Bq25";
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "Y!(Bq25", 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (Y!(Bq25#5)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ContextFactory contextFactory1 = new ContextFactory();
      ContextFactory.initGlobal(contextFactory0);
      ContextFactory contextFactory2 = new ContextFactory();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@_c`XV^S", "@_c`XV^S", 88);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (@_c`XV^S#88)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[JavaConstructor ", "[JavaConstructor ", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list ([JavaConstructor #9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      compilerEnvirons1.setGenerateDebugInfo(false);
      // Undeclared exception!
      try { 
        parser0.parse("pmlY>", "XML", 634);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (XML#634)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory.getGlobal();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`x");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      String string0 = "lm(:.";
      // Undeclared exception!
      try { 
        parser0.parse("!{;kc<,AZh", "<-6iO/_'r5N?p@$", 120);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid property id (<-6iO/_'r5N?p@$#120)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter.forEval(errorReporter0);
      contextFactory0.enterContext(context0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-125);
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte) (-125);
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte)74;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse(" /= ", "-C<n<l3X m", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (-C<n<l3X m#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory1);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = context0.setErrorReporter(defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(true);
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons3.setReservedKeywordAsIdentifier(true);
      Parser parser1 = new Parser(compilerEnvirons3, errorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("C[", "C[", 651);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (C[#651)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("\"/x9KzK\"zuF", "<><UmO", 1679);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (<><UmO#1679)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setErrorReporter(defaultErrorReporter0);
      ContextFactory.initGlobal(contextFactory0);
      compilerEnvirons0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("~/3ddI\"] /pQwc7U", "error reporter", 5296);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid flag after regular expression (error reporter#5296)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      boolean boolean0 = context0.generateObserverCount;
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons2, defaultErrorReporter2);
      Parser parser1 = new Parser(compilerEnvirons2, defaultErrorReporter3);
      String string0 = "<><UmO";
      // Undeclared exception!
      try { 
        parser1.parse("b_IqkH<<", "(N7v5^Q;]]q/4},", (-1576));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1576
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateDebugInfo(true);
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      parser0.getEncodedSource();
      parser0.createDecompiler(compilerEnvirons0);
      // Undeclared exception!
      try { 
        parser0.parse("D}z", "D}z", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (D}z#1)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setErrorReporter(defaultErrorReporter1);
      boolean boolean0 = false;
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      String string0 = "H%#RZ79yz)2>";
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("H%#RZ79yz)2>", "H%#RZ79yz)2>", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (H%#RZ79yz)2>#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter1 = compilerEnvirons0.getErrorReporter();
      compilerEnvirons0.setErrorReporter(errorReporter1);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGenerateDebugInfo(true);
      String string0 = "-B(Q\\3_[zJyM";
      String string1 = "n";
      // Undeclared exception!
      try { 
        parser0.parse("-B(Q\u0003_[zJyM", "n", 265);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ] in index expression (n#265)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      context0.setErrorReporter(defaultErrorReporter0);
      compilerEnvirons0.getErrorReporter();
      compilerEnvirons0.setGeneratingSource(false);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string0 = "?|c2{]";
      String string1 = "o^qW.: {id1M&,K";
      parser0.addStrictWarning("?|c2{]", "o^qW.: {id1M&,K");
      parser0.parse("xx;", "?|c2{]", 110);
      // Undeclared exception!
      try { 
        parser0.addError("language version", "o^qW.: {id1M&,K");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property language version
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setGeneratingDebug(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("{", ".><mO", (-1407));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1407
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter4 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter5 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter6 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter4);
      String string0 = "lm(:.";
      // Undeclared exception!
      try { 
        parser0.parse("lm(:.", "lm(:.", 1046);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (lm(:.#1046)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("eQ(C'Y'M:qz0-v`R", "eQ(C'Y'M:qz0-v`R", 1594);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ) after argument list (eQ(C'Y'M:qz0-v`R#1594)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(true);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("NHF5r*{4w=>nU2(xM\"", "G", 116);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing : after property id (G#116)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter3);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("msg.bad.throw.eol", ";G^T1aDjEbN!", 5);
      assertEquals(5, scriptOrFnNode0.getEndLineno());
      
      boolean boolean0 = parser0.eof();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory1 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      contextFactory1.createClassLoader((ClassLoader) null);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("true", "msg.doulesitch.default", (-1112));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.setGeneratingDebug(false);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "error reporter");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      boolean boolean0 = context0.compileFunctionsWithDynamicScopeFlag;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("typeof", "x", 9);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (x#9)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter1);
      String string0 = "msg.double.switch.default";
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("V:HN:uNJGj8f|]\";$C", "language version", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (language version#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      contextFactory0.enterContext();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      compilerEnvirons0.setXmlAvailable(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      parser0.addStrictWarning(".L", "E8=Ev&Yq^Xd_yp{CA");
      // Undeclared exception!
      try { 
        parser0.parse("<><UmO", "E8=Ev&Yq^Xd_yp{CA", 7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (E8=Ev&Yq^Xd_yp{CA#7)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-52);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter1);
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("B3R:LU", "B3R:LU", 9);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      parser0.getCurrentLineNumber();
      Locale locale0 = new Locale("B3R:LU");
      locale0.getUnicodeLocaleAttributes();
      compilerEnvirons0.setXmlAvailable(false);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("B3R:LU", "B3R:LU", 2929);
      parser0.createDecompiler(compilerEnvirons1);
      parser0.eof();
      parser0.pushScope(scriptOrFnNode0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.parse("B3R:LU", "B3R:LU", 113);
      FunctionNode functionNode0 = new FunctionNode("ONR]&Y8");
      // Undeclared exception!
      try { 
        parser0.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enter();
      context0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      Parser parser1 = new Parser(compilerEnvirons1, defaultErrorReporter2);
      compilerEnvirons1.setXmlAvailable(false);
      parser1.createDecompiler(compilerEnvirons0);
      compilerEnvirons1.setAllowMemberExprAsFunctionName(false);
      // Undeclared exception!
      try { 
        parser1.parse("msg.in.after.for.name", ".refCall() returned null", (-513));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -513
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("k||`", "oQZ 0Tkn:]qd[AO", (-3056));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3056
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(false);
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enter();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("\"\"<@N[Lk'cX_Xr@(p;", "\"\"<@N[Lk'cX_Xr@(p;", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Context context0 = contextFactory0.enterContext();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      boolean boolean0 = context0.useDynamicScope;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("try ", "error reporter", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing { before try block (error reporter#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "msg.no.paren.cond", 42);
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      parser0.defineSymbol(152, false, "__iterator__");
      parser0.createDecompiler(compilerEnvirons0);
      boolean boolean0 = parser0.calledByCompileFunction;
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.addWarning("__iterator__", "<>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property __iterator__
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.parse("", "msg.no.paren.cond", 42);
      String string0 = NativeIterator.ITERATOR_PROPERTY_NAME;
      parser0.defineSymbol(152, true, "__iterator__");
      parser0.createDecompiler(compilerEnvirons0);
      boolean boolean0 = parser0.calledByCompileFunction;
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.addWarning("__iterator__", "<>");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property __iterator__
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      compilerEnvirons0.initFromContext(context0);
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      contextFactory0.createClassLoader(classLoader0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("language version");
      // Undeclared exception!
      try { 
        parser1.parse("delete ", "true", (-2545));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2545
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setXmlAvailable(false);
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "msg.no.paren.cond";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = Context.errorReporterProperty;
      parser1.parse("msg.no.paren.cond", "msg.no.paren.cond", 102);
      parser0.addStrictWarning("msg.no.paren.cond", "error reporter");
      boolean boolean0 = true;
      parser1.defineSymbol(121, true, (String) null);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(22, false, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      compilerEnvirons0.setErrorReporter(defaultErrorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Context context0 = contextFactory0.enterContext();
      compilerEnvirons2.setGenerateDebugInfo(true);
      context0.setErrorReporter(defaultErrorReporter0);
      boolean boolean0 = context0.useDynamicScope;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      contextFactory1.makeContext();
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse("@[0-9a-fA-F]+", "language version", 3521);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] in index expression (language version#3521)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }
}
