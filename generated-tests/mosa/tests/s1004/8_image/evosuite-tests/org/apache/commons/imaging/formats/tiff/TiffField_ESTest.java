/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 19:12:06 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65578, 65578, fieldTypeLong0.FLOAT, 65578, 65578, byteArray0, byteOrder0, 65578);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65578, tiffField0.getDirectoryType());
      assertEquals(65578, tiffField0.getSortHint());
      assertEquals(65578L, tiffElement0.offset);
      assertEquals(65578, tiffField0.getTag());
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.FLOAT, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (65535 Float)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65520, 65520, fieldTypeLong0.FLOAT, 65520, 65520, byteArray0, byteOrder0, 65520);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(65520, tiffField0.getDirectoryType());
      assertEquals(65520, tiffField0.getOffset());
      assertEquals("65520 (0xfff0: Unknown Tag): ", string0);
      assertEquals(65520, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[381];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 202740L, 202740L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.toString();
      assertEquals("5 (0x5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (190) (202740 SShort)", string0);
      assertEquals(202740, tiffField0.getOffset());
      assertEquals(405480, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-113), fieldTypeLong0.SSHORT, 65535, 764L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0 (65535 SShort)", string0);
      assertEquals(764, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-113), tiffField0.getDirectoryType());
      assertEquals(131070, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0.FLOAT, 43, 43, byteArray0, byteOrder0, 43);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(43, tiffField0.getOffset());
      assertEquals(43, int0);
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-30), (byte) (-30), fieldTypeByte0, (byte) (-30), (byte) (-30), byteArray0, byteOrder0, (byte) (-30));
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1645), (-1645), (FieldType) null, (-1645), (-1645), byteArray0, byteOrder0, (-1645));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1645), tiffField0.getOffset());
      assertEquals((-1645), int0);
      assertEquals((-1645), tiffField0.getDirectoryType());
      assertEquals((-1645), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(20, 20, fieldTypeLong0, 20, 20, byteArray0, (ByteOrder) null, 20);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "WhiteBalance");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0, 43, 43, byteArray0, byteOrder0, 43);
      tiffField0.getDoubleArrayValue();
      assertEquals(43L, tiffField0.getCount());
      assertEquals(172, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[227];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65536, 65536, fieldTypeDouble0, 65536, 65536, byteArray0, byteOrder0, 65536);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.toString();
      assertEquals(65536, tiffField0.getDirectoryType());
      assertEquals(524288, tiffField0.getBytesLength());
      assertEquals("65536 (0x10000: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (65536 Double)", string0);
      assertEquals(65536, tiffField0.getOffset());
      assertEquals(65536, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65553, 65553, fieldTypeLong0.FLOAT, 65553, 65553, byteArray0, byteOrder0, 65553);
      tiffField0.dump();
      assertEquals(65553, tiffField0.getOffset());
      assertEquals(262212, tiffField0.getBytesLength());
      assertEquals(65553L, tiffField0.getCount());
      assertEquals(65553, tiffField0.getDirectoryType());
      assertEquals(65553, tiffField0.getTag());
      assertEquals(65553, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.SRATIONAL, 764L, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(6112, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(764L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[61];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.FLOAT, 65535, 65535, byteArray0, byteOrder0, 65535);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65535, 65535);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[132];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65550, 65550, fieldTypeLong0, 65550, 65550, byteArray0, byteOrder0, 65550);
      String string0 = tiffField0.toString();
      assertEquals("65550 (0x1000e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (65550 Long)", string0);
      assertEquals(262200, tiffField0.getBytesLength());
      assertEquals(65550, tiffField0.getOffset());
      assertEquals(65550, tiffField0.getDirectoryType());
      assertEquals(65550, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0.ASCII, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0.FLOAT, 43, 43, byteArray0, byteOrder0, 43);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(43, 43);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65546, 65546, fieldTypeLong0.FLOAT, 65546, 65546, byteArray0, byteOrder0, 65546);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7191197 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0.FLOAT, 26, 26, byteArray0, byteOrder0, 26);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@45b4e358 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2651, 2651, fieldTypeLong0, 2651, 2651, byteArray0, byteOrder0, 2651);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2651, tiffField0.getDirectoryType());
      assertEquals(2651, tiffField0.getTag());
      assertEquals(2651L, tiffField0.getCount());
      assertEquals(10604, tiffField0.getBytesLength());
      assertEquals(2651, tiffField0.getSortHint());
      assertEquals(2651, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeFloat0, 11, 4082L, byteArray0, byteOrder0, 11);
      tiffField0.getTagName();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(11 (0xb: ProcessingSoftware): ): [F@1f33b337
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(10);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 0, fieldType0, 0, 0, byteArray0, byteOrder0, 10);
      tiffField0.getIntArrayValue();
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[25];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 764L, (-440L), byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[407];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeByte0, 46, 46, byteArray0, byteOrder0, 46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(46, tiffField0.getTag());
      assertEquals(46L, tiffField0.getCount());
      assertEquals(46, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.SSHORT, 65535, 65535, byteArray0, byteOrder0, 65535);
      byteOrder0.toString();
      tiffField0.getDoubleArrayValue();
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1522, 5, fieldTypeShort0, 27L, (-2147483648L), byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(54, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1522, tiffField0.getTag());
      assertEquals(27L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2651, 1, fieldTypeLong0, 1, 2651, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(2651, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2651, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2651, 1, fieldTypeLong0, 1, 2651, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      tiffField0.toString();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2651, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2651, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeFloat0.ASCII, 26, 26, byteArray0, byteOrder0, 26);
      tiffField0.toString();
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getBytesLength());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(26, tiffField0.getOffset());
      assertEquals(26, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)30;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(50, (byte)30, fieldTypeRational0, (byte)30, (byte)30, byteArray0, byteOrder0, (byte)30);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65528, 65528, fieldTypeLong0.FLOAT, 65528, 65528, byteArray0, byteOrder0, 65528);
      tiffField0.getFieldTypeName();
      assertEquals(65528, tiffField0.getOffset());
      assertEquals(65528, tiffField0.getSortHint());
      assertEquals(65528, tiffField0.getDirectoryType());
      assertEquals(65528, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65546, 65546, fieldTypeLong0, 65546, 65546, byteArray0, byteOrder0, 65546);
      tiffField0.getIntArrayValue();
      assertEquals(65546, tiffField0.getOffset());
      assertEquals(65546, tiffField0.getDirectoryType());
      assertEquals(262184, tiffField0.getBytesLength());
      assertEquals(65546, tiffField0.getSortHint());
      assertEquals(65546, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[372];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 5, 5, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x5)", string0);
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(5, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0.FLOAT, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0.0 (65535 Float)", string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(262140, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65568, (-2386), fieldTypeAscii0, 65568, 65568, byteArray0, byteOrder0, 1876);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(65568, tiffField0.getOffset());
      assertEquals(65568, tiffField0.getBytesLength());
      assertEquals(1876, tiffField0.getSortHint());
      assertEquals((-2386), tiffField0.getDirectoryType());
      assertEquals(65568, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 43);
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65510, 65510, fieldTypeFloat0.ASCII, 65510, 65510, byteArray0, byteOrder0, 65510);
      tiffField0.toString();
      assertEquals(65510, tiffField0.getBytesLength());
      assertEquals(65510, tiffField0.getTag());
      assertEquals(65510, tiffField0.getSortHint());
      assertEquals(65510, tiffField0.getOffset());
      assertEquals(65510, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[381];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(2152, 40, fieldTypeByte0, 2152, 40, byteArray0, byteOrder0, 2152);
      String string0 = tiffField0.toString();
      assertEquals(2152, tiffField0.getSortHint());
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals("2152 (0x868: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (381) (2152 Undefined)", string0);
      assertEquals(2152, tiffField0.getBytesLength());
      assertEquals(40, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1164, 1164, fieldTypeLong0, 1164, 1164, byteArray0, byteOrder0, 1164);
      String string0 = tiffField0.toString();
      assertEquals(1164, tiffField0.getSortHint());
      assertEquals("1164 (0x48c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (1164 Long)", string0);
      assertEquals(1164, tiffField0.getDirectoryType());
      assertEquals(4656, tiffField0.getBytesLength());
      assertEquals(1164, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65538, 65536, fieldTypeFloat0, 65538, 65536, byteArray0, byteOrder0, 65538);
      String string0 = tiffField0.toString();
      assertEquals("65538 (0x10002: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (65538 Float)", string0);
      assertEquals(65538, tiffField0.getSortHint());
      assertEquals(65536, tiffField0.getDirectoryType());
      assertEquals(65536, tiffField0.getOffset());
      assertEquals(262152, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 81, fieldTypeByte0, 8, (-3274L), byteArray0, byteOrder1, 81);
      fieldTypeByte0.getValue(tiffField0);
      TiffField tiffField1 = new TiffField(2159, 2159, fieldTypeByte0.DOUBLE, 2159, 8, byteArray0, byteOrder0, 8);
      tiffField1.toString();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2ca77dba for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }
}
