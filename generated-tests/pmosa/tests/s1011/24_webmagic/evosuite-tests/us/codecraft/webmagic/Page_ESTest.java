/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 20:06:56 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Page;
import us.codecraft.webmagic.Request;
import us.codecraft.webmagic.selector.AndSelector;
import us.codecraft.webmagic.selector.Html;
import us.codecraft.webmagic.selector.Json;
import us.codecraft.webmagic.selector.JsonPathSelector;
import us.codecraft.webmagic.selector.PlainText;
import us.codecraft.webmagic.selector.Selectable;
import us.codecraft.webmagic.selector.Selector;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Page_ESTest extends Page_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Page page0 = Page.fail();
      boolean boolean0 = false;
      Page page1 = page0.setSkip(false);
      // Undeclared exception!
      try { 
        page1.addTargetRequests((List<String>) null, 1862L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Page page0 = new Page();
      Json json0 = page0.getJson();
      Class<String> class0 = String.class;
      json0.toList(class0);
      // Undeclared exception!
      try { 
        page0.addTargetRequests((List<String>) null, (-2554L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Page page0 = new Page();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.addTargetRequests((List<String>) linkedList0);
      assertEquals(200, page0.getStatusCode());
      assertTrue(page0.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Page page0 = Page.fail();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      page0.setHeaders(hashMap0);
      boolean boolean0 = page0.isDownloadSuccess();
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-70);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)86;
      page0.setBytes(byteArray0);
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setRawText("");
      int int0 = page1.getStatusCode();
      assertTrue(page1.isDownloadSuccess());
      assertEquals(200, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Page page0 = new Page();
      page0.toString();
      List<String> list0 = null;
      page0.putField("Page{request=null, resultItems=ResultItems{fields={}, request=null, skip=false}, html=null, json=null, rawText='null', url=null, headers=null, statusCode=200, downloadSuccess=true, targetRequests=[], charset='null', bytes=null}", (Object) null);
      // Undeclared exception!
      try { 
        page0.addTargetRequests((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getHeaders();
      page0.setHeaders((Map<String, List<String>>) null);
      page0.toString();
      page0.toString();
      // Undeclared exception!
      try { 
        page0.addTargetRequest("Page{request=null, resultItems=ResultItems{fields={}, request=null, skip=false}, html=null, json=null, rawText='null', url=null, headers=null, statusCode=200, downloadSuccess=false, targetRequests=[], charset='null', bytes=null}");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = page0.setSkip(false);
      page1.getRawText();
      assertEquals(200, page1.getStatusCode());
      assertTrue(page1.isDownloadSuccess());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Page page0 = new Page();
      page0.setRawText("nPOtNFq$5C'");
      page0.getCharset();
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Page page0 = Page.fail();
      page0.setStatusCode(0);
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Page page0 = Page.fail();
      boolean boolean0 = true;
      Page page1 = page0.setSkip(true);
      Request request0 = new Request(", rawText='");
      request0.setBinaryContent(false);
      page1.setRequest(request0);
      // Undeclared exception!
      try { 
        page1.addTargetRequests((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Page page0 = Page.fail();
      String string0 = "(JH8F?5-_VUMk";
      page0.setCharset("(JH8F?5-_VUMk");
      String string1 = "yes";
      Page page1 = page0.setRawText("yes");
      page1.getJson();
      Page page2 = page1.setSkip(true);
      // Undeclared exception!
      try { 
        page2.addTargetRequest("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang3/StringUtils
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Page page0 = new Page();
      Page page1 = new Page();
      Request request0 = new Request();
      page1.addTargetRequest(request0);
      page1.getJson();
      Json json0 = page1.getJson();
      assertNotNull(json0);
      
      page0.getRequest();
      page1.getRequest();
      page1.setHtml((Html) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-33);
      page0.setBytes(byteArray0);
      assertTrue(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Page page0 = Page.fail();
      page0.getUrl();
      Json json0 = page0.getJson();
      // Undeclared exception!
      try { 
        json0.links();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Links can not apply to plain text. Please check whether you use a previous xpath with attribute select (/@href etc).
         //
         verifyException("us.codecraft.webmagic.selector.PlainText", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Page page0 = Page.fail();
      PlainText plainText0 = new PlainText((String) null);
      page0.setUrl(plainText0);
      // Undeclared exception!
      try { 
        page0.getHtml();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/jsoup/nodes/Node
         //
         verifyException("us.codecraft.webmagic.Page", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Page page0 = Page.fail();
      PlainText plainText0 = new PlainText((String) null);
      plainText0.all();
      page0.setUrl(plainText0);
      Request request0 = new Request();
      page0.getResultItems();
      page0.getTargetRequests();
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Page page0 = Page.fail();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      page0.putField("XjC/]$d~?M(X", linkedList0);
      page0.addTargetRequests((List<String>) linkedList0, 0L);
      assertFalse(page0.isDownloadSuccess());
      assertEquals(200, page0.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Page page0 = Page.fail();
      Page page1 = page0.setRawText("us.codecraft.webmagic.Request");
      Page page2 = page1.setSkip(true);
      page2.getBytes();
      Json json0 = page2.getJson();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        json0.toList(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/alibaba/fastjson/JSON
         //
         verifyException("us.codecraft.webmagic.selector.Json", e);
      }
  }
}
